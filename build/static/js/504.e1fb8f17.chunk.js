/*! For license information please see 504.e1fb8f17.chunk.js.LICENSE.txt */
(self.webpackChunktrainer_dashboard =
  self.webpackChunktrainer_dashboard || []).push([
  [504],
  {
    8667: function (t, e, n) {
      !(function (t, e, n, r) {
        "use strict";
        var i = function (t, e, n) {
            return {
              endTime: e,
              insertTime: n,
              type: "exponentialRampToValue",
              value: t,
            };
          },
          a = function (t, e, n) {
            return {
              endTime: e,
              insertTime: n,
              type: "linearRampToValue",
              value: t,
            };
          },
          o = function (t, e) {
            return { startTime: e, type: "setValue", value: t };
          },
          s = function (t, e, n) {
            return {
              duration: n,
              startTime: e,
              type: "setValueCurve",
              values: t,
            };
          },
          l = function (t, e, n) {
            var r = n.startTime,
              i = n.target,
              a = n.timeConstant;
            return i + (e - i) * Math.exp((r - t) / a);
          },
          c = function (t) {
            return "exponentialRampToValue" === t.type;
          },
          u = function (t) {
            return "linearRampToValue" === t.type;
          },
          d = function (t) {
            return c(t) || u(t);
          },
          h = function (t) {
            return "setValue" === t.type;
          },
          f = function (t) {
            return "setValueCurve" === t.type;
          },
          p = function t(e, n, r, i) {
            var a = e[n];
            return void 0 === a
              ? i
              : d(a) || h(a)
              ? a.value
              : f(a)
              ? a.values[a.values.length - 1]
              : l(r, t(e, n - 1, a.startTime, i), a);
          },
          m = function (t, e, n, r, i) {
            return void 0 === n
              ? [r.insertTime, i]
              : d(n)
              ? [n.endTime, n.value]
              : h(n)
              ? [n.startTime, n.value]
              : f(n)
              ? [n.startTime + n.duration, n.values[n.values.length - 1]]
              : [n.startTime, p(t, e - 1, n.startTime, i)];
          },
          g = function (t) {
            return "cancelAndHold" === t.type;
          },
          _ = function (t) {
            return "cancelScheduledValues" === t.type;
          },
          v = function (t) {
            return g(t) || _(t)
              ? t.cancelTime
              : c(t) || u(t)
              ? t.endTime
              : t.startTime;
          },
          b = function (t, e, n, r) {
            var i = r.endTime,
              a = r.value;
            return n === a
              ? a
              : (0 < n && 0 < a) || (n < 0 && a < 0)
              ? n * Math.pow(a / n, (t - e) / (i - e))
              : 0;
          },
          y = function (t, e, n, r) {
            return n + ((t - e) / (r.endTime - e)) * (r.value - n);
          },
          x = function (t, e) {
            var n = Math.floor(e),
              r = Math.ceil(e);
            return n === r ? t[n] : (1 - (e - n)) * t[n] + (1 - (r - e)) * t[r];
          },
          w = function (t, e) {
            var n = e.duration,
              r = e.startTime,
              i = e.values,
              a = ((t - r) / n) * (i.length - 1);
            return x(i, a);
          },
          M = function (t) {
            return "setTarget" === t.type;
          },
          S = (function (t) {
            function x(t) {
              n(this, x),
                (this._automationEvents = []),
                (this._currenTime = 0),
                (this._defaultValue = t);
            }
            return (
              r(x, [
                {
                  key: t,
                  value: function () {
                    return this._automationEvents[Symbol.iterator]();
                  },
                },
                {
                  key: "add",
                  value: function (t) {
                    var e = v(t);
                    if (g(t) || _(t)) {
                      var n = this._automationEvents.findIndex(function (n) {
                          return _(t) && f(n)
                            ? n.startTime + n.duration >= e
                            : v(n) >= e;
                        }),
                        r = this._automationEvents[n];
                      if (
                        (-1 !== n &&
                          (this._automationEvents =
                            this._automationEvents.slice(0, n)),
                        g(t))
                      ) {
                        var l =
                          this._automationEvents[
                            this._automationEvents.length - 1
                          ];
                        if (void 0 !== r && d(r)) {
                          if (void 0 !== l && M(l))
                            throw new Error("The internal list is malformed.");
                          var h =
                              void 0 === l
                                ? r.insertTime
                                : f(l)
                                ? l.startTime + l.duration
                                : v(l),
                            p =
                              void 0 === l
                                ? this._defaultValue
                                : f(l)
                                ? l.values[l.values.length - 1]
                                : l.value,
                            m = c(r) ? b(e, h, p, r) : y(e, h, p, r),
                            x = c(r)
                              ? i(m, e, this._currenTime)
                              : a(m, e, this._currenTime);
                          this._automationEvents.push(x);
                        }
                        if (
                          (void 0 !== l &&
                            M(l) &&
                            this._automationEvents.push(o(this.getValue(e), e)),
                          void 0 !== l && f(l) && l.startTime + l.duration > e)
                        ) {
                          var w = e - l.startTime,
                            S = (l.values.length - 1) / l.duration,
                            A = Math.max(2, 1 + Math.ceil(w * S)),
                            E = (w / (A - 1)) * S,
                            k = l.values.slice(0, A);
                          if (E < 1)
                            for (var R = 1; R < A; R += 1) {
                              var T = (E * R) % 1;
                              k[R] =
                                l.values[R - 1] * (1 - T) + l.values[R] * T;
                            }
                          this._automationEvents[
                            this._automationEvents.length - 1
                          ] = s(k, l.startTime, w);
                        }
                      }
                    } else {
                      var O = this._automationEvents.findIndex(function (t) {
                          return v(t) > e;
                        }),
                        P =
                          -1 === O
                            ? this._automationEvents[
                                this._automationEvents.length - 1
                              ]
                            : this._automationEvents[O - 1];
                      if (void 0 !== P && f(P) && v(P) + P.duration > e)
                        return !1;
                      var C = c(t)
                        ? i(t.value, t.endTime, this._currenTime)
                        : u(t)
                        ? a(t.value, e, this._currenTime)
                        : t;
                      if (-1 === O) this._automationEvents.push(C);
                      else {
                        if (
                          f(t) &&
                          e + t.duration > v(this._automationEvents[O])
                        )
                          return !1;
                        this._automationEvents.splice(O, 0, C);
                      }
                    }
                    return !0;
                  },
                },
                {
                  key: "flush",
                  value: function (t) {
                    var e = this._automationEvents.findIndex(function (e) {
                      return v(e) > t;
                    });
                    if (e > 1) {
                      var n = this._automationEvents.slice(e - 1),
                        r = n[0];
                      M(r) &&
                        n.unshift(
                          o(
                            p(
                              this._automationEvents,
                              e - 2,
                              r.startTime,
                              this._defaultValue
                            ),
                            r.startTime
                          )
                        ),
                        (this._automationEvents = n);
                    }
                  },
                },
                {
                  key: "getValue",
                  value: function (t) {
                    if (0 === this._automationEvents.length)
                      return this._defaultValue;
                    var n = this._automationEvents.findIndex(function (e) {
                        return v(e) > t;
                      }),
                      r = this._automationEvents[n],
                      i = (-1 === n ? this._automationEvents.length : n) - 1,
                      a = this._automationEvents[i];
                    if (
                      void 0 !== a &&
                      M(a) &&
                      (void 0 === r || !d(r) || r.insertTime > t)
                    )
                      return l(
                        t,
                        p(
                          this._automationEvents,
                          i - 1,
                          a.startTime,
                          this._defaultValue
                        ),
                        a
                      );
                    if (void 0 !== a && h(a) && (void 0 === r || !d(r)))
                      return a.value;
                    if (
                      void 0 !== a &&
                      f(a) &&
                      (void 0 === r || !d(r) || a.startTime + a.duration > t)
                    )
                      return t < a.startTime + a.duration
                        ? w(t, a)
                        : a.values[a.values.length - 1];
                    if (void 0 !== a && d(a) && (void 0 === r || !d(r)))
                      return a.value;
                    if (void 0 !== r && c(r)) {
                      var o = m(
                          this._automationEvents,
                          i,
                          a,
                          r,
                          this._defaultValue
                        ),
                        s = e(o, 2),
                        g = s[0],
                        _ = s[1];
                      return b(t, g, _, r);
                    }
                    if (void 0 !== r && u(r)) {
                      var x = m(
                          this._automationEvents,
                          i,
                          a,
                          r,
                          this._defaultValue
                        ),
                        S = e(x, 2),
                        A = S[0],
                        E = S[1];
                      return y(t, A, E, r);
                    }
                    return this._defaultValue;
                  },
                },
              ]),
              x
            );
          })(Symbol.iterator),
          A = function (t) {
            return { cancelTime: t, type: "cancelAndHold" };
          },
          E = function (t) {
            return { cancelTime: t, type: "cancelScheduledValues" };
          },
          k = function (t, e) {
            return { endTime: e, type: "exponentialRampToValue", value: t };
          },
          R = function (t, e) {
            return { endTime: e, type: "linearRampToValue", value: t };
          },
          T = function (t, e, n) {
            return {
              startTime: e,
              target: t,
              timeConstant: n,
              type: "setTarget",
            };
          };
        (t.AutomationEventList = S),
          (t.createCancelAndHoldAutomationEvent = A),
          (t.createCancelScheduledValuesAutomationEvent = E),
          (t.createExponentialRampToValueAutomationEvent = k),
          (t.createLinearRampToValueAutomationEvent = R),
          (t.createSetTargetAutomationEvent = T),
          (t.createSetValueAutomationEvent = o),
          (t.createSetValueCurveAutomationEvent = s);
      })(e, n(7424), n(6690), n(9728));
    },
    8461: (t, e, n) => {
      "use strict";
      n.d(e, { V: () => o });
      var r = n(8826);
      const i = new WeakMap(),
        a = new WeakMap(),
        o = (t) => {
          const e =
            ((n = t),
            {
              ...n,
              connect: (t) => {
                let { call: e } = t;
                return async () => {
                  const { port1: t, port2: n } = new MessageChannel(),
                    r = await e("connect", { port: t }, [t]);
                  return i.set(n, r), n;
                };
              },
              disconnect: (t) => {
                let { call: e } = t;
                return async (t) => {
                  const n = i.get(t);
                  if (void 0 === n)
                    throw new Error("The given port is not connected.");
                  await e("disconnect", { portId: n });
                };
              },
              isSupported: (t) => {
                let { call: e } = t;
                return () => e("isSupported");
              },
            });
          var n;
          return (t) => {
            const n = ((t) => {
              if (a.has(t)) return a.get(t);
              const e = new Map();
              return a.set(t, e), e;
            })(t);
            t.addEventListener("message", (t) => {
              let { data: e } = t;
              const { id: r } = e;
              if (null !== r && n.has(r)) {
                const { reject: t, resolve: i } = n.get(r);
                n.delete(r),
                  void 0 === e.error
                    ? i(e.result)
                    : t(new Error(e.error.message));
              }
            }),
              ((t) => "function" === typeof t.start)(t) && t.start();
            const i = function (e) {
                let i =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : null,
                  a =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : [];
                return new Promise((o, s) => {
                  const l = (0, r.generateUniqueNumber)(n);
                  n.set(l, { reject: s, resolve: o }),
                    null === i
                      ? t.postMessage({ id: l, method: e }, a)
                      : t.postMessage({ id: l, method: e, params: i }, a);
                });
              },
              o = function (e, n) {
                let r =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : [];
                t.postMessage({ id: null, method: e, params: n }, r);
              };
            let s = {};
            for (const [r, a] of Object.entries(e))
              s = { ...s, [r]: a({ call: i, notify: o }) };
            return { ...s };
          };
        };
    },
    16: (t) => {
      "use strict";
      t.exports = (t, e) => {
        if ("string" !== typeof t) throw new TypeError("expected a string");
        return t
          .trim()
          .replace(/([a-z])([A-Z])/g, "$1-$2")
          .replace(/\W/g, (t) => (/[\xc0-\u017e]/.test(t) ? t : "-"))
          .replace(/^-+|-+$/g, "")
          .replace(/-{2,}/g, (t) => (e && e.condense ? "-" : t))
          .toLowerCase();
      };
    },
    9948: (t) => {
      "use strict";
      var e = function (t) {
        return (
          (function (t) {
            return !!t && "object" === typeof t;
          })(t) &&
          !(function (t) {
            var e = Object.prototype.toString.call(t);
            return (
              "[object RegExp]" === e ||
              "[object Date]" === e ||
              (function (t) {
                return t.$$typeof === n;
              })(t)
            );
          })(t)
        );
      };
      var n =
        "function" === typeof Symbol && Symbol.for
          ? Symbol.for("react.element")
          : 60103;
      function r(t, e) {
        return !1 !== e.clone && e.isMergeableObject(t)
          ? l(((n = t), Array.isArray(n) ? [] : {}), t, e)
          : t;
        var n;
      }
      function i(t, e, n) {
        return t.concat(e).map(function (t) {
          return r(t, n);
        });
      }
      function a(t) {
        return Object.keys(t).concat(
          (function (t) {
            return Object.getOwnPropertySymbols
              ? Object.getOwnPropertySymbols(t).filter(function (e) {
                  return Object.propertyIsEnumerable.call(t, e);
                })
              : [];
          })(t)
        );
      }
      function o(t, e) {
        try {
          return e in t;
        } catch (n) {
          return !1;
        }
      }
      function s(t, e, n) {
        var i = {};
        return (
          n.isMergeableObject(t) &&
            a(t).forEach(function (e) {
              i[e] = r(t[e], n);
            }),
          a(e).forEach(function (a) {
            (function (t, e) {
              return (
                o(t, e) &&
                !(
                  Object.hasOwnProperty.call(t, e) &&
                  Object.propertyIsEnumerable.call(t, e)
                )
              );
            })(t, a) ||
              (o(t, a) && n.isMergeableObject(e[a])
                ? (i[a] = (function (t, e) {
                    if (!e.customMerge) return l;
                    var n = e.customMerge(t);
                    return "function" === typeof n ? n : l;
                  })(a, n)(t[a], e[a], n))
                : (i[a] = r(e[a], n)));
          }),
          i
        );
      }
      function l(t, n, a) {
        ((a = a || {}).arrayMerge = a.arrayMerge || i),
          (a.isMergeableObject = a.isMergeableObject || e),
          (a.cloneUnlessOtherwiseSpecified = r);
        var o = Array.isArray(n);
        return o === Array.isArray(t)
          ? o
            ? a.arrayMerge(t, n, a)
            : s(t, n, a)
          : r(n, a);
      }
      l.all = function (t, e) {
        if (!Array.isArray(t))
          throw new Error("first argument should be an array");
        return t.reduce(function (t, n) {
          return l(t, n, e);
        }, {});
      };
      var c = l;
      t.exports = c;
    },
    8616: (t, e, n) => {
      "use strict";
      n.r(e),
        n.d(e, {
          characterize: () => s,
          connect: () => l,
          disconnect: () => c,
          encode: () => u,
          isSupported: () => d,
          record: () => h,
        });
      const r = (0, n(8461).V)({
          characterize: (t) => {
            let { call: e } = t;
            return () => e("characterize");
          },
          encode: (t) => {
            let { call: e } = t;
            return (t, n) => e("encode", { recordingId: t, timeslice: n });
          },
          record: (t) => {
            let { call: e } = t;
            return async (t, n, r) => {
              await e(
                "record",
                { recordingId: t, sampleRate: n, typedArrays: r },
                r.map((t) => {
                  let { buffer: e } = t;
                  return e;
                })
              );
            };
          },
        }),
        i = new Blob(
          [
            '(()=>{var e={775:function(e,t,r){!function(e,t,r,n){"use strict";var o=function(e,t){return void 0===t?e:t.reduce((function(e,t){if("capitalize"===t){var o=e.charAt(0).toUpperCase(),s=e.slice(1);return"".concat(o).concat(s)}return"dashify"===t?r(e):"prependIndefiniteArticle"===t?"".concat(n(e)," ").concat(e):e}),e)},s=function(e){var t=e.name+e.modifiers.map((function(e){return"\\\\.".concat(e,"\\\\(\\\\)")})).join("");return new RegExp("\\\\$\\\\{".concat(t,"}"),"g")},a=function(e,r){for(var n=/\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g,a=[],i=n.exec(e);null!==i;){var u={modifiers:[],name:i[1]};if(void 0!==i[3])for(var c=/\\.[^(]+\\(\\)/g,l=c.exec(i[2]);null!==l;)u.modifiers.push(l[0].slice(1,-2)),l=c.exec(i[2]);a.push(u),i=n.exec(e)}var d=a.reduce((function(e,n){return e.map((function(e){return"string"==typeof e?e.split(s(n)).reduce((function(e,s,a){return 0===a?[s]:n.name in r?[].concat(t(e),[o(r[n.name],n.modifiers),s]):[].concat(t(e),[function(e){return o(e[n.name],n.modifiers)},s])}),[]):[e]})).reduce((function(e,r){return[].concat(t(e),t(r))}),[])}),[e]);return function(e){return d.reduce((function(r,n){return[].concat(t(r),"string"==typeof n?[n]:[n(e)])}),[]).join("")}},i=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=void 0===e.code?void 0:a(e.code,t),n=void 0===e.message?void 0:a(e.message,t);function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0,s=void 0===o&&(t instanceof Error||void 0!==t.code&&"Exception"===t.code.slice(-9))?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},a=s.cause,i=s.missingParameters,u=void 0===n?new Error:new Error(n(i));return null!==a&&(u.cause=a),void 0!==r&&(u.code=r(i)),void 0!==e.status&&(u.status=e.status),u}return o};e.compile=i}(t,r(106),r(881),r(507))},881:e=>{"use strict";e.exports=(e,t)=>{if("string"!=typeof e)throw new TypeError("expected a string");return e.trim().replace(/([a-z])([A-Z])/g,"$1-$2").replace(/\\W/g,(e=>/[\xc0-\u017e]/.test(e)?e:"-")).replace(/^-+|-+$/g,"").replace(/-{2,}/g,(e=>t&&t.condense?"-":e)).toLowerCase()}},107:function(e,t){!function(e){"use strict";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,s=2*o,a=function(e,t){return function(r){var a=t.get(r),i=void 0===a?r.size:a<s?a+1:0;if(!r.has(i))return e(r,i);if(r.size<o){for(;r.has(i);)i=Math.floor(Math.random()*s);return e(r,i)}if(r.size>n)throw new Error("Congratulations, you created a collection of unique numbers which uses all available integers!");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,u=r(i),c=a(u,i),l=t(c);e.addUniqueNumber=l,e.generateUniqueNumber=c}(t)},507:e=>{var t=function(e){var t,r,n=/\\w+/.exec(e);if(!n)return"an";var o=(r=n[0]).toLowerCase(),s=["honest","hour","hono"];for(t in s)if(0==o.indexOf(s[t]))return"an";if(1==o.length)return"aedhilmnorsx".indexOf(o)>=0?"an":"a";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return"an";var a=[/^e[uw]/,/^onc?e\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<a.length;t++)if(o.match(a[t]))return"a";return r.match(/^U[NK][AIEO]/)?"a":r==r.toUpperCase()?"aedhilmnorsx".indexOf(o[0])>=0?"an":"a":"aeiou".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?"an":"a"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t},768:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},907:(e,t,r)=>{var n=r(768);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},642:e=>{e.exports=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},344:e=>{e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},106:(e,t,r)=>{var n=r(907),o=r(642),s=r(906),a=r(344);e.exports=function(e){return n(e)||o(e)||s(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},906:(e,t,r)=>{var n=r(768);e.exports=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}(()=>{"use strict";var e=r(775);const t=-32603,n=-32602,o=-32601,s=(0,e.compile)({message:\'The requested method called "${method}" is not supported.\',status:o}),a=(0,e.compile)({message:\'The handler of the method called "${method}" returned no required result.\',status:t}),i=(0,e.compile)({message:\'The handler of the method called "${method}" returned an unexpected result.\',status:t}),u=(0,e.compile)({message:\'The specified parameter called "portId" with the given value "${portId}" does not identify a port connected to this worker.\',status:n});var c=r(107);const l=new Map,d=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),s=(0,c.generateUniqueNumber)(l);return l.set(s,(()=>{o(),n.close(),l.delete(s)})),{result:s}},disconnect:e=>{let{portId:t}=e;const r=l.get(t);if(void 0===r)throw u({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),f=function(e,t){const r=d(f,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0),n=((e,t)=>async r=>{let{data:{id:n,method:o,params:u}}=r;const c=t[o];try{if(void 0===c)throw s({method:o});const t=void 0===u?c():c(u);if(void 0===t)throw a({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw i({method:o})}else{if(void 0===r.result)throw i({method:o});const{result:t,transferables:s=[]}=r;e.postMessage({id:n,result:t},s)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}})(e,r);return e.addEventListener("message",n),()=>e.removeEventListener("message",n)},p=e=>e.reduce(((e,t)=>e+t.length),0),m=(e,t)=>{const r=[];let n=0;e:for(;n<t;){const t=e.length;for(let o=0;o<t;o+=1){const t=e[o];void 0===r[o]&&(r[o]=[]);const s=t.shift();if(void 0===s)break e;r[o].push(s),0===o&&(n+=s.length)}}if(n>t){const o=n-t;r.forEach(((t,r)=>{const n=t.pop(),s=n.length-o;t.push(n.subarray(0,s)),e[r].unshift(n.subarray(s))}))}return r},h=new Map,v=(e=>(t,r,n)=>{const o=e.get(t);if(void 0===o){const o={channelDataArrays:n.map((e=>[e])),isComplete:!0,sampleRate:r};return e.set(t,o),o}return o.channelDataArrays.forEach(((e,t)=>e.push(n[t]))),o})(h),g=((e,t)=>(r,n,o,s)=>{const a=o>>3,i="subsequent"===n?0:44,u=r.length,c=e(r[0]),l=new ArrayBuffer(c*u*a+i),d=new DataView(l);return"subsequent"!==n&&t(d,o,u,"complete"===n?c:Number.POSITIVE_INFINITY,s),r.forEach(((e,t)=>{let r=i+t*a;e.forEach((e=>{const t=e.length;for(let n=0;n<t;n+=1){const t=e[n];d.setInt16(r,t<0?32768*Math.max(-1,t):32767*Math.min(1,t),!0),r+=u*a}}))})),[l]})(p,((e,t,r,n,o)=>{const s=t>>3,a=Math.min(n*r*s,4294967251);e.setUint32(0,1380533830),e.setUint32(4,a+36,!0),e.setUint32(8,1463899717),e.setUint32(12,1718449184),e.setUint32(16,16,!0),e.setUint16(20,1,!0),e.setUint16(22,r,!0),e.setUint32(24,o,!0),e.setUint32(28,o*r*s,!0),e.setUint16(32,r*s,!0),e.setUint16(34,t,!0),e.setUint32(36,1684108385),e.setUint32(40,a,!0)})),x=new Map;f(self,{characterize:()=>({result:/^audio\\/wav$/}),encode:e=>{let{recordingId:t,timeslice:r}=e;const n=x.get(t);void 0!==n&&(x.delete(t),n.reject(new Error("Another request was made to initiate an encoding.")));const o=h.get(t);if(null!==r){if(void 0===o||p(o.channelDataArrays[0])*(1e3/o.sampleRate)<r)return new Promise(((e,n)=>{x.set(t,{reject:n,resolve:e,timeslice:r})}));const e=m(o.channelDataArrays,Math.ceil(r*(o.sampleRate/1e3))),n=g(e,o.isComplete?"initial":"subsequent",16,o.sampleRate);return o.isComplete=!1,{result:n,transferables:n}}if(void 0!==o){const e=g(o.channelDataArrays,o.isComplete?"complete":"subsequent",16,o.sampleRate);return h.delete(t),{result:e,transferables:e}}return{result:[],transferables:[]}},record:e=>{let{recordingId:t,sampleRate:r,typedArrays:n}=e;const o=v(t,r,n),s=x.get(t);if(void 0!==s&&p(o.channelDataArrays[0])*(1e3/r)>=s.timeslice){const e=m(o.channelDataArrays,Math.ceil(s.timeslice*(r/1e3))),n=g(e,o.isComplete?"initial":"subsequent",16,r);o.isComplete=!1,x.delete(t),s.resolve({result:n,transferables:n})}return{result:null}}})})()})();',
          ],
          { type: "application/javascript; charset=utf-8" }
        ),
        a = URL.createObjectURL(i),
        o = ((t) => {
          const e = new Worker(t);
          return r(e);
        })(a),
        s = o.characterize,
        l = o.connect,
        c = o.disconnect,
        u = o.encode,
        d = o.isSupported,
        h = o.record;
      URL.revokeObjectURL(a);
    },
    1320: (t, e, n) => {
      "use strict";
      n.r(e),
        n.d(e, {
          MediaRecorder: () => vi,
          isSupported: () => bi,
          register: () => yi,
        });
      var r = n(8461),
        i = n(8826);
      const a = new Set(),
        o = (0, r.V)({
          encode: (t) => {
            let { call: e } = t;
            return async (t, n) => {
              const r = await e("encode", { encoderId: t, timeslice: n });
              return a.delete(t), r;
            };
          },
          instantiate: (t) => {
            let { call: e } = t;
            return async (t, n) => {
              const r = (0, i.addUniqueNumber)(a);
              return {
                encoderId: r,
                port: await e("instantiate", {
                  encoderId: r,
                  mimeType: t,
                  sampleRate: n,
                }),
              };
            };
          },
          register: (t) => {
            let { call: e } = t;
            return (t) => e("register", { port: t }, [t]);
          },
        }),
        s = new Blob(
          [
            '(()=>{var e={775:function(e,t,r){!function(e,t,r,n){"use strict";var o=function(e,t){return void 0===t?e:t.reduce((function(e,t){if("capitalize"===t){var o=e.charAt(0).toUpperCase(),s=e.slice(1);return"".concat(o).concat(s)}return"dashify"===t?r(e):"prependIndefiniteArticle"===t?"".concat(n(e)," ").concat(e):e}),e)},s=function(e){var t=e.name+e.modifiers.map((function(e){return"\\\\.".concat(e,"\\\\(\\\\)")})).join("");return new RegExp("\\\\$\\\\{".concat(t,"}"),"g")},a=function(e,r){for(var n=/\\${([^.}]+)((\\.[^(]+\\(\\))*)}/g,a=[],i=n.exec(e);null!==i;){var c={modifiers:[],name:i[1]};if(void 0!==i[3])for(var u=/\\.[^(]+\\(\\)/g,l=u.exec(i[2]);null!==l;)c.modifiers.push(l[0].slice(1,-2)),l=u.exec(i[2]);a.push(c),i=n.exec(e)}var d=a.reduce((function(e,n){return e.map((function(e){return"string"==typeof e?e.split(s(n)).reduce((function(e,s,a){return 0===a?[s]:n.name in r?[].concat(t(e),[o(r[n.name],n.modifiers),s]):[].concat(t(e),[function(e){return o(e[n.name],n.modifiers)},s])}),[]):[e]})).reduce((function(e,r){return[].concat(t(e),t(r))}),[])}),[e]);return function(e){return d.reduce((function(r,n){return[].concat(t(r),"string"==typeof n?[n]:[n(e)])}),[]).join("")}},i=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=void 0===e.code?void 0:a(e.code,t),n=void 0===e.message?void 0:a(e.message,t);function o(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},o=arguments.length>1?arguments[1]:void 0,s=void 0===o&&(t instanceof Error||void 0!==t.code&&"Exception"===t.code.slice(-9))?{cause:t,missingParameters:{}}:{cause:o,missingParameters:t},a=s.cause,i=s.missingParameters,c=void 0===n?new Error:new Error(n(i));return null!==a&&(c.cause=a),void 0!==r&&(c.code=r(i)),void 0!==e.status&&(c.status=e.status),c}return o};e.compile=i}(t,r(106),r(881),r(507))},881:e=>{"use strict";e.exports=(e,t)=>{if("string"!=typeof e)throw new TypeError("expected a string");return e.trim().replace(/([a-z])([A-Z])/g,"$1-$2").replace(/\\W/g,(e=>/[\xc0-\u017e]/.test(e)?e:"-")).replace(/^-+|-+$/g,"").replace(/-{2,}/g,(e=>t&&t.condense?"-":e)).toLowerCase()}},107:function(e,t){!function(e){"use strict";var t=function(e){return function(t){var r=e(t);return t.add(r),r}},r=function(e){return function(t,r){return e.set(t,r),r}},n=void 0===Number.MAX_SAFE_INTEGER?9007199254740991:Number.MAX_SAFE_INTEGER,o=536870912,s=2*o,a=function(e,t){return function(r){var a=t.get(r),i=void 0===a?r.size:a<s?a+1:0;if(!r.has(i))return e(r,i);if(r.size<o){for(;r.has(i);)i=Math.floor(Math.random()*s);return e(r,i)}if(r.size>n)throw new Error("Congratulations, you created a collection of unique numbers which uses all available integers!");for(;r.has(i);)i=Math.floor(Math.random()*n);return e(r,i)}},i=new WeakMap,c=r(i),u=a(c,i),l=t(u);e.addUniqueNumber=l,e.generateUniqueNumber=u}(t)},507:e=>{var t=function(e){var t,r,n=/\\w+/.exec(e);if(!n)return"an";var o=(r=n[0]).toLowerCase(),s=["honest","hour","hono"];for(t in s)if(0==o.indexOf(s[t]))return"an";if(1==o.length)return"aedhilmnorsx".indexOf(o)>=0?"an":"a";if(r.match(/(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/))return"an";var a=[/^e[uw]/,/^onc?e\\b/,/^uni([^nmd]|mo)/,/^u[bcfhjkqrst][aeiou]/];for(t=0;t<a.length;t++)if(o.match(a[t]))return"a";return r.match(/^U[NK][AIEO]/)?"a":r==r.toUpperCase()?"aedhilmnorsx".indexOf(o[0])>=0?"an":"a":"aeiou".indexOf(o[0])>=0||o.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)?"an":"a"};void 0!==e.exports?e.exports=t:window.indefiniteArticle=t},768:e=>{e.exports=function(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n},e.exports.__esModule=!0,e.exports.default=e.exports},907:(e,t,r)=>{var n=r(768);e.exports=function(e){if(Array.isArray(e))return n(e)},e.exports.__esModule=!0,e.exports.default=e.exports},642:e=>{e.exports=function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)},e.exports.__esModule=!0,e.exports.default=e.exports},344:e=>{e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")},e.exports.__esModule=!0,e.exports.default=e.exports},106:(e,t,r)=>{var n=r(907),o=r(642),s=r(906),a=r(344);e.exports=function(e){return n(e)||o(e)||s(e)||a()},e.exports.__esModule=!0,e.exports.default=e.exports},906:(e,t,r)=>{var n=r(768);e.exports=function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}},e.exports.__esModule=!0,e.exports.default=e.exports}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}(()=>{"use strict";var e=r(775);const t=-32603,n=-32602,o=-32601,s=(0,e.compile)({message:\'The requested method called "${method}" is not supported.\',status:o}),a=(0,e.compile)({message:\'The handler of the method called "${method}" returned no required result.\',status:t}),i=(0,e.compile)({message:\'The handler of the method called "${method}" returned an unexpected result.\',status:t}),c=(0,e.compile)({message:\'The specified parameter called "portId" with the given value "${portId}" does not identify a port connected to this worker.\',status:n});var u=r(107);const l=new Map,d=(e,t,r)=>({...t,connect:r=>{let{port:n}=r;n.start();const o=e(n,t),s=(0,u.generateUniqueNumber)(l);return l.set(s,(()=>{o(),n.close(),l.delete(s)})),{result:s}},disconnect:e=>{let{portId:t}=e;const r=l.get(t);if(void 0===r)throw c({portId:t.toString()});return r(),{result:null}},isSupported:async()=>{if(await new Promise((e=>{const t=new ArrayBuffer(0),{port1:r,port2:n}=new MessageChannel;r.onmessage=t=>{let{data:r}=t;return e(null!==r)},n.postMessage(t,[t])}))){const e=r();return{result:e instanceof Promise?await e:e}}return{result:!1}}}),f=function(e,t){const r=d(f,t,arguments.length>2&&void 0!==arguments[2]?arguments[2]:()=>!0),n=((e,t)=>async r=>{let{data:{id:n,method:o,params:c}}=r;const u=t[o];try{if(void 0===u)throw s({method:o});const t=void 0===c?u():u(c);if(void 0===t)throw a({method:o});const r=t instanceof Promise?await t:t;if(null===n){if(void 0!==r.result)throw i({method:o})}else{if(void 0===r.result)throw i({method:o});const{result:t,transferables:s=[]}=r;e.postMessage({id:n,result:t},s)}}catch(t){const{message:r,status:o=-32603}=t;e.postMessage({error:{code:o,message:r},id:n})}})(e,r);return e.addEventListener("message",n),()=>e.removeEventListener("message",n)},p=e=>{e.onmessage=null,e.close()},m=new WeakMap,h=new WeakMap,g=(e=>{const t=(r=e,{...r,connect:e=>{let{call:t}=e;return async()=>{const{port1:e,port2:r}=new MessageChannel,n=await t("connect",{port:e},[e]);return m.set(r,n),r}},disconnect:e=>{let{call:t}=e;return async e=>{const r=m.get(e);if(void 0===r)throw new Error("The given port is not connected.");await t("disconnect",{portId:r})}},isSupported:e=>{let{call:t}=e;return()=>t("isSupported")}});var r;return e=>{const r=(e=>{if(h.has(e))return h.get(e);const t=new Map;return h.set(e,t),t})(e);e.addEventListener("message",(e=>{let{data:t}=e;const{id:n}=t;if(null!==n&&r.has(n)){const{reject:e,resolve:o}=r.get(n);r.delete(n),void 0===t.error?o(t.result):e(new Error(t.error.message))}})),(e=>"function"==typeof e.start)(e)&&e.start();const n=function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return new Promise(((s,a)=>{const i=(0,u.generateUniqueNumber)(r);r.set(i,{reject:a,resolve:s}),null===n?e.postMessage({id:i,method:t},o):e.postMessage({id:i,method:t,params:n},o)}))},o=function(t,r){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];e.postMessage({id:null,method:t,params:r},n)};let s={};for(const[e,r]of Object.entries(t))s={...s,[e]:r({call:n,notify:o})};return{...s}}})({characterize:e=>{let{call:t}=e;return()=>t("characterize")},encode:e=>{let{call:t}=e;return(e,r)=>t("encode",{recordingId:e,timeslice:r})},record:e=>{let{call:t}=e;return async(e,r,n)=>{await t("record",{recordingId:e,sampleRate:r,typedArrays:n},n.map((e=>{let{buffer:t}=e;return t})))}}}),v=async(e,t)=>{const r=g(t),n=await r.characterize(),o=n.toString();if(e.has(o))throw new Error("There is already an encoder stored which handles exactly the same mime types.");return e.set(o,[n,r]),n},w=new Map,x=(e=>t=>{const r=e.get(t);if(void 0===r)throw new Error("There was no instance of an encoder stored with the given id.");return r})(w),y=((e,t)=>r=>{const n=t(r);return e.delete(r),n})(w,x),M=new Map,b=((e,t)=>r=>{const[n,o,s,a]=t(r);return s?new Promise((t=>{o.onmessage=s=>{let{data:i}=s;0===i.length?(e(o),t(n.encode(r,null))):n.record(r,a,i)}})):n.encode(r,null)})(p,y),E=(e=>t=>{for(const[r,n]of Array.from(e.values()))if(r.test(t))return n;throw new Error("There is no encoder registered which could handle the given mimeType.")})(M),A=((e,t,r)=>(n,o,s)=>{if(t.has(n))throw new Error(\'There is already an encoder registered with an id called "\'.concat(n,\'".\'));const a=r(o),{port1:i,port2:c}=new MessageChannel,u=[a,i,!0,s];return t.set(n,u),i.onmessage=t=>{let{data:r}=t;0===r.length?(e(i),u[2]=!1):a.record(n,s,r.map((e=>"number"==typeof e?new Float32Array(e):e)))},c})(p,w,E),I=(e=>(t,r)=>{const[n]=e(t);return n.encode(t,r)})(x);f(self,{encode:async e=>{let{encoderId:t,timeslice:r}=e;const n=null===r?await b(t):await I(t,r);return{result:n,transferables:n}},instantiate:e=>{let{encoderId:t,mimeType:r,sampleRate:n}=e;const o=A(t,r,n);return{result:o,transferables:[o]}},register:async e=>{let{port:t}=e;return{result:await v(M,t)}}})})()})();',
          ],
          { type: "application/javascript; charset=utf-8" }
        ),
        l = URL.createObjectURL(s),
        c = ((t) => {
          const e = new Worker(t);
          return o(e);
        })(l),
        u = (c.connect, c.disconnect, c.encode),
        d = c.instantiate,
        h = (c.isSupported, c.register);
      URL.revokeObjectURL(l);
      const f = function () {
          let t =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
          try {
            return new DOMException(t, "InvalidModificationError");
          } catch (e) {
            return (
              (e.code = 13),
              (e.message = t),
              (e.name = "InvalidModificationError"),
              e
            );
          }
        },
        p = () => {
          try {
            return new DOMException("", "NotSupportedError");
          } catch (t) {
            return (t.code = 9), (t.name = "NotSupportedError"), t;
          }
        };
      var m = n(2826);
      const g = Symbol.observable || "@@observable";
      const _ = () => {},
        v = (t) => {
          throw t;
        };
      const b = (t) => (
          t.error(
            new Error("The required browser API seems to be not supported.")
          ),
          () => {}
        ),
        y = "undefined" === typeof window ? null : window,
        x = ((t, e) => {
          const n = () => {};
          return (r) => {
            const i = function () {
              for (
                var t = arguments.length, i = new Array(t), a = 0;
                a < t;
                a++
              )
                i[a] = arguments[a];
              const o = r(
                ((t) => "function" === typeof t[0])(i)
                  ? e({ next: i[0] })
                  : e(...i)
              );
              return void 0 !== o ? o : n;
            };
            return (
              (i[Symbol.observable] = () => ({
                subscribe: function () {
                  return { unsubscribe: i(...arguments) };
                },
              })),
              t(i)
            );
          };
        })(
          function (t) {
            return (
              Symbol.observable ||
                ("function" === typeof t &&
                t.prototype &&
                t.prototype[Symbol.observable]
                  ? ((t.prototype[g] = t.prototype[Symbol.observable]),
                    delete t.prototype[Symbol.observable])
                  : ((t[g] = t[Symbol.observable]),
                    delete t[Symbol.observable])),
              t
            );
          },
          function (t) {
            var e, n, r;
            return t
              ? t.next && t.error && t.complete
                ? t
                : {
                    complete: (null !== (e = t.complete) && void 0 !== e
                      ? e
                      : _
                    ).bind(t),
                    error: (null !== (n = t.error) && void 0 !== n
                      ? n
                      : v
                    ).bind(t),
                    next: (null !== (r = t.next) && void 0 !== r ? r : _).bind(
                      t
                    ),
                  }
              : { complete: _, error: v, next: _ };
          }
        ),
        w =
          (((t, e, n) => {})(b, y, x),
          (
            (t, e, n) => (r, i) =>
              n((n) => {
                if (null === e || void 0 === e.MutationObserver) return t(n);
                const a = new e.MutationObserver((t) => n.next(t));
                try {
                  a.observe(r, i);
                } catch (o) {
                  n.error(o);
                }
                return () => a.disconnect();
              })
          )(b, y, x)),
        M = (
          (t) => (e, n) =>
            t((t) => e({ ...t, next: (e) => t.next(n(e)) }))
        )(x),
        S = (
          (t) => (e, n) =>
            t((t) => (t.next(n), e(t)))
        )(x),
        A =
          (((t, e, n) => {})(M, w, S),
          ((t, e, n) => {})(b, y, x),
          ((t, e, n) => {})(b, y, x),
          ((t, e, n) => {})(b, y, x),
          ((t, e, n) => {})(b, y, x),
          ((t, e, n) => {})(b, y, x),
          ((t) => {})(x),
          ((t) => {})(x),
          (
            (t) => (e, n, r) =>
              t((t) => {
                const i = (e) => t.next(e);
                return (
                  e.addEventListener(n, i, r),
                  () => e.removeEventListener(n, i, r)
                );
              })
          )(x));
      var E = n(9667);
      const k = -32603,
        R = -32602,
        T = -32601,
        O =
          ((0, E.compile)({
            message:
              'The requested method called "${method}" is not supported.',
            status: T,
          }),
          (0, E.compile)({
            message:
              'The handler of the method called "${method}" returned no required result.',
            status: k,
          }),
          (0, E.compile)({
            message:
              'The handler of the method called "${method}" returned an unexpected result.',
            status: k,
          }),
          (0, E.compile)({
            message:
              'The specified parameter called "portId" with the given value "${portId}" does not identify a port connected to this worker.',
            status: R,
          }),
          new Map(),
          ((t, e, n) => async (r) => {
            const i = new t([n], {
                type: "application/javascript; charset=utf-8",
              }),
              a = e.createObjectURL(i);
            try {
              await r(a);
            } finally {
              e.revokeObjectURL(a);
            }
          })(
            Blob,
            URL,
            '(()=>{"use strict";class e extends AudioWorkletProcessor{constructor(){super(),this._encoderPort=null,this._state="inactive",this.port.onmessage=e=>{let{data:t}=e;"pause"===t.method?"active"===this._state||"recording"===this._state?(this._state="paused",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):"record"===t.method?"inactive"===this._state?(this._encoderPort=t.params.encoderPort,this._state="active",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):"resume"===t.method?"paused"===this._state?(this._state="active",this._sendAcknowledgement(t.id)):this._sendUnexpectedStateError(t.id):"stop"===t.method?"active"!==this._state&&"paused"!==this._state&&"recording"!==this._state||null===this._encoderPort?this._sendUnexpectedStateError(t.id):(this._stop(this._encoderPort),this._sendAcknowledgement(t.id)):"number"==typeof t.id&&this.port.postMessage({error:{code:-32601,message:"The requested method is not supported."},id:t.id})}}process(e){let[t]=e;if("inactive"===this._state||"paused"===this._state)return!0;if("active"===this._state){if(void 0===t)throw new Error("No channelData was received for the first input.");if(0===t.length)return!0;this._state="recording"}if("recording"===this._state&&null!==this._encoderPort){if(void 0===t)throw new Error("No channelData was received for the first input.");if(0!==t.length)return this._encoderPort.postMessage(t,t.map((e=>{let{buffer:t}=e;return t}))),!0;this._stop(this._encoderPort)}return!1}_sendAcknowledgement(e){this.port.postMessage({id:e,result:null})}_sendUnexpectedStateError(e){this.port.postMessage({error:{code:-32603,message:"The internal state does not allow to process the given message."},id:e})}_stop(e){e.postMessage([]),e.close(),this._encoderPort=null,this._state="stopped"}}e.parameterDescriptors=[],registerProcessor("recorder-audio-worklet-processor",e)})();'
          )),
        P = ((t, e, n, r) =>
          function (i, a) {
            const o = new i(a, "recorder-audio-worklet-processor", {
                ...(arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : {}),
                channelCountMode: "explicit",
                numberOfInputs: 1,
                numberOfOutputs: 0,
              }),
              s = new Map(),
              l = e(s, o.port),
              c = n(o.port, "message")(t(s));
            o.port.start();
            let u = "inactive";
            return (
              Object.defineProperties(o, {
                pause: {
                  get: () => async () => (
                    r(["recording"], u), (u = "paused"), l({ method: "pause" })
                  ),
                },
                port: {
                  get() {
                    throw new Error(
                      "The port of a RecorderAudioWorkletNode can't be accessed."
                    );
                  },
                },
                record: {
                  get: () => async (t) => (
                    r(["inactive"], u),
                    (u = "recording"),
                    l({ method: "record", params: { encoderPort: t } }, [t])
                  ),
                },
                resume: {
                  get: () => async () => (
                    r(["paused"], u), (u = "recording"), l({ method: "resume" })
                  ),
                },
                stop: {
                  get: () => async () => {
                    r(["paused", "recording"], u), (u = "stopped");
                    try {
                      await l({ method: "stop" });
                    } finally {
                      c();
                    }
                  },
                },
              }),
              o
            );
          })(
          (t) => (e) => {
            let { data: n } = e;
            const { id: r } = n;
            if (null !== r) {
              const e = t.get(r);
              if (void 0 !== e) {
                const { reject: i, resolve: a } = e;
                t.delete(r),
                  void 0 === n.error
                    ? a(n.result)
                    : i(new Error(n.error.message));
              }
            }
          },
          (
            (t) => (e, n) =>
              function (r) {
                let i =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : [];
                return new Promise((a, o) => {
                  const s = t(e);
                  e.set(s, { reject: o, resolve: a }),
                    n.postMessage({ id: s, ...r }, i);
                });
              }
          )(m.generateUniqueNumber),
          A,
          (t, e) => {
            if (!t.includes(e))
              throw new Error(
                "Expected the state to be "
                  .concat(
                    t.map((t) => '"'.concat(t, '"')).join(" or "),
                    ' but it was "'
                  )
                  .concat(e, '".')
              );
          }
        );
      var C = n(8667);
      const D = new WeakSet(),
        I = new WeakMap(),
        B = new WeakMap(),
        N = new WeakMap(),
        L = new WeakMap(),
        V = new WeakMap(),
        F = new WeakMap(),
        H = new WeakMap(),
        j = new WeakMap(),
        Y = new WeakMap(),
        W = { construct: () => W },
        U =
          /^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,
        z = (t, e) => {
          const n = [];
          let r = t.replace(/^[\s]+/, ""),
            i = r.match(U);
          for (; null !== i; ) {
            const t = i[1].slice(1, -1),
              a = i[0]
                .replace(/([\s]+)?;?$/, "")
                .replace(t, new URL(t, e).toString());
            n.push(a),
              (r = r.slice(i[0].length).replace(/^[\s]+/, "")),
              (i = r.match(U));
          }
          return [n.join(";"), r];
        },
        G = (t) => {
          if (void 0 !== t && !Array.isArray(t))
            throw new TypeError(
              "The parameterDescriptors property of given value for processorCtor is not an array."
            );
        },
        q = (t) => {
          if (
            !((t) => {
              try {
                new new Proxy(t, W)();
              } catch {
                return !1;
              }
              return !0;
            })(t)
          )
            throw new TypeError(
              "The given value for processorCtor should be a constructor."
            );
          if (null === t.prototype || "object" !== typeof t.prototype)
            throw new TypeError(
              "The given value for processorCtor should have a prototype."
            );
        },
        X = (t, e) => {
          const n = t.get(e);
          if (void 0 === n)
            throw new Error("A value with the given key could not be found.");
          return n;
        },
        Z = (t, e) => {
          const n = Array.from(t).filter(e);
          if (n.length > 1) throw Error("More than one element was found.");
          if (0 === n.length) throw Error("No element was found.");
          const [r] = n;
          return t.delete(r), r;
        },
        K = (t, e, n, r) => {
          const i = X(t, e),
            a = Z(i, (t) => t[0] === n && t[1] === r);
          return 0 === i.size && t.delete(e), a;
        },
        $ = (t) => X(F, t),
        Q = (t) => {
          if (D.has(t)) throw new Error("The AudioNode is already stored.");
          D.add(t), $(t).forEach((t) => t(!0));
        },
        J = (t) => "port" in t,
        tt = (t) => {
          if (!D.has(t)) throw new Error("The AudioNode is not stored.");
          D.delete(t), $(t).forEach((t) => t(!1));
        },
        et = (t, e) => {
          !J(t) && e.every((t) => 0 === t.size) && tt(t);
        },
        nt = {
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          fftSize: 2048,
          maxDecibels: -30,
          minDecibels: -100,
          smoothingTimeConstant: 0.8,
        },
        rt = (t, e) => t.context === e,
        it = (t) => {
          try {
            t.copyToChannel(new Float32Array(1), 0, -1);
          } catch {
            return !1;
          }
          return !0;
        },
        at = () => new DOMException("", "IndexSizeError"),
        ot = (t) => {
          var e;
          t.getChannelData =
            ((e = t.getChannelData),
            (n) => {
              try {
                return e.call(t, n);
              } catch (r) {
                if (12 === r.code) throw at();
                throw r;
              }
            });
        },
        st = { numberOfChannels: 1 },
        lt = -34028234663852886e22,
        ct = -lt,
        ut = (t) => D.has(t),
        dt = {
          buffer: null,
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          loop: !1,
          loopEnd: 0,
          loopStart: 0,
          playbackRate: 1,
        },
        ht = (t) => X(I, t),
        ft = (t) => X(N, t),
        pt = (t, e) => {
          const { activeInputs: n } = ht(t);
          n.forEach((n) =>
            n.forEach((n) => {
              let [r] = n;
              e.includes(t) || pt(r, [...e, t]);
            })
          );
          const r = ((t) => "playbackRate" in t)(t)
            ? [t.playbackRate]
            : J(t)
            ? Array.from(t.parameters.values())
            : ((t) => "frequency" in t && "gain" in t)(t)
            ? [t.Q, t.detune, t.frequency, t.gain]
            : ((t) => "offset" in t)(t)
            ? [t.offset]
            : ((t) => !("frequency" in t) && "gain" in t)(t)
            ? [t.gain]
            : ((t) => "detune" in t && "frequency" in t)(t)
            ? [t.detune, t.frequency]
            : ((t) => "pan" in t)(t)
            ? [t.pan]
            : [];
          for (const i of r) {
            const t = ft(i);
            void 0 !== t &&
              t.activeInputs.forEach((t) => {
                let [n] = t;
                return pt(n, e);
              });
          }
          ut(t) && tt(t);
        },
        mt = (t) => {
          pt(t.destination, []);
        },
        gt = (t) =>
          void 0 === t ||
          "number" === typeof t ||
          ("string" === typeof t &&
            ("balanced" === t || "interactive" === t || "playback" === t)),
        _t = (t) => "context" in t,
        vt = (t) => _t(t[0]),
        bt = (t, e, n, r) => {
          for (const i of t)
            if (n(i)) {
              if (r) return !1;
              throw Error("The set contains at least one similar element.");
            }
          return t.add(e), !0;
        },
        yt = (t, e, n, r) => {
          let [i, a] = n;
          bt(t, [e, i, a], (t) => t[0] === e && t[1] === i, r);
        },
        xt = (t, e, n) => {
          let [r, i, a] = e;
          const o = t.get(r);
          void 0 === o
            ? t.set(r, new Set([[i, a]]))
            : bt(o, [i, a], (t) => t[0] === i, n);
        },
        wt = (t) => "inputs" in t,
        Mt = (t, e, n, r) => {
          if (wt(e)) {
            const i = e.inputs[r];
            return t.connect(i, n, 0), [i, n, 0];
          }
          return t.connect(e, n, r), [e, n, r];
        },
        St = (t, e, n) => {
          for (const r of t)
            if (r[0] === e && r[1] === n) return t.delete(r), r;
          return null;
        },
        At = (t, e) => {
          if (!$(t).delete(e))
            throw new Error("Missing the expected event listener.");
        },
        Et = (t, e, n) => {
          const r = X(t, e),
            i = Z(r, (t) => t[0] === n);
          return 0 === r.size && t.delete(e), i;
        },
        kt = (t, e, n, r) => {
          wt(e) ? t.disconnect(e.inputs[r], n, 0) : t.disconnect(e, n, r);
        },
        Rt = (t) => X(B, t),
        Tt = (t) => X(L, t),
        Ot = (t) => H.has(t),
        Pt = (t) => !D.has(t),
        Ct = (t, e) =>
          new Promise((n) => {
            if (null !== e) n(!0);
            else {
              const e = t.createScriptProcessor(256, 1, 1),
                r = t.createGain(),
                i = t.createBuffer(1, 2, 44100),
                a = i.getChannelData(0);
              (a[0] = 1), (a[1] = 1);
              const o = t.createBufferSource();
              (o.buffer = i),
                (o.loop = !0),
                o.connect(e).connect(t.destination),
                o.connect(r),
                o.disconnect(r),
                (e.onaudioprocess = (r) => {
                  const i = r.inputBuffer.getChannelData(0);
                  Array.prototype.some.call(i, (t) => 1 === t) ? n(!0) : n(!1),
                    o.stop(),
                    (e.onaudioprocess = null),
                    o.disconnect(e),
                    e.disconnect(t.destination);
                }),
                o.start();
            }
          }),
        Dt = (t, e) => {
          const n = new Map();
          for (const r of t)
            for (const t of r) {
              const e = n.get(t);
              n.set(t, void 0 === e ? 1 : e + 1);
            }
          n.forEach((t, n) => e(n, t));
        },
        It = (t) => "context" in t,
        Bt = (t) => {
          const e = new Map();
          (t.connect = ((t) =>
            function (n) {
              let r =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0,
                i =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 0;
              const a = It(n) ? t(n, r, i) : t(n, r),
                o = e.get(n);
              return (
                void 0 === o
                  ? e.set(n, [{ input: i, output: r }])
                  : o.every((t) => t.input !== i || t.output !== r) &&
                    o.push({ input: i, output: r }),
                a
              );
            })(t.connect.bind(t))),
            (t.disconnect = ((n) => (r, i, a) => {
              if ((n.apply(t), void 0 === r)) e.clear();
              else if ("number" === typeof r)
                for (const [t, n] of e) {
                  const i = n.filter((t) => t.output !== r);
                  0 === i.length ? e.delete(t) : e.set(t, i);
                }
              else if (e.has(r))
                if (void 0 === i) e.delete(r);
                else {
                  const t = e.get(r);
                  if (void 0 !== t) {
                    const n = t.filter(
                      (t) => t.output !== i && (t.input !== a || void 0 === a)
                    );
                    0 === n.length ? e.delete(r) : e.set(r, n);
                  }
                }
              for (const [n, o] of e)
                o.forEach((e) => {
                  It(n)
                    ? t.connect(n, e.output, e.input)
                    : t.connect(n, e.output);
                });
            })(t.disconnect));
        },
        Nt = (t, e, n, r) => {
          const { activeInputs: i, passiveInputs: a } = ft(e),
            { outputs: o } = ht(t),
            s = $(t),
            l = (o) => {
              const s = Rt(t),
                l = Tt(e);
              if (o) {
                const e = Et(a, t, n);
                yt(i, t, e, !1), r || Ot(t) || s.connect(l, n);
              } else {
                const e = ((t, e, n) => Z(t, (t) => t[0] === e && t[1] === n))(
                  i,
                  t,
                  n
                );
                xt(a, e, !1), r || Ot(t) || s.disconnect(l, n);
              }
            };
          return (
            !!bt(o, [e, n], (t) => t[0] === e && t[1] === n, !0) &&
            (s.add(l), ut(t) ? yt(i, t, [n, l], !0) : xt(a, [t, n, l], !0), !0)
          );
        },
        Lt = (t, e, n, r, i) => {
          const [a, o] = ((t, e, n, r) => {
            const { activeInputs: i, passiveInputs: a } = ht(e),
              o = St(i[r], t, n);
            if (null === o) return [K(a, t, n, r)[2], !1];
            return [o[2], !0];
          })(t, n, r, i);
          if (
            (null !== a &&
              (At(t, a), !o || e || Ot(t) || kt(Rt(t), Rt(n), r, i)),
            ut(n))
          ) {
            const { activeInputs: t } = ht(n);
            et(n, t);
          }
        },
        Vt = (t, e, n, r) => {
          const [i, a] = ((t, e, n) => {
            const { activeInputs: r, passiveInputs: i } = ft(e),
              a = St(r, t, n);
            if (null === a) return [Et(i, t, n)[1], !1];
            return [a[2], !0];
          })(t, n, r);
          null !== i &&
            (At(t, i), !a || e || Ot(t) || Rt(t).disconnect(Tt(n), r));
        };
      class Ft {
        constructor(t) {
          this._map = new Map(t);
        }
        get size() {
          return this._map.size;
        }
        entries() {
          return this._map.entries();
        }
        forEach(t) {
          let e =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null;
          return this._map.forEach((n, r) => t.call(e, n, r, this));
        }
        get(t) {
          return this._map.get(t);
        }
        has(t) {
          return this._map.has(t);
        }
        keys() {
          return this._map.keys();
        }
        values() {
          return this._map.values();
        }
      }
      const Ht = {
        channelCount: 2,
        channelCountMode: "explicit",
        channelInterpretation: "speakers",
        numberOfInputs: 1,
        numberOfOutputs: 1,
        parameterData: {},
        processorOptions: {},
      };
      function jt(t, e, n, r, i) {
        if ("function" === typeof t.copyFromChannel)
          0 === e[n].byteLength && (e[n] = new Float32Array(128)),
            t.copyFromChannel(e[n], r, i);
        else {
          const a = t.getChannelData(r);
          if (0 === e[n].byteLength) e[n] = a.slice(i, i + 128);
          else {
            const t = new Float32Array(
              a.buffer,
              i * Float32Array.BYTES_PER_ELEMENT,
              128
            );
            e[n].set(t);
          }
        }
      }
      const Yt = (t, e, n, r, i) => {
          "function" === typeof t.copyToChannel
            ? 0 !== e[n].byteLength && t.copyToChannel(e[n], r, i)
            : 0 !== e[n].byteLength && t.getChannelData(r).set(e[n], i);
        },
        Wt = (t, e) => {
          const n = [];
          for (let r = 0; r < t; r += 1) {
            const t = [],
              i = "number" === typeof e ? e : e[r];
            for (let e = 0; e < i; e += 1) t.push(new Float32Array(128));
            n.push(t);
          }
          return n;
        },
        Ut = async (t, e, n, r, i, a, o) => {
          const s =
              null === e ? 128 * Math.ceil(t.context.length / 128) : e.length,
            l = r.channelCount * r.numberOfInputs,
            c = i.reduce((t, e) => t + e, 0),
            u = 0 === c ? null : n.createBuffer(c, s, n.sampleRate);
          if (void 0 === a)
            throw new Error("Missing the processor constructor.");
          const d = ht(t),
            h = await ((t, e) => {
              const n = X(Y, t),
                r = Rt(e);
              return X(n, r);
            })(n, t),
            f = Wt(r.numberOfInputs, r.channelCount),
            p = Wt(r.numberOfOutputs, i),
            m = Array.from(t.parameters.keys()).reduce(
              (t, e) => ({ ...t, [e]: new Float32Array(128) }),
              {}
            );
          for (let _ = 0; _ < s; _ += 128) {
            if (r.numberOfInputs > 0 && null !== e)
              for (let t = 0; t < r.numberOfInputs; t += 1)
                for (let n = 0; n < r.channelCount; n += 1)
                  jt(e, f[t], n, n, _);
            void 0 !== a.parameterDescriptors &&
              null !== e &&
              a.parameterDescriptors.forEach((t, n) => {
                let { name: r } = t;
                jt(e, m, r, l + n, _);
              });
            for (let t = 0; t < r.numberOfInputs; t += 1)
              for (let e = 0; e < i[t]; e += 1)
                0 === p[t][e].byteLength && (p[t][e] = new Float32Array(128));
            try {
              const t = f.map((t, e) =>
                  0 === d.activeInputs[e].size ? [] : t
                ),
                e = o(_ / n.sampleRate, n.sampleRate, () => h.process(t, p, m));
              if (null !== u)
                for (let n = 0, a = 0; n < r.numberOfOutputs; n += 1) {
                  for (let t = 0; t < i[n]; t += 1) Yt(u, p[n], t, a + t, _);
                  a += i[n];
                }
              if (!e) break;
            } catch (g) {
              t.dispatchEvent(
                new ErrorEvent("processorerror", {
                  colno: g.colno,
                  filename: g.filename,
                  lineno: g.lineno,
                  message: g.message,
                })
              );
              break;
            }
          }
          return u;
        },
        zt = {
          Q: 1,
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          detune: 0,
          frequency: 350,
          gain: 0,
          type: "lowpass",
        },
        Gt = {
          channelCount: 1,
          channelCountMode: "explicit",
          channelInterpretation: "speakers",
          numberOfInputs: 6,
        },
        qt = {
          channelCount: 6,
          channelCountMode: "explicit",
          channelInterpretation: "discrete",
          numberOfOutputs: 6,
        },
        Xt = {
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          offset: 1,
        },
        Zt = {
          buffer: null,
          channelCount: 2,
          channelCountMode: "clamped-max",
          channelInterpretation: "speakers",
          disableNormalization: !1,
        },
        Kt = (t) => {
          const { port1: e, port2: n } = new MessageChannel();
          return new Promise((r) => {
            const i = () => {
              (n.onmessage = null), e.close(), n.close(), r();
            };
            n.onmessage = () => i();
            try {
              e.postMessage(t, [t]);
            } catch {
            } finally {
              i();
            }
          });
        },
        $t = {
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          delayTime: 0,
          maxDelayTime: 1,
        },
        Qt = (t, e, n) => {
          const r = e[n];
          if (void 0 === r) throw t();
          return r;
        },
        Jt = {
          attack: 0.003,
          channelCount: 2,
          channelCountMode: "clamped-max",
          channelInterpretation: "speakers",
          knee: 30,
          ratio: 12,
          release: 0.25,
          threshold: -24,
        },
        te = {
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          gain: 1,
        },
        ee = () => new DOMException("", "InvalidStateError"),
        ne = () => new DOMException("", "InvalidAccessError"),
        re = {
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
        },
        ie = (t, e, n, r, i, a, o, s, l, c, u) => {
          const d = c.length;
          let h = s;
          for (let f = 0; f < d; f += 1) {
            let s = n[0] * c[f];
            for (let e = 1; e < i; e += 1) {
              const r = (h - e) & (l - 1);
              (s += n[e] * a[r]), (s -= t[e] * o[r]);
            }
            for (let t = i; t < r; t += 1) s += n[t] * a[(h - t) & (l - 1)];
            for (let n = i; n < e; n += 1) s -= t[n] * o[(h - n) & (l - 1)];
            (a[h] = c[f]), (o[h] = s), (h = (h + 1) & (l - 1)), (u[f] = s);
          }
          return h;
        },
        ae = {
          channelCount: 2,
          channelCountMode: "explicit",
          channelInterpretation: "speakers",
        },
        oe = (t) => {
          const e = new Uint32Array([
            1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400,
            1048580, 1635017060, 4, 0,
          ]);
          try {
            const n = t.decodeAudioData(e.buffer, () => {});
            return void 0 !== n && (n.catch(() => {}), !0);
          } catch {}
          return !1;
        },
        se = { numberOfChannels: 1 },
        le = (t, e, n) => {
          const r = e[n];
          void 0 !== r && r !== t[n] && (t[n] = r);
        },
        ce = (t, e) => {
          le(t, e, "channelCount"),
            le(t, e, "channelCountMode"),
            le(t, e, "channelInterpretation");
        },
        ue = (t) => "function" === typeof t.getFloatTimeDomainData,
        de = (t, e, n) => {
          const r = e[n];
          void 0 !== r && r !== t[n].value && (t[n].value = r);
        },
        he = (t) => {
          var e;
          t.start =
            ((e = t.start),
            function () {
              let n =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 0,
                r =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0,
                i = arguments.length > 2 ? arguments[2] : void 0;
              if (("number" === typeof i && i < 0) || r < 0 || n < 0)
                throw new RangeError("The parameters can't be negative.");
              e.call(t, n, r, i);
            });
        },
        fe = (t) => {
          var e;
          t.stop =
            ((e = t.stop),
            function () {
              let n =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              if (n < 0)
                throw new RangeError("The parameter can't be negative.");
              e.call(t, n);
            });
        },
        pe = (t, e) =>
          null === t
            ? 512
            : Math.max(
                512,
                Math.min(16384, Math.pow(2, Math.round(Math.log2(t * e))))
              ),
        me = async (t, e) => {
          const n = await ((t) =>
            new Promise((e, n) => {
              const { port1: r, port2: i } = new MessageChannel();
              (r.onmessage = (t) => {
                let { data: n } = t;
                r.close(), i.close(), e(n);
              }),
                (r.onmessageerror = (t) => {
                  let { data: e } = t;
                  r.close(), i.close(), n(e);
                }),
                i.postMessage(t);
            }))(e);
          return new t(n);
        },
        ge = (t, e) => {
          const n = t.createBiquadFilter();
          return (
            ce(n, e),
            de(n, e, "Q"),
            de(n, e, "detune"),
            de(n, e, "frequency"),
            de(n, e, "gain"),
            le(n, e, "type"),
            n
          );
        },
        _e = (t, e) => {
          const n = t.createChannelSplitter(e.numberOfOutputs);
          return (
            ce(n, e),
            ((t) => {
              const e = t.numberOfOutputs;
              Object.defineProperty(t, "channelCount", {
                get: () => e,
                set: (t) => {
                  if (t !== e) throw ee();
                },
              }),
                Object.defineProperty(t, "channelCountMode", {
                  get: () => "explicit",
                  set: (t) => {
                    if ("explicit" !== t) throw ee();
                  },
                }),
                Object.defineProperty(t, "channelInterpretation", {
                  get: () => "discrete",
                  set: (t) => {
                    if ("discrete" !== t) throw ee();
                  },
                });
            })(n),
            n
          );
        },
        ve = (t, e) => (
          (t.connect = e.connect.bind(e)),
          (t.disconnect = e.disconnect.bind(e)),
          t
        ),
        be = (t, e) => {
          const n = t.createDelay(e.maxDelayTime);
          return ce(n, e), de(n, e, "delayTime"), n;
        },
        ye = (t, e) => {
          const n = t.createGain();
          return ce(n, e), de(n, e, "gain"), n;
        };
      function xe(t, e) {
        const n = e[0] * e[0] + e[1] * e[1];
        return [
          (t[0] * e[0] + t[1] * e[1]) / n,
          (t[1] * e[0] - t[0] * e[1]) / n,
        ];
      }
      function we(t, e) {
        let n = [0, 0];
        for (let a = t.length - 1; a >= 0; a -= 1)
          (i = e),
            (n = [(r = n)[0] * i[0] - r[1] * i[1], r[0] * i[1] + r[1] * i[0]]),
            (n[0] += t[a]);
        var r, i;
        return n;
      }
      const Me = (t, e, n, r) => t.createScriptProcessor(e, n, r),
        Se = () => new DOMException("", "NotSupportedError"),
        Ae = { numberOfChannels: 1 },
        Ee = {
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          detune: 0,
          frequency: 440,
          periodicWave: void 0,
          type: "sine",
        },
        ke = {
          channelCount: 2,
          channelCountMode: "clamped-max",
          channelInterpretation: "speakers",
          coneInnerAngle: 360,
          coneOuterAngle: 360,
          coneOuterGain: 0,
          distanceModel: "inverse",
          maxDistance: 1e4,
          orientationX: 1,
          orientationY: 0,
          orientationZ: 0,
          panningModel: "equalpower",
          positionX: 0,
          positionY: 0,
          positionZ: 0,
          refDistance: 1,
          rolloffFactor: 1,
        },
        Re = { disableNormalization: !1 },
        Te = {
          channelCount: 2,
          channelCountMode: "explicit",
          channelInterpretation: "speakers",
          pan: 0,
        },
        Oe = () => new DOMException("", "UnknownError"),
        Pe = {
          channelCount: 2,
          channelCountMode: "max",
          channelInterpretation: "speakers",
          curve: null,
          oversample: "none",
        },
        Ce = (t, e, n) =>
          void 0 === t.copyFromChannel
            ? t.getChannelData(n)[0]
            : (t.copyFromChannel(e, n), e[0]),
        De = (t) => {
          if (null === t) return !1;
          const e = t.length;
          return e % 2 !== 0
            ? 0 !== t[Math.floor(e / 2)]
            : t[e / 2 - 1] + t[e / 2] !== 0;
        },
        Ie = (t, e, n, r) => {
          let i = t;
          for (; !i.hasOwnProperty(e); ) i = Object.getPrototypeOf(i);
          const { get: a, set: o } = Object.getOwnPropertyDescriptor(i, e);
          Object.defineProperty(t, e, { get: n(a), set: r(o) });
        },
        Be = (t, e, n) => {
          try {
            t.setValueAtTime(e, n);
          } catch (r) {
            if (9 !== r.code) throw r;
            Be(t, e, n + 1e-7);
          }
        },
        Ne = (t) => {
          const e = t.createOscillator();
          try {
            e.start(-1);
          } catch (n) {
            return n instanceof RangeError;
          }
          return !1;
        },
        Le = (t) => {
          const e = t.createBuffer(1, 1, 44100),
            n = t.createBufferSource();
          (n.buffer = e), n.start(), n.stop();
          try {
            return n.stop(), !0;
          } catch {
            return !1;
          }
        },
        Ve = (t) => {
          const e = t.createOscillator();
          try {
            e.stop(-1);
          } catch (n) {
            return n instanceof RangeError;
          }
          return !1;
        },
        Fe = (t, e) => {
          const n = e.createGain();
          t.connect(n);
          const r = ((e) => () => {
            e.call(t, n), t.removeEventListener("ended", r);
          })(t.disconnect);
          t.addEventListener("ended", r),
            ve(t, n),
            (t.stop = ((e) => {
              let r = !1;
              return function () {
                let i =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 0;
                if (r)
                  try {
                    e.call(t, i);
                  } catch {
                    n.gain.setValueAtTime(0, i);
                  }
                else e.call(t, i), (r = !0);
              };
            })(t.stop));
        },
        He = (t, e) => (n) => {
          const r = { value: t };
          return (
            Object.defineProperties(n, { currentTarget: r, target: r }),
            "function" === typeof e ? e.call(t, n) : e.handleEvent.call(t, n)
          );
        },
        je = ((t) => (e, n, r, i) => {
          let [a, o, s] = r;
          t(e[o], [n, a, s], (t) => t[0] === n && t[1] === a, i);
        })(bt),
        Ye = ((t) => (e, n, r, i) => {
          let [a, o, s] = r;
          const l = e.get(a);
          void 0 === l
            ? e.set(a, new Set([[o, n, s]]))
            : t(l, [o, n, s], (t) => t[0] === o && t[1] === n, i);
        })(bt),
        We = (
          (t) => (e, n, r, i) =>
            t(e[i], (t) => t[0] === n && t[1] === r)
        )(Z),
        Ue = new WeakMap(),
        ze = ((t) => (e) => {
          var n;
          return null !== (n = t.get(e)) && void 0 !== n ? n : 0;
        })(Ue),
        Ge =
          ((qe = new Map()),
          (Xe = new WeakMap()),
          (t, e) => {
            const n = Xe.get(t);
            if (void 0 !== n) return n;
            const r = qe.get(t);
            if (void 0 !== r) return r;
            try {
              const n = e();
              return n instanceof Promise
                ? (qe.set(t, n),
                  n
                    .catch(() => !1)
                    .then((e) => (qe.delete(t), Xe.set(t, e), e)))
                : (Xe.set(t, n), n);
            } catch {
              return Xe.set(t, !1), !1;
            }
          });
      var qe, Xe;
      const Ze = "undefined" === typeof window ? null : window,
        Ke = ((t, e) => (n, r) => {
          const i = n.createAnalyser();
          if ((ce(i, r), !(r.maxDecibels > r.minDecibels))) throw e();
          return (
            le(i, r, "fftSize"),
            le(i, r, "maxDecibels"),
            le(i, r, "minDecibels"),
            le(i, r, "smoothingTimeConstant"),
            t(ue, () => ue(i)) ||
              ((t) => {
                t.getFloatTimeDomainData = (e) => {
                  const n = new Uint8Array(e.length);
                  t.getByteTimeDomainData(n);
                  const r = Math.max(n.length, t.fftSize);
                  for (let t = 0; t < r; t += 1)
                    e[t] = 0.0078125 * (n[t] - 128);
                  return e;
                };
              })(i),
            i
          );
        })(Ge, at),
        $e = ((t) => (e) => {
          const n = t(e);
          if (null === n.renderer)
            throw new Error(
              "Missing the renderer of the given AudioNode in the audio graph."
            );
          return n.renderer;
        })(ht),
        Qe = ((t, e, n) => async (r, i, a) => {
          const o = t(r);
          await Promise.all(
            o.activeInputs
              .map((t, o) =>
                Array.from(t).map(async (t) => {
                  let [s, l] = t;
                  const c = e(s),
                    u = await c.render(s, i),
                    d = r.context.destination;
                  n(s) || (r === d && n(r)) || u.connect(a, l, o);
                })
              )
              .reduce((t, e) => [...t, ...e], [])
          );
        })(ht, $e, Ot),
        Je = ((t, e, n) => () => {
          const r = new WeakMap();
          return {
            render(i, a) {
              const o = r.get(a);
              return void 0 !== o
                ? Promise.resolve(o)
                : (async (i, a) => {
                    let o = e(i);
                    if (!rt(o, a)) {
                      const e = {
                        channelCount: o.channelCount,
                        channelCountMode: o.channelCountMode,
                        channelInterpretation: o.channelInterpretation,
                        fftSize: o.fftSize,
                        maxDecibels: o.maxDecibels,
                        minDecibels: o.minDecibels,
                        smoothingTimeConstant: o.smoothingTimeConstant,
                      };
                      o = t(a, e);
                    }
                    return r.set(a, o), await n(i, a, o), o;
                  })(i, a);
            },
          };
        })(Ke, Rt, Qe),
        tn =
          ((en = V),
          (t) => {
            const e = en.get(t);
            if (void 0 === e) throw ee();
            return e;
          });
      var en;
      const nn = ((t) =>
          null === t
            ? null
            : t.hasOwnProperty("OfflineAudioContext")
            ? t.OfflineAudioContext
            : t.hasOwnProperty("webkitOfflineAudioContext")
            ? t.webkitOfflineAudioContext
            : null)(Ze),
        rn = (
          (t) => (e) =>
            null !== t && e instanceof t
        )(nn),
        an = new WeakMap(),
        on = ((t) =>
          class {
            constructor(t) {
              (this._nativeEventTarget = t), (this._listeners = new WeakMap());
            }
            addEventListener(e, n, r) {
              if (null !== n) {
                let i = this._listeners.get(n);
                void 0 === i &&
                  ((i = t(this, n)),
                  "function" === typeof n && this._listeners.set(n, i)),
                  this._nativeEventTarget.addEventListener(e, i, r);
              }
            }
            dispatchEvent(t) {
              return this._nativeEventTarget.dispatchEvent(t);
            }
            removeEventListener(t, e, n) {
              const r = null === e ? void 0 : this._listeners.get(e);
              this._nativeEventTarget.removeEventListener(
                t,
                void 0 === r ? null : r,
                n
              );
            }
          })(He),
        sn = ((t) =>
          null === t
            ? null
            : t.hasOwnProperty("AudioContext")
            ? t.AudioContext
            : t.hasOwnProperty("webkitAudioContext")
            ? t.webkitAudioContext
            : null)(Ze),
        ln = (
          (t) => (e) =>
            null !== t && e instanceof t
        )(sn),
        cn = (
          (t) => (e) =>
            null !== t &&
            "function" === typeof t.AudioNode &&
            e instanceof t.AudioNode
        )(Ze),
        un = (
          (t) => (e) =>
            null !== t &&
            "function" === typeof t.AudioParam &&
            e instanceof t.AudioParam
        )(Ze),
        dn = ((t) =>
          null === t
            ? null
            : t.hasOwnProperty("AudioWorkletNode")
            ? t.AudioWorkletNode
            : null)(Ze),
        hn = ((t, e, n, r, i, a, o, s, l, c, u, d, h, f, p, m) =>
          class extends c {
            constructor(e, r, i, a) {
              super(i), (this._context = e), (this._nativeAudioNode = i);
              const o = u(e);
              d(o) && !0 !== n(Ct, () => Ct(o, m)) && Bt(i),
                B.set(this, i),
                F.set(this, new Set()),
                "closed" !== e.state && r && Q(this),
                t(this, a, i);
            }
            get channelCount() {
              return this._nativeAudioNode.channelCount;
            }
            set channelCount(t) {
              this._nativeAudioNode.channelCount = t;
            }
            get channelCountMode() {
              return this._nativeAudioNode.channelCountMode;
            }
            set channelCountMode(t) {
              this._nativeAudioNode.channelCountMode = t;
            }
            get channelInterpretation() {
              return this._nativeAudioNode.channelInterpretation;
            }
            set channelInterpretation(t) {
              this._nativeAudioNode.channelInterpretation = t;
            }
            get context() {
              return this._context;
            }
            get numberOfInputs() {
              return this._nativeAudioNode.numberOfInputs;
            }
            get numberOfOutputs() {
              return this._nativeAudioNode.numberOfOutputs;
            }
            connect(t) {
              let n =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0,
                s =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 0;
              if (n < 0 || n >= this._nativeAudioNode.numberOfOutputs)
                throw i();
              const c = u(this._context),
                d = p(c);
              if (h(t) || f(t)) throw a();
              if (_t(t)) {
                const i = Rt(t);
                try {
                  const e = Mt(this._nativeAudioNode, i, n, s),
                    r = Pt(this);
                  (d || r) && this._nativeAudioNode.disconnect(...e),
                    "closed" !== this.context.state && !r && Pt(t) && Q(t);
                } catch (g) {
                  if (12 === g.code) throw a();
                  throw g;
                }
                if (e(this, t, n, s, d)) {
                  const e = l([this], t);
                  Dt(e, r(d));
                }
                return t;
              }
              const m = Tt(t);
              if ("playbackRate" === m.name && 1024 === m.maxValue) throw o();
              try {
                this._nativeAudioNode.connect(m, n),
                  (d || Pt(this)) && this._nativeAudioNode.disconnect(m, n);
              } catch (g) {
                if (12 === g.code) throw a();
                throw g;
              }
              if (Nt(this, t, n, d)) {
                const e = l([this], t);
                Dt(e, r(d));
              }
            }
            disconnect(t, e, n) {
              let r;
              const o = u(this._context),
                c = p(o);
              if (void 0 === t)
                r = ((t, e) => {
                  const n = ht(t),
                    r = [];
                  for (const i of n.outputs)
                    vt(i) ? Lt(t, e, ...i) : Vt(t, e, ...i), r.push(i[0]);
                  return n.outputs.clear(), r;
                })(this, c);
              else if ("number" === typeof t) {
                if (t < 0 || t >= this.numberOfOutputs) throw i();
                r = ((t, e, n) => {
                  const r = ht(t),
                    i = [];
                  for (const a of r.outputs)
                    a[1] === n &&
                      (vt(a) ? Lt(t, e, ...a) : Vt(t, e, ...a),
                      i.push(a[0]),
                      r.outputs.delete(a));
                  return i;
                })(this, c, t);
              } else {
                if (void 0 !== e && (e < 0 || e >= this.numberOfOutputs))
                  throw i();
                if (_t(t) && void 0 !== n && (n < 0 || n >= t.numberOfInputs))
                  throw i();
                if (
                  ((r = ((t, e, n, r, i) => {
                    const a = ht(t);
                    return Array.from(a.outputs)
                      .filter(
                        (t) =>
                          t[0] === n &&
                          (void 0 === r || t[1] === r) &&
                          (void 0 === i || t[2] === i)
                      )
                      .map(
                        (n) => (
                          vt(n) ? Lt(t, e, ...n) : Vt(t, e, ...n),
                          a.outputs.delete(n),
                          n[0]
                        )
                      );
                  })(this, c, t, e, n)),
                  0 === r.length)
                )
                  throw a();
              }
              for (const i of r) {
                const t = l([this], i);
                Dt(t, s);
              }
            }
          })(
          ((fn = I),
          (t, e, n) => {
            const r = [];
            for (let i = 0; i < n.numberOfInputs; i += 1) r.push(new Set());
            fn.set(t, {
              activeInputs: r,
              outputs: new Set(),
              passiveInputs: new WeakMap(),
              renderer: e,
            });
          }),
          ((t, e, n, r, i, a, o, s, l, c, u, d, h) => {
            const f = new WeakMap();
            return (p, m, g, _, v) => {
              const { activeInputs: b, passiveInputs: y } = a(m),
                { outputs: x } = a(p),
                w = s(p),
                M = (a) => {
                  const s = l(m),
                    c = l(p);
                  if (a) {
                    const e = K(y, p, g, _);
                    t(b, p, e, !1), v || d(p) || n(c, s, g, _), h(m) && Q(m);
                  } else {
                    const t = r(b, p, g, _);
                    e(y, _, t, !1), v || d(p) || i(c, s, g, _);
                    const n = o(m);
                    if (0 === n) u(m) && et(m, b);
                    else {
                      const t = f.get(m);
                      void 0 !== t && clearTimeout(t),
                        f.set(
                          m,
                          setTimeout(() => {
                            u(m) && et(m, b);
                          }, 1e3 * n)
                        );
                    }
                  }
                };
              return (
                !!c(
                  x,
                  [m, g, _],
                  (t) => t[0] === m && t[1] === g && t[2] === _,
                  !0
                ) &&
                (w.add(M),
                u(p) ? t(b, p, [g, _, M], !0) : e(y, _, [p, g, M], !0),
                !0)
              );
            };
          })(je, Ye, Mt, We, kt, ht, ze, $, Rt, bt, ut, Ot, Pt),
          Ge,
          ((t, e, n, r, i, a) => (o) => (s, l) => {
            const c = t.get(s);
            if (void 0 === c) {
              if (!o && a(s)) {
                const t = r(s),
                  { outputs: a } = n(s);
                for (const n of a)
                  if (vt(n)) {
                    const i = r(n[0]);
                    e(t, i, n[1], n[2]);
                  } else {
                    const e = i(n[0]);
                    t.disconnect(e, n[1]);
                  }
              }
              t.set(s, l);
            } else t.set(s, c + l);
          })(H, kt, ht, Rt, Tt, ut),
          at,
          ne,
          Se,
          ((t, e, n, r, i, a, o, s) => (l, c) => {
            const u = e.get(l);
            if (void 0 === u)
              throw new Error("Missing the expected cycle count.");
            const d = a(l.context),
              h = s(d);
            if (u === c) {
              if ((e.delete(l), !h && o(l))) {
                const e = r(l),
                  { outputs: a } = n(l);
                for (const n of a)
                  if (vt(n)) {
                    const i = r(n[0]);
                    t(e, i, n[1], n[2]);
                  } else {
                    const t = i(n[0]);
                    e.connect(t, n[1]);
                  }
              }
            } else e.set(l, u - c);
          })(Mt, H, ht, Rt, Tt, tn, ut, rn),
          ((t, e, n) =>
            function r(i, a) {
              const o = _t(a) ? a : n(t, a);
              if (((t) => "delayTime" in t)(o)) return [];
              if (i[0] === o) return [i];
              if (i.includes(o)) return [];
              const { outputs: s } = e(o);
              return Array.from(s)
                .map((t) => r([...i, o], t[0]))
                .reduce((t, e) => t.concat(e), []);
            })(an, ht, X),
          on,
          tn,
          ln,
          cn,
          un,
          rn,
          dn
        );
      var fn;
      const pn = ((t, e, n, r, i, a) =>
          class extends t {
            constructor(t, n) {
              const o = i(t),
                s = { ...nt, ...n },
                l = r(o, s);
              super(t, !1, l, a(o) ? e() : null),
                (this._nativeAnalyserNode = l);
            }
            get fftSize() {
              return this._nativeAnalyserNode.fftSize;
            }
            set fftSize(t) {
              this._nativeAnalyserNode.fftSize = t;
            }
            get frequencyBinCount() {
              return this._nativeAnalyserNode.frequencyBinCount;
            }
            get maxDecibels() {
              return this._nativeAnalyserNode.maxDecibels;
            }
            set maxDecibels(t) {
              const e = this._nativeAnalyserNode.maxDecibels;
              if (
                ((this._nativeAnalyserNode.maxDecibels = t),
                !(t > this._nativeAnalyserNode.minDecibels))
              )
                throw ((this._nativeAnalyserNode.maxDecibels = e), n());
            }
            get minDecibels() {
              return this._nativeAnalyserNode.minDecibels;
            }
            set minDecibels(t) {
              const e = this._nativeAnalyserNode.minDecibels;
              if (
                ((this._nativeAnalyserNode.minDecibels = t),
                !(this._nativeAnalyserNode.maxDecibels > t))
              )
                throw ((this._nativeAnalyserNode.minDecibels = e), n());
            }
            get smoothingTimeConstant() {
              return this._nativeAnalyserNode.smoothingTimeConstant;
            }
            set smoothingTimeConstant(t) {
              this._nativeAnalyserNode.smoothingTimeConstant = t;
            }
            getByteFrequencyData(t) {
              this._nativeAnalyserNode.getByteFrequencyData(t);
            }
            getByteTimeDomainData(t) {
              this._nativeAnalyserNode.getByteTimeDomainData(t);
            }
            getFloatFrequencyData(t) {
              this._nativeAnalyserNode.getFloatFrequencyData(t);
            }
            getFloatTimeDomainData(t) {
              this._nativeAnalyserNode.getFloatTimeDomainData(t);
            }
          })(hn, Je, at, Ke, tn, rn),
        mn = new WeakSet(),
        gn = ((t) =>
          null === t
            ? null
            : t.hasOwnProperty("AudioBuffer")
            ? t.AudioBuffer
            : null)(Ze),
        _n = ((vn = new Uint32Array(1)), (t) => ((vn[0] = t), vn[0]));
      var vn;
      const bn = ((t, e) => (n) => {
          (n.copyFromChannel = function (r, i) {
            const a = t(
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0
              ),
              o = t(i);
            if (o >= n.numberOfChannels) throw e();
            const s = n.length,
              l = n.getChannelData(o),
              c = r.length;
            for (let t = a < 0 ? -a : 0; t + a < s && t < c; t += 1)
              r[t] = l[t + a];
          }),
            (n.copyToChannel = function (r, i) {
              const a = t(
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 0
                ),
                o = t(i);
              if (o >= n.numberOfChannels) throw e();
              const s = n.length,
                l = n.getChannelData(o),
                c = r.length;
              for (let t = a < 0 ? -a : 0; t + a < s && t < c; t += 1)
                l[t + a] = r[t];
            });
        })(_n, at),
        yn = ((t) => (e) => {
          (e.copyFromChannel = ((n) =>
            function (r, i) {
              const a = t(
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 0
                ),
                o = t(i);
              if (a < e.length) return n.call(e, r, o, a);
            })(e.copyFromChannel)),
            (e.copyToChannel = ((n) =>
              function (r, i) {
                const a = t(
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0
                  ),
                  o = t(i);
                if (a < e.length) return n.call(e, r, o, a);
              })(e.copyToChannel));
        })(_n),
        xn = ((t, e, n, r, i, a, o, s) => {
          let l = null;
          return class c {
            constructor(c) {
              if (null === i)
                throw new Error(
                  "Missing the native OfflineAudioContext constructor."
                );
              const {
                length: u,
                numberOfChannels: d,
                sampleRate: h,
              } = { ...st, ...c };
              null === l && (l = new i(1, 1, 44100));
              const f =
                null !== r && e(a, a)
                  ? new r({ length: u, numberOfChannels: d, sampleRate: h })
                  : l.createBuffer(d, u, h);
              if (0 === f.numberOfChannels) throw n();
              return (
                "function" !== typeof f.copyFromChannel
                  ? (o(f), ot(f))
                  : e(it, () => it(f)) || s(f),
                t.add(f),
                f
              );
            }
            static [Symbol.hasInstance](e) {
              return (
                (null !== e &&
                  "object" === typeof e &&
                  Object.getPrototypeOf(e) === c.prototype) ||
                t.has(e)
              );
            }
          };
        })(
          mn,
          Ge,
          Se,
          gn,
          nn,
          ((t) => () => {
            if (null === t) return !1;
            try {
              new t({ length: 1, sampleRate: 44100 });
            } catch {
              return !1;
            }
            return !0;
          })(gn),
          bn,
          yn
        ),
        wn = ((t) => (e, n) => {
          const r = t(e, {
            channelCount: 1,
            channelCountMode: "explicit",
            channelInterpretation: "discrete",
            gain: 0,
          });
          n.connect(r).connect(e.destination);
          const i = () => {
            n.removeEventListener("ended", i), n.disconnect(r), r.disconnect();
          };
          n.addEventListener("ended", i);
        })(ye),
        Mn = ((t, e, n) => async (r, i, a) => {
          const o = e(r);
          await Promise.all(
            Array.from(o.activeInputs).map(async (e) => {
              let [r, o] = e;
              const s = t(r),
                l = await s.render(r, i);
              n(r) || l.connect(a, o);
            })
          );
        })($e, ft, Ot),
        Sn = (
          (t) => (e, n, r) =>
            t(n, e, r)
        )(Mn),
        An = ((t, e, n, r, i, a, o, s, l, c, u) => (d, h) => {
          const f = d.createBufferSource();
          return (
            ce(f, h),
            de(f, h, "playbackRate"),
            le(f, h, "buffer"),
            le(f, h, "loop"),
            le(f, h, "loopEnd"),
            le(f, h, "loopStart"),
            e(n, () => n(d)) ||
              ((t) => {
                t.start = ((e) => {
                  let n = !1;
                  return function () {
                    let r =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : 0,
                      i =
                        arguments.length > 1 && void 0 !== arguments[1]
                          ? arguments[1]
                          : 0,
                      a = arguments.length > 2 ? arguments[2] : void 0;
                    if (n) throw ee();
                    e.call(t, r, i, a), (n = !0);
                  };
                })(t.start);
              })(f),
            e(r, () => r(d)) || l(f),
            e(i, () => i(d)) || c(f, d),
            e(a, () => a(d)) || he(f),
            e(o, () => o(d)) || u(f, d),
            e(s, () => s(d)) || fe(f),
            t(d, f),
            f
          );
        })(
          wn,
          Ge,
          (t) => {
            const e = t.createBufferSource();
            e.start();
            try {
              e.start();
            } catch {
              return !0;
            }
            return !1;
          },
          (t) => {
            const e = t.createBufferSource(),
              n = t.createBuffer(1, 1, 44100);
            e.buffer = n;
            try {
              e.start(0, 1);
            } catch {
              return !1;
            }
            return !0;
          },
          (t) => {
            const e = t.createBufferSource();
            e.start();
            try {
              e.stop();
            } catch {
              return !1;
            }
            return !0;
          },
          Ne,
          Le,
          Ve,
          (t) => {
            var e;
            t.start =
              ((e = t.start),
              function () {
                let n =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : 0,
                  r =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0,
                  i = arguments.length > 2 ? arguments[2] : void 0;
                const a = t.buffer,
                  o = null === a ? r : Math.min(a.duration, r);
                null !== a && o > a.duration - 0.5 / t.context.sampleRate
                  ? e.call(t, n, 0, 0)
                  : e.call(t, n, o, i);
              });
          },
          ((t) => (e, n) => {
            const r = n.createBuffer(1, 1, 44100);
            null === e.buffer && (e.buffer = r),
              t(
                e,
                "buffer",
                (t) => () => {
                  const n = t.call(e);
                  return n === r ? null : n;
                },
                (t) => (n) => t.call(e, null === n ? r : n)
              );
          })(Ie),
          Fe
        ),
        En = ((t, e) => (n, r, i) => (t(r).replay(i), e(r, n, i)))(
          ((t) => (e) => {
            const n = t(e);
            if (null === n.renderer)
              throw new Error(
                "Missing the renderer of the given AudioParam in the audio graph."
              );
            return n.renderer;
          })(ft),
          Mn
        ),
        kn = ((t, e, n, r, i) => () => {
          const a = new WeakMap();
          let o = null,
            s = null;
          return {
            set start(t) {
              o = t;
            },
            set stop(t) {
              s = t;
            },
            render(l, c) {
              const u = a.get(c);
              return void 0 !== u
                ? Promise.resolve(u)
                : (async (l, c) => {
                    let u = n(l);
                    const d = rt(u, c);
                    if (!d) {
                      const t = {
                        buffer: u.buffer,
                        channelCount: u.channelCount,
                        channelCountMode: u.channelCountMode,
                        channelInterpretation: u.channelInterpretation,
                        loop: u.loop,
                        loopEnd: u.loopEnd,
                        loopStart: u.loopStart,
                        playbackRate: u.playbackRate.value,
                      };
                      (u = e(c, t)),
                        null !== o && u.start(...o),
                        null !== s && u.stop(s);
                    }
                    return (
                      a.set(c, u),
                      d
                        ? await t(c, l.playbackRate, u.playbackRate)
                        : await r(c, l.playbackRate, u.playbackRate),
                      await i(l, c, u),
                      u
                    );
                  })(l, c);
            },
          };
        })(Sn, An, Rt, En, Qe),
        Rn = ((t, e, n, r, i, a, o, s, l, c, u, d, h) =>
          function (f, p, m) {
            let g =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : null,
              _ =
                arguments.length > 4 && void 0 !== arguments[4]
                  ? arguments[4]
                  : null;
            const v = m.value,
              b = new C.AutomationEventList(v),
              y = p ? r(b) : null,
              x = {
                get defaultValue() {
                  return v;
                },
                get maxValue() {
                  return null === g ? m.maxValue : g;
                },
                get minValue() {
                  return null === _ ? m.minValue : _;
                },
                get value() {
                  return m.value;
                },
                set value(t) {
                  (m.value = t), x.setValueAtTime(t, f.context.currentTime);
                },
                cancelAndHoldAtTime(t) {
                  if ("function" === typeof m.cancelAndHoldAtTime)
                    null === y && b.flush(f.context.currentTime),
                      b.add(i(t)),
                      m.cancelAndHoldAtTime(t);
                  else {
                    const e = Array.from(b).pop();
                    null === y && b.flush(f.context.currentTime), b.add(i(t));
                    const n = Array.from(b).pop();
                    m.cancelScheduledValues(t),
                      e !== n &&
                        void 0 !== n &&
                        ("exponentialRampToValue" === n.type
                          ? m.exponentialRampToValueAtTime(n.value, n.endTime)
                          : "linearRampToValue" === n.type
                          ? m.linearRampToValueAtTime(n.value, n.endTime)
                          : "setValue" === n.type
                          ? m.setValueAtTime(n.value, n.startTime)
                          : "setValueCurve" === n.type &&
                            m.setValueCurveAtTime(
                              n.values,
                              n.startTime,
                              n.duration
                            ));
                  }
                  return x;
                },
                cancelScheduledValues: (t) => (
                  null === y && b.flush(f.context.currentTime),
                  b.add(a(t)),
                  m.cancelScheduledValues(t),
                  x
                ),
                exponentialRampToValueAtTime(t, e) {
                  if (0 === t) throw new RangeError();
                  if (!Number.isFinite(e) || e < 0) throw new RangeError();
                  const n = f.context.currentTime;
                  return (
                    null === y && b.flush(n),
                    0 === Array.from(b).length &&
                      (b.add(c(v, n)), m.setValueAtTime(v, n)),
                    b.add(o(t, e)),
                    m.exponentialRampToValueAtTime(t, e),
                    x
                  );
                },
                linearRampToValueAtTime(t, e) {
                  const n = f.context.currentTime;
                  return (
                    null === y && b.flush(n),
                    0 === Array.from(b).length &&
                      (b.add(c(v, n)), m.setValueAtTime(v, n)),
                    b.add(s(t, e)),
                    m.linearRampToValueAtTime(t, e),
                    x
                  );
                },
                setTargetAtTime: (t, e, n) => (
                  null === y && b.flush(f.context.currentTime),
                  b.add(l(t, e, n)),
                  m.setTargetAtTime(t, e, n),
                  x
                ),
                setValueAtTime: (t, e) => (
                  null === y && b.flush(f.context.currentTime),
                  b.add(c(t, e)),
                  m.setValueAtTime(t, e),
                  x
                ),
                setValueCurveAtTime(t, e, n) {
                  const r = t instanceof Float32Array ? t : new Float32Array(t);
                  if (null !== d && "webkitAudioContext" === d.name) {
                    const t = e + n,
                      i = f.context.sampleRate,
                      a = Math.ceil(e * i),
                      o = Math.floor(t * i),
                      s = o - a,
                      l = new Float32Array(s);
                    for (let u = 0; u < s; u += 1) {
                      const t = ((r.length - 1) / n) * ((a + u) / i - e),
                        o = Math.floor(t),
                        s = Math.ceil(t);
                      l[u] =
                        o === s
                          ? r[o]
                          : (1 - (t - o)) * r[o] + (1 - (s - t)) * r[s];
                    }
                    null === y && b.flush(f.context.currentTime),
                      b.add(u(l, e, n)),
                      m.setValueCurveAtTime(l, e, n);
                    const c = o / i;
                    c < t && h(x, l[l.length - 1], c), h(x, r[r.length - 1], t);
                  } else
                    null === y && b.flush(f.context.currentTime),
                      b.add(u(r, e, n)),
                      m.setValueCurveAtTime(r, e, n);
                  return x;
                },
              };
            return n.set(x, m), e.set(x, f), t(x, y), x;
          })(
          ((Tn = N),
          (t, e) => {
            Tn.set(t, {
              activeInputs: new Set(),
              passiveInputs: new WeakMap(),
              renderer: e,
            });
          }),
          an,
          L,
          (t) => ({
            replay(e) {
              for (const n of t)
                if ("exponentialRampToValue" === n.type) {
                  const { endTime: t, value: r } = n;
                  e.exponentialRampToValueAtTime(r, t);
                } else if ("linearRampToValue" === n.type) {
                  const { endTime: t, value: r } = n;
                  e.linearRampToValueAtTime(r, t);
                } else if ("setTarget" === n.type) {
                  const { startTime: t, target: r, timeConstant: i } = n;
                  e.setTargetAtTime(r, t, i);
                } else if ("setValue" === n.type) {
                  const { startTime: t, value: r } = n;
                  e.setValueAtTime(r, t);
                } else {
                  if ("setValueCurve" !== n.type)
                    throw new Error("Can't apply an unknown automation.");
                  {
                    const { duration: t, startTime: r, values: i } = n;
                    e.setValueCurveAtTime(i, r, t);
                  }
                }
            },
          }),
          C.createCancelAndHoldAutomationEvent,
          C.createCancelScheduledValuesAutomationEvent,
          C.createExponentialRampToValueAutomationEvent,
          C.createLinearRampToValueAutomationEvent,
          C.createSetTargetAutomationEvent,
          C.createSetValueAutomationEvent,
          C.createSetValueCurveAutomationEvent,
          sn,
          Be
        );
      var Tn;
      const On = ((t, e, n, r, i, a, o, s) =>
          class extends t {
            constructor(t, r) {
              const s = a(t),
                l = { ...dt, ...r },
                c = i(s, l),
                u = o(s),
                d = u ? e() : null;
              super(t, !1, c, d),
                (this._audioBufferSourceNodeRenderer = d),
                (this._isBufferNullified = !1),
                (this._isBufferSet = null !== l.buffer),
                (this._nativeAudioBufferSourceNode = c),
                (this._onended = null),
                (this._playbackRate = n(this, u, c.playbackRate, ct, lt));
            }
            get buffer() {
              return this._isBufferNullified
                ? null
                : this._nativeAudioBufferSourceNode.buffer;
            }
            set buffer(t) {
              if (
                ((this._nativeAudioBufferSourceNode.buffer = t), null !== t)
              ) {
                if (this._isBufferSet) throw r();
                this._isBufferSet = !0;
              }
            }
            get loop() {
              return this._nativeAudioBufferSourceNode.loop;
            }
            set loop(t) {
              this._nativeAudioBufferSourceNode.loop = t;
            }
            get loopEnd() {
              return this._nativeAudioBufferSourceNode.loopEnd;
            }
            set loopEnd(t) {
              this._nativeAudioBufferSourceNode.loopEnd = t;
            }
            get loopStart() {
              return this._nativeAudioBufferSourceNode.loopStart;
            }
            set loopStart(t) {
              this._nativeAudioBufferSourceNode.loopStart = t;
            }
            get onended() {
              return this._onended;
            }
            set onended(t) {
              const e = "function" === typeof t ? s(this, t) : null;
              this._nativeAudioBufferSourceNode.onended = e;
              const n = this._nativeAudioBufferSourceNode.onended;
              this._onended = null !== n && n === e ? t : n;
            }
            get playbackRate() {
              return this._playbackRate;
            }
            start() {
              let t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 0,
                e =
                  arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : 0,
                n = arguments.length > 2 ? arguments[2] : void 0;
              if (
                (this._nativeAudioBufferSourceNode.start(t, e, n),
                null !== this._audioBufferSourceNodeRenderer &&
                  (this._audioBufferSourceNodeRenderer.start =
                    void 0 === n ? [t, e] : [t, e, n]),
                "closed" !== this.context.state)
              ) {
                Q(this);
                const t = () => {
                  this._nativeAudioBufferSourceNode.removeEventListener(
                    "ended",
                    t
                  ),
                    ut(this) && tt(this);
                };
                this._nativeAudioBufferSourceNode.addEventListener("ended", t);
              }
            }
            stop() {
              let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              this._nativeAudioBufferSourceNode.stop(t),
                null !== this._audioBufferSourceNodeRenderer &&
                  (this._audioBufferSourceNodeRenderer.stop = t);
            }
          })(hn, kn, Rn, ee, An, tn, rn, He),
        Pn = ((t, e, n, r, i, a, o, s) =>
          class extends t {
            constructor(t, n) {
              const r = a(t),
                l = o(r),
                c = i(r, n, l);
              super(t, !1, c, l ? e(s) : null),
                (this._isNodeOfNativeOfflineAudioContext = l),
                (this._nativeAudioDestinationNode = c);
            }
            get channelCount() {
              return this._nativeAudioDestinationNode.channelCount;
            }
            set channelCount(t) {
              if (this._isNodeOfNativeOfflineAudioContext) throw r();
              if (t > this._nativeAudioDestinationNode.maxChannelCount)
                throw n();
              this._nativeAudioDestinationNode.channelCount = t;
            }
            get channelCountMode() {
              return this._nativeAudioDestinationNode.channelCountMode;
            }
            set channelCountMode(t) {
              if (this._isNodeOfNativeOfflineAudioContext) throw r();
              this._nativeAudioDestinationNode.channelCountMode = t;
            }
            get maxChannelCount() {
              return this._nativeAudioDestinationNode.maxChannelCount;
            }
          })(
          hn,
          (t) => {
            const e = new WeakMap();
            return {
              render(n, r) {
                const i = e.get(r);
                return void 0 !== i
                  ? Promise.resolve(i)
                  : (async (n, r) => {
                      const i = r.destination;
                      return e.set(r, i), await t(n, r, i), i;
                    })(n, r);
              },
            };
          },
          at,
          ee,
          ((t, e) => (n, r, i) => {
            const a = n.destination;
            if (a.channelCount !== r)
              try {
                a.channelCount = r;
              } catch {}
            i &&
              "explicit" !== a.channelCountMode &&
              (a.channelCountMode = "explicit"),
              0 === a.maxChannelCount &&
                Object.defineProperty(a, "maxChannelCount", { value: r });
            const o = t(n, {
              channelCount: r,
              channelCountMode: a.channelCountMode,
              channelInterpretation: a.channelInterpretation,
              gain: 1,
            });
            return (
              e(
                o,
                "channelCount",
                (t) => () => t.call(o),
                (t) => (e) => {
                  t.call(o, e);
                  try {
                    a.channelCount = e;
                  } catch (n) {
                    if (e > a.maxChannelCount) throw n;
                  }
                }
              ),
              e(
                o,
                "channelCountMode",
                (t) => () => t.call(o),
                (t) => (e) => {
                  t.call(o, e), (a.channelCountMode = e);
                }
              ),
              e(
                o,
                "channelInterpretation",
                (t) => () => t.call(o),
                (t) => (e) => {
                  t.call(o, e), (a.channelInterpretation = e);
                }
              ),
              Object.defineProperty(o, "maxChannelCount", {
                get: () => a.maxChannelCount,
              }),
              o.connect(a),
              o
            );
          })(ye, Ie),
          tn,
          rn,
          Qe
        ),
        Cn = ((t, e, n, r, i) => () => {
          const a = new WeakMap();
          return {
            render(o, s) {
              const l = a.get(s);
              return void 0 !== l
                ? Promise.resolve(l)
                : (async (o, s) => {
                    let l = n(o);
                    const c = rt(l, s);
                    if (!c) {
                      const t = {
                        Q: l.Q.value,
                        channelCount: l.channelCount,
                        channelCountMode: l.channelCountMode,
                        channelInterpretation: l.channelInterpretation,
                        detune: l.detune.value,
                        frequency: l.frequency.value,
                        gain: l.gain.value,
                        type: l.type,
                      };
                      l = e(s, t);
                    }
                    return (
                      a.set(s, l),
                      c
                        ? (await t(s, o.Q, l.Q),
                          await t(s, o.detune, l.detune),
                          await t(s, o.frequency, l.frequency),
                          await t(s, o.gain, l.gain))
                        : (await r(s, o.Q, l.Q),
                          await r(s, o.detune, l.detune),
                          await r(s, o.frequency, l.frequency),
                          await r(s, o.gain, l.gain)),
                      await i(o, s, l),
                      l
                    );
                  })(o, s);
            },
          };
        })(Sn, ge, Rt, En, Qe),
        Dn = (
          (t) => (e, n) =>
            t.set(e, n)
        )(Ue),
        In = ((t, e, n, r, i, a, o, s) =>
          class extends t {
            constructor(t, r) {
              const l = a(t),
                c = { ...zt, ...r },
                u = i(l, c),
                d = o(l);
              super(t, !1, u, d ? n() : null),
                (this._Q = e(this, d, u.Q, ct, lt)),
                (this._detune = e(
                  this,
                  d,
                  u.detune,
                  1200 * Math.log2(ct),
                  -1200 * Math.log2(ct)
                )),
                (this._frequency = e(
                  this,
                  d,
                  u.frequency,
                  t.sampleRate / 2,
                  0
                )),
                (this._gain = e(this, d, u.gain, 40 * Math.log10(ct), lt)),
                (this._nativeBiquadFilterNode = u),
                s(this, 1);
            }
            get detune() {
              return this._detune;
            }
            get frequency() {
              return this._frequency;
            }
            get gain() {
              return this._gain;
            }
            get Q() {
              return this._Q;
            }
            get type() {
              return this._nativeBiquadFilterNode.type;
            }
            set type(t) {
              this._nativeBiquadFilterNode.type = t;
            }
            getFrequencyResponse(t, e, n) {
              try {
                this._nativeBiquadFilterNode.getFrequencyResponse(t, e, n);
              } catch (i) {
                if (11 === i.code) throw r();
                throw i;
              }
              if (t.length !== e.length || e.length !== n.length) throw r();
            }
          })(hn, Rn, Cn, ne, ge, tn, rn, Dn),
        Bn = ((t, e) => (n, r, i) => {
          const a = new Set();
          return (
            (n.connect = ((i) =>
              function (o) {
                let s =
                    arguments.length > 1 && void 0 !== arguments[1]
                      ? arguments[1]
                      : 0,
                  l =
                    arguments.length > 2 && void 0 !== arguments[2]
                      ? arguments[2]
                      : 0;
                const c = 0 === a.size;
                if (e(o))
                  return (
                    i.call(n, o, s, l),
                    t(
                      a,
                      [o, s, l],
                      (t) => t[0] === o && t[1] === s && t[2] === l,
                      !0
                    ),
                    c && r(),
                    o
                  );
                i.call(n, o, s),
                  t(a, [o, s], (t) => t[0] === o && t[1] === s, !0),
                  c && r();
              })(n.connect)),
            (n.disconnect = ((t) => (r, o, s) => {
              const l = a.size > 0;
              if (void 0 === r) t.apply(n), a.clear();
              else if ("number" === typeof r) {
                t.call(n, r);
                for (const t of a) t[1] === r && a.delete(t);
              } else {
                e(r) ? t.call(n, r, o, s) : t.call(n, r, o);
                for (const t of a)
                  t[0] !== r ||
                    (void 0 !== o && t[1] !== o) ||
                    (void 0 !== s && t[2] !== s) ||
                    a.delete(t);
              }
              const c = 0 === a.size;
              l && c && i();
            })(n.disconnect)),
            n
          );
        })(bt, cn),
        Nn = ((t, e) => (n, r) => {
          (r.channelCount = 1),
            (r.channelCountMode = "explicit"),
            Object.defineProperty(r, "channelCount", {
              get: () => 1,
              set: () => {
                throw t();
              },
            }),
            Object.defineProperty(r, "channelCountMode", {
              get: () => "explicit",
              set: () => {
                throw t();
              },
            });
          const i = n.createBufferSource();
          e(
            r,
            () => {
              const t = r.numberOfInputs;
              for (let e = 0; e < t; e += 1) i.connect(r, 0, e);
            },
            () => i.disconnect(r)
          );
        })(ee, Bn),
        Ln = ((t, e) => (n, r) => {
          const i = n.createChannelMerger(r.numberOfInputs);
          return (
            null !== t && "webkitAudioContext" === t.name && e(n, i),
            ce(i, r),
            i
          );
        })(sn, Nn),
        Vn = ((t, e, n) => () => {
          const r = new WeakMap();
          return {
            render(i, a) {
              const o = r.get(a);
              return void 0 !== o
                ? Promise.resolve(o)
                : (async (i, a) => {
                    let o = e(i);
                    if (!rt(o, a)) {
                      const e = {
                        channelCount: o.channelCount,
                        channelCountMode: o.channelCountMode,
                        channelInterpretation: o.channelInterpretation,
                        numberOfInputs: o.numberOfInputs,
                      };
                      o = t(a, e);
                    }
                    return r.set(a, o), await n(i, a, o), o;
                  })(i, a);
            },
          };
        })(Ln, Rt, Qe),
        Fn = ((t, e, n, r, i) =>
          class extends t {
            constructor(t, a) {
              const o = r(t),
                s = { ...Gt, ...a };
              super(t, !1, n(o, s), i(o) ? e() : null);
            }
          })(hn, Vn, Ln, tn, rn),
        Hn = ((t, e, n) => () => {
          const r = new WeakMap();
          return {
            render(i, a) {
              const o = r.get(a);
              return void 0 !== o
                ? Promise.resolve(o)
                : (async (i, a) => {
                    let o = e(i);
                    if (!rt(o, a)) {
                      const e = {
                        channelCount: o.channelCount,
                        channelCountMode: o.channelCountMode,
                        channelInterpretation: o.channelInterpretation,
                        numberOfOutputs: o.numberOfOutputs,
                      };
                      o = t(a, e);
                    }
                    return r.set(a, o), await n(i, a, o), o;
                  })(i, a);
            },
          };
        })(_e, Rt, Qe),
        jn = ((t, e, n, r, i, a) =>
          class extends t {
            constructor(t, o) {
              const s = r(t),
                l = a({ ...qt, ...o });
              super(t, !1, n(s, l), i(s) ? e() : null);
            }
          })(hn, Hn, _e, tn, rn, (t) => ({
          ...t,
          channelCount: t.numberOfOutputs,
        })),
        Yn = ((t, e, n, r) => (i, a) => {
          let { offset: o, ...s } = a;
          const l = i.createBuffer(1, 2, 44100),
            c = e(i, {
              buffer: null,
              channelCount: 2,
              channelCountMode: "max",
              channelInterpretation: "speakers",
              loop: !1,
              loopEnd: 0,
              loopStart: 0,
              playbackRate: 1,
            }),
            u = n(i, { ...s, gain: o }),
            d = l.getChannelData(0);
          (d[0] = 1), (d[1] = 1), (c.buffer = l), (c.loop = !0);
          const h = {
            get bufferSize() {},
            get channelCount() {
              return u.channelCount;
            },
            set channelCount(t) {
              u.channelCount = t;
            },
            get channelCountMode() {
              return u.channelCountMode;
            },
            set channelCountMode(t) {
              u.channelCountMode = t;
            },
            get channelInterpretation() {
              return u.channelInterpretation;
            },
            set channelInterpretation(t) {
              u.channelInterpretation = t;
            },
            get context() {
              return u.context;
            },
            get inputs() {
              return [];
            },
            get numberOfInputs() {
              return c.numberOfInputs;
            },
            get numberOfOutputs() {
              return u.numberOfOutputs;
            },
            get offset() {
              return u.gain;
            },
            get onended() {
              return c.onended;
            },
            set onended(t) {
              c.onended = t;
            },
            addEventListener() {
              return c.addEventListener(
                arguments.length <= 0 ? void 0 : arguments[0],
                arguments.length <= 1 ? void 0 : arguments[1],
                arguments.length <= 2 ? void 0 : arguments[2]
              );
            },
            dispatchEvent() {
              return c.dispatchEvent(
                arguments.length <= 0 ? void 0 : arguments[0]
              );
            },
            removeEventListener() {
              return c.removeEventListener(
                arguments.length <= 0 ? void 0 : arguments[0],
                arguments.length <= 1 ? void 0 : arguments[1],
                arguments.length <= 2 ? void 0 : arguments[2]
              );
            },
            start() {
              let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              c.start.call(c, t);
            },
            stop() {
              let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              c.stop.call(c, t);
            },
          };
          return (
            t(i, c),
            r(
              ve(h, u),
              () => c.connect(u),
              () => c.disconnect(u)
            )
          );
        })(wn, An, ye, Bn),
        Wn = ((t, e, n, r, i) => (a, o) => {
          if (void 0 === a.createConstantSource) return n(a, o);
          const s = a.createConstantSource();
          return (
            ce(s, o),
            de(s, o, "offset"),
            e(r, () => r(a)) || he(s),
            e(i, () => i(a)) || fe(s),
            t(a, s),
            s
          );
        })(wn, Ge, Yn, Ne, Ve),
        Un = ((t, e, n, r, i) => () => {
          const a = new WeakMap();
          let o = null,
            s = null;
          return {
            set start(t) {
              o = t;
            },
            set stop(t) {
              s = t;
            },
            render(l, c) {
              const u = a.get(c);
              return void 0 !== u
                ? Promise.resolve(u)
                : (async (l, c) => {
                    let u = n(l);
                    const d = rt(u, c);
                    if (!d) {
                      const t = {
                        channelCount: u.channelCount,
                        channelCountMode: u.channelCountMode,
                        channelInterpretation: u.channelInterpretation,
                        offset: u.offset.value,
                      };
                      (u = e(c, t)),
                        null !== o && u.start(o),
                        null !== s && u.stop(s);
                    }
                    return (
                      a.set(c, u),
                      d
                        ? await t(c, l.offset, u.offset)
                        : await r(c, l.offset, u.offset),
                      await i(l, c, u),
                      u
                    );
                  })(l, c);
            },
          };
        })(Sn, Wn, Rt, En, Qe),
        zn = ((t, e, n, r, i, a, o) =>
          class extends t {
            constructor(t, o) {
              const s = i(t),
                l = { ...Xt, ...o },
                c = r(s, l),
                u = a(s),
                d = u ? n() : null;
              super(t, !1, c, d),
                (this._constantSourceNodeRenderer = d),
                (this._nativeConstantSourceNode = c),
                (this._offset = e(this, u, c.offset, ct, lt)),
                (this._onended = null);
            }
            get offset() {
              return this._offset;
            }
            get onended() {
              return this._onended;
            }
            set onended(t) {
              const e = "function" === typeof t ? o(this, t) : null;
              this._nativeConstantSourceNode.onended = e;
              const n = this._nativeConstantSourceNode.onended;
              this._onended = null !== n && n === e ? t : n;
            }
            start() {
              let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              if (
                (this._nativeConstantSourceNode.start(t),
                null !== this._constantSourceNodeRenderer &&
                  (this._constantSourceNodeRenderer.start = t),
                "closed" !== this.context.state)
              ) {
                Q(this);
                const t = () => {
                  this._nativeConstantSourceNode.removeEventListener(
                    "ended",
                    t
                  ),
                    ut(this) && tt(this);
                };
                this._nativeConstantSourceNode.addEventListener("ended", t);
              }
            }
            stop() {
              let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              this._nativeConstantSourceNode.stop(t),
                null !== this._constantSourceNodeRenderer &&
                  (this._constantSourceNodeRenderer.stop = t);
            }
          })(hn, Rn, Un, Wn, tn, rn, He),
        Gn = ((t, e) => (n, r) => {
          const i = n.createConvolver();
          if (
            (ce(i, r),
            r.disableNormalization === i.normalize &&
              (i.normalize = !r.disableNormalization),
            le(i, r, "buffer"),
            r.channelCount > 2)
          )
            throw t();
          if (
            (e(
              i,
              "channelCount",
              (t) => () => t.call(i),
              (e) => (n) => {
                if (n > 2) throw t();
                return e.call(i, n);
              }
            ),
            "max" === r.channelCountMode)
          )
            throw t();
          return (
            e(
              i,
              "channelCountMode",
              (t) => () => t.call(i),
              (e) => (n) => {
                if ("max" === n) throw t();
                return e.call(i, n);
              }
            ),
            i
          );
        })(Se, Ie),
        qn = ((t, e, n) => () => {
          const r = new WeakMap();
          return {
            render(i, a) {
              const o = r.get(a);
              return void 0 !== o
                ? Promise.resolve(o)
                : (async (i, a) => {
                    let o = e(i);
                    if (!rt(o, a)) {
                      const e = {
                        buffer: o.buffer,
                        channelCount: o.channelCount,
                        channelCountMode: o.channelCountMode,
                        channelInterpretation: o.channelInterpretation,
                        disableNormalization: !o.normalize,
                      };
                      o = t(a, e);
                    }
                    return (
                      r.set(a, o),
                      wt(o) ? await n(i, a, o.inputs[0]) : await n(i, a, o),
                      o
                    );
                  })(i, a);
            },
          };
        })(Gn, Rt, Qe),
        Xn = ((t, e, n, r, i, a) =>
          class extends t {
            constructor(t, o) {
              const s = r(t),
                l = { ...Zt, ...o },
                c = n(s, l);
              super(t, !1, c, i(s) ? e() : null),
                (this._isBufferNullified = !1),
                (this._nativeConvolverNode = c),
                null !== l.buffer && a(this, l.buffer.duration);
            }
            get buffer() {
              return this._isBufferNullified
                ? null
                : this._nativeConvolverNode.buffer;
            }
            set buffer(t) {
              if (
                ((this._nativeConvolverNode.buffer = t),
                null === t && null !== this._nativeConvolverNode.buffer)
              ) {
                const t = this._nativeConvolverNode.context;
                (this._nativeConvolverNode.buffer = t.createBuffer(
                  1,
                  1,
                  t.sampleRate
                )),
                  (this._isBufferNullified = !0),
                  a(this, 0);
              } else
                (this._isBufferNullified = !1),
                  a(
                    this,
                    null === this._nativeConvolverNode.buffer
                      ? 0
                      : this._nativeConvolverNode.buffer.duration
                  );
            }
            get normalize() {
              return this._nativeConvolverNode.normalize;
            }
            set normalize(t) {
              this._nativeConvolverNode.normalize = t;
            }
          })(hn, qn, Gn, tn, rn, Dn),
        Zn = ((t, e, n, r, i) => (a) => {
          const o = new WeakMap();
          return {
            render(s, l) {
              const c = o.get(l);
              return void 0 !== c
                ? Promise.resolve(c)
                : (async (s, l) => {
                    let c = n(s);
                    const u = rt(c, l);
                    if (!u) {
                      const t = {
                        channelCount: c.channelCount,
                        channelCountMode: c.channelCountMode,
                        channelInterpretation: c.channelInterpretation,
                        delayTime: c.delayTime.value,
                        maxDelayTime: a,
                      };
                      c = e(l, t);
                    }
                    return (
                      o.set(l, c),
                      u
                        ? await t(l, s.delayTime, c.delayTime)
                        : await r(l, s.delayTime, c.delayTime),
                      await i(s, l, c),
                      c
                    );
                  })(s, l);
            },
          };
        })(Sn, be, Rt, En, Qe),
        Kn = ((t, e, n, r, i, a, o) =>
          class extends t {
            constructor(t, s) {
              const l = i(t),
                c = { ...$t, ...s },
                u = r(l, c),
                d = a(l);
              super(t, !1, u, d ? n(c.maxDelayTime) : null),
                (this._delayTime = e(this, d, u.delayTime)),
                o(this, c.maxDelayTime);
            }
            get delayTime() {
              return this._delayTime;
            }
          })(hn, Rn, Zn, be, tn, rn, Dn),
        $n = ((t) => (e, n) => {
          const r = e.createDynamicsCompressor();
          if ((ce(r, n), n.channelCount > 2)) throw t();
          if ("max" === n.channelCountMode) throw t();
          return (
            de(r, n, "attack"),
            de(r, n, "knee"),
            de(r, n, "ratio"),
            de(r, n, "release"),
            de(r, n, "threshold"),
            r
          );
        })(Se),
        Qn = ((t, e, n, r, i) => () => {
          const a = new WeakMap();
          return {
            render(o, s) {
              const l = a.get(s);
              return void 0 !== l
                ? Promise.resolve(l)
                : (async (o, s) => {
                    let l = n(o);
                    const c = rt(l, s);
                    if (!c) {
                      const t = {
                        attack: l.attack.value,
                        channelCount: l.channelCount,
                        channelCountMode: l.channelCountMode,
                        channelInterpretation: l.channelInterpretation,
                        knee: l.knee.value,
                        ratio: l.ratio.value,
                        release: l.release.value,
                        threshold: l.threshold.value,
                      };
                      l = e(s, t);
                    }
                    return (
                      a.set(s, l),
                      c
                        ? (await t(s, o.attack, l.attack),
                          await t(s, o.knee, l.knee),
                          await t(s, o.ratio, l.ratio),
                          await t(s, o.release, l.release),
                          await t(s, o.threshold, l.threshold))
                        : (await r(s, o.attack, l.attack),
                          await r(s, o.knee, l.knee),
                          await r(s, o.ratio, l.ratio),
                          await r(s, o.release, l.release),
                          await r(s, o.threshold, l.threshold)),
                      await i(o, s, l),
                      l
                    );
                  })(o, s);
            },
          };
        })(Sn, $n, Rt, En, Qe),
        Jn = ((t, e, n, r, i, a, o, s) =>
          class extends t {
            constructor(t, i) {
              const l = a(t),
                c = { ...Jt, ...i },
                u = r(l, c),
                d = o(l);
              super(t, !1, u, d ? n() : null),
                (this._attack = e(this, d, u.attack)),
                (this._knee = e(this, d, u.knee)),
                (this._nativeDynamicsCompressorNode = u),
                (this._ratio = e(this, d, u.ratio)),
                (this._release = e(this, d, u.release)),
                (this._threshold = e(this, d, u.threshold)),
                s(this, 0.006);
            }
            get attack() {
              return this._attack;
            }
            get channelCount() {
              return this._nativeDynamicsCompressorNode.channelCount;
            }
            set channelCount(t) {
              const e = this._nativeDynamicsCompressorNode.channelCount;
              if (
                ((this._nativeDynamicsCompressorNode.channelCount = t), t > 2)
              )
                throw (
                  ((this._nativeDynamicsCompressorNode.channelCount = e), i())
                );
            }
            get channelCountMode() {
              return this._nativeDynamicsCompressorNode.channelCountMode;
            }
            set channelCountMode(t) {
              const e = this._nativeDynamicsCompressorNode.channelCountMode;
              if (
                ((this._nativeDynamicsCompressorNode.channelCountMode = t),
                "max" === t)
              )
                throw (
                  ((this._nativeDynamicsCompressorNode.channelCountMode = e),
                  i())
                );
            }
            get knee() {
              return this._knee;
            }
            get ratio() {
              return this._ratio;
            }
            get reduction() {
              return "number" ===
                typeof this._nativeDynamicsCompressorNode.reduction.value
                ? this._nativeDynamicsCompressorNode.reduction.value
                : this._nativeDynamicsCompressorNode.reduction;
            }
            get release() {
              return this._release;
            }
            get threshold() {
              return this._threshold;
            }
          })(hn, Rn, Qn, $n, Se, tn, rn, Dn),
        tr = ((t, e, n, r, i) => () => {
          const a = new WeakMap();
          return {
            render(o, s) {
              const l = a.get(s);
              return void 0 !== l
                ? Promise.resolve(l)
                : (async (o, s) => {
                    let l = n(o);
                    const c = rt(l, s);
                    if (!c) {
                      const t = {
                        channelCount: l.channelCount,
                        channelCountMode: l.channelCountMode,
                        channelInterpretation: l.channelInterpretation,
                        gain: l.gain.value,
                      };
                      l = e(s, t);
                    }
                    return (
                      a.set(s, l),
                      c
                        ? await t(s, o.gain, l.gain)
                        : await r(s, o.gain, l.gain),
                      await i(o, s, l),
                      l
                    );
                  })(o, s);
            },
          };
        })(Sn, ye, Rt, En, Qe),
        er = ((t, e, n, r, i, a) =>
          class extends t {
            constructor(t, o) {
              const s = i(t),
                l = { ...te, ...o },
                c = r(s, l),
                u = a(s);
              super(t, !1, c, u ? n() : null),
                (this._gain = e(this, u, c.gain, ct, lt));
            }
            get gain() {
              return this._gain;
            }
          })(hn, Rn, tr, ye, tn, rn),
        nr = ((t, e, n, r) => (i, a, o) => {
          let {
            channelCount: s,
            channelCountMode: l,
            channelInterpretation: c,
            feedback: u,
            feedforward: d,
          } = o;
          const h = pe(a, i.sampleRate),
            f = u instanceof Float64Array ? u : new Float64Array(u),
            p = d instanceof Float64Array ? d : new Float64Array(d),
            m = f.length,
            g = p.length,
            _ = Math.min(m, g);
          if (0 === m || m > 20) throw r();
          if (0 === f[0]) throw e();
          if (0 === g || g > 20) throw r();
          if (0 === p[0]) throw e();
          if (1 !== f[0]) {
            for (let t = 0; t < g; t += 1) p[t] /= f[0];
            for (let t = 1; t < m; t += 1) f[t] /= f[0];
          }
          const v = n(i, h, s, s);
          (v.channelCount = s),
            (v.channelCountMode = l),
            (v.channelInterpretation = c);
          const b = [],
            y = [],
            x = [];
          for (let t = 0; t < s; t += 1) {
            b.push(0);
            const t = new Float32Array(32),
              e = new Float32Array(32);
            t.fill(0), e.fill(0), y.push(t), x.push(e);
          }
          v.onaudioprocess = (t) => {
            const e = t.inputBuffer,
              n = t.outputBuffer,
              r = e.numberOfChannels;
            for (let i = 0; i < r; i += 1) {
              const t = e.getChannelData(i),
                r = n.getChannelData(i);
              b[i] = ie(f, m, p, g, _, y[i], x[i], b[i], 32, t, r);
            }
          };
          const w = i.sampleRate / 2;
          return ve(
            {
              get bufferSize() {
                return h;
              },
              get channelCount() {
                return v.channelCount;
              },
              set channelCount(t) {
                v.channelCount = t;
              },
              get channelCountMode() {
                return v.channelCountMode;
              },
              set channelCountMode(t) {
                v.channelCountMode = t;
              },
              get channelInterpretation() {
                return v.channelInterpretation;
              },
              set channelInterpretation(t) {
                v.channelInterpretation = t;
              },
              get context() {
                return v.context;
              },
              get inputs() {
                return [v];
              },
              get numberOfInputs() {
                return v.numberOfInputs;
              },
              get numberOfOutputs() {
                return v.numberOfOutputs;
              },
              addEventListener() {
                return v.addEventListener(
                  arguments.length <= 0 ? void 0 : arguments[0],
                  arguments.length <= 1 ? void 0 : arguments[1],
                  arguments.length <= 2 ? void 0 : arguments[2]
                );
              },
              dispatchEvent() {
                return v.dispatchEvent(
                  arguments.length <= 0 ? void 0 : arguments[0]
                );
              },
              getFrequencyResponse(e, n, r) {
                if (e.length !== n.length || n.length !== r.length) throw t();
                const i = e.length;
                for (let t = 0; t < i; t += 1) {
                  const i = -Math.PI * (e[t] / w),
                    a = [Math.cos(i), Math.sin(i)],
                    o = xe(we(p, a), we(f, a));
                  (n[t] = Math.sqrt(o[0] * o[0] + o[1] * o[1])),
                    (r[t] = Math.atan2(o[1], o[0]));
                }
              },
              removeEventListener() {
                return v.removeEventListener(
                  arguments.length <= 0 ? void 0 : arguments[0],
                  arguments.length <= 1 ? void 0 : arguments[1],
                  arguments.length <= 2 ? void 0 : arguments[2]
                );
              },
            },
            v
          );
        })(ne, ee, Me, Se),
        rr = (
          (t, e, n, r) => (i) =>
            t(oe, () => oe(i))
              ? Promise.resolve(t(r, r)).then((t) => {
                  if (!t) {
                    const t = n(i, 512, 0, 1);
                    (i.oncomplete = () => {
                      (t.onaudioprocess = null), t.disconnect();
                    }),
                      (t.onaudioprocess = () => i.currentTime),
                      t.connect(i.destination);
                  }
                  return i.startRendering();
                })
              : new Promise((t) => {
                  const n = e(i, {
                    channelCount: 1,
                    channelCountMode: "explicit",
                    channelInterpretation: "discrete",
                    gain: 0,
                  });
                  (i.oncomplete = (e) => {
                    n.disconnect(), t(e.renderedBuffer);
                  }),
                    n.connect(i.destination),
                    i.startRendering();
                })
        )(
          Ge,
          ye,
          Me,
          ((t, e) => () => {
            if (null === e) return Promise.resolve(!1);
            const n = new e(1, 1, 44100),
              r = t(n, {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                gain: 0,
              });
            return new Promise((t) => {
              (n.oncomplete = () => {
                r.disconnect(), t(0 !== n.currentTime);
              }),
                n.startRendering();
            });
          })(ye, nn)
        ),
        ir = ((t, e, n, r, i) => (a, o) => {
          const s = new WeakMap();
          let l = null;
          const c = async (c, u) => {
            let d = null,
              h = e(c);
            const f = rt(h, u);
            if (
              (void 0 === u.createIIRFilter
                ? (d = t(u, {
                    buffer: null,
                    channelCount: 2,
                    channelCountMode: "max",
                    channelInterpretation: "speakers",
                    loop: !1,
                    loopEnd: 0,
                    loopStart: 0,
                    playbackRate: 1,
                  }))
                : f || (h = u.createIIRFilter(o, a)),
              s.set(u, null === d ? h : d),
              null !== d)
            ) {
              if (null === l) {
                if (null === n)
                  throw new Error(
                    "Missing the native OfflineAudioContext constructor."
                  );
                const t = new n(
                  c.context.destination.channelCount,
                  c.context.length,
                  u.sampleRate
                );
                l = (async () => {
                  await r(c, t, t.destination);
                  return ((t, e, n, r) => {
                    const i =
                        n instanceof Float64Array ? n : new Float64Array(n),
                      a = r instanceof Float64Array ? r : new Float64Array(r),
                      o = i.length,
                      s = a.length,
                      l = Math.min(o, s);
                    if (1 !== i[0]) {
                      for (let t = 0; t < o; t += 1) a[t] /= i[0];
                      for (let t = 1; t < s; t += 1) i[t] /= i[0];
                    }
                    const c = new Float32Array(32),
                      u = new Float32Array(32),
                      d = e.createBuffer(
                        t.numberOfChannels,
                        t.length,
                        t.sampleRate
                      ),
                      h = t.numberOfChannels;
                    for (let f = 0; f < h; f += 1) {
                      const e = t.getChannelData(f),
                        n = d.getChannelData(f);
                      c.fill(0),
                        u.fill(0),
                        ie(i, o, a, s, l, c, u, 0, 32, e, n);
                    }
                    return d;
                  })(await i(t), u, a, o);
                })();
              }
              const t = await l;
              return (d.buffer = t), d.start(0), d;
            }
            return await r(c, u, h), h;
          };
          return {
            render(t, e) {
              const n = s.get(e);
              return void 0 !== n ? Promise.resolve(n) : c(t, e);
            },
          };
        })(An, Rt, nn, Qe, rr),
        ar = ((t) => (e, n, r) => {
          if (void 0 === e.createIIRFilter) return t(e, n, r);
          const i = e.createIIRFilter(r.feedforward, r.feedback);
          return ce(i, r), i;
        })(nr),
        or = ((t, e, n, r, i, a) =>
          class extends t {
            constructor(t, o) {
              const s = r(t),
                l = i(s),
                c = { ...re, ...o },
                u = e(s, l ? null : t.baseLatency, c);
              super(t, !1, u, l ? n(c.feedback, c.feedforward) : null),
                ((t) => {
                  var e;
                  t.getFrequencyResponse =
                    ((e = t.getFrequencyResponse),
                    (n, r, i) => {
                      if (n.length !== r.length || r.length !== i.length)
                        throw ne();
                      return e.call(t, n, r, i);
                    });
                })(u),
                (this._nativeIIRFilterNode = u),
                a(this, 1);
            }
            getFrequencyResponse(t, e, n) {
              return this._nativeIIRFilterNode.getFrequencyResponse(t, e, n);
            }
          })(hn, ar, ir, tn, rn, Dn),
        sr = ((t, e, n, r, i, a, o, s) => (l, c) => {
          const u = c.listener,
            {
              forwardX: d,
              forwardY: h,
              forwardZ: f,
              positionX: p,
              positionY: m,
              positionZ: g,
              upX: _,
              upY: v,
              upZ: b,
            } = void 0 === u.forwardX
              ? (() => {
                  const d = new Float32Array(1),
                    h = e(c, {
                      channelCount: 1,
                      channelCountMode: "explicit",
                      channelInterpretation: "speakers",
                      numberOfInputs: 9,
                    }),
                    f = o(c);
                  let p = !1,
                    m = [0, 0, -1, 0, 1, 0],
                    g = [0, 0, 0];
                  const _ = () => {
                      if (p) return;
                      p = !0;
                      const t = r(c, 256, 9, 0);
                      (t.onaudioprocess = (t) => {
                        let { inputBuffer: e } = t;
                        const n = [
                          a(e, d, 0),
                          a(e, d, 1),
                          a(e, d, 2),
                          a(e, d, 3),
                          a(e, d, 4),
                          a(e, d, 5),
                        ];
                        n.some((t, e) => t !== m[e]) &&
                          (u.setOrientation(...n), (m = n));
                        const r = [a(e, d, 6), a(e, d, 7), a(e, d, 8)];
                        r.some((t, e) => t !== g[e]) &&
                          (u.setPosition(...r), (g = r));
                      }),
                        h.connect(t);
                    },
                    v = (t) => (e) => {
                      e !== m[t] && ((m[t] = e), u.setOrientation(...m));
                    },
                    b = (t) => (e) => {
                      e !== g[t] && ((g[t] = e), u.setPosition(...g));
                    },
                    y = (e, r, a) => {
                      const o = n(c, {
                        channelCount: 1,
                        channelCountMode: "explicit",
                        channelInterpretation: "discrete",
                        offset: r,
                      });
                      o.connect(h, 0, e),
                        o.start(),
                        Object.defineProperty(o.offset, "defaultValue", {
                          get: () => r,
                        });
                      const u = t({ context: l }, f, o.offset, ct, lt);
                      var d, p, m, g, v, b, y;
                      return (
                        s(
                          u,
                          "value",
                          (t) => () => t.call(u),
                          (t) => (e) => {
                            try {
                              t.call(u, e);
                            } catch (n) {
                              if (9 !== n.code) throw n;
                            }
                            _(), f && a(e);
                          }
                        ),
                        (u.cancelAndHoldAtTime =
                          ((d = u.cancelAndHoldAtTime),
                          f
                            ? () => {
                                throw i();
                              }
                            : function () {
                                for (
                                  var t = arguments.length,
                                    e = new Array(t),
                                    n = 0;
                                  n < t;
                                  n++
                                )
                                  e[n] = arguments[n];
                                const r = d.apply(u, e);
                                return _(), r;
                              })),
                        (u.cancelScheduledValues =
                          ((p = u.cancelScheduledValues),
                          f
                            ? () => {
                                throw i();
                              }
                            : function () {
                                for (
                                  var t = arguments.length,
                                    e = new Array(t),
                                    n = 0;
                                  n < t;
                                  n++
                                )
                                  e[n] = arguments[n];
                                const r = p.apply(u, e);
                                return _(), r;
                              })),
                        (u.exponentialRampToValueAtTime =
                          ((m = u.exponentialRampToValueAtTime),
                          f
                            ? () => {
                                throw i();
                              }
                            : function () {
                                for (
                                  var t = arguments.length,
                                    e = new Array(t),
                                    n = 0;
                                  n < t;
                                  n++
                                )
                                  e[n] = arguments[n];
                                const r = m.apply(u, e);
                                return _(), r;
                              })),
                        (u.linearRampToValueAtTime =
                          ((g = u.linearRampToValueAtTime),
                          f
                            ? () => {
                                throw i();
                              }
                            : function () {
                                for (
                                  var t = arguments.length,
                                    e = new Array(t),
                                    n = 0;
                                  n < t;
                                  n++
                                )
                                  e[n] = arguments[n];
                                const r = g.apply(u, e);
                                return _(), r;
                              })),
                        (u.setTargetAtTime =
                          ((v = u.setTargetAtTime),
                          f
                            ? () => {
                                throw i();
                              }
                            : function () {
                                for (
                                  var t = arguments.length,
                                    e = new Array(t),
                                    n = 0;
                                  n < t;
                                  n++
                                )
                                  e[n] = arguments[n];
                                const r = v.apply(u, e);
                                return _(), r;
                              })),
                        (u.setValueAtTime =
                          ((b = u.setValueAtTime),
                          f
                            ? () => {
                                throw i();
                              }
                            : function () {
                                for (
                                  var t = arguments.length,
                                    e = new Array(t),
                                    n = 0;
                                  n < t;
                                  n++
                                )
                                  e[n] = arguments[n];
                                const r = b.apply(u, e);
                                return _(), r;
                              })),
                        (u.setValueCurveAtTime =
                          ((y = u.setValueCurveAtTime),
                          f
                            ? () => {
                                throw i();
                              }
                            : function () {
                                for (
                                  var t = arguments.length,
                                    e = new Array(t),
                                    n = 0;
                                  n < t;
                                  n++
                                )
                                  e[n] = arguments[n];
                                const r = y.apply(u, e);
                                return _(), r;
                              })),
                        u
                      );
                    };
                  return {
                    forwardX: y(0, 0, v(0)),
                    forwardY: y(1, 0, v(1)),
                    forwardZ: y(2, -1, v(2)),
                    positionX: y(6, 0, b(0)),
                    positionY: y(7, 0, b(1)),
                    positionZ: y(8, 0, b(2)),
                    upX: y(3, 0, v(3)),
                    upY: y(4, 1, v(4)),
                    upZ: y(5, 0, v(5)),
                  };
                })()
              : u;
          return {
            get forwardX() {
              return d;
            },
            get forwardY() {
              return h;
            },
            get forwardZ() {
              return f;
            },
            get positionX() {
              return p;
            },
            get positionY() {
              return m;
            },
            get positionZ() {
              return g;
            },
            get upX() {
              return _;
            },
            get upY() {
              return v;
            },
            get upZ() {
              return b;
            },
          };
        })(Rn, Ln, Wn, Me, Se, Ce, rn, Ie),
        lr = new WeakMap(),
        cr = ((t, e, n, r, i, a) =>
          class extends n {
            constructor(n, a) {
              super(n),
                (this._nativeContext = n),
                V.set(this, n),
                r(n) && i.set(n, new Set()),
                (this._destination = new t(this, a)),
                (this._listener = e(this, n)),
                (this._onstatechange = null);
            }
            get currentTime() {
              return this._nativeContext.currentTime;
            }
            get destination() {
              return this._destination;
            }
            get listener() {
              return this._listener;
            }
            get onstatechange() {
              return this._onstatechange;
            }
            set onstatechange(t) {
              const e = "function" === typeof t ? a(this, t) : null;
              this._nativeContext.onstatechange = e;
              const n = this._nativeContext.onstatechange;
              this._onstatechange = null !== n && n === e ? t : n;
            }
            get sampleRate() {
              return this._nativeContext.sampleRate;
            }
            get state() {
              return this._nativeContext.state;
            }
          })(Pn, sr, on, rn, lr, He),
        ur = ((t, e, n, r, i, a) => (o, s) => {
          const l = o.createOscillator();
          return (
            ce(l, s),
            de(l, s, "detune"),
            de(l, s, "frequency"),
            void 0 !== s.periodicWave
              ? l.setPeriodicWave(s.periodicWave)
              : le(l, s, "type"),
            e(n, () => n(o)) || he(l),
            e(r, () => r(o)) || a(l, o),
            e(i, () => i(o)) || fe(l),
            t(o, l),
            l
          );
        })(wn, Ge, Ne, Le, Ve, Fe),
        dr = ((t, e, n, r, i) => () => {
          const a = new WeakMap();
          let o = null,
            s = null,
            l = null;
          return {
            set periodicWave(t) {
              o = t;
            },
            set start(t) {
              s = t;
            },
            set stop(t) {
              l = t;
            },
            render(c, u) {
              const d = a.get(u);
              return void 0 !== d
                ? Promise.resolve(d)
                : (async (c, u) => {
                    let d = n(c);
                    const h = rt(d, u);
                    if (!h) {
                      const t = {
                        channelCount: d.channelCount,
                        channelCountMode: d.channelCountMode,
                        channelInterpretation: d.channelInterpretation,
                        detune: d.detune.value,
                        frequency: d.frequency.value,
                        periodicWave: null === o ? void 0 : o,
                        type: d.type,
                      };
                      (d = e(u, t)),
                        null !== s && d.start(s),
                        null !== l && d.stop(l);
                    }
                    return (
                      a.set(u, d),
                      h
                        ? (await t(u, c.detune, d.detune),
                          await t(u, c.frequency, d.frequency))
                        : (await r(u, c.detune, d.detune),
                          await r(u, c.frequency, d.frequency)),
                      await i(c, u, d),
                      d
                    );
                  })(c, u);
            },
          };
        })(Sn, ur, Rt, En, Qe),
        hr = ((t, e, n, r, i, a, o) =>
          class extends t {
            constructor(t, o) {
              const s = i(t),
                l = { ...Ee, ...o },
                c = n(s, l),
                u = a(s),
                d = u ? r() : null,
                h = t.sampleRate / 2;
              super(t, !1, c, d),
                (this._detune = e(this, u, c.detune, 153600, -153600)),
                (this._frequency = e(this, u, c.frequency, h, -h)),
                (this._nativeOscillatorNode = c),
                (this._onended = null),
                (this._oscillatorNodeRenderer = d),
                null !== this._oscillatorNodeRenderer &&
                  void 0 !== l.periodicWave &&
                  (this._oscillatorNodeRenderer.periodicWave = l.periodicWave);
            }
            get detune() {
              return this._detune;
            }
            get frequency() {
              return this._frequency;
            }
            get onended() {
              return this._onended;
            }
            set onended(t) {
              const e = "function" === typeof t ? o(this, t) : null;
              this._nativeOscillatorNode.onended = e;
              const n = this._nativeOscillatorNode.onended;
              this._onended = null !== n && n === e ? t : n;
            }
            get type() {
              return this._nativeOscillatorNode.type;
            }
            set type(t) {
              (this._nativeOscillatorNode.type = t),
                null !== this._oscillatorNodeRenderer &&
                  (this._oscillatorNodeRenderer.periodicWave = null);
            }
            setPeriodicWave(t) {
              this._nativeOscillatorNode.setPeriodicWave(t),
                null !== this._oscillatorNodeRenderer &&
                  (this._oscillatorNodeRenderer.periodicWave = t);
            }
            start() {
              let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              if (
                (this._nativeOscillatorNode.start(t),
                null !== this._oscillatorNodeRenderer &&
                  (this._oscillatorNodeRenderer.start = t),
                "closed" !== this.context.state)
              ) {
                Q(this);
                const t = () => {
                  this._nativeOscillatorNode.removeEventListener("ended", t),
                    ut(this) && tt(this);
                };
                this._nativeOscillatorNode.addEventListener("ended", t);
              }
            }
            stop() {
              let t =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : 0;
              this._nativeOscillatorNode.stop(t),
                null !== this._oscillatorNodeRenderer &&
                  (this._oscillatorNodeRenderer.stop = t);
            }
          })(hn, Rn, ur, dr, tn, rn, He),
        fr = ((t) => (e, n) => {
          const r = t(e, {
              buffer: null,
              channelCount: 2,
              channelCountMode: "max",
              channelInterpretation: "speakers",
              loop: !1,
              loopEnd: 0,
              loopStart: 0,
              playbackRate: 1,
            }),
            i = e.createBuffer(1, 2, 44100);
          return (
            (r.buffer = i),
            (r.loop = !0),
            r.connect(n),
            r.start(),
            () => {
              r.stop(), r.disconnect(n);
            }
          );
        })(An),
        pr = ((t, e, n, r, i) => (a, o) => {
          let { curve: s, oversample: l, ...c } = o;
          const u = a.createWaveShaper(),
            d = a.createWaveShaper();
          ce(u, c), ce(d, c);
          const h = n(a, { ...c, gain: 1 }),
            f = n(a, { ...c, gain: -1 }),
            p = n(a, { ...c, gain: 1 }),
            m = n(a, { ...c, gain: -1 });
          let g = null,
            _ = !1,
            v = null;
          const b = {
            get bufferSize() {},
            get channelCount() {
              return u.channelCount;
            },
            set channelCount(t) {
              (h.channelCount = t),
                (f.channelCount = t),
                (u.channelCount = t),
                (p.channelCount = t),
                (d.channelCount = t),
                (m.channelCount = t);
            },
            get channelCountMode() {
              return u.channelCountMode;
            },
            set channelCountMode(t) {
              (h.channelCountMode = t),
                (f.channelCountMode = t),
                (u.channelCountMode = t),
                (p.channelCountMode = t),
                (d.channelCountMode = t),
                (m.channelCountMode = t);
            },
            get channelInterpretation() {
              return u.channelInterpretation;
            },
            set channelInterpretation(t) {
              (h.channelInterpretation = t),
                (f.channelInterpretation = t),
                (u.channelInterpretation = t),
                (p.channelInterpretation = t),
                (d.channelInterpretation = t),
                (m.channelInterpretation = t);
            },
            get context() {
              return u.context;
            },
            get curve() {
              return v;
            },
            set curve(n) {
              if (null !== n && n.length < 2) throw e();
              if (null === n) (u.curve = n), (d.curve = n);
              else {
                const t = n.length,
                  e = new Float32Array(t + 2 - (t % 2)),
                  r = new Float32Array(t + 2 - (t % 2));
                (e[0] = n[0]), (r[0] = -n[t - 1]);
                const i = Math.ceil((t + 1) / 2),
                  a = (t + 1) / 2 - 1;
                for (let o = 1; o < i; o += 1) {
                  const s = (o / i) * a,
                    l = Math.floor(s),
                    c = Math.ceil(s);
                  (e[o] =
                    l === c
                      ? n[l]
                      : (1 - (s - l)) * n[l] + (1 - (c - s)) * n[c]),
                    (r[o] =
                      l === c
                        ? -n[t - 1 - l]
                        : -(1 - (s - l)) * n[t - 1 - l] -
                          (1 - (c - s)) * n[t - 1 - c]);
                }
                (e[i] = t % 2 === 1 ? n[i - 1] : (n[i - 2] + n[i - 1]) / 2),
                  (u.curve = e),
                  (d.curve = r);
              }
              (v = n),
                _ &&
                  (r(v) && null === g
                    ? (g = t(a, h))
                    : null !== g && (g(), (g = null)));
            },
            get inputs() {
              return [h];
            },
            get numberOfInputs() {
              return u.numberOfInputs;
            },
            get numberOfOutputs() {
              return u.numberOfOutputs;
            },
            get oversample() {
              return u.oversample;
            },
            set oversample(t) {
              (u.oversample = t), (d.oversample = t);
            },
            addEventListener() {
              return h.addEventListener(
                arguments.length <= 0 ? void 0 : arguments[0],
                arguments.length <= 1 ? void 0 : arguments[1],
                arguments.length <= 2 ? void 0 : arguments[2]
              );
            },
            dispatchEvent() {
              return h.dispatchEvent(
                arguments.length <= 0 ? void 0 : arguments[0]
              );
            },
            removeEventListener() {
              return h.removeEventListener(
                arguments.length <= 0 ? void 0 : arguments[0],
                arguments.length <= 1 ? void 0 : arguments[1],
                arguments.length <= 2 ? void 0 : arguments[2]
              );
            },
          };
          null !== s &&
            (b.curve = s instanceof Float32Array ? s : new Float32Array(s)),
            l !== b.oversample && (b.oversample = l);
          return i(
            ve(b, p),
            () => {
              h.connect(u).connect(p),
                h.connect(f).connect(d).connect(m).connect(p),
                (_ = !0),
                r(v) && (g = t(a, h));
            },
            () => {
              h.disconnect(u),
                u.disconnect(p),
                h.disconnect(f),
                f.disconnect(d),
                d.disconnect(m),
                m.disconnect(p),
                (_ = !1),
                null !== g && (g(), (g = null));
            }
          );
        })(fr, ee, ye, De, Bn),
        mr = ((t, e, n, r, i, a, o) => (s, l) => {
          const c = s.createWaveShaper();
          if (
            null !== a &&
            "webkitAudioContext" === a.name &&
            void 0 === s.createGain().gain.automationRate
          )
            return n(s, l);
          ce(c, l);
          const u =
            null === l.curve || l.curve instanceof Float32Array
              ? l.curve
              : new Float32Array(l.curve);
          if (null !== u && u.length < 2) throw e();
          le(c, { curve: u }, "curve"), le(c, l, "oversample");
          let d = null,
            h = !1;
          o(
            c,
            "curve",
            (t) => () => t.call(c),
            (e) => (n) => (
              e.call(c, n),
              h &&
                (r(n) && null === d
                  ? (d = t(s, c))
                  : r(n) || null === d || (d(), (d = null))),
              n
            )
          );
          return i(
            c,
            () => {
              (h = !0), r(c.curve) && (d = t(s, c));
            },
            () => {
              (h = !1), null !== d && (d(), (d = null));
            }
          );
        })(fr, ee, pr, De, Bn, sn, Ie),
        gr = ((t, e, n, r, i, a, o, s, l, c) => (u, d) => {
          let {
            coneInnerAngle: h,
            coneOuterAngle: f,
            coneOuterGain: p,
            distanceModel: m,
            maxDistance: g,
            orientationX: _,
            orientationY: v,
            orientationZ: b,
            panningModel: y,
            positionX: x,
            positionY: w,
            positionZ: M,
            refDistance: S,
            rolloffFactor: A,
            ...E
          } = d;
          const k = u.createPanner();
          if (E.channelCount > 2) throw o();
          if ("max" === E.channelCountMode) throw o();
          ce(k, E);
          const R = {
              channelCount: 1,
              channelCountMode: "explicit",
              channelInterpretation: "discrete",
            },
            T = n(u, {
              ...R,
              channelInterpretation: "speakers",
              numberOfInputs: 6,
            }),
            O = r(u, { ...E, gain: 1 }),
            P = r(u, { ...R, gain: 1 }),
            C = r(u, { ...R, gain: 0 }),
            D = r(u, { ...R, gain: 0 }),
            I = r(u, { ...R, gain: 0 }),
            B = r(u, { ...R, gain: 0 }),
            N = r(u, { ...R, gain: 0 }),
            L = i(u, 256, 6, 1),
            V = a(u, {
              ...R,
              curve: new Float32Array([1, 1]),
              oversample: "none",
            });
          let F = [_, v, b],
            H = [x, w, M];
          const j = new Float32Array(1);
          (L.onaudioprocess = (t) => {
            let { inputBuffer: e } = t;
            const n = [l(e, j, 0), l(e, j, 1), l(e, j, 2)];
            n.some((t, e) => t !== F[e]) && (k.setOrientation(...n), (F = n));
            const r = [l(e, j, 3), l(e, j, 4), l(e, j, 5)];
            r.some((t, e) => t !== H[e]) && (k.setPosition(...r), (H = r));
          }),
            Object.defineProperty(C.gain, "defaultValue", { get: () => 0 }),
            Object.defineProperty(D.gain, "defaultValue", { get: () => 0 }),
            Object.defineProperty(I.gain, "defaultValue", { get: () => 0 }),
            Object.defineProperty(B.gain, "defaultValue", { get: () => 0 }),
            Object.defineProperty(N.gain, "defaultValue", { get: () => 0 });
          const Y = {
            get bufferSize() {},
            get channelCount() {
              return k.channelCount;
            },
            set channelCount(t) {
              if (t > 2) throw o();
              (O.channelCount = t), (k.channelCount = t);
            },
            get channelCountMode() {
              return k.channelCountMode;
            },
            set channelCountMode(t) {
              if ("max" === t) throw o();
              (O.channelCountMode = t), (k.channelCountMode = t);
            },
            get channelInterpretation() {
              return k.channelInterpretation;
            },
            set channelInterpretation(t) {
              (O.channelInterpretation = t), (k.channelInterpretation = t);
            },
            get coneInnerAngle() {
              return k.coneInnerAngle;
            },
            set coneInnerAngle(t) {
              k.coneInnerAngle = t;
            },
            get coneOuterAngle() {
              return k.coneOuterAngle;
            },
            set coneOuterAngle(t) {
              k.coneOuterAngle = t;
            },
            get coneOuterGain() {
              return k.coneOuterGain;
            },
            set coneOuterGain(t) {
              if (t < 0 || t > 1) throw e();
              k.coneOuterGain = t;
            },
            get context() {
              return k.context;
            },
            get distanceModel() {
              return k.distanceModel;
            },
            set distanceModel(t) {
              k.distanceModel = t;
            },
            get inputs() {
              return [O];
            },
            get maxDistance() {
              return k.maxDistance;
            },
            set maxDistance(t) {
              if (t < 0) throw new RangeError();
              k.maxDistance = t;
            },
            get numberOfInputs() {
              return k.numberOfInputs;
            },
            get numberOfOutputs() {
              return k.numberOfOutputs;
            },
            get orientationX() {
              return P.gain;
            },
            get orientationY() {
              return C.gain;
            },
            get orientationZ() {
              return D.gain;
            },
            get panningModel() {
              return k.panningModel;
            },
            set panningModel(t) {
              k.panningModel = t;
            },
            get positionX() {
              return I.gain;
            },
            get positionY() {
              return B.gain;
            },
            get positionZ() {
              return N.gain;
            },
            get refDistance() {
              return k.refDistance;
            },
            set refDistance(t) {
              if (t < 0) throw new RangeError();
              k.refDistance = t;
            },
            get rolloffFactor() {
              return k.rolloffFactor;
            },
            set rolloffFactor(t) {
              if (t < 0) throw new RangeError();
              k.rolloffFactor = t;
            },
            addEventListener() {
              return O.addEventListener(
                arguments.length <= 0 ? void 0 : arguments[0],
                arguments.length <= 1 ? void 0 : arguments[1],
                arguments.length <= 2 ? void 0 : arguments[2]
              );
            },
            dispatchEvent() {
              return O.dispatchEvent(
                arguments.length <= 0 ? void 0 : arguments[0]
              );
            },
            removeEventListener() {
              return O.removeEventListener(
                arguments.length <= 0 ? void 0 : arguments[0],
                arguments.length <= 1 ? void 0 : arguments[1],
                arguments.length <= 2 ? void 0 : arguments[2]
              );
            },
          };
          h !== Y.coneInnerAngle && (Y.coneInnerAngle = h),
            f !== Y.coneOuterAngle && (Y.coneOuterAngle = f),
            p !== Y.coneOuterGain && (Y.coneOuterGain = p),
            m !== Y.distanceModel && (Y.distanceModel = m),
            g !== Y.maxDistance && (Y.maxDistance = g),
            _ !== Y.orientationX.value && (Y.orientationX.value = _),
            v !== Y.orientationY.value && (Y.orientationY.value = v),
            b !== Y.orientationZ.value && (Y.orientationZ.value = b),
            y !== Y.panningModel && (Y.panningModel = y),
            x !== Y.positionX.value && (Y.positionX.value = x),
            w !== Y.positionY.value && (Y.positionY.value = w),
            M !== Y.positionZ.value && (Y.positionZ.value = M),
            S !== Y.refDistance && (Y.refDistance = S),
            A !== Y.rolloffFactor && (Y.rolloffFactor = A),
            (1 === F[0] && 0 === F[1] && 0 === F[2]) || k.setOrientation(...F),
            (0 === H[0] && 0 === H[1] && 0 === H[2]) || k.setPosition(...H);
          return c(
            ve(Y, k),
            () => {
              O.connect(k),
                t(O, V, 0, 0),
                V.connect(P).connect(T, 0, 0),
                V.connect(C).connect(T, 0, 1),
                V.connect(D).connect(T, 0, 2),
                V.connect(I).connect(T, 0, 3),
                V.connect(B).connect(T, 0, 4),
                V.connect(N).connect(T, 0, 5),
                T.connect(L).connect(u.destination);
            },
            () => {
              O.disconnect(k),
                s(O, V, 0, 0),
                V.disconnect(P),
                P.disconnect(T),
                V.disconnect(C),
                C.disconnect(T),
                V.disconnect(D),
                D.disconnect(T),
                V.disconnect(I),
                I.disconnect(T),
                V.disconnect(B),
                B.disconnect(T),
                V.disconnect(N),
                N.disconnect(T),
                T.disconnect(L),
                L.disconnect(u.destination);
            }
          );
        })(Mt, ee, Ln, ye, Me, mr, Se, kt, Ce, Bn),
        _r = ((t) => (e, n) => {
          const r = e.createPanner();
          return void 0 === r.orientationX
            ? t(e, n)
            : (ce(r, n),
              de(r, n, "orientationX"),
              de(r, n, "orientationY"),
              de(r, n, "orientationZ"),
              de(r, n, "positionX"),
              de(r, n, "positionY"),
              de(r, n, "positionZ"),
              le(r, n, "coneInnerAngle"),
              le(r, n, "coneOuterAngle"),
              le(r, n, "coneOuterGain"),
              le(r, n, "distanceModel"),
              le(r, n, "maxDistance"),
              le(r, n, "panningModel"),
              le(r, n, "refDistance"),
              le(r, n, "rolloffFactor"),
              r);
        })(gr),
        vr = ((t, e, n, r, i, a, o, s, l, c) => () => {
          const u = new WeakMap();
          let d = null;
          return {
            render(h, f) {
              const p = u.get(f);
              return void 0 !== p
                ? Promise.resolve(p)
                : (async (h, f) => {
                    let p = null,
                      m = a(h);
                    const g = {
                        channelCount: m.channelCount,
                        channelCountMode: m.channelCountMode,
                        channelInterpretation: m.channelInterpretation,
                      },
                      _ = {
                        ...g,
                        coneInnerAngle: m.coneInnerAngle,
                        coneOuterAngle: m.coneOuterAngle,
                        coneOuterGain: m.coneOuterGain,
                        distanceModel: m.distanceModel,
                        maxDistance: m.maxDistance,
                        panningModel: m.panningModel,
                        refDistance: m.refDistance,
                        rolloffFactor: m.rolloffFactor,
                      },
                      v = rt(m, f);
                    if ("bufferSize" in m) p = r(f, { ...g, gain: 1 });
                    else if (!v) {
                      const t = {
                        ..._,
                        orientationX: m.orientationX.value,
                        orientationY: m.orientationY.value,
                        orientationZ: m.orientationZ.value,
                        positionX: m.positionX.value,
                        positionY: m.positionY.value,
                        positionZ: m.positionZ.value,
                      };
                      m = i(f, t);
                    }
                    if ((u.set(f, null === p ? m : p), null !== p)) {
                      if (null === d) {
                        if (null === o)
                          throw new Error(
                            "Missing the native OfflineAudioContext constructor."
                          );
                        const t = new o(6, h.context.length, f.sampleRate),
                          r = e(t, {
                            channelCount: 1,
                            channelCountMode: "explicit",
                            channelInterpretation: "speakers",
                            numberOfInputs: 6,
                          });
                        r.connect(t.destination),
                          (d = (async () => {
                            const e = await Promise.all(
                              [
                                h.orientationX,
                                h.orientationY,
                                h.orientationZ,
                                h.positionX,
                                h.positionY,
                                h.positionZ,
                              ].map(async (e, r) => {
                                const i = n(t, {
                                  channelCount: 1,
                                  channelCountMode: "explicit",
                                  channelInterpretation: "discrete",
                                  offset: 0 === r ? 1 : 0,
                                });
                                return await s(t, e, i.offset), i;
                              })
                            );
                            for (let t = 0; t < 6; t += 1)
                              e[t].connect(r, 0, t), e[t].start(0);
                            return c(t);
                          })());
                      }
                      const t = await d,
                        a = r(f, { ...g, gain: 1 });
                      await l(h, f, a);
                      const u = [];
                      for (let e = 0; e < t.numberOfChannels; e += 1)
                        u.push(t.getChannelData(e));
                      let m = [u[0][0], u[1][0], u[2][0]],
                        v = [u[3][0], u[4][0], u[5][0]],
                        b = r(f, { ...g, gain: 1 }),
                        y = i(f, {
                          ..._,
                          orientationX: m[0],
                          orientationY: m[1],
                          orientationZ: m[2],
                          positionX: v[0],
                          positionY: v[1],
                          positionZ: v[2],
                        });
                      a.connect(b).connect(y.inputs[0]), y.connect(p);
                      for (let e = 128; e < t.length; e += 128) {
                        const t = [u[0][e], u[1][e], u[2][e]],
                          n = [u[3][e], u[4][e], u[5][e]];
                        if (
                          t.some((t, e) => t !== m[e]) ||
                          n.some((t, e) => t !== v[e])
                        ) {
                          (m = t), (v = n);
                          const o = e / f.sampleRate;
                          b.gain.setValueAtTime(0, o),
                            (b = r(f, { ...g, gain: 0 })),
                            (y = i(f, {
                              ..._,
                              orientationX: m[0],
                              orientationY: m[1],
                              orientationZ: m[2],
                              positionX: v[0],
                              positionY: v[1],
                              positionZ: v[2],
                            })),
                            b.gain.setValueAtTime(1, o),
                            a.connect(b).connect(y.inputs[0]),
                            y.connect(p);
                        }
                      }
                      return p;
                    }
                    return (
                      v
                        ? (await t(f, h.orientationX, m.orientationX),
                          await t(f, h.orientationY, m.orientationY),
                          await t(f, h.orientationZ, m.orientationZ),
                          await t(f, h.positionX, m.positionX),
                          await t(f, h.positionY, m.positionY),
                          await t(f, h.positionZ, m.positionZ))
                        : (await s(f, h.orientationX, m.orientationX),
                          await s(f, h.orientationY, m.orientationY),
                          await s(f, h.orientationZ, m.orientationZ),
                          await s(f, h.positionX, m.positionX),
                          await s(f, h.positionY, m.positionY),
                          await s(f, h.positionZ, m.positionZ)),
                      wt(m) ? await l(h, f, m.inputs[0]) : await l(h, f, m),
                      m
                    );
                  })(h, f);
            },
          };
        })(Sn, Ln, Wn, ye, _r, Rt, nn, En, Qe, rr),
        br = ((t, e, n, r, i, a, o) =>
          class extends t {
            constructor(t, s) {
              const l = i(t),
                c = { ...ke, ...s },
                u = n(l, c),
                d = a(l);
              super(t, !1, u, d ? r() : null),
                (this._nativePannerNode = u),
                (this._orientationX = e(this, d, u.orientationX, ct, lt)),
                (this._orientationY = e(this, d, u.orientationY, ct, lt)),
                (this._orientationZ = e(this, d, u.orientationZ, ct, lt)),
                (this._positionX = e(this, d, u.positionX, ct, lt)),
                (this._positionY = e(this, d, u.positionY, ct, lt)),
                (this._positionZ = e(this, d, u.positionZ, ct, lt)),
                o(this, 1);
            }
            get coneInnerAngle() {
              return this._nativePannerNode.coneInnerAngle;
            }
            set coneInnerAngle(t) {
              this._nativePannerNode.coneInnerAngle = t;
            }
            get coneOuterAngle() {
              return this._nativePannerNode.coneOuterAngle;
            }
            set coneOuterAngle(t) {
              this._nativePannerNode.coneOuterAngle = t;
            }
            get coneOuterGain() {
              return this._nativePannerNode.coneOuterGain;
            }
            set coneOuterGain(t) {
              this._nativePannerNode.coneOuterGain = t;
            }
            get distanceModel() {
              return this._nativePannerNode.distanceModel;
            }
            set distanceModel(t) {
              this._nativePannerNode.distanceModel = t;
            }
            get maxDistance() {
              return this._nativePannerNode.maxDistance;
            }
            set maxDistance(t) {
              this._nativePannerNode.maxDistance = t;
            }
            get orientationX() {
              return this._orientationX;
            }
            get orientationY() {
              return this._orientationY;
            }
            get orientationZ() {
              return this._orientationZ;
            }
            get panningModel() {
              return this._nativePannerNode.panningModel;
            }
            set panningModel(t) {
              this._nativePannerNode.panningModel = t;
            }
            get positionX() {
              return this._positionX;
            }
            get positionY() {
              return this._positionY;
            }
            get positionZ() {
              return this._positionZ;
            }
            get refDistance() {
              return this._nativePannerNode.refDistance;
            }
            set refDistance(t) {
              this._nativePannerNode.refDistance = t;
            }
            get rolloffFactor() {
              return this._nativePannerNode.rolloffFactor;
            }
            set rolloffFactor(t) {
              this._nativePannerNode.rolloffFactor = t;
            }
          })(hn, Rn, _r, vr, tn, rn, Dn),
        yr = ((t) => (e, n) => {
          let { disableNormalization: r, imag: i, real: a } = n;
          const o = i instanceof Float32Array ? i : new Float32Array(i),
            s = a instanceof Float32Array ? a : new Float32Array(a),
            l = e.createPeriodicWave(s, o, { disableNormalization: r });
          if (Array.from(i).length < 2) throw t();
          return l;
        })(at),
        xr = ((t, e, n, r) =>
          class i {
            constructor(i, a) {
              const o = e(i),
                s = r({ ...Re, ...a }),
                l = t(o, s);
              return n.add(l), l;
            }
            static [Symbol.hasInstance](t) {
              return (
                (null !== t &&
                  "object" === typeof t &&
                  Object.getPrototypeOf(t) === i.prototype) ||
                n.has(t)
              );
            }
          })(yr, tn, new WeakSet(), (t) => {
          const { imag: e, real: n } = t;
          return void 0 === e
            ? void 0 === n
              ? { ...t, imag: [0, 0], real: [0, 0] }
              : { ...t, imag: Array.from(n, () => 0), real: n }
            : void 0 === n
            ? { ...t, imag: e, real: Array.from(e, () => 0) }
            : { ...t, imag: e, real: n };
        }),
        wr = ((t, e, n, r, i, a) => {
          const o = 16385,
            s = new Float32Array([1, 1]),
            l = Math.PI / 2,
            c = {
              channelCount: 1,
              channelCountMode: "explicit",
              channelInterpretation: "discrete",
            },
            u = { ...c, oversample: "none" },
            d = (t, a, d, h, f) => {
              if (1 === a)
                return ((t, e, i, a) => {
                  const d = new Float32Array(o),
                    h = new Float32Array(o);
                  for (let n = 0; n < o; n += 1) {
                    const t = (n / 16384) * l;
                    (d[n] = Math.cos(t)), (h[n] = Math.sin(t));
                  }
                  const f = n(t, { ...c, gain: 0 }),
                    p = r(t, { ...u, curve: d }),
                    m = r(t, { ...u, curve: s }),
                    g = n(t, { ...c, gain: 0 }),
                    _ = r(t, { ...u, curve: h });
                  return {
                    connectGraph() {
                      e.connect(f),
                        e.connect(void 0 === m.inputs ? m : m.inputs[0]),
                        e.connect(g),
                        m.connect(i),
                        i.connect(void 0 === p.inputs ? p : p.inputs[0]),
                        i.connect(void 0 === _.inputs ? _ : _.inputs[0]),
                        p.connect(f.gain),
                        _.connect(g.gain),
                        f.connect(a, 0, 0),
                        g.connect(a, 0, 1);
                    },
                    disconnectGraph() {
                      e.disconnect(f),
                        e.disconnect(void 0 === m.inputs ? m : m.inputs[0]),
                        e.disconnect(g),
                        m.disconnect(i),
                        i.disconnect(void 0 === p.inputs ? p : p.inputs[0]),
                        i.disconnect(void 0 === _.inputs ? _ : _.inputs[0]),
                        p.disconnect(f.gain),
                        _.disconnect(g.gain),
                        f.disconnect(a, 0, 0),
                        g.disconnect(a, 0, 1);
                    },
                  };
                })(t, d, h, f);
              if (2 === a)
                return ((t, i, a, d) => {
                  const h = new Float32Array(o),
                    f = new Float32Array(o),
                    p = new Float32Array(o),
                    m = new Float32Array(o),
                    g = Math.floor(8192.5);
                  for (let e = 0; e < o; e += 1)
                    if (e > g) {
                      const t = ((e - g) / (16384 - g)) * l;
                      (h[e] = Math.cos(t)),
                        (f[e] = Math.sin(t)),
                        (p[e] = 0),
                        (m[e] = 1);
                    } else {
                      const t = (e / (16384 - g)) * l;
                      (h[e] = 1),
                        (f[e] = 0),
                        (p[e] = Math.cos(t)),
                        (m[e] = Math.sin(t));
                    }
                  const _ = e(t, {
                      channelCount: 2,
                      channelCountMode: "explicit",
                      channelInterpretation: "discrete",
                      numberOfOutputs: 2,
                    }),
                    v = n(t, { ...c, gain: 0 }),
                    b = r(t, { ...u, curve: h }),
                    y = n(t, { ...c, gain: 0 }),
                    x = r(t, { ...u, curve: f }),
                    w = r(t, { ...u, curve: s }),
                    M = n(t, { ...c, gain: 0 }),
                    S = r(t, { ...u, curve: p }),
                    A = n(t, { ...c, gain: 0 }),
                    E = r(t, { ...u, curve: m });
                  return {
                    connectGraph() {
                      i.connect(_),
                        i.connect(void 0 === w.inputs ? w : w.inputs[0]),
                        _.connect(v, 0),
                        _.connect(y, 0),
                        _.connect(M, 1),
                        _.connect(A, 1),
                        w.connect(a),
                        a.connect(void 0 === b.inputs ? b : b.inputs[0]),
                        a.connect(void 0 === x.inputs ? x : x.inputs[0]),
                        a.connect(void 0 === S.inputs ? S : S.inputs[0]),
                        a.connect(void 0 === E.inputs ? E : E.inputs[0]),
                        b.connect(v.gain),
                        x.connect(y.gain),
                        S.connect(M.gain),
                        E.connect(A.gain),
                        v.connect(d, 0, 0),
                        M.connect(d, 0, 0),
                        y.connect(d, 0, 1),
                        A.connect(d, 0, 1);
                    },
                    disconnectGraph() {
                      i.disconnect(_),
                        i.disconnect(void 0 === w.inputs ? w : w.inputs[0]),
                        _.disconnect(v, 0),
                        _.disconnect(y, 0),
                        _.disconnect(M, 1),
                        _.disconnect(A, 1),
                        w.disconnect(a),
                        a.disconnect(void 0 === b.inputs ? b : b.inputs[0]),
                        a.disconnect(void 0 === x.inputs ? x : x.inputs[0]),
                        a.disconnect(void 0 === S.inputs ? S : S.inputs[0]),
                        a.disconnect(void 0 === E.inputs ? E : E.inputs[0]),
                        b.disconnect(v.gain),
                        x.disconnect(y.gain),
                        S.disconnect(M.gain),
                        E.disconnect(A.gain),
                        v.disconnect(d, 0, 0),
                        M.disconnect(d, 0, 0),
                        y.disconnect(d, 0, 1),
                        A.disconnect(d, 0, 1);
                    },
                  };
                })(t, d, h, f);
              throw i();
            };
          return (e, r) => {
            let { channelCount: o, channelCountMode: s, pan: l, ...c } = r;
            if ("max" === s) throw i();
            const u = t(e, {
                ...c,
                channelCount: 1,
                channelCountMode: s,
                numberOfInputs: 2,
              }),
              h = n(e, { ...c, channelCount: o, channelCountMode: s, gain: 1 }),
              f = n(e, {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                gain: l,
              });
            let { connectGraph: p, disconnectGraph: m } = d(e, o, h, f, u);
            Object.defineProperty(f.gain, "defaultValue", { get: () => 0 }),
              Object.defineProperty(f.gain, "maxValue", { get: () => 1 }),
              Object.defineProperty(f.gain, "minValue", { get: () => -1 });
            const g = {
              get bufferSize() {},
              get channelCount() {
                return h.channelCount;
              },
              set channelCount(t) {
                h.channelCount !== t &&
                  (_ && m(),
                  ({ connectGraph: p, disconnectGraph: m } = d(e, t, h, f, u)),
                  _ && p()),
                  (h.channelCount = t);
              },
              get channelCountMode() {
                return h.channelCountMode;
              },
              set channelCountMode(t) {
                if ("clamped-max" === t || "max" === t) throw i();
                h.channelCountMode = t;
              },
              get channelInterpretation() {
                return h.channelInterpretation;
              },
              set channelInterpretation(t) {
                h.channelInterpretation = t;
              },
              get context() {
                return h.context;
              },
              get inputs() {
                return [h];
              },
              get numberOfInputs() {
                return h.numberOfInputs;
              },
              get numberOfOutputs() {
                return h.numberOfOutputs;
              },
              get pan() {
                return f.gain;
              },
              addEventListener() {
                return h.addEventListener(
                  arguments.length <= 0 ? void 0 : arguments[0],
                  arguments.length <= 1 ? void 0 : arguments[1],
                  arguments.length <= 2 ? void 0 : arguments[2]
                );
              },
              dispatchEvent() {
                return h.dispatchEvent(
                  arguments.length <= 0 ? void 0 : arguments[0]
                );
              },
              removeEventListener() {
                return h.removeEventListener(
                  arguments.length <= 0 ? void 0 : arguments[0],
                  arguments.length <= 1 ? void 0 : arguments[1],
                  arguments.length <= 2 ? void 0 : arguments[2]
                );
              },
            };
            let _ = !1;
            return a(
              ve(g, u),
              () => {
                p(), (_ = !0);
              },
              () => {
                m(), (_ = !1);
              }
            );
          };
        })(Ln, _e, ye, mr, Se, Bn),
        Mr = ((t, e) => (n, r) => {
          const i = r.channelCountMode;
          if ("clamped-max" === i) throw e();
          if (void 0 === n.createStereoPanner) return t(n, r);
          const a = n.createStereoPanner();
          return (
            ce(a, r),
            de(a, r, "pan"),
            Object.defineProperty(a, "channelCountMode", {
              get: () => i,
              set: (t) => {
                if (t !== i) throw e();
              },
            }),
            a
          );
        })(wr, Se),
        Sr = ((t, e, n, r, i) => () => {
          const a = new WeakMap();
          return {
            render(o, s) {
              const l = a.get(s);
              return void 0 !== l
                ? Promise.resolve(l)
                : (async (o, s) => {
                    let l = n(o);
                    const c = rt(l, s);
                    if (!c) {
                      const t = {
                        channelCount: l.channelCount,
                        channelCountMode: l.channelCountMode,
                        channelInterpretation: l.channelInterpretation,
                        pan: l.pan.value,
                      };
                      l = e(s, t);
                    }
                    return (
                      a.set(s, l),
                      c ? await t(s, o.pan, l.pan) : await r(s, o.pan, l.pan),
                      wt(l) ? await i(o, s, l.inputs[0]) : await i(o, s, l),
                      l
                    );
                  })(o, s);
            },
          };
        })(Sn, Mr, Rt, En, Qe),
        Ar = ((t, e, n, r, i, a) =>
          class extends t {
            constructor(t, o) {
              const s = i(t),
                l = { ...Te, ...o },
                c = n(s, l),
                u = a(s);
              super(t, !1, c, u ? r() : null), (this._pan = e(this, u, c.pan));
            }
            get pan() {
              return this._pan;
            }
          })(hn, Rn, Mr, Sr, tn, rn),
        Er = ((t, e, n) => () => {
          const r = new WeakMap();
          return {
            render(i, a) {
              const o = r.get(a);
              return void 0 !== o
                ? Promise.resolve(o)
                : (async (i, a) => {
                    let o = e(i);
                    if (!rt(o, a)) {
                      const e = {
                        channelCount: o.channelCount,
                        channelCountMode: o.channelCountMode,
                        channelInterpretation: o.channelInterpretation,
                        curve: o.curve,
                        oversample: o.oversample,
                      };
                      o = t(a, e);
                    }
                    return (
                      r.set(a, o),
                      wt(o) ? await n(i, a, o.inputs[0]) : await n(i, a, o),
                      o
                    );
                  })(i, a);
            },
          };
        })(mr, Rt, Qe),
        kr = ((t, e, n, r, i, a, o) =>
          class extends t {
            constructor(t, e) {
              const s = i(t),
                l = { ...Pe, ...e },
                c = n(s, l);
              super(t, !0, c, a(s) ? r() : null),
                (this._isCurveNullified = !1),
                (this._nativeWaveShaperNode = c),
                o(this, 1);
            }
            get curve() {
              return this._isCurveNullified
                ? null
                : this._nativeWaveShaperNode.curve;
            }
            set curve(t) {
              if (null === t)
                (this._isCurveNullified = !0),
                  (this._nativeWaveShaperNode.curve = new Float32Array([0, 0]));
              else {
                if (t.length < 2) throw e();
                (this._isCurveNullified = !1),
                  (this._nativeWaveShaperNode.curve = t);
              }
            }
            get oversample() {
              return this._nativeWaveShaperNode.oversample;
            }
            set oversample(t) {
              this._nativeWaveShaperNode.oversample = t;
            }
          })(hn, ee, mr, Er, tn, rn, Dn),
        Rr = ((t) => null !== t && t.isSecureContext)(Ze),
        Tr = ((t) => (e, n, r) => {
          Object.defineProperties(t, {
            currentFrame: { configurable: !0, get: () => Math.round(e * n) },
            currentTime: { configurable: !0, get: () => e },
          });
          try {
            return r();
          } finally {
            null !== t && (delete t.currentFrame, delete t.currentTime);
          }
        })(Ze),
        Or = new WeakMap(),
        Pr = ((t, e) => (n) => {
          let r = t.get(n);
          if (void 0 !== r) return r;
          if (null === e)
            throw new Error(
              "Missing the native OfflineAudioContext constructor."
            );
          return (r = new e(1, 1, 44100)), t.set(n, r), r;
        })(Or, nn),
        Cr = Rr
          ? ((t, e, n, r, i, a, o, s, l, c, u, d, h) => {
              let f = 0;
              return function (p, m) {
                let g =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : { credentials: "omit" };
                const _ = u.get(p);
                if (void 0 !== _ && _.has(m)) return Promise.resolve();
                const v = c.get(p);
                if (void 0 !== v) {
                  const t = v.get(m);
                  if (void 0 !== t) return t;
                }
                const b = a(p),
                  y =
                    void 0 === b.audioWorklet
                      ? i(m)
                          .then((t) => {
                            let [e, r] = t;
                            const [i, a] = z(e, r),
                              o = ""
                                .concat(
                                  i,
                                  ";((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{"
                                )
                                .concat(a, "\n})})(window,'_AWGS')");
                            return n(o);
                          })
                          .then(() => {
                            const t = h._AWGS.pop();
                            if (void 0 === t) throw new SyntaxError();
                            r(b.currentTime, b.sampleRate, () =>
                              t(
                                class {},
                                void 0,
                                (t, n) => {
                                  if ("" === t.trim()) throw e();
                                  const r = j.get(b);
                                  if (void 0 !== r) {
                                    if (r.has(t)) throw e();
                                    q(n),
                                      G(n.parameterDescriptors),
                                      r.set(t, n);
                                  } else
                                    q(n),
                                      G(n.parameterDescriptors),
                                      j.set(b, new Map([[t, n]]));
                                },
                                b.sampleRate,
                                void 0,
                                void 0
                              )
                            );
                          })
                      : Promise.all([i(m), Promise.resolve(t(d, d))]).then(
                          (t) => {
                            let [[e, n], r] = t;
                            const i = f + 1;
                            f = i;
                            const [a, c] = z(e, n),
                              u = r
                                ? "AudioWorkletProcessor"
                                : "class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}",
                              d = r
                                ? ""
                                : "__c = (a) => a.forEach(e=>this.__b.add(e.buffer));",
                              h = r
                                ? ""
                                : "i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));",
                              p = ""
                                .concat(
                                  a,
                                  ";((AudioWorkletProcessor,registerProcessor)=>{"
                                )
                                .concat(c, "\n})(")
                                .concat(
                                  u,
                                  ",(n,p)=>registerProcessor(n,class extends p{"
                                )
                                .concat(d, "process(i,o,p){")
                                .concat(
                                  h,
                                  "return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac"
                                )
                                .concat(
                                  i,
                                  "',class extends AudioWorkletProcessor{process(){return !1}})"
                                ),
                              m = new Blob([p], {
                                type: "application/javascript; charset=utf-8",
                              }),
                              _ = URL.createObjectURL(m);
                            return b.audioWorklet
                              .addModule(_, g)
                              .then(() => {
                                if (s(b)) return b;
                                const t = o(b);
                                return t.audioWorklet
                                  .addModule(_, g)
                                  .then(() => t);
                              })
                              .then((t) => {
                                if (null === l) throw new SyntaxError();
                                try {
                                  new l(t, "__sac".concat(i));
                                } catch {
                                  throw new SyntaxError();
                                }
                              })
                              .finally(() => URL.revokeObjectURL(_));
                          }
                        );
                return (
                  void 0 === v ? c.set(p, new Map([[m, y]])) : v.set(m, y),
                  y
                    .then(() => {
                      const t = u.get(p);
                      void 0 === t ? u.set(p, new Set([m])) : t.add(m);
                    })
                    .finally(() => {
                      const t = c.get(p);
                      void 0 !== t && t.delete(m);
                    }),
                  y
                );
              };
            })(
              Ge,
              Se,
              (
                (t) => (e) =>
                  new Promise((n, r) => {
                    if (null === t) return void r(new SyntaxError());
                    const i = t.document.head;
                    if (null === i) r(new SyntaxError());
                    else {
                      const a = t.document.createElement("script"),
                        o = new Blob([e], { type: "application/javascript" }),
                        s = URL.createObjectURL(o),
                        l = t.onerror,
                        c = () => {
                          (t.onerror = l), URL.revokeObjectURL(s);
                        };
                      (t.onerror = (e, n, i, a, o) =>
                        n === s || (n === t.location.href && 1 === i && 1 === a)
                          ? (c(), r(o), !1)
                          : null !== l
                          ? l(e, n, i, a, o)
                          : void 0),
                        (a.onerror = () => {
                          c(), r(new SyntaxError());
                        }),
                        (a.onload = () => {
                          c(), n();
                        }),
                        (a.src = s),
                        (a.type = "module"),
                        i.appendChild(a);
                    }
                  })
              )(Ze),
              Tr,
              ((t) => async (e) => {
                try {
                  const t = await fetch(e);
                  if (t.ok) return [await t.text(), t.url];
                } catch {}
                throw t();
              })(() => new DOMException("", "AbortError")),
              tn,
              Pr,
              rn,
              dn,
              new WeakMap(),
              new WeakMap(),
              ((t, e) => async () => {
                if (null === t) return !0;
                if (null === e) return !1;
                const n = new Blob(
                    [
                      'class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)',
                    ],
                    { type: "application/javascript; charset=utf-8" }
                  ),
                  r = new e(1, 128, 44100),
                  i = URL.createObjectURL(n);
                let a = !1,
                  o = !1;
                try {
                  await r.audioWorklet.addModule(i);
                  const e = new t(r, "a", { numberOfOutputs: 0 }),
                    n = r.createOscillator();
                  (e.port.onmessage = () => (a = !0)),
                    (e.onprocessorerror = () => (o = !0)),
                    n.connect(e),
                    n.start(0),
                    await r.startRendering(),
                    await new Promise((t) => setTimeout(t));
                } catch {
                } finally {
                  URL.revokeObjectURL(i);
                }
                return a && !o;
              })(dn, nn),
              Ze
            )
          : void 0,
        Dr = (
          (t, e) => (n) =>
            t(n) || e(n)
        )(ln, rn),
        Ir = ((t, e, n, r, i, a, o, s, l, c, u) => (d, h) => {
          const f = o(d) ? d : a(d);
          if (i.has(h)) {
            const t = n();
            return Promise.reject(t);
          }
          try {
            i.add(h);
          } catch {}
          return e(l, () => l(f))
            ? f
                .decodeAudioData(h)
                .then(
                  (n) => (
                    Kt(h).catch(() => {}), e(s, () => s(n)) || u(n), t.add(n), n
                  )
                )
            : new Promise((e, n) => {
                const i = async () => {
                    try {
                      await Kt(h);
                    } catch {}
                  },
                  a = (t) => {
                    n(t), i();
                  };
                try {
                  f.decodeAudioData(
                    h,
                    (n) => {
                      "function" !== typeof n.copyFromChannel && (c(n), ot(n)),
                        t.add(n),
                        i().then(() => e(n));
                    },
                    (t) => {
                      a(null === t ? r() : t);
                    }
                  );
                } catch (o) {
                  a(o);
                }
              });
        })(
          mn,
          Ge,
          () => new DOMException("", "DataCloneError"),
          () => new DOMException("", "EncodingError"),
          new WeakSet(),
          tn,
          Dr,
          it,
          oe,
          bn,
          yn
        ),
        Br = ((t, e, n, r, i, a, o, s, l, c, u, d, h, f, p, m, g, _, v, b) =>
          class extends p {
            constructor(e, n) {
              super(e, n),
                (this._nativeContext = e),
                (this._audioWorklet =
                  void 0 === t
                    ? void 0
                    : { addModule: (e, n) => t(this, e, n) });
            }
            get audioWorklet() {
              return this._audioWorklet;
            }
            createAnalyser() {
              return new e(this);
            }
            createBiquadFilter() {
              return new i(this);
            }
            createBuffer(t, e, r) {
              return new n({ length: e, numberOfChannels: t, sampleRate: r });
            }
            createBufferSource() {
              return new r(this);
            }
            createChannelMerger() {
              return new a(this, {
                numberOfInputs:
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 6,
              });
            }
            createChannelSplitter() {
              return new o(this, {
                numberOfOutputs:
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 6,
              });
            }
            createConstantSource() {
              return new s(this);
            }
            createConvolver() {
              return new l(this);
            }
            createDelay() {
              return new u(this, {
                maxDelayTime:
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 1,
              });
            }
            createDynamicsCompressor() {
              return new d(this);
            }
            createGain() {
              return new h(this);
            }
            createIIRFilter(t, e) {
              return new f(this, { feedback: e, feedforward: t });
            }
            createOscillator() {
              return new m(this);
            }
            createPanner() {
              return new g(this);
            }
            createPeriodicWave(t, e) {
              return new _(this, {
                ...(arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : { disableNormalization: !1 }),
                imag: e,
                real: t,
              });
            }
            createStereoPanner() {
              return new v(this);
            }
            createWaveShaper() {
              return new b(this);
            }
            decodeAudioData(t, e, n) {
              return c(this._nativeContext, t).then(
                (t) => ("function" === typeof e && e(t), t),
                (t) => {
                  throw ("function" === typeof n && n(t), t);
                }
              );
            }
          })(
          Cr,
          pn,
          xn,
          On,
          In,
          Fn,
          jn,
          zn,
          Xn,
          Ir,
          Kn,
          Jn,
          er,
          or,
          cr,
          hr,
          br,
          xr,
          Ar,
          kr
        ),
        Nr = ((t, e, n, r) =>
          class extends t {
            constructor(t, i) {
              const a = n(t),
                o = e(a, i);
              if (r(a)) throw TypeError();
              super(t, !0, o, null),
                (this._nativeMediaElementAudioSourceNode = o);
            }
            get mediaElement() {
              return this._nativeMediaElementAudioSourceNode.mediaElement;
            }
          })(hn, (t, e) => t.createMediaElementSource(e.mediaElement), tn, rn),
        Lr = ((t, e, n, r) =>
          class extends t {
            constructor(t, i) {
              const a = n(t);
              if (r(a)) throw new TypeError();
              const o = { ...ae, ...i },
                s = e(a, o);
              super(t, !1, s, null),
                (this._nativeMediaStreamAudioDestinationNode = s);
            }
            get stream() {
              return this._nativeMediaStreamAudioDestinationNode.stream;
            }
          })(
          hn,
          (t, e) => {
            const n = t.createMediaStreamDestination();
            return (
              ce(n, e),
              1 === n.numberOfOutputs &&
                Object.defineProperty(n, "numberOfOutputs", { get: () => 0 }),
              n
            );
          },
          tn,
          rn
        ),
        Vr = ((t, e, n, r) =>
          class extends t {
            constructor(t, i) {
              const a = n(t),
                o = e(a, i);
              if (r(a)) throw new TypeError();
              super(t, !0, o, null),
                (this._nativeMediaStreamAudioSourceNode = o);
            }
            get mediaStream() {
              return this._nativeMediaStreamAudioSourceNode.mediaStream;
            }
          })(
          hn,
          (t, e) => {
            let { mediaStream: n } = e;
            const r = n.getAudioTracks();
            r.sort((t, e) => (t.id < e.id ? -1 : t.id > e.id ? 1 : 0));
            const i = r.slice(0, 1),
              a = t.createMediaStreamSource(new MediaStream(i));
            return Object.defineProperty(a, "mediaStream", { value: n }), a;
          },
          tn,
          rn
        ),
        Fr = ((t, e) => (n, r) => {
          let { mediaStreamTrack: i } = r;
          if ("function" === typeof n.createMediaStreamTrackSource)
            return n.createMediaStreamTrackSource(i);
          const a = new MediaStream([i]),
            o = n.createMediaStreamSource(a);
          if ("audio" !== i.kind) throw t();
          if (e(n)) throw new TypeError();
          return o;
        })(ee, rn),
        Hr = ((t, e, n) =>
          class extends t {
            constructor(t, r) {
              const i = n(t);
              super(t, !0, e(i, r), null);
            }
          })(hn, Fr, tn),
        jr =
          (((t, e, n, r, i, a, o, s, l) => {})(
            Br,
            ee,
            Se,
            Oe,
            Nr,
            Lr,
            Vr,
            Hr,
            sn
          ),
          ((t) => (e) => {
            const n = t.get(e);
            if (void 0 === n)
              throw new Error("The context has no set of AudioWorkletNodes.");
            return n;
          })(lr)),
        Yr = ((t) => (e, n) => {
          t(e).add(n);
        })(jr),
        Wr = ((t) =>
          function (e, n) {
            let r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 0;
            const i =
              e[
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : 0
              ];
            if (void 0 === i) throw t();
            return It(n) ? i.connect(n, 0, r) : i.connect(n, 0);
          })(at),
        Ur = ((t) => (e, n) => {
          t(e).delete(n);
        })(jr),
        zr = ((t) =>
          function (e) {
            let n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : void 0,
              r =
                arguments.length > 2 && void 0 !== arguments[2]
                  ? arguments[2]
                  : void 0,
              i =
                arguments.length > 3 && void 0 !== arguments[3]
                  ? arguments[3]
                  : 0;
            return void 0 === n
              ? e.forEach((t) => t.disconnect())
              : "number" === typeof n
              ? Qt(t, e, n).disconnect()
              : It(n)
              ? void 0 === r
                ? e.forEach((t) => t.disconnect(n))
                : void 0 === i
                ? Qt(t, e, r).disconnect(n, 0)
                : Qt(t, e, r).disconnect(n, 0, i)
              : void 0 === r
              ? e.forEach((t) => t.disconnect(n))
              : Qt(t, e, r).disconnect(n, 0);
          })(at),
        Gr = new WeakMap(),
        qr = (
          (t, e) => (n) =>
            e(t, n)
        )(Gr, X),
        Xr = ((t, e, n, r, i, a, o, s, l, c, u, d, h) => (f, p, m, g) => {
          if (0 === g.numberOfInputs && 0 === g.numberOfOutputs) throw l();
          const _ = Array.isArray(g.outputChannelCount)
            ? g.outputChannelCount
            : Array.from(g.outputChannelCount);
          if (_.some((t) => t < 1)) throw l();
          if (_.length !== g.numberOfOutputs) throw e();
          if ("explicit" !== g.channelCountMode) throw l();
          const v = g.channelCount * g.numberOfInputs,
            b = _.reduce((t, e) => t + e, 0),
            y =
              void 0 === m.parameterDescriptors
                ? 0
                : m.parameterDescriptors.length;
          if (v + y > 6 || b > 6) throw l();
          const x = new MessageChannel(),
            w = [],
            M = [];
          for (let t = 0; t < g.numberOfInputs; t += 1)
            w.push(
              o(f, {
                channelCount: g.channelCount,
                channelCountMode: g.channelCountMode,
                channelInterpretation: g.channelInterpretation,
                gain: 1,
              })
            ),
              M.push(
                i(f, {
                  channelCount: g.channelCount,
                  channelCountMode: "explicit",
                  channelInterpretation: "discrete",
                  numberOfOutputs: g.channelCount,
                })
              );
          const S = [];
          if (void 0 !== m.parameterDescriptors)
            for (const {
              defaultValue: t,
              maxValue: e,
              minValue: n,
              name: r,
            } of m.parameterDescriptors) {
              const i = a(f, {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "discrete",
                offset:
                  void 0 !== g.parameterData[r]
                    ? g.parameterData[r]
                    : void 0 === t
                    ? 0
                    : t,
              });
              Object.defineProperties(i.offset, {
                defaultValue: { get: () => (void 0 === t ? 0 : t) },
                maxValue: { get: () => (void 0 === e ? ct : e) },
                minValue: { get: () => (void 0 === n ? lt : n) },
              }),
                S.push(i);
            }
          const A = r(f, {
              channelCount: 1,
              channelCountMode: "explicit",
              channelInterpretation: "speakers",
              numberOfInputs: Math.max(1, v + y),
            }),
            E = pe(p, f.sampleRate),
            k = s(f, E, v + y, Math.max(1, b)),
            R = i(f, {
              channelCount: Math.max(1, b),
              channelCountMode: "explicit",
              channelInterpretation: "discrete",
              numberOfOutputs: Math.max(1, b),
            }),
            T = [];
          for (let t = 0; t < g.numberOfOutputs; t += 1)
            T.push(
              r(f, {
                channelCount: 1,
                channelCountMode: "explicit",
                channelInterpretation: "speakers",
                numberOfInputs: _[t],
              })
            );
          for (let t = 0; t < g.numberOfInputs; t += 1) {
            w[t].connect(M[t]);
            for (let e = 0; e < g.channelCount; e += 1)
              M[t].connect(A, e, t * g.channelCount + e);
          }
          const O = new Ft(
            void 0 === m.parameterDescriptors
              ? []
              : m.parameterDescriptors.map((t, e) => {
                  let { name: n } = t;
                  const r = S[e];
                  return r.connect(A, 0, v + e), r.start(0), [n, r.offset];
                })
          );
          A.connect(k);
          let P = g.channelInterpretation,
            C = null;
          const D = 0 === g.numberOfOutputs ? [k] : T,
            I = {
              get bufferSize() {
                return E;
              },
              get channelCount() {
                return g.channelCount;
              },
              set channelCount(t) {
                throw n();
              },
              get channelCountMode() {
                return g.channelCountMode;
              },
              set channelCountMode(t) {
                throw n();
              },
              get channelInterpretation() {
                return P;
              },
              set channelInterpretation(t) {
                for (const e of w) e.channelInterpretation = t;
                P = t;
              },
              get context() {
                return k.context;
              },
              get inputs() {
                return w;
              },
              get numberOfInputs() {
                return g.numberOfInputs;
              },
              get numberOfOutputs() {
                return g.numberOfOutputs;
              },
              get onprocessorerror() {
                return C;
              },
              set onprocessorerror(t) {
                "function" === typeof C &&
                  I.removeEventListener("processorerror", C),
                  (C = "function" === typeof t ? t : null),
                  "function" === typeof C &&
                    I.addEventListener("processorerror", C);
              },
              get parameters() {
                return O;
              },
              get port() {
                return x.port2;
              },
              addEventListener() {
                return k.addEventListener(
                  arguments.length <= 0 ? void 0 : arguments[0],
                  arguments.length <= 1 ? void 0 : arguments[1],
                  arguments.length <= 2 ? void 0 : arguments[2]
                );
              },
              connect: t.bind(null, D),
              disconnect: c.bind(null, D),
              dispatchEvent() {
                return k.dispatchEvent(
                  arguments.length <= 0 ? void 0 : arguments[0]
                );
              },
              removeEventListener() {
                return k.removeEventListener(
                  arguments.length <= 0 ? void 0 : arguments[0],
                  arguments.length <= 1 ? void 0 : arguments[1],
                  arguments.length <= 2 ? void 0 : arguments[2]
                );
              },
            },
            B = new Map();
          var N, L;
          (x.port1.addEventListener =
            ((N = x.port1.addEventListener),
            function () {
              for (
                var t = arguments.length, e = new Array(t), n = 0;
                n < t;
                n++
              )
                e[n] = arguments[n];
              if ("message" === e[0]) {
                const t =
                  "function" === typeof e[1]
                    ? e[1]
                    : "object" === typeof e[1] &&
                      null !== e[1] &&
                      "function" === typeof e[1].handleEvent
                    ? e[1].handleEvent
                    : null;
                if (null !== t) {
                  const n = B.get(e[1]);
                  void 0 !== n
                    ? (e[1] = n)
                    : ((e[1] = (e) => {
                        u(f.currentTime, f.sampleRate, () => t(e));
                      }),
                      B.set(t, e[1]));
                }
              }
              return N.call(x.port1, e[0], e[1], e[2]);
            })),
            (x.port1.removeEventListener =
              ((L = x.port1.removeEventListener),
              function () {
                for (
                  var t = arguments.length, e = new Array(t), n = 0;
                  n < t;
                  n++
                )
                  e[n] = arguments[n];
                if ("message" === e[0]) {
                  const t = B.get(e[1]);
                  void 0 !== t && (B.delete(e[1]), (e[1] = t));
                }
                return L.call(x.port1, e[0], e[1], e[2]);
              }));
          let V = null;
          Object.defineProperty(x.port1, "onmessage", {
            get: () => V,
            set: (t) => {
              "function" === typeof V &&
                x.port1.removeEventListener("message", V),
                (V = "function" === typeof t ? t : null),
                "function" === typeof V &&
                  (x.port1.addEventListener("message", V), x.port1.start());
            },
          }),
            (m.prototype.port = x.port1);
          let F = null;
          const H = ((t, e, n, r) => {
            let i = Y.get(t);
            void 0 === i && ((i = new WeakMap()), Y.set(t, i));
            const a = me(n, r);
            return i.set(e, a), a;
          })(f, I, m, g);
          H.then((t) => (F = t));
          const j = Wt(g.numberOfInputs, g.channelCount),
            W = Wt(g.numberOfOutputs, _),
            U =
              void 0 === m.parameterDescriptors
                ? []
                : m.parameterDescriptors.reduce((t, e) => {
                    let { name: n } = e;
                    return { ...t, [n]: new Float32Array(128) };
                  }, {});
          let z = !0;
          const G = () => {
              g.numberOfOutputs > 0 && k.disconnect(R);
              for (let t = 0, e = 0; t < g.numberOfOutputs; t += 1) {
                const n = T[t];
                for (let r = 0; r < _[t]; r += 1) R.disconnect(n, e + r, r);
                e += _[t];
              }
            },
            q = new Map();
          k.onaudioprocess = (t) => {
            let { inputBuffer: e, outputBuffer: n } = t;
            if (null !== F) {
              const t = d(I);
              for (let i = 0; i < E; i += 128) {
                for (let t = 0; t < g.numberOfInputs; t += 1)
                  for (let n = 0; n < g.channelCount; n += 1)
                    jt(e, j[t], n, n, i);
                void 0 !== m.parameterDescriptors &&
                  m.parameterDescriptors.forEach((t, n) => {
                    let { name: r } = t;
                    jt(e, U, r, v + n, i);
                  });
                for (let t = 0; t < g.numberOfInputs; t += 1)
                  for (let e = 0; e < _[t]; e += 1)
                    0 === W[t][e].byteLength &&
                      (W[t][e] = new Float32Array(128));
                try {
                  const e = j.map((e, n) => {
                      if (t[n].size > 0) return q.set(n, E / 128), e;
                      const r = q.get(n);
                      return void 0 === r
                        ? []
                        : (e.every((t) => t.every((t) => 0 === t)) &&
                            (1 === r ? q.delete(n) : q.set(n, r - 1)),
                          e);
                    }),
                    r = u(f.currentTime + i / f.sampleRate, f.sampleRate, () =>
                      F.process(e, W, U)
                    );
                  z = r;
                  for (let t = 0, a = 0; t < g.numberOfOutputs; t += 1) {
                    for (let e = 0; e < _[t]; e += 1) Yt(n, W[t], e, a + e, i);
                    a += _[t];
                  }
                } catch (r) {
                  (z = !1),
                    I.dispatchEvent(
                      new ErrorEvent("processorerror", {
                        colno: r.colno,
                        filename: r.filename,
                        lineno: r.lineno,
                        message: r.message,
                      })
                    );
                }
                if (!z) {
                  for (let t = 0; t < g.numberOfInputs; t += 1) {
                    w[t].disconnect(M[t]);
                    for (let e = 0; e < g.channelCount; e += 1)
                      M[i].disconnect(A, e, t * g.channelCount + e);
                  }
                  if (void 0 !== m.parameterDescriptors) {
                    const t = m.parameterDescriptors.length;
                    for (let e = 0; e < t; e += 1) {
                      const t = S[e];
                      t.disconnect(A, 0, v + e), t.stop();
                    }
                  }
                  A.disconnect(k), (k.onaudioprocess = null), X ? G() : $();
                  break;
                }
              }
            }
          };
          let X = !1;
          const Z = o(f, {
              channelCount: 1,
              channelCountMode: "explicit",
              channelInterpretation: "discrete",
              gain: 0,
            }),
            K = () => k.connect(Z).connect(f.destination),
            $ = () => {
              k.disconnect(Z), Z.disconnect();
            };
          return (
            K(),
            h(
              I,
              () => {
                if (z) {
                  $(), g.numberOfOutputs > 0 && k.connect(R);
                  for (let t = 0, e = 0; t < g.numberOfOutputs; t += 1) {
                    const n = T[t];
                    for (let r = 0; r < _[t]; r += 1) R.connect(n, e + r, r);
                    e += _[t];
                  }
                }
                X = !0;
              },
              () => {
                z && (K(), G()), (X = !1);
              }
            )
          );
        })(Wr, at, ee, Ln, _e, Wn, ye, Me, Se, zr, Tr, qr, Bn),
        Zr = ((t, e, n, r, i) => (a, o, s, l, c, u) => {
          if (null !== s)
            try {
              const e = new s(a, l, u),
                r = new Map();
              let o = null;
              if (
                (Object.defineProperties(e, {
                  channelCount: {
                    get: () => u.channelCount,
                    set: () => {
                      throw t();
                    },
                  },
                  channelCountMode: {
                    get: () => "explicit",
                    set: () => {
                      throw t();
                    },
                  },
                  onprocessorerror: {
                    get: () => o,
                    set: (t) => {
                      "function" === typeof o &&
                        e.removeEventListener("processorerror", o),
                        (o = "function" === typeof t ? t : null),
                        "function" === typeof o &&
                          e.addEventListener("processorerror", o);
                    },
                  },
                }),
                (e.addEventListener =
                  ((h = e.addEventListener),
                  function () {
                    for (
                      var t = arguments.length, n = new Array(t), i = 0;
                      i < t;
                      i++
                    )
                      n[i] = arguments[i];
                    if ("processorerror" === n[0]) {
                      const t =
                        "function" === typeof n[1]
                          ? n[1]
                          : "object" === typeof n[1] &&
                            null !== n[1] &&
                            "function" === typeof n[1].handleEvent
                          ? n[1].handleEvent
                          : null;
                      if (null !== t) {
                        const e = r.get(n[1]);
                        void 0 !== e
                          ? (n[1] = e)
                          : ((n[1] = (e) => {
                              "error" === e.type
                                ? (Object.defineProperties(e, {
                                    type: { value: "processorerror" },
                                  }),
                                  t(e))
                                : t(new ErrorEvent(n[0], { ...e }));
                            }),
                            r.set(t, n[1]));
                      }
                    }
                    return h.call(e, "error", n[1], n[2]), h.call(e, ...n);
                  })),
                (e.removeEventListener =
                  ((d = e.removeEventListener),
                  function () {
                    for (
                      var t = arguments.length, n = new Array(t), i = 0;
                      i < t;
                      i++
                    )
                      n[i] = arguments[i];
                    if ("processorerror" === n[0]) {
                      const t = r.get(n[1]);
                      void 0 !== t && (r.delete(n[1]), (n[1] = t));
                    }
                    return (
                      d.call(e, "error", n[1], n[2]),
                      d.call(e, n[0], n[1], n[2])
                    );
                  })),
                0 !== u.numberOfOutputs)
              ) {
                const t = n(a, {
                  channelCount: 1,
                  channelCountMode: "explicit",
                  channelInterpretation: "discrete",
                  gain: 0,
                });
                e.connect(t).connect(a.destination);
                return i(
                  e,
                  () => t.disconnect(),
                  () => t.connect(a.destination)
                );
              }
              return e;
            } catch (f) {
              if (11 === f.code) throw r();
              throw f;
            }
          var d, h;
          if (void 0 === c) throw r();
          return (
            ((t) => {
              const { port1: e } = new MessageChannel();
              try {
                e.postMessage(t);
              } finally {
                e.close();
              }
            })(u),
            e(a, o, c, u)
          );
        })(ee, Xr, ye, Se, Bn),
        Kr = ((t, e, n, r, i, a, o, s, l, c, u, d, h, f, p, m) => (g, _, v) => {
          const b = new WeakMap();
          let y = null;
          return {
            render(x, w) {
              s(w, x);
              const M = b.get(w);
              return void 0 !== M
                ? Promise.resolve(M)
                : (async (s, x) => {
                    let w = u(s),
                      M = null;
                    const S = rt(w, x),
                      A = Array.isArray(_.outputChannelCount)
                        ? _.outputChannelCount
                        : Array.from(_.outputChannelCount);
                    if (null === d) {
                      const t = A.reduce((t, e) => t + e, 0),
                        n = i(x, {
                          channelCount: Math.max(1, t),
                          channelCountMode: "explicit",
                          channelInterpretation: "discrete",
                          numberOfOutputs: Math.max(1, t),
                        }),
                        a = [];
                      for (let e = 0; e < s.numberOfOutputs; e += 1)
                        a.push(
                          r(x, {
                            channelCount: 1,
                            channelCountMode: "explicit",
                            channelInterpretation: "speakers",
                            numberOfInputs: A[e],
                          })
                        );
                      const c = o(x, {
                        channelCount: _.channelCount,
                        channelCountMode: _.channelCountMode,
                        channelInterpretation: _.channelInterpretation,
                        gain: 1,
                      });
                      (c.connect = e.bind(null, a)),
                        (c.disconnect = l.bind(null, a)),
                        (M = [n, a, c]);
                    } else S || (w = new d(x, g));
                    if ((b.set(x, null === M ? w : M[2]), null !== M)) {
                      if (null === y) {
                        if (void 0 === v)
                          throw new Error("Missing the processor constructor.");
                        if (null === h)
                          throw new Error(
                            "Missing the native OfflineAudioContext constructor."
                          );
                        const t = s.channelCount * s.numberOfInputs,
                          e =
                            void 0 === v.parameterDescriptors
                              ? 0
                              : v.parameterDescriptors.length,
                          n = t + e,
                          l = async () => {
                            const l = new h(
                                n,
                                128 * Math.ceil(s.context.length / 128),
                                x.sampleRate
                              ),
                              c = [],
                              u = [];
                            for (let t = 0; t < _.numberOfInputs; t += 1)
                              c.push(
                                o(l, {
                                  channelCount: _.channelCount,
                                  channelCountMode: _.channelCountMode,
                                  channelInterpretation:
                                    _.channelInterpretation,
                                  gain: 1,
                                })
                              ),
                                u.push(
                                  i(l, {
                                    channelCount: _.channelCount,
                                    channelCountMode: "explicit",
                                    channelInterpretation: "discrete",
                                    numberOfOutputs: _.channelCount,
                                  })
                                );
                            const d = await Promise.all(
                                Array.from(s.parameters.values()).map(
                                  async (t) => {
                                    const e = a(l, {
                                      channelCount: 1,
                                      channelCountMode: "explicit",
                                      channelInterpretation: "discrete",
                                      offset: t.value,
                                    });
                                    return await f(l, t, e.offset), e;
                                  }
                                )
                              ),
                              g = r(l, {
                                channelCount: 1,
                                channelCountMode: "explicit",
                                channelInterpretation: "speakers",
                                numberOfInputs: Math.max(1, t + e),
                              });
                            for (let t = 0; t < _.numberOfInputs; t += 1) {
                              c[t].connect(u[t]);
                              for (let e = 0; e < _.channelCount; e += 1)
                                u[t].connect(g, e, t * _.channelCount + e);
                            }
                            for (const [e, n] of d.entries())
                              n.connect(g, 0, t + e), n.start(0);
                            return (
                              g.connect(l.destination),
                              await Promise.all(c.map((t) => p(s, l, t))),
                              m(l)
                            );
                          };
                        y = Ut(s, 0 === n ? null : await l(), x, _, A, v, c);
                      }
                      const t = await y,
                        e = n(x, {
                          buffer: null,
                          channelCount: 2,
                          channelCountMode: "max",
                          channelInterpretation: "speakers",
                          loop: !1,
                          loopEnd: 0,
                          loopStart: 0,
                          playbackRate: 1,
                        }),
                        [l, u, d] = M;
                      null !== t && ((e.buffer = t), e.start(0)), e.connect(l);
                      for (let n = 0, r = 0; n < s.numberOfOutputs; n += 1) {
                        const t = u[n];
                        for (let e = 0; e < A[n]; e += 1)
                          l.connect(t, r + e, e);
                        r += A[n];
                      }
                      return d;
                    }
                    if (S)
                      for (const [e, n] of s.parameters.entries())
                        await t(x, n, w.parameters.get(e));
                    else
                      for (const [t, e] of s.parameters.entries())
                        await f(x, e, w.parameters.get(t));
                    return await p(s, x, w), w;
                  })(x, w);
            },
          };
        })(Sn, Wr, An, Ln, _e, Wn, ye, Ur, zr, Tr, Rt, dn, nn, En, Qe, rr),
        $r = (
          (t) => (e) =>
            t.get(e)
        )(Or),
        Qr = ((t) => (e, n) => {
          t.set(e, n);
        })(Gr),
        Jr = Rr
          ? ((t, e, n, r, i, a, o, s, l, c, u, d, h, f) =>
              class extends e {
                constructor(e, f, p) {
                  var m;
                  const g = s(e),
                    _ = l(g),
                    v = u({ ...Ht, ...p });
                  h(v);
                  const b = j.get(g),
                    y = null === b || void 0 === b ? void 0 : b.get(f),
                    x =
                      _ || "closed" !== g.state
                        ? g
                        : null !== (m = o(g)) && void 0 !== m
                        ? m
                        : g,
                    w = i(x, _ ? null : e.baseLatency, c, f, y, v);
                  super(e, !0, w, _ ? r(f, v, y) : null);
                  const M = [];
                  w.parameters.forEach((t, e) => {
                    const r = n(this, _, t);
                    M.push([e, r]);
                  }),
                    (this._nativeAudioWorkletNode = w),
                    (this._onprocessorerror = null),
                    (this._parameters = new Ft(M)),
                    _ && t(g, this);
                  const { activeInputs: S } = a(this);
                  d(w, S);
                }
                get onprocessorerror() {
                  return this._onprocessorerror;
                }
                set onprocessorerror(t) {
                  const e = "function" === typeof t ? f(this, t) : null;
                  this._nativeAudioWorkletNode.onprocessorerror = e;
                  const n = this._nativeAudioWorkletNode.onprocessorerror;
                  this._onprocessorerror = null !== n && n === e ? t : n;
                }
                get parameters() {
                  return null === this._parameters
                    ? this._nativeAudioWorkletNode.parameters
                    : this._parameters;
                }
                get port() {
                  return this._nativeAudioWorkletNode.port;
                }
              })(
              Yr,
              hn,
              Rn,
              Kr,
              Zr,
              ht,
              $r,
              tn,
              rn,
              dn,
              (t) => ({
                ...t,
                outputChannelCount:
                  void 0 !== t.outputChannelCount
                    ? t.outputChannelCount
                    : 1 === t.numberOfInputs && 1 === t.numberOfOutputs
                    ? [t.channelCount]
                    : Array.from({ length: t.numberOfOutputs }, () => 1),
              }),
              Qr,
              (t) => {
                const { port1: e, port2: n } = new MessageChannel();
                try {
                  e.postMessage(t);
                } finally {
                  e.close(), n.close();
                }
              },
              He
            )
          : void 0,
        ti = ((t, e, n, r, i) =>
          class extends r {
            constructor() {
              let t,
                r =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
              if (null === i)
                throw new Error("Missing the native AudioContext constructor.");
              try {
                t = new i(r);
              } catch (s) {
                if (12 === s.code && "sampleRate is not in range" === s.message)
                  throw e();
                throw s;
              }
              if (null === t) throw n();
              if (!gt(r.latencyHint))
                throw new TypeError(
                  "The provided value '".concat(
                    r.latencyHint,
                    "' is not a valid enum value of type AudioContextLatencyCategory."
                  )
                );
              if (void 0 !== r.sampleRate && t.sampleRate !== r.sampleRate)
                throw e();
              super(t, 2);
              const { latencyHint: a } = r,
                { sampleRate: o } = t;
              if (
                ((this._baseLatency =
                  "number" === typeof t.baseLatency
                    ? t.baseLatency
                    : "balanced" === a
                    ? 512 / o
                    : "interactive" === a || void 0 === a
                    ? 256 / o
                    : "playback" === a
                    ? 1024 / o
                    : (128 *
                        Math.max(2, Math.min(128, Math.round((a * o) / 128)))) /
                      o),
                (this._nativeAudioContext = t),
                "webkitAudioContext" === i.name
                  ? ((this._nativeGainNode = t.createGain()),
                    (this._nativeOscillatorNode = t.createOscillator()),
                    (this._nativeGainNode.gain.value = 1e-37),
                    this._nativeOscillatorNode
                      .connect(this._nativeGainNode)
                      .connect(t.destination),
                    this._nativeOscillatorNode.start())
                  : ((this._nativeGainNode = null),
                    (this._nativeOscillatorNode = null)),
                (this._state = null),
                "running" === t.state)
              ) {
                this._state = "suspended";
                const e = () => {
                  "suspended" === this._state && (this._state = null),
                    t.removeEventListener("statechange", e);
                };
                t.addEventListener("statechange", e);
              }
            }
            get baseLatency() {
              return this._baseLatency;
            }
            get state() {
              return null !== this._state
                ? this._state
                : this._nativeAudioContext.state;
            }
            close() {
              return "closed" === this.state
                ? this._nativeAudioContext.close().then(() => {
                    throw t();
                  })
                : ("suspended" === this._state && (this._state = null),
                  this._nativeAudioContext.close().then(() => {
                    null !== this._nativeGainNode &&
                      null !== this._nativeOscillatorNode &&
                      (this._nativeOscillatorNode.stop(),
                      this._nativeGainNode.disconnect(),
                      this._nativeOscillatorNode.disconnect()),
                      mt(this);
                  }));
            }
            resume() {
              return "suspended" === this._state
                ? new Promise((t, e) => {
                    const n = () => {
                      this._nativeAudioContext.removeEventListener(
                        "statechange",
                        n
                      ),
                        "running" === this._nativeAudioContext.state
                          ? t()
                          : this.resume().then(t, e);
                    };
                    this._nativeAudioContext.addEventListener("statechange", n);
                  })
                : this._nativeAudioContext.resume().catch((e) => {
                    if (void 0 === e || 15 === e.code) throw t();
                    throw e;
                  });
            }
            suspend() {
              return this._nativeAudioContext.suspend().catch((e) => {
                if (void 0 === e) throw t();
                throw e;
              });
            }
          })(ee, Se, Oe, cr, sn),
        ei = ((t, e) => (n, r, i) => {
          if (null === e)
            throw new Error(
              "Missing the native OfflineAudioContext constructor."
            );
          try {
            return new e(n, r, i);
          } catch (a) {
            if ("SyntaxError" === a.name) throw t();
            throw a;
          }
        })(Se, nn),
        ni = (
          (t, e, n, r, i, a, o, s) => (l, c) =>
            n(l)
              .render(l, c)
              .then(() =>
                Promise.all(Array.from(r(c)).map((t) => n(t).render(t, c)))
              )
              .then(() => i(c))
              .then(
                (n) => (
                  "function" !== typeof n.copyFromChannel
                    ? (o(n), ot(n))
                    : e(a, () => a(n)) || s(n),
                  t.add(n),
                  n
                )
              )
        )(mn, Ge, $e, jr, rr, it, bn, yn),
        ri =
          (((t, e, n, r, i) => {})(Ge, ee, ei, cr, ni),
          ((t, e, n, r, i) => {})(Br, Ge, ee, ei, ni),
          ((t, e) => {})(V, ln),
          ((t, e) => {})(B, cn),
          ((t, e) => {})(L, un),
          ((t, e) => {})(V, rn),
          "Missing AudioWorklet support. Maybe this is not running in a secure context.");
      var ii = n(9140);
      const ai = (t, e) => {
          if (e >= t.byteLength) return null;
          const n = t.getUint8(e);
          if (n > 127) return 1;
          if (n > 63) return 2;
          if (n > 31) return 3;
          if (n > 15) return 4;
          if (n > 7) return 5;
          if (n > 3) return 6;
          if (n > 1) return 7;
          if (n > 0) return 8;
          const r = ai(t, e + 1);
          return null === r ? null : r + 8;
        },
        oi = [],
        si = "undefined" === typeof window ? null : window,
        li = ((t) => (e, n) => {
          if (null === t) {
            const { data: t, ...r } = n,
              i = new Event(e, r);
            return (i.data = t), i;
          }
          return new t(e, n);
        })(
          ((t) => (null !== t && void 0 !== t.BlobEvent ? t.BlobEvent : null))(
            si
          )
        ),
        ci = ((t, e, n, r) => (i, a, o) => {
          var s;
          const l =
              null === (s = a.getAudioTracks()[0]) || void 0 === s
                ? void 0
                : s.getSettings().sampleRate,
            c = new ti({ latencyHint: "playback", sampleRate: l }),
            h = Math.max(1024, Math.ceil(c.baseLatency * c.sampleRate)),
            f = new xn({ length: h, sampleRate: c.sampleRate }),
            p = [],
            m = O((t) => {
              if (void 0 === Cr) throw new Error(ri);
              return Cr(c, t);
            });
          let g = null,
            _ = null,
            v = null,
            b = null,
            y = !0;
          const x = (e) => {
              i.dispatchEvent(
                t("dataavailable", { data: new Blob(e, { type: o }) })
              );
            },
            w = async (t, e) => {
              const n = await u(t, e);
              null === v ? p.push(...n) : (x(n), (b = w(t, e)));
            },
            M = () => ((y = !0), c.resume()),
            S = () => {
              null !== v &&
                (null !== g &&
                  (a.removeEventListener("addtrack", g),
                  a.removeEventListener("removetrack", g)),
                null !== _ && clearTimeout(_),
                v.then(async (t) => {
                  let {
                    constantSourceNode: e,
                    encoderId: n,
                    mediaStreamAudioSourceNode: r,
                    recorderAudioWorkletNode: a,
                  } = t;
                  null !== b && (b.catch(() => {}), (b = null)),
                    await a.stop(),
                    r.disconnect(a),
                    e.stop();
                  const o = await u(n, null);
                  null === v && (await A()),
                    x([...p, ...o]),
                    (p.length = 0),
                    i.dispatchEvent(new Event("stop"));
                }),
                (v = null));
            },
            A = () => ((y = !1), c.suspend());
          return (
            A(),
            {
              get mimeType() {
                return o;
              },
              get state() {
                return null === v ? "inactive" : y ? "recording" : "paused";
              },
              pause() {
                if (null === v) throw n();
                y && (A(), i.dispatchEvent(new Event("pause")));
              },
              resume() {
                if (null === v) throw n();
                y || (M(), i.dispatchEvent(new Event("resume")));
              },
              start(t) {
                var s;
                if (null !== v) throw n();
                if (a.getVideoTracks().length > 0) throw r();
                i.dispatchEvent(new Event("start"));
                const l = a.getAudioTracks(),
                  u =
                    0 === l.length
                      ? 2
                      : null !== (s = l[0].getSettings().channelCount) &&
                        void 0 !== s
                      ? s
                      : 2;
                v = Promise.all([
                  M(),
                  m.then(() =>
                    (async (t, e, n, r, i) => {
                      const { encoderId: a, port: o } = await d(
                        i,
                        e.sampleRate
                      );
                      if (void 0 === Jr) throw new Error(ri);
                      return {
                        audioBufferSourceNode: new On(e, { buffer: t }),
                        encoderId: a,
                        mediaStreamAudioSourceNode: new Vr(e, {
                          mediaStream: r,
                        }),
                        port: o,
                        recorderAudioWorkletNode: P(Jr, e, { channelCount: n }),
                      };
                    })(f, c, u, a, o)
                  ),
                ]).then(async (e) => {
                  let [
                    ,
                    {
                      audioBufferSourceNode: n,
                      encoderId: r,
                      mediaStreamAudioSourceNode: i,
                      port: a,
                      recorderAudioWorkletNode: o,
                    },
                  ] = e;
                  i.connect(o),
                    await new Promise((t) => {
                      (n.onended = t),
                        n.connect(o),
                        n.start(c.currentTime + h / c.sampleRate);
                    }),
                    n.disconnect(o);
                  const s = new zn(c, { offset: 0 });
                  return (
                    (s.onended = () => s.disconnect()),
                    s.connect(c.destination),
                    s.start(),
                    await o.record(a),
                    void 0 !== t && (b = w(r, t)),
                    {
                      constantSourceNode: s,
                      encoderId: r,
                      mediaStreamAudioSourceNode: i,
                      recorderAudioWorkletNode: o,
                    }
                  );
                });
                const p = a.getTracks();
                (g = () => {
                  S(), i.dispatchEvent(new ErrorEvent("error", { error: e() }));
                }),
                  a.addEventListener("addtrack", g),
                  a.addEventListener("removetrack", g),
                  (_ = setInterval(() => {
                    const t = a.getTracks();
                    (t.length === p.length && !t.some((t, e) => t !== p[e])) ||
                      null === g ||
                      g();
                  }, 1e3));
              },
              stop: S,
            }
          );
        })(
          li,
          f,
          () => {
            try {
              return new DOMException("", "InvalidStateError");
            } catch (t) {
              return (t.code = 11), (t.name = "InvalidStateError"), t;
            }
          },
          p
        ),
        ui = ((t) => (e, n) => {
          const r = t(e, n);
          if (null === r) return r;
          const i = n + Math.floor((r - 1) / 8);
          if (i + r > e.byteLength) return null;
          let a = e.getUint8(i) & ((1 << (8 - (r % 8))) - 1);
          for (let t = 1; t < r; t += 1) a = (a << 8) + e.getUint8(i + t);
          return { length: r, value: a };
        })(ai),
        di = ((t) =>
          function (e, n, r) {
            let i =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : 2;
            const a = t(e, n);
            if (null === a) return a;
            const { length: o, value: s } = a;
            if ("master" === r) return { content: null, length: o };
            if (n + o + s > e.byteLength) return null;
            if ("binary" === r) {
              const t = (s / Float32Array.BYTES_PER_ELEMENT - 1) / i,
                r = Array.from({ length: i }, () => new Float32Array(t));
              for (let a = 0; a < t; a += 1) {
                const t = a * i + 1;
                for (let s = 0; s < i; s += 1)
                  r[s][a] = e.getFloat32(
                    n + o + (t + s) * Float32Array.BYTES_PER_ELEMENT,
                    !0
                  );
              }
              return { content: r, length: o + s };
            }
            return { content: null, length: o + s };
          })(ui),
        hi = ((t) => (e, n) => {
          const r = t(e, n);
          if (null === r) return r;
          const { length: i, value: a } = r;
          return 35 === a
            ? { length: i, type: "binary" }
            : 46 === a ||
              97 === a ||
              88713574 === a ||
              106212971 === a ||
              139690087 === a ||
              172351395 === a ||
              256095861 === a
            ? { length: i, type: "master" }
            : { length: i, type: "unknown" };
        })(ui),
        fi = ((t, e) => (n, r, i) => {
          const a = [];
          let o = r,
            s = 0;
          for (; s < n.byteLength; )
            if (null === o) {
              const t = e(n, s);
              if (null === t) break;
              const { length: r, type: i } = t;
              (o = i), (s += r);
            } else {
              const e = t(n, s, o, i);
              if (null === e) break;
              const { content: r, length: l } = e;
              (o = null), (s += l), null !== r && a.push(r);
            }
          return { contents: a, currentElementType: o, offset: s };
        })(di, hi),
        pi = ((t, e, n, r, i) => (a, o, s, l) => {
          const c = s.getAudioTracks(),
            h = [],
            f = 0 === c.length ? void 0 : c[0].getSettings().channelCount,
            p = new o(s, { mimeType: "audio/webm;codecs=pcm" }),
            m = 0 === c.length ? void 0 : c[0].getSettings().sampleRate;
          let g = null,
            _ = () => {};
          const v = (e) => {
              a.dispatchEvent(
                t("dataavailable", { data: new Blob(e, { type: l }) })
              );
            },
            b = async (t, e) => {
              const n = await u(t, e);
              "inactive" === p.state ? h.push(...n) : (v(n), (g = b(t, e)));
            },
            y = () => {
              "inactive" !== p.state &&
                (null !== g && (g.catch(() => {}), (g = null)),
                _(),
                (_ = () => {}),
                p.stop());
            };
          return (
            p.addEventListener("error", () => {
              y(), a.dispatchEvent(new ErrorEvent("error", { error: e() }));
            }),
            p.addEventListener("start", () =>
              a.dispatchEvent(new Event("start"))
            ),
            {
              get mimeType() {
                return l;
              },
              get state() {
                return p.state;
              },
              pause: () => p.pause(),
              resume: () => p.resume(),
              start(t) {
                if (s.getVideoTracks().length > 0) throw n();
                if ("inactive" === p.state) {
                  if (void 0 === m)
                    throw new Error("The sampleRate is not defined.");
                  let e = !1,
                    n = !1,
                    o = 0,
                    s = d(l, m);
                  _ = () => {
                    n = !0;
                  };
                  const c = A(
                    p,
                    "dataavailable"
                  )((t) => {
                    let { data: l } = t;
                    (o += 1),
                      (s = s.then(async (t) => {
                        let {
                          dataView: s = null,
                          elementType: d = null,
                          encoderId: m,
                          port: g,
                        } = t;
                        const _ = await l.arrayBuffer();
                        o -= 1;
                        const b =
                          null === s
                            ? new ii.MultiBufferDataView([_])
                            : new ii.MultiBufferDataView(
                                [...s.buffers, _],
                                s.byteOffset
                              );
                        if (!e && "recording" === p.state && !n) {
                          const t = i(b, 0);
                          if (null === t)
                            return {
                              dataView: b,
                              elementType: d,
                              encoderId: m,
                              port: g,
                            };
                          const { value: n } = t;
                          if (172351395 !== n)
                            return {
                              dataView: s,
                              elementType: d,
                              encoderId: m,
                              port: g,
                            };
                          e = !0;
                        }
                        const {
                            currentElementType: y,
                            offset: x,
                            contents: w,
                          } = r(b, d, f),
                          M =
                            x < b.byteLength
                              ? new ii.MultiBufferDataView(
                                  b.buffers,
                                  b.byteOffset + x
                                )
                              : null;
                        return (
                          w.forEach((t) =>
                            g.postMessage(
                              t,
                              t.map((t) => {
                                let { buffer: e } = t;
                                return e;
                              })
                            )
                          ),
                          0 !== o ||
                            ("inactive" !== p.state && !n) ||
                            (u(m, null).then((t) => {
                              v([...h, ...t]),
                                (h.length = 0),
                                a.dispatchEvent(new Event("stop"));
                            }),
                            g.postMessage([]),
                            g.close(),
                            c()),
                          { dataView: M, elementType: y, encoderId: m, port: g }
                        );
                      }));
                  });
                  void 0 !== t &&
                    s.then((e) => {
                      let { encoderId: n } = e;
                      return (g = b(n, t));
                    });
                }
                p.start(100);
              },
              stop: y,
            }
          );
        })(li, f, p, fi, ui),
        mi = ((t) => () => {
          if (null === t)
            throw new Error("A native EventTarget could not be created.");
          return t.document.createElement("p");
        })(si),
        gi = ((t) =>
          null === t || void 0 === t.MediaRecorder ? null : t.MediaRecorder)(
          si
        ),
        _i = ((t, e) => (n, r, i) => {
          const a = [],
            o = new WeakMap(),
            s = new WeakMap(),
            l = new n(r, i),
            c = new WeakMap();
          let u = !0;
          var d, h, f, p;
          return (
            (l.addEventListener =
              ((d = l.addEventListener),
              (e, n, r) => {
                let i = n;
                return (
                  "function" === typeof n &&
                    ("dataavailable" === e
                      ? ((i = (t) => {
                          setTimeout(() => {
                            if (u && "inactive" === l.state) a.push(t.data);
                            else {
                              if (a.length > 0) {
                                const e = t.data;
                                Object.defineProperty(t, "data", {
                                  value: new Blob([...a, e], { type: e.type }),
                                }),
                                  (a.length = 0);
                              }
                              n.call(l, t);
                            }
                          });
                        }),
                        o.set(n, i))
                      : "error" === e
                      ? ((i = (e) => {
                          if (void 0 === e.error)
                            n.call(l, new ErrorEvent("error", { error: t() }));
                          else if ("UnknownError" === e.error.name) {
                            const r = e.error.message;
                            n.call(l, new ErrorEvent("error", { error: t(r) }));
                          } else
                            e instanceof ErrorEvent
                              ? n.call(l, e)
                              : n.call(
                                  l,
                                  new ErrorEvent("error", { error: e.error })
                                );
                        }),
                        s.set(n, i))
                      : "stop" === e &&
                        ((i = (t) => {
                          (u = !1), setTimeout(() => n.call(l, t));
                        }),
                        c.set(n, i))),
                  d.call(l, e, i, r)
                );
              })),
            (l.dispatchEvent =
              ((h = l.dispatchEvent),
              (t) => {
                let e;
                setTimeout(() => {
                  (e = u), (u = !1);
                });
                const n = h.call(l, t);
                return setTimeout(() => (u = e)), n;
              })),
            (l.removeEventListener =
              ((f = l.removeEventListener),
              (t, e, n) => {
                let r = e;
                if ("function" === typeof e)
                  if ("dataavailable" === t) {
                    const t = o.get(e);
                    void 0 !== t && (r = t);
                  } else if ("error" === t) {
                    const t = s.get(e);
                    void 0 !== t && (r = t);
                  } else if ("stop" === t) {
                    const t = c.get(e);
                    void 0 !== t && (r = t);
                  }
                return f.call(l, t, r, n);
              })),
            (l.start =
              ((p = l.start),
              (t) => {
                if (
                  void 0 !== i.mimeType &&
                  i.mimeType.startsWith("audio/") &&
                  r.getVideoTracks().length > 0
                )
                  throw e();
                return (
                  (u = void 0 !== t), void 0 === t ? p.call(l) : p.call(l, t)
                );
              })),
            l
          );
        })(f, p),
        vi = ((t, e, n, r, i, a, o) =>
          class extends a {
            constructor(a) {
              let s =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
              const { mimeType: l } = s;
              if (
                null !== o &&
                (void 0 === l ||
                  (void 0 !== o.isTypeSupported && o.isTypeSupported(l)))
              ) {
                const e = t(o, a, s);
                super(e), (this._internalMediaRecorder = e);
              } else {
                if (void 0 === l || !i.some((t) => t.test(l)))
                  throw (null !== o && t(o, a, s), e());
                super(),
                  null !== o &&
                  void 0 !== o.isTypeSupported &&
                  o.isTypeSupported("audio/webm;codecs=pcm")
                    ? (this._internalMediaRecorder = r(this, o, a, l))
                    : (this._internalMediaRecorder = n(this, a, l));
              }
              (this._ondataavailable = null),
                (this._onerror = null),
                (this._onpause = null),
                (this._onresume = null),
                (this._onstart = null),
                (this._onstop = null);
            }
            get mimeType() {
              return this._internalMediaRecorder.mimeType;
            }
            get ondataavailable() {
              return null === this._ondataavailable
                ? this._ondataavailable
                : this._ondataavailable[0];
            }
            set ondataavailable(t) {
              if (
                (null !== this._ondataavailable &&
                  this.removeEventListener(
                    "dataavailable",
                    this._ondataavailable[1]
                  ),
                "function" === typeof t)
              ) {
                const e = t.bind(this);
                this.addEventListener("dataavailable", e),
                  (this._ondataavailable = [t, e]);
              } else this._ondataavailable = null;
            }
            get onerror() {
              return null === this._onerror ? this._onerror : this._onerror[0];
            }
            set onerror(t) {
              if (
                (null !== this._onerror &&
                  this.removeEventListener("error", this._onerror[1]),
                "function" === typeof t)
              ) {
                const e = t.bind(this);
                this.addEventListener("error", e), (this._onerror = [t, e]);
              } else this._onerror = null;
            }
            get onpause() {
              return null === this._onpause ? this._onpause : this._onpause[0];
            }
            set onpause(t) {
              if (
                (null !== this._onpause &&
                  this.removeEventListener("pause", this._onpause[1]),
                "function" === typeof t)
              ) {
                const e = t.bind(this);
                this.addEventListener("pause", e), (this._onpause = [t, e]);
              } else this._onpause = null;
            }
            get onresume() {
              return null === this._onresume
                ? this._onresume
                : this._onresume[0];
            }
            set onresume(t) {
              if (
                (null !== this._onresume &&
                  this.removeEventListener("resume", this._onresume[1]),
                "function" === typeof t)
              ) {
                const e = t.bind(this);
                this.addEventListener("resume", e), (this._onresume = [t, e]);
              } else this._onresume = null;
            }
            get onstart() {
              return null === this._onstart ? this._onstart : this._onstart[0];
            }
            set onstart(t) {
              if (
                (null !== this._onstart &&
                  this.removeEventListener("start", this._onstart[1]),
                "function" === typeof t)
              ) {
                const e = t.bind(this);
                this.addEventListener("start", e), (this._onstart = [t, e]);
              } else this._onstart = null;
            }
            get onstop() {
              return null === this._onstop ? this._onstop : this._onstop[0];
            }
            set onstop(t) {
              if (
                (null !== this._onstop &&
                  this.removeEventListener("stop", this._onstop[1]),
                "function" === typeof t)
              ) {
                const e = t.bind(this);
                this.addEventListener("stop", e), (this._onstop = [t, e]);
              } else this._onstop = null;
            }
            get state() {
              return this._internalMediaRecorder.state;
            }
            pause() {
              return this._internalMediaRecorder.pause();
            }
            resume() {
              return this._internalMediaRecorder.resume();
            }
            start(t) {
              return this._internalMediaRecorder.start(t);
            }
            stop() {
              return this._internalMediaRecorder.stop();
            }
            static isTypeSupported(t) {
              return (
                (null !== o &&
                  void 0 !== o.isTypeSupported &&
                  o.isTypeSupported(t)) ||
                i.some((e) => e.test(t))
              );
            }
          })(
          _i,
          p,
          ci,
          pi,
          oi,
          ((t, e) =>
            class {
              constructor() {
                let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : null;
                (this._listeners = new WeakMap()),
                  (this._nativeEventTarget = null === e ? t() : e);
              }
              addEventListener(t, n, r) {
                if (null !== n) {
                  let i = this._listeners.get(n);
                  void 0 === i &&
                    ((i = e(this, n)),
                    "function" === typeof n && this._listeners.set(n, i)),
                    this._nativeEventTarget.addEventListener(t, i, r);
                }
              }
              dispatchEvent(t) {
                return this._nativeEventTarget.dispatchEvent(t);
              }
              removeEventListener(t, e, n) {
                const r = null === e ? void 0 : this._listeners.get(e);
                this._nativeEventTarget.removeEventListener(
                  t,
                  void 0 === r ? null : r,
                  n
                );
              }
            })(mi, (t, e) => (n) => {
            const r = { value: t };
            return (
              Object.defineProperties(n, { currentTarget: r, target: r }),
              "function" === typeof e ? e.call(t, n) : e.handleEvent.call(t, n)
            );
          }),
          gi
        ),
        bi = () =>
          ((t) =>
            null === t ||
            void 0 === t.MediaStream ||
            (void 0 !== t.MediaRecorder &&
              void 0 === t.MediaRecorder.isTypeSupported)
              ? Promise.resolve(!1)
              : new Promise((e) => {
                  if (void 0 === t.MediaRecorder) return e(!0);
                  const n = document.createElement("canvas");
                  if (
                    (n.getContext("2d"), "function" !== typeof n.captureStream)
                  )
                    return e(!1);
                  const r = n.captureStream(),
                    i = "audio/webm";
                  try {
                    const n = new t.MediaRecorder(r, { mimeType: i });
                    n.addEventListener("dataavailable", (t) => {
                      let { data: n } = t;
                      return e(n.type === i);
                    }),
                      n.start(),
                      setTimeout(() => n.stop(), 10);
                  } catch (a) {
                    e("NotSupportedError" === a.name);
                  }
                }))(si),
        yi = async (t) => {
          oi.push(await h(t));
        };
    },
    8826: function (t, e) {
      !(function (t) {
        "use strict";
        var e = function (t) {
            return function (e) {
              var n = t(e);
              return e.add(n), n;
            };
          },
          n = function (t) {
            return function (e, n) {
              return t.set(e, n), n;
            };
          },
          r =
            void 0 === Number.MAX_SAFE_INTEGER
              ? 9007199254740991
              : Number.MAX_SAFE_INTEGER,
          i = 536870912,
          a = 2 * i,
          o = function (t, e) {
            return function (n) {
              var o = e.get(n),
                s = void 0 === o ? n.size : o < a ? o + 1 : 0;
              if (!n.has(s)) return t(n, s);
              if (n.size < i) {
                for (; n.has(s); ) s = Math.floor(Math.random() * a);
                return t(n, s);
              }
              if (n.size > r)
                throw new Error(
                  "Congratulations, you created a collection of unique numbers which uses all available integers!"
                );
              for (; n.has(s); ) s = Math.floor(Math.random() * r);
              return t(n, s);
            };
          },
          s = new WeakMap(),
          l = n(s),
          c = o(l, s),
          u = e(c);
        (t.addUniqueNumber = u), (t.generateUniqueNumber = c);
      })(e);
    },
    5483: (t) => {
      var e = function (t) {
        var e,
          n,
          r = /\w+/.exec(t);
        if (!r) return "an";
        var i = (n = r[0]).toLowerCase(),
          a = ["honest", "hour", "hono"];
        for (e in a) if (0 == i.indexOf(a[e])) return "an";
        if (1 == i.length) return "aedhilmnorsx".indexOf(i) >= 0 ? "an" : "a";
        if (
          n.match(
            /(?!FJO|[HLMNS]Y.|RY[EO]|SQU|(F[LR]?|[HL]|MN?|N|RH?|S[CHKLMNPTVW]?|X(YL)?)[AEIOU])[FHLMNRSX][A-Z]/
          )
        )
          return "an";
        var o = [
          /^e[uw]/,
          /^onc?e\b/,
          /^uni([^nmd]|mo)/,
          /^u[bcfhjkqrst][aeiou]/,
        ];
        for (e = 0; e < o.length; e++) if (i.match(o[e])) return "a";
        return n.match(/^U[NK][AIEO]/)
          ? "a"
          : n == n.toUpperCase()
          ? "aedhilmnorsx".indexOf(i[0]) >= 0
            ? "an"
            : "a"
          : "aeiou".indexOf(i[0]) >= 0 ||
            i.match(/^y(b[lor]|cl[ea]|fere|gg|p[ios]|rou|tt)/)
          ? "an"
          : "a";
      };
      "undefined" !== typeof t.exports
        ? (t.exports = e)
        : (window.indefiniteArticle = e);
    },
    5102: (t) => {
      function e(t, e) {
        (t.onload = function () {
          (this.onerror = this.onload = null), e(null, t);
        }),
          (t.onerror = function () {
            (this.onerror = this.onload = null),
              e(new Error("Failed to load " + this.src), t);
          });
      }
      function n(t, e) {
        t.onreadystatechange = function () {
          ("complete" != this.readyState && "loaded" != this.readyState) ||
            ((this.onreadystatechange = null), e(null, t));
        };
      }
      t.exports = function (t, r, i) {
        var a = document.head || document.getElementsByTagName("head")[0],
          o = document.createElement("script");
        "function" === typeof r && ((i = r), (r = {})),
          (r = r || {}),
          (i = i || function () {}),
          (o.type = r.type || "text/javascript"),
          (o.charset = r.charset || "utf8"),
          (o.async = !("async" in r) || !!r.async),
          (o.src = t),
          r.attrs &&
            (function (t, e) {
              for (var n in e) t.setAttribute(n, e[n]);
            })(o, r.attrs),
          r.text && (o.text = "" + r.text),
          ("onload" in o ? e : n)(o, i),
          o.onload || e(o, i),
          a.appendChild(o);
      };
    },
    5781: (t, e, n) => {
      "use strict";
      n.r(e), n.d(e, { default: () => a });
      var r =
        Number.isNaN ||
        function (t) {
          return "number" === typeof t && t !== t;
        };
      function i(t, e) {
        if (t.length !== e.length) return !1;
        for (var n = 0; n < t.length; n++)
          if (((i = t[n]), (a = e[n]), !(i === a || (r(i) && r(a))))) return !1;
        var i, a;
        return !0;
      }
      const a = function (t, e) {
        var n;
        void 0 === e && (e = i);
        var r,
          a = [],
          o = !1;
        return function () {
          for (var i = [], s = 0; s < arguments.length; s++)
            i[s] = arguments[s];
          return (
            (o && n === this && e(i, a)) ||
              ((r = t.apply(this, i)), (o = !0), (n = this), (a = i)),
            r
          );
        };
      };
    },
    1170: function (t) {
      t.exports = (function () {
        function t(t) {
          return new Int8Array(t);
        }
        function e(t) {
          return new Int16Array(t);
        }
        function n(t) {
          return new Int32Array(t);
        }
        function r(t) {
          return new Float32Array(t);
        }
        function i(t) {
          return new Float64Array(t);
        }
        function a(t) {
          if (1 == t.length) return r(t[0]);
          var e = t[0];
          t = t.slice(1);
          for (var n = [], i = 0; i < e; i++) n.push(a(t));
          return n;
        }
        function o(t) {
          if (1 == t.length) return n(t[0]);
          var e = t[0];
          t = t.slice(1);
          for (var r = [], i = 0; i < e; i++) r.push(o(t));
          return r;
        }
        function s(t) {
          if (1 == t.length) return e(t[0]);
          var n = t[0];
          t = t.slice(1);
          for (var r = [], i = 0; i < n; i++) r.push(s(t));
          return r;
        }
        function l(t) {
          if (1 == t.length) return new Array(t[0]);
          var e = t[0];
          t = t.slice(1);
          for (var n = [], r = 0; r < e; r++) n.push(l(t));
          return n;
        }
        var c = {
            fill: function (t, e, n, r) {
              if (2 == arguments.length)
                for (var i = 0; i < t.length; i++) t[i] = arguments[1];
              else for (i = e; i < n; i++) t[i] = r;
            },
          },
          u = {
            arraycopy: function (t, e, n, r, i) {
              for (var a = e + i; e < a; ) n[r++] = t[e++];
            },
          },
          d = {};
        function h(t) {
          this.ordinal = t;
        }
        (d.SQRT2 = 1.4142135623730951),
          (d.FAST_LOG10 = function (t) {
            return Math.log10(t);
          }),
          (d.FAST_LOG10_X = function (t, e) {
            return Math.log10(t) * e;
          }),
          (h.short_block_allowed = new h(0)),
          (h.short_block_coupled = new h(1)),
          (h.short_block_dispensed = new h(2)),
          (h.short_block_forced = new h(3));
        var f = {};
        function p(t) {
          this.ordinal = t;
        }
        (f.MAX_VALUE = 34028235e31),
          (p.vbr_off = new p(0)),
          (p.vbr_mt = new p(1)),
          (p.vbr_rh = new p(2)),
          (p.vbr_abr = new p(3)),
          (p.vbr_mtrh = new p(4)),
          (p.vbr_default = p.vbr_mtrh);
        var m = {
            System: u,
            VbrMode: p,
            Float: f,
            ShortBlock: h,
            Util: d,
            Arrays: c,
            new_array_n: l,
            new_byte: t,
            new_double: i,
            new_float: r,
            new_float_n: a,
            new_int: n,
            new_int_n: o,
            new_short: e,
            new_short_n: s,
            assert: function (t) {},
          },
          g = m.System,
          _ = m.Util,
          v = m.Arrays,
          b = m.new_float;
        function y() {
          var t = [
              -0.1482523854003001,
              32.308141959636465,
              296.40344946382766,
              883.1344870032432,
              11113.947376231741,
              1057.2713659324597,
              305.7402417275812,
              30.825928907280012,
              3.8533188138216365,
              59.42900443849514,
              709.5899960123345,
              5281.91112291017,
              -5829.66483675846,
              -817.6293103748613,
              -76.91656988279972,
              -4.594269939176596,
              0.9063471690191471,
              0.1960342806591213,
              -0.15466694054279598,
              34.324387823855965,
              301.8067566458425,
              817.599602898885,
              11573.795901679885,
              1181.2520595540152,
              321.59731579894424,
              31.232021761053772,
              3.7107095756221318,
              53.650946155329365,
              684.167428119626,
              5224.56624370173,
              -6366.391851890084,
              -908.9766368219582,
              -89.83068876699639,
              -5.411397422890401,
              0.8206787908286602,
              0.3901806440322567,
              -0.16070888947830023,
              36.147034243915876,
              304.11815768187864,
              732.7429163887613,
              11989.60988270091,
              1300.012278487897,
              335.28490093152146,
              31.48816102859945,
              3.373875931311736,
              47.232241542899175,
              652.7371796173471,
              5132.414255594984,
              -6909.087078780055,
              -1001.9990371107289,
              -103.62185754286375,
              -6.104916304710272,
              0.7416505462720353,
              0.5805693545089249,
              -0.16636367662261495,
              37.751650073343995,
              303.01103387567713,
              627.9747488785183,
              12358.763425278165,
              1412.2779918482834,
              346.7496836825721,
              31.598286663170416,
              3.1598635433980946,
              40.57878626349686,
              616.1671130880391,
              5007.833007176154,
              -7454.040671756168,
              -1095.7960341867115,
              -118.24411666465777,
              -6.818469345853504,
              0.6681786379192989,
              0.7653668647301797,
              -0.1716176790982088,
              39.11551877123304,
              298.3413246578966,
              503.5259106886539,
              12679.589408408976,
              1516.5821921214542,
              355.9850766329023,
              31.395241710249053,
              2.9164211881972335,
              33.79716964664243,
              574.8943997801362,
              4853.234992253242,
              -7997.57021486075,
              -1189.7624067269965,
              -133.6444792601766,
              -7.7202770609839915,
              0.5993769336819237,
              0.9427934736519954,
              -0.17645823955292173,
              40.21879108166477,
              289.9982036694474,
              359.3226160751053,
              12950.259102786438,
              1612.1013903507662,
              362.85067106591504,
              31.045922092242872,
              2.822222032597987,
              26.988862316190684,
              529.8996541764288,
              4671.371946949588,
              -8535.899136645805,
              -1282.5898586244496,
              -149.58553632943463,
              -8.643494270763135,
              0.5345111359507916,
              1.111140466039205,
              -0.36174739330527045,
              41.04429910497807,
              277.5463268268618,
              195.6386023135583,
              13169.43812144731,
              1697.6433561479398,
              367.40983966190305,
              30.557037410382826,
              2.531473372857427,
              20.070154905927314,
              481.50208566532336,
              4464.970341588308,
              -9065.36882077239,
              -1373.62841526722,
              -166.1660487028118,
              -9.58289321133207,
              0.4729647758913199,
              1.268786568327291,
              -0.36970682634889585,
              41.393213350082036,
              261.2935935556502,
              12.935476055240873,
              13336.131683328815,
              1772.508612059496,
              369.76534388639965,
              29.751323653701338,
              2.4023193045459172,
              13.304795348228817,
              430.5615775526625,
              4237.0568611071185,
              -9581.931701634761,
              -1461.6913552409758,
              -183.12733958476446,
              -10.718010163869403,
              0.41421356237309503,
              1.414213562373095,
              -0.37677560326535325,
              41.619486213528496,
              241.05423794991074,
              -187.94665032361226,
              13450.063605744153,
              1836.153896465782,
              369.4908799925761,
              29.001847876923147,
              2.0714759319987186,
              6.779591200894186,
              377.7767837205709,
              3990.386575512536,
              -10081.709459700915,
              -1545.947424837898,
              -200.3762958015653,
              -11.864482073055006,
              0.3578057213145241,
              1.546020906725474,
              -0.3829366947518991,
              41.1516456456653,
              216.47684307105183,
              -406.1569483347166,
              13511.136535077321,
              1887.8076599260432,
              367.3025214564151,
              28.136213436723654,
              1.913880671464418,
              0.3829366947518991,
              323.85365704338597,
              3728.1472257487526,
              -10561.233882199509,
              -1625.2025997821418,
              -217.62525175416,
              -13.015432208941645,
              0.3033466836073424,
              1.66293922460509,
              -0.5822628872992417,
              40.35639251440489,
              188.20071124269245,
              -640.2706748618148,
              13519.21490106562,
              1927.6022433578062,
              362.8197642637487,
              26.968821921868447,
              1.7463817695935329,
              -5.62650678237171,
              269.3016715297017,
              3453.386536448852,
              -11016.145278780888,
              -1698.6569643425091,
              -234.7658734267683,
              -14.16351421663124,
              0.2504869601913055,
              1.76384252869671,
              -0.5887180101749253,
              39.23429103868072,
              155.76096234403798,
              -889.2492977967378,
              13475.470561874661,
              1955.0535223723712,
              356.4450994756727,
              25.894952980042156,
              1.5695032905781554,
              -11.181939564328772,
              214.80884394039484,
              3169.1640829158237,
              -11443.321309975563,
              -1765.1588461316153,
              -251.68908574481912,
              -15.49755935939164,
              0.198912367379658,
              1.847759065022573,
              -0.7912582233652842,
              37.39369355329111,
              119.699486012458,
              -1151.0956593239027,
              13380.446257078214,
              1970.3952110853447,
              348.01959814116185,
              24.731487364283044,
              1.3850130831637748,
              -16.421408865300393,
              161.05030052864092,
              2878.3322807850063,
              -11838.991423510031,
              -1823.985884688674,
              -268.2854986386903,
              -16.81724543849939,
              0.1483359875383474,
              1.913880671464418,
              -0.7960642926861912,
              35.2322109610459,
              80.01928065061526,
              -1424.0212633405113,
              13235.794061869668,
              1973.804052543835,
              337.9908651258184,
              23.289159354463873,
              1.3934255946442087,
              -21.099669467133474,
              108.48348407242611,
              2583.700758091299,
              -12199.726194855148,
              -1874.2780658979746,
              -284.2467154529415,
              -18.11369784385905,
              0.09849140335716425,
              1.961570560806461,
              -0.998795456205172,
              32.56307803611191,
              36.958364584370486,
              -1706.075448829146,
              13043.287458812016,
              1965.3831106103316,
              326.43182772364605,
              22.175018750622293,
              1.198638339011324,
              -25.371248002043963,
              57.53505923036915,
              2288.41886619975,
              -12522.674544337233,
              -1914.8400385312243,
              -299.26241273417224,
              -19.37805630698734,
              0.04912684976946725,
              1.990369453344394,
              (0.035780907 * _.SQRT2 * 0.5) / 2384e-9,
              (0.017876148 * _.SQRT2 * 0.5) / 2384e-9,
              (0.003134727 * _.SQRT2 * 0.5) / 2384e-9,
              (0.002457142 * _.SQRT2 * 0.5) / 2384e-9,
              (971317e-9 * _.SQRT2 * 0.5) / 2384e-9,
              (218868e-9 * _.SQRT2 * 0.5) / 2384e-9,
              (101566e-9 * _.SQRT2 * 0.5) / 2384e-9,
              (13828e-9 * _.SQRT2 * 0.5) / 2384e-9,
              12804.797818791945,
              1945.5515939597317,
              313.4244966442953,
              20.801593959731544,
              1995.1556208053692,
              9.000838926174497,
              -29.20218120805369,
            ],
            e = 12,
            n = 36,
            r = [
              [
                2382191739347913e-28, 6423305872147834e-28,
                9400849094049688e-28, 1122435026096556e-27,
                1183840321267481e-27, 1122435026096556e-27, 940084909404969e-27,
                6423305872147839e-28, 2382191739347918e-28,
                5456116108943412e-27, 4878985199565852e-27,
                4240448995017367e-27, 3559909094758252e-27,
                2858043359288075e-27, 2156177623817898e-27,
                1475637723558783e-27, 8371015190102974e-28,
                2599706096327376e-28, -5456116108943412e-27,
                -4878985199565852e-27, -4240448995017367e-27,
                -3559909094758252e-27, -2858043359288076e-27,
                -2156177623817898e-27, -1475637723558783e-27,
                -8371015190102975e-28, -2599706096327376e-28,
                -2382191739347923e-28, -6423305872147843e-28,
                -9400849094049696e-28, -1122435026096556e-27,
                -1183840321267481e-27, -1122435026096556e-27,
                -9400849094049694e-28, -642330587214784e-27,
                -2382191739347918e-28,
              ],
              [
                2382191739347913e-28, 6423305872147834e-28,
                9400849094049688e-28, 1122435026096556e-27,
                1183840321267481e-27, 1122435026096556e-27,
                9400849094049688e-28, 6423305872147841e-28,
                2382191739347918e-28, 5456116108943413e-27,
                4878985199565852e-27, 4240448995017367e-27,
                3559909094758253e-27, 2858043359288075e-27,
                2156177623817898e-27, 1475637723558782e-27,
                8371015190102975e-28, 2599706096327376e-28,
                -5461314069809755e-27, -4921085770524055e-27,
                -4343405037091838e-27, -3732668368707687e-27,
                -3093523840190885e-27, -2430835727329465e-27,
                -1734679010007751e-27, -974825365660928e-27,
                -2797435120168326e-28, 0, 0, 0, 0, 0, 0, -2283748241799531e-28,
                -4037858874020686e-28, -2146547464825323e-28,
              ],
              [
                0.1316524975873958, 0.414213562373095, 0.7673269879789602,
                1.091308501069271, 1.303225372841206, 1.56968557711749,
                1.920982126971166, 2.414213562373094, 3.171594802363212,
                4.510708503662055, 7.595754112725146, 22.90376554843115,
                0.984807753012208, 0.6427876096865394, 0.3420201433256688,
                0.9396926207859084, -0.1736481776669303, -0.7660444431189779,
                0.8660254037844387, 0.5, -0.5144957554275265,
                -0.4717319685649723, -0.3133774542039019, -0.1819131996109812,
                -0.09457419252642064, -0.04096558288530405,
                -0.01419856857247115, -0.003699974673760037, 0.8574929257125442,
                0.8817419973177052, 0.9496286491027329, 0.9833145924917901,
                0.9955178160675857, 0.9991605581781475, 0.999899195244447,
                0.9999931550702802,
              ],
              [
                0, 0, 0, 0, 0, 0, 2283748241799531e-28, 4037858874020686e-28,
                2146547464825323e-28, 5461314069809755e-27,
                4921085770524055e-27, 4343405037091838e-27,
                3732668368707687e-27, 3093523840190885e-27,
                2430835727329466e-27, 1734679010007751e-27, 974825365660928e-27,
                2797435120168326e-28, -5456116108943413e-27,
                -4878985199565852e-27, -4240448995017367e-27,
                -3559909094758253e-27, -2858043359288075e-27,
                -2156177623817898e-27, -1475637723558782e-27,
                -8371015190102975e-28, -2599706096327376e-28,
                -2382191739347913e-28, -6423305872147834e-28,
                -9400849094049688e-28, -1122435026096556e-27,
                -1183840321267481e-27, -1122435026096556e-27,
                -9400849094049688e-28, -6423305872147841e-28,
                -2382191739347918e-28,
              ],
            ],
            i = r[L.SHORT_TYPE],
            a = r[L.SHORT_TYPE],
            o = r[L.SHORT_TYPE],
            s = r[L.SHORT_TYPE],
            l = [
              0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29, 2, 3,
              18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31,
            ];
          function c(e, n, r) {
            for (
              var i, a, o, s = 10, l = n + 238 - 14 - 286, c = -15;
              c < 0;
              c++
            ) {
              var u, d, h;
              (u = t[s + -10]),
                (d = e[l + -224] * u),
                (h = e[n + 224] * u),
                (u = t[s + -9]),
                (d += e[l + -160] * u),
                (h += e[n + 160] * u),
                (u = t[s + -8]),
                (d += e[l + -96] * u),
                (h += e[n + 96] * u),
                (u = t[s + -7]),
                (d += e[l + -32] * u),
                (h += e[n + 32] * u),
                (u = t[s + -6]),
                (d += e[l + 32] * u),
                (h += e[n + -32] * u),
                (u = t[s + -5]),
                (d += e[l + 96] * u),
                (h += e[n + -96] * u),
                (u = t[s + -4]),
                (d += e[l + 160] * u),
                (h += e[n + -160] * u),
                (u = t[s + -3]),
                (d += e[l + 224] * u),
                (h += e[n + -224] * u),
                (u = t[s + -2]),
                (d += e[n + -256] * u),
                (h -= e[l + 256] * u),
                (u = t[s + -1]),
                (d += e[n + -192] * u),
                (h -= e[l + 192] * u),
                (u = t[s + 0]),
                (d += e[n + -128] * u),
                (h -= e[l + 128] * u),
                (u = t[s + 1]),
                (d += e[n + -64] * u),
                (h -= e[l + 64] * u),
                (u = t[s + 2]),
                (d += e[n + 0] * u),
                (h -= e[l + 0] * u),
                (u = t[s + 3]),
                (d += e[n + 64] * u),
                (h -= e[l + -64] * u),
                (u = t[s + 4]),
                (d += e[n + 128] * u),
                (h -= e[l + -128] * u),
                (u = t[s + 5]),
                (d += e[n + 192] * u),
                (u = (h -= e[l + -192] * u) - (d *= t[s + 6])),
                (r[30 + 2 * c] = h + d),
                (r[31 + 2 * c] = t[s + 7] * u),
                (s += 18),
                n--,
                l++;
            }
            (h = e[n + -16] * t[s + -10]),
              (d = e[n + -32] * t[s + -2]),
              (h += (e[n + -48] - e[n + 16]) * t[s + -9]),
              (d += e[n + -96] * t[s + -1]),
              (h += (e[n + -80] + e[n + 48]) * t[s + -8]),
              (d += e[n + -160] * t[s + 0]),
              (h += (e[n + -112] - e[n + 80]) * t[s + -7]),
              (d += e[n + -224] * t[s + 1]),
              (h += (e[n + -144] + e[n + 112]) * t[s + -6]),
              (d -= e[n + 32] * t[s + 2]),
              (h += (e[n + -176] - e[n + 144]) * t[s + -5]),
              (d -= e[n + 96] * t[s + 3]),
              (h += (e[n + -208] + e[n + 176]) * t[s + -4]),
              (d -= e[n + 160] * t[s + 4]),
              (h += (e[n + -240] - e[n + 208]) * t[s + -3]),
              (i = (d -= e[n + 224]) - h),
              (a = d + h),
              (h = r[14]),
              (d = r[15] - h),
              (r[31] = a + h),
              (r[30] = i + d),
              (r[15] = i - d),
              (r[14] = a - h),
              (o = r[28] - r[0]),
              (r[0] += r[28]),
              (r[28] = o * t[s + -36 + 7]),
              (o = r[29] - r[1]),
              (r[1] += r[29]),
              (r[29] = o * t[s + -36 + 7]),
              (o = r[26] - r[2]),
              (r[2] += r[26]),
              (r[26] = o * t[s + -72 + 7]),
              (o = r[27] - r[3]),
              (r[3] += r[27]),
              (r[27] = o * t[s + -72 + 7]),
              (o = r[24] - r[4]),
              (r[4] += r[24]),
              (r[24] = o * t[s + -108 + 7]),
              (o = r[25] - r[5]),
              (r[5] += r[25]),
              (r[25] = o * t[s + -108 + 7]),
              (o = r[22] - r[6]),
              (r[6] += r[22]),
              (r[22] = o * _.SQRT2),
              (o = r[23] - r[7]),
              (r[7] += r[23]),
              (r[23] = o * _.SQRT2 - r[7]),
              (r[7] -= r[6]),
              (r[22] -= r[7]),
              (r[23] -= r[22]),
              (o = r[6]),
              (r[6] = r[31] - o),
              (r[31] = r[31] + o),
              (o = r[7]),
              (r[7] = r[30] - o),
              (r[30] = r[30] + o),
              (o = r[22]),
              (r[22] = r[15] - o),
              (r[15] = r[15] + o),
              (o = r[23]),
              (r[23] = r[14] - o),
              (r[14] = r[14] + o),
              (o = r[20] - r[8]),
              (r[8] += r[20]),
              (r[20] = o * t[s + -180 + 7]),
              (o = r[21] - r[9]),
              (r[9] += r[21]),
              (r[21] = o * t[s + -180 + 7]),
              (o = r[18] - r[10]),
              (r[10] += r[18]),
              (r[18] = o * t[s + -216 + 7]),
              (o = r[19] - r[11]),
              (r[11] += r[19]),
              (r[19] = o * t[s + -216 + 7]),
              (o = r[16] - r[12]),
              (r[12] += r[16]),
              (r[16] = o * t[s + -252 + 7]),
              (o = r[17] - r[13]),
              (r[13] += r[17]),
              (r[17] = o * t[s + -252 + 7]),
              (o = -r[20] + r[24]),
              (r[20] += r[24]),
              (r[24] = o * t[s + -216 + 7]),
              (o = -r[21] + r[25]),
              (r[21] += r[25]),
              (r[25] = o * t[s + -216 + 7]),
              (o = r[4] - r[8]),
              (r[4] += r[8]),
              (r[8] = o * t[s + -216 + 7]),
              (o = r[5] - r[9]),
              (r[5] += r[9]),
              (r[9] = o * t[s + -216 + 7]),
              (o = r[0] - r[12]),
              (r[0] += r[12]),
              (r[12] = o * t[s + -72 + 7]),
              (o = r[1] - r[13]),
              (r[1] += r[13]),
              (r[13] = o * t[s + -72 + 7]),
              (o = r[16] - r[28]),
              (r[16] += r[28]),
              (r[28] = o * t[s + -72 + 7]),
              (o = -r[17] + r[29]),
              (r[17] += r[29]),
              (r[29] = o * t[s + -72 + 7]),
              (o = _.SQRT2 * (r[2] - r[10])),
              (r[2] += r[10]),
              (r[10] = o),
              (o = _.SQRT2 * (r[3] - r[11])),
              (r[3] += r[11]),
              (r[11] = o),
              (o = _.SQRT2 * (-r[18] + r[26])),
              (r[18] += r[26]),
              (r[26] = o - r[18]),
              (o = _.SQRT2 * (-r[19] + r[27])),
              (r[19] += r[27]),
              (r[27] = o - r[19]),
              (o = r[2]),
              (r[19] -= r[3]),
              (r[3] -= o),
              (r[2] = r[31] - o),
              (r[31] += o),
              (o = r[3]),
              (r[11] -= r[19]),
              (r[18] -= o),
              (r[3] = r[30] - o),
              (r[30] += o),
              (o = r[18]),
              (r[27] -= r[11]),
              (r[19] -= o),
              (r[18] = r[15] - o),
              (r[15] += o),
              (o = r[19]),
              (r[10] -= o),
              (r[19] = r[14] - o),
              (r[14] += o),
              (o = r[10]),
              (r[11] -= o),
              (r[10] = r[23] - o),
              (r[23] += o),
              (o = r[11]),
              (r[26] -= o),
              (r[11] = r[22] - o),
              (r[22] += o),
              (o = r[26]),
              (r[27] -= o),
              (r[26] = r[7] - o),
              (r[7] += o),
              (o = r[27]),
              (r[27] = r[6] - o),
              (r[6] += o),
              (o = _.SQRT2 * (r[0] - r[4])),
              (r[0] += r[4]),
              (r[4] = o),
              (o = _.SQRT2 * (r[1] - r[5])),
              (r[1] += r[5]),
              (r[5] = o),
              (o = _.SQRT2 * (r[16] - r[20])),
              (r[16] += r[20]),
              (r[20] = o),
              (o = _.SQRT2 * (r[17] - r[21])),
              (r[17] += r[21]),
              (r[21] = o),
              (o = -_.SQRT2 * (r[8] - r[12])),
              (r[8] += r[12]),
              (r[12] = o - r[8]),
              (o = -_.SQRT2 * (r[9] - r[13])),
              (r[9] += r[13]),
              (r[13] = o - r[9]),
              (o = -_.SQRT2 * (r[25] - r[29])),
              (r[25] += r[29]),
              (r[29] = o - r[25]),
              (o = -_.SQRT2 * (r[24] + r[28])),
              (r[24] -= r[28]),
              (r[28] = o - r[24]),
              (o = r[24] - r[16]),
              (r[24] = o),
              (o = r[20] - o),
              (r[20] = o),
              (o = r[28] - o),
              (r[28] = o),
              (o = r[25] - r[17]),
              (r[25] = o),
              (o = r[21] - o),
              (r[21] = o),
              (o = r[29] - o),
              (r[29] = o),
              (o = r[17] - r[1]),
              (r[17] = o),
              (o = r[9] - o),
              (r[9] = o),
              (o = r[25] - o),
              (r[25] = o),
              (o = r[5] - o),
              (r[5] = o),
              (o = r[21] - o),
              (r[21] = o),
              (o = r[13] - o),
              (r[13] = o),
              (o = r[29] - o),
              (r[29] = o),
              (o = r[1] - r[0]),
              (r[1] = o),
              (o = r[16] - o),
              (r[16] = o),
              (o = r[17] - o),
              (r[17] = o),
              (o = r[8] - o),
              (r[8] = o),
              (o = r[9] - o),
              (r[9] = o),
              (o = r[24] - o),
              (r[24] = o),
              (o = r[25] - o),
              (r[25] = o),
              (o = r[4] - o),
              (r[4] = o),
              (o = r[5] - o),
              (r[5] = o),
              (o = r[20] - o),
              (r[20] = o),
              (o = r[21] - o),
              (r[21] = o),
              (o = r[12] - o),
              (r[12] = o),
              (o = r[13] - o),
              (r[13] = o),
              (o = r[28] - o),
              (r[28] = o),
              (o = r[29] - o),
              (r[29] = o),
              (o = r[0]),
              (r[0] += r[31]),
              (r[31] -= o),
              (o = r[1]),
              (r[1] += r[30]),
              (r[30] -= o),
              (o = r[16]),
              (r[16] += r[15]),
              (r[15] -= o),
              (o = r[17]),
              (r[17] += r[14]),
              (r[14] -= o),
              (o = r[8]),
              (r[8] += r[23]),
              (r[23] -= o),
              (o = r[9]),
              (r[9] += r[22]),
              (r[22] -= o),
              (o = r[24]),
              (r[24] += r[7]),
              (r[7] -= o),
              (o = r[25]),
              (r[25] += r[6]),
              (r[6] -= o),
              (o = r[4]),
              (r[4] += r[27]),
              (r[27] -= o),
              (o = r[5]),
              (r[5] += r[26]),
              (r[26] -= o),
              (o = r[20]),
              (r[20] += r[11]),
              (r[11] -= o),
              (o = r[21]),
              (r[21] += r[10]),
              (r[10] -= o),
              (o = r[12]),
              (r[12] += r[19]),
              (r[19] -= o),
              (o = r[13]),
              (r[13] += r[18]),
              (r[18] -= o),
              (o = r[28]),
              (r[28] += r[3]),
              (r[3] -= o),
              (o = r[29]),
              (r[29] += r[2]),
              (r[2] -= o);
          }
          function u(t, e) {
            for (var n = 0; n < 3; n++) {
              var i, a, o, s, l, c;
              (a =
                (s = t[e + 6] * r[L.SHORT_TYPE][0] - t[e + 15]) +
                (i = t[e + 0] * r[L.SHORT_TYPE][2] - t[e + 9])),
                (o = s - i),
                (l =
                  (s = t[e + 15] * r[L.SHORT_TYPE][0] + t[e + 6]) +
                  (i = t[e + 9] * r[L.SHORT_TYPE][2] + t[e + 0])),
                (c = -s + i),
                (i =
                  2069978111953089e-26 *
                  (t[e + 3] * r[L.SHORT_TYPE][1] - t[e + 12])),
                (s =
                  2069978111953089e-26 *
                  (t[e + 12] * r[L.SHORT_TYPE][1] + t[e + 3])),
                (t[e + 0] = 190752519173728e-25 * a + i),
                (t[e + 15] = 190752519173728e-25 * -l + s),
                (o = 0.8660254037844387 * o * 1907525191737281e-26),
                (l = 0.5 * l * 1907525191737281e-26 + s),
                (t[e + 3] = o - l),
                (t[e + 6] = o + l),
                (a = 0.5 * a * 1907525191737281e-26 - i),
                (c = 0.8660254037844387 * c * 1907525191737281e-26),
                (t[e + 9] = a + c),
                (t[e + 12] = a - c),
                e++;
            }
          }
          function d(t, e, n) {
            var r, i, o, s, l, c, u, d, h, f, p, m, g, _, v, b, y, x;
            (o = n[17] - n[9]),
              (l = n[15] - n[11]),
              (c = n[14] - n[12]),
              (u = n[0] + n[8]),
              (d = n[1] + n[7]),
              (h = n[2] + n[6]),
              (f = n[3] + n[5]),
              (t[e + 17] = u + h - f - (d - n[4])),
              (i = (u + h - f) * a[19] + (d - n[4])),
              (r = (o - l - c) * a[18]),
              (t[e + 5] = r + i),
              (t[e + 6] = r - i),
              (s = (n[16] - n[10]) * a[18]),
              (d = d * a[19] + n[4]),
              (r = o * a[12] + s + l * a[13] + c * a[14]),
              (i = -u * a[16] + d - h * a[17] + f * a[15]),
              (t[e + 1] = r + i),
              (t[e + 2] = r - i),
              (r = o * a[13] - s - l * a[14] + c * a[12]),
              (i = -u * a[17] + d - h * a[15] + f * a[16]),
              (t[e + 9] = r + i),
              (t[e + 10] = r - i),
              (r = o * a[14] - s + l * a[12] - c * a[13]),
              (i = u * a[15] - d + h * a[16] - f * a[17]),
              (t[e + 13] = r + i),
              (t[e + 14] = r - i),
              (p = n[8] - n[0]),
              (g = n[6] - n[2]),
              (_ = n[5] - n[3]),
              (v = n[17] + n[9]),
              (b = n[16] + n[10]),
              (y = n[15] + n[11]),
              (x = n[14] + n[12]),
              (t[e + 0] = v + y + x + (b + n[13])),
              (r = (v + y + x) * a[19] - (b + n[13])),
              (i = (p - g + _) * a[18]),
              (t[e + 11] = r + i),
              (t[e + 12] = r - i),
              (m = (n[7] - n[1]) * a[18]),
              (b = n[13] - b * a[19]),
              (r = v * a[15] - b + y * a[16] + x * a[17]),
              (i = p * a[14] + m + g * a[12] + _ * a[13]),
              (t[e + 3] = r + i),
              (t[e + 4] = r - i),
              (r = -v * a[17] + b - y * a[15] - x * a[16]),
              (i = p * a[13] + m - g * a[14] - _ * a[12]),
              (t[e + 7] = r + i),
              (t[e + 8] = r - i),
              (r = -v * a[16] + b - y * a[17] - x * a[15]),
              (i = p * a[12] - m + g * a[13] - _ * a[14]),
              (t[e + 15] = r + i),
              (t[e + 16] = r - i);
          }
          this.mdct_sub48 = function (t, a, h) {
            for (var f = a, p = 286, m = 0; m < t.channels_out; m++) {
              for (var _ = 0; _ < t.mode_gr; _++) {
                for (
                  var y,
                    x = t.l3_side.tt[_][m],
                    w = x.xr,
                    M = 0,
                    S = t.sb_sample[m][1 - _],
                    A = 0,
                    E = 0;
                  E < 9;
                  E++
                )
                  for (
                    c(f, p, S[A]),
                      c(f, p + 32, S[A + 1]),
                      A += 2,
                      p += 64,
                      y = 1;
                    y < 32;
                    y += 2
                  )
                    S[A - 1][y] *= -1;
                for (y = 0; y < 32; y++, M += 18) {
                  var k = x.block_type,
                    R = t.sb_sample[m][_],
                    T = t.sb_sample[m][1 - _];
                  if (
                    (0 != x.mixed_block_flag && y < 2 && (k = 0),
                    t.amp_filter[y] < 1e-12)
                  )
                    v.fill(w, M + 0, M + 18, 0);
                  else {
                    if (t.amp_filter[y] < 1)
                      for (E = 0; E < 18; E++) T[E][l[y]] *= t.amp_filter[y];
                    if (k == L.SHORT_TYPE) {
                      for (E = -e / 4; E < 0; E++) {
                        var O = r[L.SHORT_TYPE][E + 3];
                        (w[M + 3 * E + 9] =
                          R[9 + E][l[y]] * O - R[8 - E][l[y]]),
                          (w[M + 3 * E + 18] =
                            R[14 - E][l[y]] * O + R[15 + E][l[y]]),
                          (w[M + 3 * E + 10] =
                            R[15 + E][l[y]] * O - R[14 - E][l[y]]),
                          (w[M + 3 * E + 19] =
                            T[2 - E][l[y]] * O + T[3 + E][l[y]]),
                          (w[M + 3 * E + 11] =
                            T[3 + E][l[y]] * O - T[2 - E][l[y]]),
                          (w[M + 3 * E + 20] =
                            T[8 - E][l[y]] * O + T[9 + E][l[y]]);
                      }
                      u(w, M);
                    } else {
                      var P = b(18);
                      for (E = -n / 4; E < 0; E++) {
                        var C, D;
                        (C =
                          r[k][E + 27] * T[E + 9][l[y]] +
                          r[k][E + 36] * T[8 - E][l[y]]),
                          (D =
                            r[k][E + 9] * R[E + 9][l[y]] -
                            r[k][E + 18] * R[8 - E][l[y]]),
                          (P[E + 9] = C - D * i[3 + E + 9]),
                          (P[E + 18] = C * i[3 + E + 9] + D);
                      }
                      d(w, M, P);
                    }
                  }
                  if (k != L.SHORT_TYPE && 0 != y)
                    for (E = 7; E >= 0; --E) {
                      var I, B;
                      (I = w[M + E] * o[20 + E] + w[M + -1 - E] * s[28 + E]),
                        (B = w[M + E] * s[28 + E] - w[M + -1 - E] * o[20 + E]),
                        (w[M + -1 - E] = I),
                        (w[M + E] = B);
                    }
                }
              }
              if (((f = h), (p = 286), 1 == t.mode_gr))
                for (var N = 0; N < 18; N++)
                  g.arraycopy(
                    t.sb_sample[m][1][N],
                    0,
                    t.sb_sample[m][0][N],
                    0,
                    32
                  );
            }
          };
        }
        var x = y,
          w = m.System,
          M = m.new_float,
          S = m.new_float_n;
        function A() {
          (this.l = M(L.SBMAX_l)), (this.s = S([L.SBMAX_s, 3]));
          var t = this;
          this.assign = function (e) {
            w.arraycopy(e.l, 0, t.l, 0, L.SBMAX_l);
            for (var n = 0; n < L.SBMAX_s; n++)
              for (var r = 0; r < 3; r++) t.s[n][r] = e.s[n][r];
          };
        }
        var E = A;
        function k() {
          (this.thm = new E()), (this.en = new E());
        }
        var R = k,
          T = m.System,
          O = m.VbrMode,
          P = m.new_array_n,
          C = m.new_float,
          D = m.new_float_n,
          I = m.new_int,
          B = m.assert;
        function N() {
          var t = x,
            e = R,
            n = N.FFTOFFSET,
            r = N.MPG_MD_MS_LR,
            i = null;
          this.psy = null;
          var a = null,
            o = null,
            s = null;
          this.setModules = function (t, e, n, r) {
            (i = t), (this.psy = e), (a = e), (o = r), (s = n);
          };
          var l = new t();
          function c(t) {
            var e, n;
            if (0 != t.ATH.useAdjust)
              if (
                ((n = t.loudness_sq[0][0]),
                (e = t.loudness_sq[1][0]),
                2 == t.channels_out
                  ? ((n += t.loudness_sq[0][1]), (e += t.loudness_sq[1][1]))
                  : ((n += n), (e += e)),
                2 == t.mode_gr && (n = Math.max(n, e)),
                (n *= 0.5),
                (n *= t.ATH.aaSensitivityP) > 0.03125)
              )
                t.ATH.adjust >= 1
                  ? (t.ATH.adjust = 1)
                  : t.ATH.adjust < t.ATH.adjustLimit &&
                    (t.ATH.adjust = t.ATH.adjustLimit),
                  (t.ATH.adjustLimit = 1);
              else {
                var r = 31.98 * n + 625e-6;
                t.ATH.adjust >= r
                  ? ((t.ATH.adjust *= 0.075 * r + 0.925),
                    t.ATH.adjust < r && (t.ATH.adjust = r))
                  : t.ATH.adjustLimit >= r
                  ? (t.ATH.adjust = r)
                  : t.ATH.adjust < t.ATH.adjustLimit &&
                    (t.ATH.adjust = t.ATH.adjustLimit),
                  (t.ATH.adjustLimit = r);
              }
            else t.ATH.adjust = 1;
          }
          function u(t) {
            var e, n;
            for (
              B(0 <= t.bitrate_index && t.bitrate_index < 16),
                B(0 <= t.mode_ext && t.mode_ext < 4),
                t.bitrate_stereoMode_Hist[t.bitrate_index][4]++,
                t.bitrate_stereoMode_Hist[15][4]++,
                2 == t.channels_out &&
                  (t.bitrate_stereoMode_Hist[t.bitrate_index][t.mode_ext]++,
                  t.bitrate_stereoMode_Hist[15][t.mode_ext]++),
                e = 0;
              e < t.mode_gr;
              ++e
            )
              for (n = 0; n < t.channels_out; ++n) {
                var r = 0 | t.l3_side.tt[e][n].block_type;
                0 != t.l3_side.tt[e][n].mixed_block_flag && (r = 4),
                  t.bitrate_blockType_Hist[t.bitrate_index][r]++,
                  t.bitrate_blockType_Hist[t.bitrate_index][5]++,
                  t.bitrate_blockType_Hist[15][r]++,
                  t.bitrate_blockType_Hist[15][5]++;
              }
          }
          function d(t, e) {
            var n,
              r,
              i = t.internal_flags;
            if (0 == i.lame_encode_frame_init) {
              var a,
                o,
                s = C(2014),
                c = C(2014);
              for (
                i.lame_encode_frame_init = 1, a = 0, o = 0;
                a < 286 + 576 * (1 + i.mode_gr);
                ++a
              )
                a < 576 * i.mode_gr
                  ? ((s[a] = 0), 2 == i.channels_out && (c[a] = 0))
                  : ((s[a] = e[0][o]),
                    2 == i.channels_out && (c[a] = e[1][o]),
                    ++o);
              for (r = 0; r < i.mode_gr; r++)
                for (n = 0; n < i.channels_out; n++)
                  i.l3_side.tt[r][n].block_type = N.SHORT_TYPE;
              l.mdct_sub48(i, s, c),
                B(576 >= N.FFTOFFSET),
                B(i.mf_size >= N.BLKSIZE + t.framesize - N.FFTOFFSET),
                B(i.mf_size >= 512 + t.framesize - 32);
            }
          }
          this.lame_encode_mp3_frame = function (t, h, f, p, m, g) {
            var _,
              v = P([2, 2]);
            (v[0][0] = new e()),
              (v[0][1] = new e()),
              (v[1][0] = new e()),
              (v[1][1] = new e());
            var b,
              y = P([2, 2]);
            (y[0][0] = new e()),
              (y[0][1] = new e()),
              (y[1][0] = new e()),
              (y[1][1] = new e());
            var x,
              w,
              M,
              S = [null, null],
              A = t.internal_flags,
              E = D([2, 4]),
              k = [0.5, 0.5],
              R = [
                [0, 0],
                [0, 0],
              ],
              C = [
                [0, 0],
                [0, 0],
              ];
            if (
              ((S[0] = h),
              (S[1] = f),
              0 == A.lame_encode_frame_init && d(t, S),
              (A.padding = 0),
              (A.slot_lag -= A.frac_SpF) < 0 &&
                ((A.slot_lag += t.out_samplerate), (A.padding = 1)),
              0 != A.psymodel)
            ) {
              var B = [null, null],
                L = 0,
                V = I(2);
              for (M = 0; M < A.mode_gr; M++) {
                for (w = 0; w < A.channels_out; w++)
                  (B[w] = S[w]), (L = 576 + 576 * M - N.FFTOFFSET);
                if (
                  0 !=
                  (t.VBR == O.vbr_mtrh || t.VBR == O.vbr_mt
                    ? a.L3psycho_anal_vbr(t, B, L, M, v, y, R[M], C[M], E[M], V)
                    : a.L3psycho_anal_ns(t, B, L, M, v, y, R[M], C[M], E[M], V))
                )
                  return -4;
                for (
                  t.mode == MPEGMode.JOINT_STEREO &&
                    ((k[M] = E[M][2] + E[M][3]),
                    k[M] > 0 && (k[M] = E[M][3] / k[M])),
                    w = 0;
                  w < A.channels_out;
                  w++
                ) {
                  var F = A.l3_side.tt[M][w];
                  (F.block_type = V[w]), (F.mixed_block_flag = 0);
                }
              }
            } else
              for (M = 0; M < A.mode_gr; M++)
                for (w = 0; w < A.channels_out; w++)
                  (A.l3_side.tt[M][w].block_type = N.NORM_TYPE),
                    (A.l3_side.tt[M][w].mixed_block_flag = 0),
                    (C[M][w] = R[M][w] = 700);
            if (
              (c(A),
              l.mdct_sub48(A, S[0], S[1]),
              (A.mode_ext = N.MPG_MD_LR_LR),
              t.force_ms)
            )
              A.mode_ext = N.MPG_MD_MS_LR;
            else if (t.mode == MPEGMode.JOINT_STEREO) {
              var H = 0,
                j = 0;
              for (M = 0; M < A.mode_gr; M++)
                for (w = 0; w < A.channels_out; w++)
                  (H += C[M][w]), (j += R[M][w]);
              if (H <= 1 * j) {
                var Y = A.l3_side.tt[0],
                  W = A.l3_side.tt[A.mode_gr - 1];
                Y[0].block_type == Y[1].block_type &&
                  W[0].block_type == W[1].block_type &&
                  (A.mode_ext = N.MPG_MD_MS_LR);
              }
            }
            if (
              (A.mode_ext == r ? ((b = y), (x = C)) : ((b = v), (x = R)),
              t.analysis && null != A.pinfo)
            )
              for (M = 0; M < A.mode_gr; M++)
                for (w = 0; w < A.channels_out; w++)
                  (A.pinfo.ms_ratio[M] = A.ms_ratio[M]),
                    (A.pinfo.ms_ener_ratio[M] = k[M]),
                    (A.pinfo.blocktype[M][w] = A.l3_side.tt[M][w].block_type),
                    (A.pinfo.pe[M][w] = x[M][w]),
                    T.arraycopy(
                      A.l3_side.tt[M][w].xr,
                      0,
                      A.pinfo.xr[M][w],
                      0,
                      576
                    ),
                    A.mode_ext == r &&
                      ((A.pinfo.ers[M][w] = A.pinfo.ers[M][w + 2]),
                      T.arraycopy(
                        A.pinfo.energy[M][w + 2],
                        0,
                        A.pinfo.energy[M][w],
                        0,
                        A.pinfo.energy[M][w].length
                      ));
            if (t.VBR == O.vbr_off || t.VBR == O.vbr_abr) {
              var U, z;
              for (U = 0; U < 18; U++)
                A.nsPsy.pefirbuf[U] = A.nsPsy.pefirbuf[U + 1];
              for (z = 0, M = 0; M < A.mode_gr; M++)
                for (w = 0; w < A.channels_out; w++) z += x[M][w];
              for (
                A.nsPsy.pefirbuf[18] = z, z = A.nsPsy.pefirbuf[9], U = 0;
                U < 9;
                U++
              )
                z +=
                  (A.nsPsy.pefirbuf[U] + A.nsPsy.pefirbuf[18 - U]) *
                  N.fircoef[U];
              for (
                z = (3350 * A.mode_gr * A.channels_out) / z, M = 0;
                M < A.mode_gr;
                M++
              )
                for (w = 0; w < A.channels_out; w++) x[M][w] *= z;
            }
            if (
              (A.iteration_loop.iteration_loop(t, x, k, b),
              i.format_bitstream(t),
              (_ = i.copy_buffer(A, p, m, g, 1)),
              t.bWriteVbrTag && o.addVbrFrame(t),
              t.analysis && null != A.pinfo)
            ) {
              for (w = 0; w < A.channels_out; w++) {
                var G;
                for (G = 0; G < n; G++)
                  A.pinfo.pcmdata[w][G] = A.pinfo.pcmdata[w][G + t.framesize];
                for (G = n; G < 1600; G++) A.pinfo.pcmdata[w][G] = S[w][G - n];
              }
              s.set_frame_pinfo(t, b);
            }
            return u(A), _;
          };
        }
        (N.ENCDELAY = 576),
          (N.POSTDELAY = 1152),
          (N.MDCTDELAY = 48),
          (N.FFTOFFSET = 224 + N.MDCTDELAY),
          (N.DECDELAY = 528),
          (N.SBLIMIT = 32),
          (N.CBANDS = 64),
          (N.SBPSY_l = 21),
          (N.SBPSY_s = 12),
          (N.SBMAX_l = 22),
          (N.SBMAX_s = 13),
          (N.PSFB21 = 6),
          (N.PSFB12 = 6),
          (N.BLKSIZE = 1024),
          (N.HBLKSIZE = N.BLKSIZE / 2 + 1),
          (N.BLKSIZE_s = 256),
          (N.HBLKSIZE_s = N.BLKSIZE_s / 2 + 1),
          (N.NORM_TYPE = 0),
          (N.START_TYPE = 1),
          (N.SHORT_TYPE = 2),
          (N.STOP_TYPE = 3),
          (N.MPG_MD_LR_LR = 0),
          (N.MPG_MD_LR_I = 1),
          (N.MPG_MD_MS_LR = 2),
          (N.MPG_MD_MS_I = 3),
          (N.fircoef = [
            -0.1039435,
            -0.1892065,
            5 * -0.0432472,
            -0.155915,
            3898045e-23,
            0.0467745 * 5,
            0.50455,
            0.756825,
            0.187098 * 5,
          ]);
        var L = N,
          V = m.Util,
          F = m.new_float;
        function H() {
          var t = F(L.BLKSIZE),
            e = F(L.BLKSIZE_s / 2),
            n = [
              0.9238795325112867, 0.3826834323650898, 0.9951847266721969,
              0.0980171403295606, 0.9996988186962042, 0.02454122852291229,
              0.9999811752826011, 0.006135884649154475,
            ];
          function r(t, e, r) {
            var i,
              a,
              o,
              s = 0,
              l = e + (r <<= 1);
            i = 4;
            do {
              var c, u, d, h, f, p, m;
              (m = i >> 1),
                (p = (f = i << 1) + (h = i)),
                (i = f << 1),
                (o = (a = e) + m);
              do {
                (w = t[a + 0] - t[a + h]),
                  (x = t[a + 0] + t[a + h]),
                  (E = t[a + f] - t[a + p]),
                  (S = t[a + f] + t[a + p]),
                  (t[a + f] = x - S),
                  (t[a + 0] = x + S),
                  (t[a + p] = w - E),
                  (t[a + h] = w + E),
                  (w = t[o + 0] - t[o + h]),
                  (x = t[o + 0] + t[o + h]),
                  (E = V.SQRT2 * t[o + p]),
                  (S = V.SQRT2 * t[o + f]),
                  (t[o + f] = x - S),
                  (t[o + 0] = x + S),
                  (t[o + p] = w - E),
                  (t[o + h] = w + E),
                  (o += i),
                  (a += i);
              } while (a < l);
              for (u = n[s + 0], c = n[s + 1], d = 1; d < m; d++) {
                var g, _;
                (g = 1 - 2 * c * c),
                  (_ = 2 * c * u),
                  (a = e + d),
                  (o = e + h - d);
                do {
                  var v, b, y, x, w, M, S, A, E, k;
                  (b = _ * t[a + h] - g * t[o + h]),
                    (v = g * t[a + h] + _ * t[o + h]),
                    (w = t[a + 0] - v),
                    (x = t[a + 0] + v),
                    (M = t[o + 0] - b),
                    (y = t[o + 0] + b),
                    (b = _ * t[a + p] - g * t[o + p]),
                    (v = g * t[a + p] + _ * t[o + p]),
                    (E = t[a + f] - v),
                    (S = t[a + f] + v),
                    (k = t[o + f] - b),
                    (A = t[o + f] + b),
                    (b = c * S - u * k),
                    (v = u * S + c * k),
                    (t[a + f] = x - v),
                    (t[a + 0] = x + v),
                    (t[o + p] = M - b),
                    (t[o + h] = M + b),
                    (b = u * A - c * E),
                    (v = c * A + u * E),
                    (t[o + f] = y - v),
                    (t[o + 0] = y + v),
                    (t[a + p] = w - b),
                    (t[a + h] = w + b),
                    (o += i),
                    (a += i);
                } while (a < l);
                (u = (g = u) * n[s + 0] - c * n[s + 1]),
                  (c = g * n[s + 1] + c * n[s + 0]);
              }
              s += 2;
            } while (i < r);
          }
          var i = [
            0, 128, 64, 192, 32, 160, 96, 224, 16, 144, 80, 208, 48, 176, 112,
            240, 8, 136, 72, 200, 40, 168, 104, 232, 24, 152, 88, 216, 56, 184,
            120, 248, 4, 132, 68, 196, 36, 164, 100, 228, 20, 148, 84, 212, 52,
            180, 116, 244, 12, 140, 76, 204, 44, 172, 108, 236, 28, 156, 92,
            220, 60, 188, 124, 252, 2, 130, 66, 194, 34, 162, 98, 226, 18, 146,
            82, 210, 50, 178, 114, 242, 10, 138, 74, 202, 42, 170, 106, 234, 26,
            154, 90, 218, 58, 186, 122, 250, 6, 134, 70, 198, 38, 166, 102, 230,
            22, 150, 86, 214, 54, 182, 118, 246, 14, 142, 78, 206, 46, 174, 110,
            238, 30, 158, 94, 222, 62, 190, 126, 254,
          ];
          (this.fft_short = function (t, n, a, o, s) {
            for (var l = 0; l < 3; l++) {
              var c = L.BLKSIZE_s / 2,
                u = 65535 & (192 * (l + 1)),
                d = L.BLKSIZE_s / 8 - 1;
              do {
                var h,
                  f,
                  p,
                  m,
                  g,
                  _ = 255 & i[d << 2];
                (f =
                  (h = e[_] * o[a][s + _ + u]) -
                  (g = e[127 - _] * o[a][s + _ + u + 128])),
                  (h += g),
                  (m =
                    (p = e[_ + 64] * o[a][s + _ + u + 64]) -
                    (g = e[63 - _] * o[a][s + _ + u + 192])),
                  (p += g),
                  (c -= 4),
                  (n[l][c + 0] = h + p),
                  (n[l][c + 2] = h - p),
                  (n[l][c + 1] = f + m),
                  (n[l][c + 3] = f - m),
                  (f =
                    (h = e[_ + 1] * o[a][s + _ + u + 1]) -
                    (g = e[126 - _] * o[a][s + _ + u + 129])),
                  (h += g),
                  (m =
                    (p = e[_ + 65] * o[a][s + _ + u + 65]) -
                    (g = e[62 - _] * o[a][s + _ + u + 193])),
                  (p += g),
                  (n[l][c + L.BLKSIZE_s / 2 + 0] = h + p),
                  (n[l][c + L.BLKSIZE_s / 2 + 2] = h - p),
                  (n[l][c + L.BLKSIZE_s / 2 + 1] = f + m),
                  (n[l][c + L.BLKSIZE_s / 2 + 3] = f - m);
              } while (--d >= 0);
              r(n[l], c, L.BLKSIZE_s / 2);
            }
          }),
            (this.fft_long = function (e, n, a, o, s) {
              var l = L.BLKSIZE / 8 - 1,
                c = L.BLKSIZE / 2;
              do {
                var u,
                  d,
                  h,
                  f,
                  p,
                  m = 255 & i[l];
                (d =
                  (u = t[m] * o[a][s + m]) -
                  (p = t[m + 512] * o[a][s + m + 512])),
                  (u += p),
                  (f =
                    (h = t[m + 256] * o[a][s + m + 256]) -
                    (p = t[m + 768] * o[a][s + m + 768])),
                  (h += p),
                  (n[0 + (c -= 4)] = u + h),
                  (n[c + 2] = u - h),
                  (n[c + 1] = d + f),
                  (n[c + 3] = d - f),
                  (d =
                    (u = t[m + 1] * o[a][s + m + 1]) -
                    (p = t[m + 513] * o[a][s + m + 513])),
                  (u += p),
                  (f =
                    (h = t[m + 257] * o[a][s + m + 257]) -
                    (p = t[m + 769] * o[a][s + m + 769])),
                  (h += p),
                  (n[c + L.BLKSIZE / 2 + 0] = u + h),
                  (n[c + L.BLKSIZE / 2 + 2] = u - h),
                  (n[c + L.BLKSIZE / 2 + 1] = d + f),
                  (n[c + L.BLKSIZE / 2 + 3] = d - f);
              } while (--l >= 0);
              r(n, c, L.BLKSIZE / 2);
            }),
            (this.init_fft = function (n) {
              for (var r = 0; r < L.BLKSIZE; r++)
                t[r] =
                  0.42 -
                  0.5 * Math.cos((2 * Math.PI * (r + 0.5)) / L.BLKSIZE) +
                  0.08 * Math.cos((4 * Math.PI * (r + 0.5)) / L.BLKSIZE);
              for (r = 0; r < L.BLKSIZE_s / 2; r++)
                e[r] =
                  0.5 * (1 - Math.cos((2 * Math.PI * (r + 0.5)) / L.BLKSIZE_s));
            });
        }
        var j = H,
          Y = m.VbrMode,
          W = m.Float,
          U = m.ShortBlock,
          z = m.Util,
          G = m.Arrays,
          q = m.new_float,
          X = m.new_float_n,
          Z = m.new_int,
          K = m.assert;
        function $() {
          var t = new j(),
            e = 2.302585092994046,
            n = 2,
            r = 16,
            i = 2,
            a = 16,
            o = 0.34,
            s = 1 / 217621504 / (L.BLKSIZE / 2),
            l = 0.01,
            c = 0.8,
            u = 0.6,
            d = 0.3,
            h = 3.5,
            f = 21,
            p = 0.2302585093;
          function m(t) {
            return t;
          }
          function g(t, e) {
            for (var n = 0, r = 0; r < L.BLKSIZE / 2; ++r)
              n += t[r] * e.ATH.eql_w[r];
            return (n *= s);
          }
          function _(e, n, r, i, a, o, s, l, c, u, d) {
            var h = e.internal_flags;
            if (c < 2)
              t.fft_long(h, i[a], c, u, d), t.fft_short(h, o[s], c, u, d);
            else if (2 == c) {
              for (var f = L.BLKSIZE - 1; f >= 0; --f) {
                var p = i[a + 0][f],
                  _ = i[a + 1][f];
                (i[a + 0][f] = (p + _) * z.SQRT2 * 0.5),
                  (i[a + 1][f] = (p - _) * z.SQRT2 * 0.5);
              }
              for (var v = 2; v >= 0; --v)
                for (f = L.BLKSIZE_s - 1; f >= 0; --f)
                  (p = o[s + 0][v][f]),
                    (_ = o[s + 1][v][f]),
                    (o[s + 0][v][f] = (p + _) * z.SQRT2 * 0.5),
                    (o[s + 1][v][f] = (p - _) * z.SQRT2 * 0.5);
            }
            for (
              n[0] = m(i[a + 0][0]), n[0] *= n[0], f = L.BLKSIZE / 2 - 1;
              f >= 0;
              --f
            ) {
              var b = i[a + 0][L.BLKSIZE / 2 - f],
                y = i[a + 0][L.BLKSIZE / 2 + f];
              n[L.BLKSIZE / 2 - f] = m(0.5 * (b * b + y * y));
            }
            for (v = 2; v >= 0; --v)
              for (
                r[v][0] = o[s + 0][v][0],
                  r[v][0] *= r[v][0],
                  f = L.BLKSIZE_s / 2 - 1;
                f >= 0;
                --f
              )
                (b = o[s + 0][v][L.BLKSIZE_s / 2 - f]),
                  (y = o[s + 0][v][L.BLKSIZE_s / 2 + f]),
                  (r[v][L.BLKSIZE_s / 2 - f] = m(0.5 * (b * b + y * y)));
            var x = 0;
            for (f = 11; f < L.HBLKSIZE; f++) x += n[f];
            if (((h.tot_ener[c] = x), e.analysis)) {
              for (f = 0; f < L.HBLKSIZE; f++)
                (h.pinfo.energy[l][c][f] = h.pinfo.energy_save[c][f]),
                  (h.pinfo.energy_save[c][f] = n[f]);
              h.pinfo.pe[l][c] = h.pe[c];
            }
            2 == e.athaa_loudapprox &&
              c < 2 &&
              ((h.loudness_sq[l][c] = h.loudness_sq_save[c]),
              (h.loudness_sq_save[c] = g(n, h)));
          }
          var v,
            b,
            y,
            x = 8,
            w = 23,
            M = 15,
            S = [
              1, 0.79433, 0.63096, 0.63096, 0.63096, 0.63096, 0.63096, 0.25119,
              0.11749,
            ];
          function A() {
            (v = Math.pow(10, (x + 1) / 16)),
              (b = Math.pow(10, (w + 1) / 16)),
              (y = Math.pow(10, M / 10));
          }
          var E = [
              3.3246 * 3.3246,
              3.23837 * 3.23837,
              9.9500500969,
              9.0247369744,
              8.1854926609,
              7.0440875649,
              2.46209 * 2.46209,
              2.284 * 2.284,
              4.4892710641,
              1.96552 * 1.96552,
              1.82335 * 1.82335,
              1.69146 * 1.69146,
              2.4621061921,
              2.1508568964,
              1.37074 * 1.37074,
              1.31036 * 1.31036,
              1.5691069696,
              1.4555939904,
              1.16203 * 1.16203,
              1.2715945225,
              1.09428 * 1.09428,
              1.0659 * 1.0659,
              1.0779838276,
              1.0382591025,
              1,
            ],
            k = [
              1.7782755904,
              1.35879 * 1.35879,
              1.38454 * 1.38454,
              1.39497 * 1.39497,
              1.40548 * 1.40548,
              1.3537 * 1.3537,
              1.6999465924,
              1.22321 * 1.22321,
              1.3169398564,
              1,
            ],
            R = [
              5.5396212496,
              2.29259 * 2.29259,
              4.9868695969,
              2.12675 * 2.12675,
              2.02545 * 2.02545,
              1.87894 * 1.87894,
              1.74303 * 1.74303,
              1.61695 * 1.61695,
              2.2499700001,
              1.39148 * 1.39148,
              1.29083 * 1.29083,
              1.19746 * 1.19746,
              1.2339655056,
              1.0779838276,
            ];
          function T(t, e, n, r, i, a) {
            var o, s, l;
            if (e > t) {
              if (!(e < t * b)) return t + e;
              o = e / t;
            } else {
              if (t >= e * b) return t + e;
              o = t / e;
            }
            if ((K(t >= 0), K(e >= 0), (t += e), r + 3 <= 6)) {
              if (o >= v) return t;
              var c = 0 | z.FAST_LOG10_X(o, 16);
              return t * k[c];
            }
            return (
              (c = 0 | z.FAST_LOG10_X(o, 16)),
              (e =
                0 != a
                  ? i.ATH.cb_s[n] * i.ATH.adjust
                  : i.ATH.cb_l[n] * i.ATH.adjust),
              K(e >= 0),
              t < y * e
                ? t > e
                  ? ((s = 1),
                    c <= 13 && (s = R[c]),
                    (l = z.FAST_LOG10_X(t / e, 10 / 15)),
                    t * ((E[c] - s) * l + s))
                  : c > 13
                  ? t
                  : t * R[c]
                : t * E[c]
            );
          }
          var O = [
            1.7782755904,
            1.35879 * 1.35879,
            1.38454 * 1.38454,
            1.39497 * 1.39497,
            1.40548 * 1.40548,
            1.3537 * 1.3537,
            1.6999465924,
            1.22321 * 1.22321,
            1.3169398564,
            1,
          ];
          function P(t, e, n) {
            var r;
            if ((t < 0 && (t = 0), e < 0 && (e = 0), t <= 0)) return e;
            if (e <= 0) return t;
            if (((r = e > t ? e / t : t / e), -2 <= n && n <= 2)) {
              if (r >= v) return t + e;
              var i = 0 | z.FAST_LOG10_X(r, 16);
              return (t + e) * O[i];
            }
            return r < b ? t + e : (t < e && (t = e), t);
          }
          function C(t, e) {
            var n = t.internal_flags;
            if (n.channels_out > 1) {
              for (var r = 0; r < L.SBMAX_l; r++) {
                var i = n.thm[0].l[r],
                  a = n.thm[1].l[r];
                (n.thm[0].l[r] += a * e), (n.thm[1].l[r] += i * e);
              }
              for (r = 0; r < L.SBMAX_s; r++)
                for (var o = 0; o < 3; o++)
                  (i = n.thm[0].s[r][o]),
                    (a = n.thm[1].s[r][o]),
                    (n.thm[0].s[r][o] += a * e),
                    (n.thm[1].s[r][o] += i * e);
            }
          }
          function D(t) {
            for (var e = 0; e < L.SBMAX_l; e++)
              if (
                !(
                  t.thm[0].l[e] > 1.58 * t.thm[1].l[e] ||
                  t.thm[1].l[e] > 1.58 * t.thm[0].l[e]
                )
              ) {
                var n = t.mld_l[e] * t.en[3].l[e],
                  r = Math.max(t.thm[2].l[e], Math.min(t.thm[3].l[e], n));
                n = t.mld_l[e] * t.en[2].l[e];
                var i = Math.max(t.thm[3].l[e], Math.min(t.thm[2].l[e], n));
                (t.thm[2].l[e] = r), (t.thm[3].l[e] = i);
              }
            for (e = 0; e < L.SBMAX_s; e++)
              for (var a = 0; a < 3; a++)
                t.thm[0].s[e][a] > 1.58 * t.thm[1].s[e][a] ||
                  t.thm[1].s[e][a] > 1.58 * t.thm[0].s[e][a] ||
                  ((n = t.mld_s[e] * t.en[3].s[e][a]),
                  (r = Math.max(
                    t.thm[2].s[e][a],
                    Math.min(t.thm[3].s[e][a], n)
                  )),
                  (n = t.mld_s[e] * t.en[2].s[e][a]),
                  (i = Math.max(
                    t.thm[3].s[e][a],
                    Math.min(t.thm[2].s[e][a], n)
                  )),
                  (t.thm[2].s[e][a] = r),
                  (t.thm[3].s[e][a] = i));
          }
          function I(t, e, n) {
            var r = e,
              i = Math.pow(10, n);
            (e *= 2), (r *= 2);
            for (var a = 0; a < L.SBMAX_l; a++)
              (u = t.ATH.cb_l[t.bm_l[a]] * i),
                (s = Math.min(
                  Math.max(t.thm[0].l[a], u),
                  Math.max(t.thm[1].l[a], u)
                )) *
                  e <
                  (l = Math.max(t.thm[2].l[a], u)) +
                    (c = Math.max(t.thm[3].l[a], u)) &&
                  K((l *= d = (s * r) / (l + c)) + (c *= d) > 0),
                (t.thm[2].l[a] = Math.min(l, t.thm[2].l[a])),
                (t.thm[3].l[a] = Math.min(c, t.thm[3].l[a]));
            for (i *= L.BLKSIZE_s / L.BLKSIZE, a = 0; a < L.SBMAX_s; a++)
              for (var o = 0; o < 3; o++) {
                var s, l, c, u, d;
                (u = t.ATH.cb_s[t.bm_s[a]] * i),
                  (s = Math.min(
                    Math.max(t.thm[0].s[a][o], u),
                    Math.max(t.thm[1].s[a][o], u)
                  )) *
                    e <
                    (l = Math.max(t.thm[2].s[a][o], u)) +
                      (c = Math.max(t.thm[3].s[a][o], u)) &&
                    K((l *= d = (s * e) / (l + c)) + (c *= d) > 0),
                  (t.thm[2].s[a][o] = Math.min(t.thm[2].s[a][o], l)),
                  (t.thm[3].s[a][o] = Math.min(t.thm[3].s[a][o], c));
              }
          }
          function B(t, e, n, r, i) {
            var a,
              o,
              s = 0,
              l = 0;
            for (a = o = 0; a < L.SBMAX_s; ++o, ++a) {
              for (var c = t.bo_s[a], u = t.npart_s, d = c < u ? c : u; o < d; )
                K(e[o] >= 0), K(n[o] >= 0), (s += e[o]), (l += n[o]), o++;
              if (((t.en[r].s[a][i] = s), (t.thm[r].s[a][i] = l), o >= u)) {
                ++a;
                break;
              }
              K(e[o] >= 0), K(n[o] >= 0);
              var h = t.PSY.bo_s_weight[a],
                f = 1 - h;
              (s = h * e[o]),
                (l = h * n[o]),
                (t.en[r].s[a][i] += s),
                (t.thm[r].s[a][i] += l),
                (s = f * e[o]),
                (l = f * n[o]);
            }
            for (; a < L.SBMAX_s; ++a)
              (t.en[r].s[a][i] = 0), (t.thm[r].s[a][i] = 0);
          }
          function N(t, e, n, r) {
            var i,
              a,
              o = 0,
              s = 0;
            for (i = a = 0; i < L.SBMAX_l; ++a, ++i) {
              for (var l = t.bo_l[i], c = t.npart_l, u = l < c ? l : c; a < u; )
                K(e[a] >= 0), K(n[a] >= 0), (o += e[a]), (s += n[a]), a++;
              if (((t.en[r].l[i] = o), (t.thm[r].l[i] = s), a >= c)) {
                ++i;
                break;
              }
              K(e[a] >= 0), K(n[a] >= 0);
              var d = t.PSY.bo_l_weight[i],
                h = 1 - d;
              (o = d * e[a]),
                (s = d * n[a]),
                (t.en[r].l[i] += o),
                (t.thm[r].l[i] += s),
                (o = h * e[a]),
                (s = h * n[a]);
            }
            for (; i < L.SBMAX_l; ++i) (t.en[r].l[i] = 0), (t.thm[r].l[i] = 0);
          }
          function V(t, e, n, r, o, s) {
            var l,
              c,
              u = t.internal_flags;
            for (c = l = 0; c < u.npart_s; ++c) {
              for (
                var d = 0, h = 0, f = u.numlines_s[c], p = 0;
                p < f;
                ++p, ++l
              ) {
                var m = e[s][l];
                (d += m), h < m && (h = m);
              }
              n[c] = d;
            }
            for (
              K(c == u.npart_s), K(129 == l), l = c = 0;
              c < u.npart_s;
              c++
            ) {
              var g = u.s3ind_s[c][0],
                _ = u.s3_ss[l++] * n[g];
              for (++g; g <= u.s3ind_s[c][1]; )
                (_ += u.s3_ss[l] * n[g]), ++l, ++g;
              var v = i * u.nb_s1[o][c];
              if (
                ((r[c] = Math.min(_, v)),
                u.blocktype_old[1 & o] == L.SHORT_TYPE)
              ) {
                v = a * u.nb_s2[o][c];
                var b = r[c];
                r[c] = Math.min(v, b);
              }
              (u.nb_s2[o][c] = u.nb_s1[o][c]),
                (u.nb_s1[o][c] = _),
                K(r[c] >= 0);
            }
            for (; c <= L.CBANDS; ++c) (n[c] = 0), (r[c] = 0);
          }
          function F(t, e, n, r) {
            var i = t.internal_flags;
            t.short_blocks != U.short_block_coupled ||
              (0 != e[0] && 0 != e[1]) ||
              (e[0] = e[1] = 0);
            for (var a = 0; a < i.channels_out; a++)
              (r[a] = L.NORM_TYPE),
                t.short_blocks == U.short_block_dispensed && (e[a] = 1),
                t.short_blocks == U.short_block_forced && (e[a] = 0),
                0 != e[a]
                  ? (K(i.blocktype_old[a] != L.START_TYPE),
                    i.blocktype_old[a] == L.SHORT_TYPE && (r[a] = L.STOP_TYPE))
                  : ((r[a] = L.SHORT_TYPE),
                    i.blocktype_old[a] == L.NORM_TYPE &&
                      (i.blocktype_old[a] = L.START_TYPE),
                    i.blocktype_old[a] == L.STOP_TYPE &&
                      (i.blocktype_old[a] = L.SHORT_TYPE)),
                (n[a] = i.blocktype_old[a]),
                (i.blocktype_old[a] = r[a]);
          }
          function H(t, e, n) {
            return n >= 1 ? t : n <= 0 ? e : e > 0 ? Math.pow(t / e, n) * e : 0;
          }
          var $ = [
            11.8, 13.6, 17.2, 32, 46.5, 51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130,
          ];
          function Q(t, n) {
            for (var r = 309.07, i = 0; i < L.SBMAX_s - 1; i++)
              for (var a = 0; a < 3; a++) {
                var o = t.thm.s[i][a];
                if ((K(i < $.length), o > 0)) {
                  var s = o * n,
                    l = t.en.s[i][a];
                  l > s &&
                    (l > 1e10 * s
                      ? (r += $[i] * (10 * e))
                      : (K(s > 0), (r += $[i] * z.FAST_LOG10(l / s))));
                }
              }
            return r;
          }
          var J = [
            6.8, 5.8, 5.8, 6.4, 6.5, 9.9, 12.1, 14.4, 15, 18.9, 21.6, 26.9,
            34.2, 40.2, 46.8, 56.5, 60.7, 73.9, 85.7, 93.4, 126.1,
          ];
          function tt(t, n) {
            for (var r = 281.0575, i = 0; i < L.SBMAX_l - 1; i++) {
              var a = t.thm.l[i];
              if ((K(i < J.length), a > 0)) {
                var o = a * n,
                  s = t.en.l[i];
                s > o &&
                  (s > 1e10 * o
                    ? (r += J[i] * (10 * e))
                    : (K(o > 0), (r += J[i] * z.FAST_LOG10(s / o))));
              }
            }
            return r;
          }
          function et(t, e, n, r, i) {
            var a, o;
            for (a = o = 0; a < t.npart_l; ++a) {
              var s,
                l = 0,
                c = 0;
              for (s = 0; s < t.numlines_l[a]; ++s, ++o) {
                var u = e[o];
                K(u >= 0), (l += u), c < u && (c = u);
              }
              (n[a] = l),
                (r[a] = c),
                (i[a] = l * t.rnumlines_l[a]),
                K(t.rnumlines_l[a] >= 0),
                K(l >= 0),
                K(n[a] >= 0),
                K(r[a] >= 0),
                K(i[a] >= 0);
            }
          }
          function nt(t, e, n, r) {
            var i = S.length - 1,
              a = 0,
              o = n[a] + n[a + 1];
            for (
              K(o >= 0),
                o > 0
                  ? ((s = e[a]) < e[a + 1] && (s = e[a + 1]),
                    K(t.numlines_l[a] + t.numlines_l[a + 1] - 1 > 0),
                    (l =
                      0 |
                      (o =
                        (20 * (2 * s - o)) /
                        (o * (t.numlines_l[a] + t.numlines_l[a + 1] - 1)))) >
                      i && (l = i),
                    (r[a] = l))
                  : (r[a] = 0),
                a = 1;
              a < t.npart_l - 1;
              a++
            ) {
              var s, l;
              (o = n[a - 1] + n[a] + n[a + 1]),
                K(o >= 0),
                o > 0
                  ? ((s = e[a - 1]) < e[a] && (s = e[a]),
                    s < e[a + 1] && (s = e[a + 1]),
                    K(
                      t.numlines_l[a - 1] +
                        t.numlines_l[a] +
                        t.numlines_l[a + 1] -
                        1 >
                        0
                    ),
                    (l =
                      0 |
                      (o =
                        (20 * (3 * s - o)) /
                        (o *
                          (t.numlines_l[a - 1] +
                            t.numlines_l[a] +
                            t.numlines_l[a + 1] -
                            1)))) > i && (l = i),
                    (r[a] = l))
                  : (r[a] = 0);
            }
            K(a > 0),
              K(a == t.npart_l - 1),
              (o = n[a - 1] + n[a]),
              K(o >= 0),
              o > 0
                ? ((s = e[a - 1]) < e[a] && (s = e[a]),
                  K(t.numlines_l[a - 1] + t.numlines_l[a] - 1 > 0),
                  (l =
                    0 |
                    (o =
                      (20 * (2 * s - o)) /
                      (o * (t.numlines_l[a - 1] + t.numlines_l[a] - 1)))) > i &&
                    (l = i),
                  (r[a] = l))
                : (r[a] = 0),
              K(a == t.npart_l - 1);
          }
          var rt = [
            -1730326e-23, -0.01703172, -1349528e-23, 0.0418072, -673278e-22,
            -0.0876324, -30835e-21, 0.1863476, -1104424e-22, -0.627638,
          ];
          function it(e, n, r, i, a, o, s, l) {
            var c = e.internal_flags;
            if (i < 2) t.fft_long(c, s[l], i, n, r);
            else if (2 == i)
              for (var u = L.BLKSIZE - 1; u >= 0; --u) {
                var d = s[l + 0][u],
                  h = s[l + 1][u];
                (s[l + 0][u] = (d + h) * z.SQRT2 * 0.5),
                  (s[l + 1][u] = (d - h) * z.SQRT2 * 0.5);
              }
            for (
              o[0] = m(s[l + 0][0]), o[0] *= o[0], u = L.BLKSIZE / 2 - 1;
              u >= 0;
              --u
            ) {
              var f = s[l + 0][L.BLKSIZE / 2 - u],
                p = s[l + 0][L.BLKSIZE / 2 + u];
              o[L.BLKSIZE / 2 - u] = m(0.5 * (f * f + p * p));
            }
            var g = 0;
            for (u = 11; u < L.HBLKSIZE; u++) g += o[u];
            if (((c.tot_ener[i] = g), e.analysis)) {
              for (u = 0; u < L.HBLKSIZE; u++)
                (c.pinfo.energy[a][i][u] = c.pinfo.energy_save[i][u]),
                  (c.pinfo.energy_save[i][u] = o[u]);
              c.pinfo.pe[a][i] = c.pe[i];
            }
          }
          function at(e, n, r, i, a, o, s, l) {
            var c = e.internal_flags;
            if ((0 == a && i < 2 && t.fft_short(c, s[l], i, n, r), 2 == i))
              for (var u = L.BLKSIZE_s - 1; u >= 0; --u) {
                var d = s[l + 0][a][u],
                  h = s[l + 1][a][u];
                (s[l + 0][a][u] = (d + h) * z.SQRT2 * 0.5),
                  (s[l + 1][a][u] = (d - h) * z.SQRT2 * 0.5);
              }
            for (
              o[a][0] = s[l + 0][a][0],
                o[a][0] *= o[a][0],
                u = L.BLKSIZE_s / 2 - 1;
              u >= 0;
              --u
            ) {
              var f = s[l + 0][a][L.BLKSIZE_s / 2 - u],
                p = s[l + 0][a][L.BLKSIZE_s / 2 + u];
              o[a][L.BLKSIZE_s / 2 - u] = m(0.5 * (f * f + p * p));
            }
          }
          function ot(t, e, n, r) {
            var i = t.internal_flags;
            2 == t.athaa_loudapprox &&
              n < 2 &&
              ((i.loudness_sq[e][n] = i.loudness_sq_save[n]),
              (i.loudness_sq_save[n] = g(r, i)));
          }
          this.L3psycho_anal_ns = function (t, e, i, a, o, s, l, h, p, m) {
            var g,
              v,
              b,
              y,
              x,
              w,
              M,
              A,
              E,
              k,
              R = t.internal_flags,
              O = X([2, L.BLKSIZE]),
              P = X([2, 3, L.BLKSIZE_s]),
              j = q(L.CBANDS + 1),
              W = q(L.CBANDS + 1),
              U = q(L.CBANDS + 2),
              z = Z(2),
              $ = Z(2),
              J = X([2, 576]),
              it = Z(L.CBANDS + 2),
              at = Z(L.CBANDS + 2);
            for (
              G.fill(at, 0),
                g = R.channels_out,
                t.mode == MPEGMode.JOINT_STEREO && (g = 4),
                E =
                  t.VBR == Y.vbr_off
                    ? 0 == R.ResvMax
                      ? 0
                      : (R.ResvSize / R.ResvMax) * 0.5
                    : t.VBR == Y.vbr_rh ||
                      t.VBR == Y.vbr_mtrh ||
                      t.VBR == Y.vbr_mt
                    ? 0.6
                    : 1,
                v = 0;
              v < R.channels_out;
              v++
            ) {
              var ot = e[v],
                st = i + 576 - 350 - f + 192;
              for (K(rt.length == (f - 1) / 2), y = 0; y < 576; y++) {
                var lt, ct;
                for (
                  lt = ot[st + y + 10], ct = 0, x = 0;
                  x < (f - 1) / 2 - 1;
                  x += 2
                )
                  (lt += rt[x] * (ot[st + y + x] + ot[st + y + f - x])),
                    (ct +=
                      rt[x + 1] *
                      (ot[st + y + x + 1] + ot[st + y + f - x - 1]));
                J[v][y] = lt + ct;
              }
              o[a][v].en.assign(R.en[v]),
                o[a][v].thm.assign(R.thm[v]),
                g > 2 &&
                  (s[a][v].en.assign(R.en[v + 2]),
                  s[a][v].thm.assign(R.thm[v + 2]));
            }
            for (v = 0; v < g; v++) {
              var ut,
                dt = q(12),
                ht = [0, 0, 0, 0],
                ft = q(12),
                pt = 1,
                mt = q(L.CBANDS),
                gt = q(L.CBANDS),
                _t = [0, 0, 0, 0],
                vt = q(L.HBLKSIZE),
                bt = X([3, L.HBLKSIZE_s]);
              for (
                K(R.npart_s <= L.CBANDS), K(R.npart_l <= L.CBANDS), y = 0;
                y < 3;
                y++
              )
                (dt[y] = R.nsPsy.last_en_subshort[v][y + 6]),
                  K(R.nsPsy.last_en_subshort[v][y + 4] > 0),
                  (ft[y] = dt[y] / R.nsPsy.last_en_subshort[v][y + 4]),
                  (ht[0] += dt[y]);
              if (2 == v)
                for (y = 0; y < 576; y++) {
                  var yt, xt;
                  (yt = J[0][y]),
                    (xt = J[1][y]),
                    (J[0][y] = yt + xt),
                    (J[1][y] = yt - xt);
                }
              var wt = J[1 & v],
                Mt = 0;
              for (y = 0; y < 9; y++) {
                for (var St = Mt + 64, At = 1; Mt < St; Mt++)
                  At < Math.abs(wt[Mt]) && (At = Math.abs(wt[Mt]));
                (R.nsPsy.last_en_subshort[v][y] = dt[y + 3] = At),
                  (ht[1 + y / 3] += At),
                  At > dt[y + 3 - 2]
                    ? (K(dt[y + 3 - 2] > 0), (At /= dt[y + 3 - 2]))
                    : dt[y + 3 - 2] > 10 * At
                    ? (K(At > 0), (At = dt[y + 3 - 2] / (10 * At)))
                    : (At = 0),
                  (ft[y + 3] = At);
              }
              if (t.analysis) {
                var Et = ft[0];
                for (y = 1; y < 12; y++) Et < ft[y] && (Et = ft[y]);
                (R.pinfo.ers[a][v] = R.pinfo.ers_save[v]),
                  (R.pinfo.ers_save[v] = Et);
              }
              for (
                ut = 3 == v ? R.nsPsy.attackthre_s : R.nsPsy.attackthre, y = 0;
                y < 12;
                y++
              )
                0 == _t[y / 3] && ft[y] > ut && (_t[y / 3] = (y % 3) + 1);
              for (y = 1; y < 4; y++) {
                var kt;
                ht[y - 1] > ht[y]
                  ? (K(ht[y] > 0), (kt = ht[y - 1] / ht[y]))
                  : (K(ht[y - 1] > 0), (kt = ht[y] / ht[y - 1])),
                  kt < 1.7 && ((_t[y] = 0), 1 == y && (_t[0] = 0));
              }
              for (
                0 != _t[0] && 0 != R.nsPsy.lastAttacks[v] && (_t[0] = 0),
                  (3 != R.nsPsy.lastAttacks[v] &&
                    _t[0] + _t[1] + _t[2] + _t[3] == 0) ||
                    ((pt = 0),
                    0 != _t[1] && 0 != _t[0] && (_t[1] = 0),
                    0 != _t[2] && 0 != _t[1] && (_t[2] = 0),
                    0 != _t[3] && 0 != _t[2] && (_t[3] = 0)),
                  v < 2 ? ($[v] = pt) : 0 == pt && ($[0] = $[1] = 0),
                  p[v] = R.tot_ener[v],
                  _(t, vt, bt, O, 1 & v, P, 1 & v, a, v, e, i),
                  et(R, vt, j, mt, gt),
                  nt(R, mt, gt, it),
                  A = 0;
                A < 3;
                A++
              ) {
                var Rt, Tt;
                for (
                  V(t, bt, W, U, v, A), B(R, W, U, v, A), M = 0;
                  M < L.SBMAX_s;
                  M++
                ) {
                  if (
                    ((Tt = R.thm[v].s[M][A]),
                    (Tt *= c),
                    _t[A] >= 2 || 1 == _t[A + 1])
                  ) {
                    var Ot = 0 != A ? A - 1 : 2;
                    (At = H(R.thm[v].s[M][Ot], Tt, u * E)),
                      (Tt = Math.min(Tt, At));
                  }
                  1 == _t[A]
                    ? ((Ot = 0 != A ? A - 1 : 2),
                      (At = H(R.thm[v].s[M][Ot], Tt, d * E)),
                      (Tt = Math.min(Tt, At)))
                    : ((0 != A && 3 == _t[A - 1]) ||
                        (0 == A && 3 == R.nsPsy.lastAttacks[v])) &&
                      ((Ot = 2 != A ? A + 1 : 0),
                      (At = H(R.thm[v].s[M][Ot], Tt, d * E)),
                      (Tt = Math.min(Tt, At))),
                    (Rt = dt[3 * A + 3] + dt[3 * A + 4] + dt[3 * A + 5]),
                    6 * dt[3 * A + 5] < Rt &&
                      ((Tt *= 0.5), 6 * dt[3 * A + 4] < Rt && (Tt *= 0.5)),
                    (R.thm[v].s[M][A] = Tt);
                }
              }
              for (
                R.nsPsy.lastAttacks[v] = _t[2], w = 0, b = 0;
                b < R.npart_l;
                b++
              ) {
                for (
                  var Pt = R.s3ind[b][0],
                    Ct = j[Pt] * S[it[Pt]],
                    Dt = R.s3_ll[w++] * Ct;
                  ++Pt <= R.s3ind[b][1];

                )
                  (Ct = j[Pt] * S[it[Pt]]),
                    (Dt = T(Dt, R.s3_ll[w++] * Ct, Pt, Pt - b, R, 0));
                (Dt *= 0.158489319246111),
                  R.blocktype_old[1 & v] == L.SHORT_TYPE
                    ? (U[b] = Dt)
                    : (U[b] = H(
                        Math.min(
                          Dt,
                          Math.min(n * R.nb_1[v][b], r * R.nb_2[v][b])
                        ),
                        Dt,
                        E
                      )),
                  (R.nb_2[v][b] = R.nb_1[v][b]),
                  (R.nb_1[v][b] = Dt);
              }
              for (; b <= L.CBANDS; ++b) (j[b] = 0), (U[b] = 0);
              N(R, j, U, v);
            }
            for (
              (t.mode != MPEGMode.STEREO && t.mode != MPEGMode.JOINT_STEREO) ||
                (t.interChRatio > 0 && C(t, t.interChRatio)),
                t.mode == MPEGMode.JOINT_STEREO &&
                  (D(R),
                  (k = t.msfix),
                  Math.abs(k) > 0 && I(R, k, t.ATHlower * R.ATH.adjust)),
                F(t, $, m, z),
                v = 0;
              v < g;
              v++
            ) {
              var It,
                Bt,
                Nt,
                Lt = 0;
              v > 1
                ? ((It = h),
                  (Lt = -2),
                  (Bt = L.NORM_TYPE),
                  (m[0] != L.SHORT_TYPE && m[1] != L.SHORT_TYPE) ||
                    (Bt = L.SHORT_TYPE),
                  (Nt = s[a][v - 2]))
                : ((It = l), (Lt = 0), (Bt = m[v]), (Nt = o[a][v])),
                Bt == L.SHORT_TYPE
                  ? (It[Lt + v] = Q(Nt, R.masking_lower))
                  : (It[Lt + v] = tt(Nt, R.masking_lower)),
                t.analysis && (R.pinfo.pe[a][v] = It[Lt + v]);
            }
            return 0;
          };
          var st = [
            -1730326e-23, -0.01703172, -1349528e-23, 0.0418072, -673278e-22,
            -0.0876324, -30835e-21, 0.1863476, -1104424e-22, -0.627638,
          ];
          function lt(t, e, n, r, i, a, o, s, l, c) {
            for (
              var u = X([2, 576]),
                d = t.internal_flags,
                h = d.channels_out,
                p = t.mode == MPEGMode.JOINT_STEREO ? 4 : h,
                m = 0;
              m < h;
              m++
            ) {
              firbuf = e[m];
              var g = n + 576 - 350 - f + 192;
              K(st.length == (f - 1) / 2);
              for (var _ = 0; _ < 576; _++) {
                var v, b;
                (v = firbuf[g + _ + 10]), (b = 0);
                for (var y = 0; y < (f - 1) / 2 - 1; y += 2)
                  (v += st[y] * (firbuf[g + _ + y] + firbuf[g + _ + f - y])),
                    (b +=
                      st[y + 1] *
                      (firbuf[g + _ + y + 1] + firbuf[g + _ + f - y - 1]));
                u[m][_] = v + b;
              }
              i[r][m].en.assign(d.en[m]),
                i[r][m].thm.assign(d.thm[m]),
                p > 2 &&
                  (a[r][m].en.assign(d.en[m + 2]),
                  a[r][m].thm.assign(d.thm[m + 2]));
            }
            for (m = 0; m < p; m++) {
              var x = q(12),
                w = q(12),
                M = [0, 0, 0, 0],
                S = u[1 & m],
                A = 0,
                E = 3 == m ? d.nsPsy.attackthre_s : d.nsPsy.attackthre,
                k = 1;
              if (2 == m)
                for (_ = 0, y = 576; y > 0; ++_, --y) {
                  var R = u[0][_],
                    T = u[1][_];
                  (u[0][_] = R + T), (u[1][_] = R - T);
                }
              for (_ = 0; _ < 3; _++)
                (w[_] = d.nsPsy.last_en_subshort[m][_ + 6]),
                  K(d.nsPsy.last_en_subshort[m][_ + 4] > 0),
                  (x[_] = w[_] / d.nsPsy.last_en_subshort[m][_ + 4]),
                  (M[0] += w[_]);
              for (_ = 0; _ < 9; _++) {
                for (var O = A + 64, P = 1; A < O; A++)
                  P < Math.abs(S[A]) && (P = Math.abs(S[A]));
                (d.nsPsy.last_en_subshort[m][_] = w[_ + 3] = P),
                  (M[1 + _ / 3] += P),
                  P > w[_ + 3 - 2]
                    ? (K(w[_ + 3 - 2] > 0), (P /= w[_ + 3 - 2]))
                    : w[_ + 3 - 2] > 10 * P
                    ? (K(P > 0), (P = w[_ + 3 - 2] / (10 * P)))
                    : (P = 0),
                  (x[_ + 3] = P);
              }
              for (_ = 0; _ < 3; ++_) {
                var C = w[3 * _ + 3] + w[3 * _ + 4] + w[3 * _ + 5],
                  D = 1;
                6 * w[3 * _ + 5] < C &&
                  ((D *= 0.5), 6 * w[3 * _ + 4] < C && (D *= 0.5)),
                  (s[m][_] = D);
              }
              if (t.analysis) {
                var I = x[0];
                for (_ = 1; _ < 12; _++) I < x[_] && (I = x[_]);
                (d.pinfo.ers[r][m] = d.pinfo.ers_save[m]),
                  (d.pinfo.ers_save[m] = I);
              }
              for (_ = 0; _ < 12; _++)
                0 == l[m][_ / 3] && x[_] > E && (l[m][_ / 3] = (_ % 3) + 1);
              for (_ = 1; _ < 4; _++) {
                var B = M[_ - 1],
                  N = M[_];
                Math.max(B, N) < 4e4 &&
                  B < 1.7 * N &&
                  N < 1.7 * B &&
                  (1 == _ && l[m][0] <= l[m][_] && (l[m][0] = 0),
                  (l[m][_] = 0));
              }
              l[m][0] <= d.nsPsy.lastAttacks[m] && (l[m][0] = 0),
                (3 != d.nsPsy.lastAttacks[m] &&
                  l[m][0] + l[m][1] + l[m][2] + l[m][3] == 0) ||
                  ((k = 0),
                  0 != l[m][1] && 0 != l[m][0] && (l[m][1] = 0),
                  0 != l[m][2] && 0 != l[m][1] && (l[m][2] = 0),
                  0 != l[m][3] && 0 != l[m][2] && (l[m][3] = 0)),
                m < 2 ? (c[m] = k) : 0 == k && (c[0] = c[1] = 0),
                (o[m] = d.tot_ener[m]);
            }
          }
          function ct(t, e, n) {
            if (0 == n)
              for (var r = 0; r < t.npart_s; r++)
                (t.nb_s2[e][r] = t.nb_s1[e][r]), (t.nb_s1[e][r] = 0);
          }
          function ut(t, e) {
            for (var n = 0; n < t.npart_l; n++)
              (t.nb_2[e][n] = t.nb_1[e][n]), (t.nb_1[e][n] = 0);
          }
          function dt(t, e, n, r) {
            var i = S.length - 1,
              a = 0,
              o = n[a] + n[a + 1];
            for (
              K(o >= 0),
                o > 0
                  ? ((s = e[a]) < e[a + 1] && (s = e[a + 1]),
                    K(t.numlines_s[a] + t.numlines_s[a + 1] - 1 > 0),
                    (l =
                      0 |
                      (o =
                        (20 * (2 * s - o)) /
                        (o * (t.numlines_s[a] + t.numlines_s[a + 1] - 1)))) >
                      i && (l = i),
                    (r[a] = l))
                  : (r[a] = 0),
                a = 1;
              a < t.npart_s - 1;
              a++
            ) {
              var s, l;
              (o = n[a - 1] + n[a] + n[a + 1]),
                K(a + 1 < t.npart_s),
                K(o >= 0),
                o > 0
                  ? ((s = e[a - 1]) < e[a] && (s = e[a]),
                    s < e[a + 1] && (s = e[a + 1]),
                    K(
                      t.numlines_s[a - 1] +
                        t.numlines_s[a] +
                        t.numlines_s[a + 1] -
                        1 >
                        0
                    ),
                    (l =
                      0 |
                      (o =
                        (20 * (3 * s - o)) /
                        (o *
                          (t.numlines_s[a - 1] +
                            t.numlines_s[a] +
                            t.numlines_s[a + 1] -
                            1)))) > i && (l = i),
                    (r[a] = l))
                  : (r[a] = 0);
            }
            K(a > 0),
              K(a == t.npart_s - 1),
              (o = n[a - 1] + n[a]),
              K(o >= 0),
              o > 0
                ? ((s = e[a - 1]) < e[a] && (s = e[a]),
                  K(t.numlines_s[a - 1] + t.numlines_s[a] - 1 > 0),
                  (l =
                    0 |
                    (o =
                      (20 * (2 * s - o)) /
                      (o * (t.numlines_s[a - 1] + t.numlines_s[a] - 1)))) > i &&
                    (l = i),
                  (r[a] = l))
                : (r[a] = 0),
              K(a == t.npart_s - 1);
          }
          function ht(t, e, n, r, i, a) {
            var o,
              s,
              l,
              c = t.internal_flags,
              u = new float[L.CBANDS](),
              d = q(L.CBANDS),
              h = new int[L.CBANDS]();
            for (l = s = 0; l < c.npart_s; ++l) {
              var f = 0,
                p = 0,
                m = c.numlines_s[l];
              for (o = 0; o < m; ++o, ++s) {
                var g = e[a][s];
                (f += g), p < g && (p = g);
              }
              (n[l] = f),
                K(f >= 0),
                (u[l] = p),
                K(m > 0),
                (d[l] = f / m),
                K(d[l] >= 0);
            }
            for (K(l == c.npart_s), K(129 == s); l < L.CBANDS; ++l)
              (u[l] = 0), (d[l] = 0);
            for (dt(c, u, d, h), s = l = 0; l < c.npart_s; l++) {
              var _,
                v,
                b,
                y,
                x,
                w = c.s3ind_s[l][0],
                M = c.s3ind_s[l][1];
              for (
                _ = h[w], v = 1, y = c.s3_ss[s] * n[w] * S[h[w]], ++s, ++w;
                w <= M;

              )
                (_ += h[w]),
                  (v += 1),
                  (y = P(y, (b = c.s3_ss[s] * n[w] * S[h[w]]), w - l)),
                  ++s,
                  ++w;
              (y *= x = 0.5 * S[(_ = (1 + 2 * _) / (2 * v))]),
                (r[l] = y),
                (c.nb_s2[i][l] = c.nb_s1[i][l]),
                (c.nb_s1[i][l] = y),
                (b = u[l]),
                (b *= c.minval_s[l]),
                (b *= x),
                r[l] > b && (r[l] = b),
                c.masking_lower > 1 && (r[l] *= c.masking_lower),
                r[l] > n[l] && (r[l] = n[l]),
                c.masking_lower < 1 && (r[l] *= c.masking_lower),
                K(r[l] >= 0);
            }
            for (; l < L.CBANDS; ++l) (n[l] = 0), (r[l] = 0);
          }
          function ft(t, e, i, a, o) {
            var s,
              l = q(L.CBANDS),
              c = q(L.CBANDS),
              u = Z(L.CBANDS + 2);
            et(t, e, i, l, c), nt(t, l, c, u);
            var h = 0;
            for (s = 0; s < t.npart_l; s++) {
              var f,
                p,
                m,
                g = t.s3ind[s][0],
                _ = t.s3ind[s][1],
                v = 0,
                b = 0;
              for (
                v = u[g], b += 1, p = t.s3_ll[h] * i[g] * S[u[g]], ++h, ++g;
                g <= _;

              )
                (v += u[g]),
                  (b += 1),
                  (p = P(p, (f = t.s3_ll[h] * i[g] * S[u[g]]), g - s)),
                  ++h,
                  ++g;
              if (
                ((p *= m = 0.5 * S[(v = (1 + 2 * v) / (2 * b))]),
                t.blocktype_old[1 & o] == L.SHORT_TYPE)
              ) {
                var y = n * t.nb_1[o][s];
                a[s] = y > 0 ? Math.min(p, y) : Math.min(p, i[s] * d);
              } else {
                var x = r * t.nb_2[o][s],
                  w = n * t.nb_1[o][s];
                x <= 0 && (x = p),
                  w <= 0 && (w = p),
                  (y =
                    t.blocktype_old[1 & o] == L.NORM_TYPE ? Math.min(w, x) : w),
                  (a[s] = Math.min(p, y));
              }
              (t.nb_2[o][s] = t.nb_1[o][s]),
                (t.nb_1[o][s] = p),
                (f = l[s]),
                (f *= t.minval_l[s]),
                (f *= m),
                a[s] > f && (a[s] = f),
                t.masking_lower > 1 && (a[s] *= t.masking_lower),
                a[s] > i[s] && (a[s] = i[s]),
                t.masking_lower < 1 && (a[s] *= t.masking_lower),
                K(a[s] >= 0);
            }
            for (; s < L.CBANDS; ++s) (i[s] = 0), (a[s] = 0);
          }
          function pt(t, e) {
            var n = t.internal_flags;
            t.short_blocks != U.short_block_coupled ||
              (0 != e[0] && 0 != e[1]) ||
              (e[0] = e[1] = 0);
            for (var r = 0; r < n.channels_out; r++)
              t.short_blocks == U.short_block_dispensed && (e[r] = 1),
                t.short_blocks == U.short_block_forced && (e[r] = 0);
          }
          function mt(t, e, n) {
            for (var r = t.internal_flags, i = 0; i < r.channels_out; i++) {
              var a = L.NORM_TYPE;
              0 != e[i]
                ? (K(r.blocktype_old[i] != L.START_TYPE),
                  r.blocktype_old[i] == L.SHORT_TYPE && (a = L.STOP_TYPE))
                : ((a = L.SHORT_TYPE),
                  r.blocktype_old[i] == L.NORM_TYPE &&
                    (r.blocktype_old[i] = L.START_TYPE),
                  r.blocktype_old[i] == L.STOP_TYPE &&
                    (r.blocktype_old[i] = L.SHORT_TYPE)),
                (n[i] = r.blocktype_old[i]),
                (r.blocktype_old[i] = a);
            }
          }
          function gt(t, e, n, r, i, a, o) {
            for (
              var s, l, c = 2 * a, u = a > 0 ? Math.pow(10, i) : 1, d = 0;
              d < o;
              ++d
            ) {
              var h = t[2][d],
                f = t[3][d],
                p = e[0][d],
                m = e[1][d],
                g = e[2][d],
                _ = e[3][d];
              if (p <= 1.58 * m && m <= 1.58 * p) {
                var v = n[d] * f,
                  b = n[d] * h;
                (l = Math.max(g, Math.min(_, v))),
                  (s = Math.max(_, Math.min(g, b)));
              } else (l = g), (s = _);
              if (a > 0) {
                var y,
                  x,
                  w = r[d] * u;
                if (
                  ((y = Math.min(Math.max(p, w), Math.max(m, w))),
                  (x = (g = Math.max(l, w)) + (_ = Math.max(s, w))) > 0 &&
                    y * c < x)
                ) {
                  var M = (y * c) / x;
                  (g *= M), (_ *= M), K(x > 0);
                }
                (l = Math.min(g, l)), (s = Math.min(_, s));
              }
              l > h && (l = h), s > f && (s = f), (e[2][d] = l), (e[3][d] = s);
            }
          }
          function _t(t, e) {
            var n;
            return (n = t >= 0 ? 27 * -t : t * e) <= -72 ? 0 : Math.exp(n * p);
          }
          function vt(t) {
            var e,
              n,
              r = 0,
              i = 0,
              a = 0;
            for (a = 0; _t(a, t) > 1e-20; a -= 1);
            for (e = a, n = 0; Math.abs(n - e) > 1e-12; )
              _t((a = (n + e) / 2), t) > 0 ? (n = a) : (e = a);
            for (r = e, a = 0, a = 0; _t(a, t) > 1e-20; a += 1);
            for (e = 0, n = a; Math.abs(n - e) > 1e-12; )
              _t((a = (n + e) / 2), t) > 0 ? (e = a) : (n = a);
            i = n;
            var o,
              s = 0,
              l = 1e3;
            for (o = 0; o <= l; ++o) s += _t((a = r + (o * (i - r)) / l), t);
            return (l + 1) / (s * (i - r));
          }
          function bt(t) {
            var e, n, r, i;
            return (
              (e = t),
              (n =
                (e *= e >= 0 ? 3 : 1.5) >= 0.5 && e <= 2.5
                  ? 8 * ((i = e - 0.5) * i - 2 * i)
                  : 0),
              (r =
                15.811389 + 7.5 * (e += 0.474) - 17.5 * Math.sqrt(1 + e * e)) <=
              -60
                ? 0
                : ((e = Math.exp((n + r) * p)), (e /= 0.6609193))
            );
          }
          function yt(t) {
            return (
              t < 0 && (t = 0),
              (t *= 0.001),
              13 * Math.atan(0.76 * t) + 3.5 * Math.atan((t * t) / 56.25)
            );
          }
          function xt(t, e, n, r, i, a, s, l, c, u, d, h) {
            var f,
              p = q(L.CBANDS + 1),
              m = l / (h > 15 ? 1152 : 384),
              g = Z(L.HBLKSIZE);
            l /= c;
            var _ = 0,
              v = 0;
            for (f = 0; f < L.CBANDS; f++) {
              var b;
              for (
                R = yt(l * _), p[f] = l * _, b = _;
                yt(l * b) - R < o && b <= c / 2;
                b++
              );
              for (t[f] = b - _, v = f + 1; _ < b; )
                K(_ < L.HBLKSIZE), (g[_++] = f);
              if (_ > c / 2) {
                (_ = c / 2), ++f;
                break;
              }
            }
            K(f < L.CBANDS), (p[f] = l * _);
            for (var y = 0; y < h; y++) {
              var x, w, M, S, A;
              (M = u[y]),
                (S = u[y + 1]),
                (x = 0 | Math.floor(0.5 + d * (M - 0.5))) < 0 && (x = 0),
                (w = 0 | Math.floor(0.5 + d * (S - 0.5))) > c / 2 &&
                  (w = c / 2),
                (n[y] = (g[x] + g[w]) / 2),
                (e[y] = g[w]);
              var E = m * S;
              (s[y] = (E - p[e[y]]) / (p[e[y] + 1] - p[e[y]])),
                s[y] < 0 ? (s[y] = 0) : s[y] > 1 && (s[y] = 1),
                (A = yt(l * u[y] * d)),
                (A = Math.min(A, 15.5) / 15.5),
                (a[y] = Math.pow(10, 1.25 * (1 - Math.cos(Math.PI * A)) - 2.5));
            }
            _ = 0;
            for (var k = 0; k < v; k++) {
              var R,
                T,
                O = t[k];
              (R = yt(l * _)),
                (T = yt(l * (_ + O - 1))),
                (r[k] = 0.5 * (R + T)),
                (R = yt(l * (_ - 0.5))),
                (T = yt(l * (_ + O - 0.5))),
                (i[k] = T - R),
                (_ += O);
            }
            return v;
          }
          function wt(t, e, n, r, i, a) {
            var o,
              s = X([L.CBANDS, L.CBANDS]),
              l = 0;
            if (a)
              for (var c = 0; c < e; c++)
                for (o = 0; o < e; o++) {
                  var u = bt(n[c] - n[o]) * r[o];
                  s[c][o] = u * i[c];
                }
            else
              for (o = 0; o < e; o++) {
                var d = 15 + Math.min(21 / n[o], 12),
                  h = vt(d);
                for (c = 0; c < e; c++)
                  (u = h * _t(n[c] - n[o], d) * r[o]), (s[c][o] = u * i[c]);
              }
            for (c = 0; c < e; c++) {
              for (o = 0; o < e && !(s[c][o] > 0); o++);
              for (t[c][0] = o, o = e - 1; o > 0 && !(s[c][o] > 0); o--);
              (t[c][1] = o), (l += t[c][1] - t[c][0] + 1);
            }
            var f = q(l),
              p = 0;
            for (c = 0; c < e; c++)
              for (o = t[c][0]; o <= t[c][1]; o++) f[p++] = s[c][o];
            return f;
          }
          function Mt(t) {
            var e = yt(t);
            return (
              (e = Math.min(e, 15.5) / 15.5),
              Math.pow(10, 1.25 * (1 - Math.cos(Math.PI * e)) - 2.5)
            );
          }
          function St(t, e) {
            return (
              t < -0.3 && (t = 3410),
              (t /= 1e3),
              (t = Math.max(0.1, t)),
              3.64 * Math.pow(t, -0.8) -
                6.8 * Math.exp(-0.6 * Math.pow(t - 3.4, 2)) +
                6 * Math.exp(-0.15 * Math.pow(t - 8.7, 2)) +
                0.001 * (0.6 + 0.04 * e) * Math.pow(t, 4)
            );
          }
          (this.L3psycho_anal_vbr = function (t, e, n, r, i, a, o, s, l, h) {
            var f = t.internal_flags,
              p = q(L.HBLKSIZE),
              m = X([3, L.HBLKSIZE_s]),
              g = X([2, L.BLKSIZE]),
              _ = X([2, 3, L.BLKSIZE_s]),
              v = X([4, L.CBANDS]),
              b = X([4, L.CBANDS]),
              y = X([4, 3]),
              x = 0.6,
              w = [
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0],
              ],
              M = Z(2),
              S = t.mode == MPEGMode.JOINT_STEREO ? 4 : f.channels_out;
            lt(t, e, n, r, i, a, l, y, w, M), pt(t, M);
            for (var A = 0; A < S; A++)
              it(t, e, n, A, r, p, g, (k = 1 & A)),
                ot(t, r, A, p),
                0 != M[k] ? ft(f, p, v[A], b[A], A) : ut(f, A);
            for (
              M[0] + M[1] == 2 &&
                t.mode == MPEGMode.JOINT_STEREO &&
                gt(
                  v,
                  b,
                  f.mld_cb_l,
                  f.ATH.cb_l,
                  t.ATHlower * f.ATH.adjust,
                  t.msfix,
                  f.npart_l
                ),
                A = 0;
              A < S;
              A++
            )
              0 != M[(k = 1 & A)] && N(f, v[A], b[A], A);
            for (var E = 0; E < 3; E++) {
              for (A = 0; A < S; ++A)
                0 != M[(k = 1 & A)]
                  ? ct(f, A, E)
                  : (at(t, e, n, A, E, m, _, k), ht(t, m, v[A], b[A], A, E));
              for (
                M[0] + M[1] == 0 &&
                  t.mode == MPEGMode.JOINT_STEREO &&
                  gt(
                    v,
                    b,
                    f.mld_cb_s,
                    f.ATH.cb_s,
                    t.ATHlower * f.ATH.adjust,
                    t.msfix,
                    f.npart_s
                  ),
                  A = 0;
                A < S;
                ++A
              )
                0 == M[(k = 1 & A)] && B(f, v[A], b[A], A, E);
            }
            for (A = 0; A < S; A++) {
              var k;
              if (0 == M[(k = 1 & A)])
                for (var R = 0; R < L.SBMAX_s; R++) {
                  var T = q(3);
                  for (E = 0; E < 3; E++) {
                    var O = f.thm[A].s[R][E];
                    if (((O *= c), w[A][E] >= 2 || 1 == w[A][E + 1])) {
                      var P = 0 != E ? E - 1 : 2,
                        C = H(f.thm[A].s[R][P], O, u * x);
                      O = Math.min(O, C);
                    } else
                      1 == w[A][E]
                        ? ((P = 0 != E ? E - 1 : 2),
                          (C = H(f.thm[A].s[R][P], O, d * x)),
                          (O = Math.min(O, C)))
                        : ((0 != E && 3 == w[A][E - 1]) ||
                            (0 == E && 3 == f.nsPsy.lastAttacks[A])) &&
                          ((P = 2 != E ? E + 1 : 0),
                          (C = H(f.thm[A].s[R][P], O, d * x)),
                          (O = Math.min(O, C)));
                    (O *= y[A][E]), (T[E] = O);
                  }
                  for (E = 0; E < 3; E++) f.thm[A].s[R][E] = T[E];
                }
            }
            for (A = 0; A < S; A++) f.nsPsy.lastAttacks[A] = w[A][2];
            for (mt(t, M, h), A = 0; A < S; A++) {
              var D, I, V, F;
              A > 1
                ? ((D = s),
                  (I = -2),
                  (V = L.NORM_TYPE),
                  (h[0] != L.SHORT_TYPE && h[1] != L.SHORT_TYPE) ||
                    (V = L.SHORT_TYPE),
                  (F = a[r][A - 2]))
                : ((D = o), (I = 0), (V = h[A]), (F = i[r][A])),
                V == L.SHORT_TYPE
                  ? (D[I + A] = Q(F, f.masking_lower))
                  : (D[I + A] = tt(F, f.masking_lower)),
                t.analysis && (f.pinfo.pe[r][A] = D[I + A]);
            }
            return 0;
          }),
            (this.psymodel_init = function (n) {
              var r,
                i,
                a = n.internal_flags,
                o = !0,
                s = 13,
                c = 24,
                u = 0,
                d = 0,
                f = -8.25,
                p = -4.5,
                m = q(L.CBANDS),
                g = q(L.CBANDS),
                _ = q(L.CBANDS),
                v = n.out_samplerate;
              switch (n.experimentalZ) {
                default:
                case 0:
                  o = !0;
                  break;
                case 1:
                  o = n.VBR != Y.vbr_mtrh && n.VBR != Y.vbr_mt;
                  break;
                case 2:
                  o = !1;
                  break;
                case 3:
                  (s = 8), (u = -1.75), (d = -0.0125), (f = -8.25), (p = -2.25);
              }
              for (
                a.ms_ener_ratio_old = 0.25,
                  a.blocktype_old[0] = a.blocktype_old[1] = L.NORM_TYPE,
                  r = 0;
                r < 4;
                ++r
              ) {
                for (var b = 0; b < L.CBANDS; ++b)
                  (a.nb_1[r][b] = 1e20),
                    (a.nb_2[r][b] = 1e20),
                    (a.nb_s1[r][b] = a.nb_s2[r][b] = 1);
                for (var y = 0; y < L.SBMAX_l; y++)
                  (a.en[r].l[y] = 1e20), (a.thm[r].l[y] = 1e20);
                for (b = 0; b < 3; ++b) {
                  for (y = 0; y < L.SBMAX_s; y++)
                    (a.en[r].s[y][b] = 1e20), (a.thm[r].s[y][b] = 1e20);
                  a.nsPsy.lastAttacks[r] = 0;
                }
                for (b = 0; b < 9; b++) a.nsPsy.last_en_subshort[r][b] = 10;
              }
              for (
                a.loudness_sq_save[0] = a.loudness_sq_save[1] = 0,
                  a.npart_l = xt(
                    a.numlines_l,
                    a.bo_l,
                    a.bm_l,
                    m,
                    g,
                    a.mld_l,
                    a.PSY.bo_l_weight,
                    v,
                    L.BLKSIZE,
                    a.scalefac_band.l,
                    L.BLKSIZE / 1152,
                    L.SBMAX_l
                  ),
                  K(a.npart_l < L.CBANDS),
                  r = 0;
                r < a.npart_l;
                r++
              ) {
                var x = u;
                m[r] >= s &&
                  (x = (d * (m[r] - s)) / (c - s) + (u * (c - m[r])) / (c - s)),
                  (_[r] = Math.pow(10, x / 10)),
                  a.numlines_l[r] > 0
                    ? (a.rnumlines_l[r] = 1 / a.numlines_l[r])
                    : (a.rnumlines_l[r] = 0);
              }
              for (
                a.s3_ll = wt(a.s3ind, a.npart_l, m, g, _, o), b = 0, r = 0;
                r < a.npart_l;
                r++
              ) {
                S = W.MAX_VALUE;
                for (var w = 0; w < a.numlines_l[r]; w++, b++) {
                  var M = (v * b) / (1e3 * L.BLKSIZE);
                  (E = this.ATHformula(1e3 * M, n) - 20),
                    (E = Math.pow(10, 0.1 * E)),
                    S > (E *= a.numlines_l[r]) && (S = E);
                }
                (a.ATH.cb_l[r] = S),
                  (S = (20 * m[r]) / 10 - 20) > 6 && (S = 100),
                  S < -15 && (S = -15),
                  (S -= 8),
                  (a.minval_l[r] = Math.pow(10, S / 10) * a.numlines_l[r]);
              }
              for (
                a.npart_s = xt(
                  a.numlines_s,
                  a.bo_s,
                  a.bm_s,
                  m,
                  g,
                  a.mld_s,
                  a.PSY.bo_s_weight,
                  v,
                  L.BLKSIZE_s,
                  a.scalefac_band.s,
                  L.BLKSIZE_s / 384,
                  L.SBMAX_s
                ),
                  K(a.npart_s < L.CBANDS),
                  b = 0,
                  r = 0;
                r < a.npart_s;
                r++
              ) {
                var S;
                for (
                  x = f,
                    m[r] >= s &&
                      (x =
                        (p * (m[r] - s)) / (c - s) +
                        (f * (c - m[r])) / (c - s)),
                    _[r] = Math.pow(10, x / 10),
                    S = W.MAX_VALUE,
                    w = 0;
                  w < a.numlines_s[r];
                  w++, b++
                ) {
                  var E;
                  (M = (v * b) / (1e3 * L.BLKSIZE_s)),
                    (E = this.ATHformula(1e3 * M, n) - 20),
                    (E = Math.pow(10, 0.1 * E)),
                    S > (E *= a.numlines_s[r]) && (S = E);
                }
                (a.ATH.cb_s[r] = S),
                  (S = (7 * m[r]) / 12 - 7),
                  m[r] > 12 && (S *= 1 + 3.1 * Math.log(1 + S)),
                  m[r] < 12 && (S *= 1 + 2.3 * Math.log(1 - S)),
                  S < -15 && (S = -15),
                  (S -= 8),
                  (a.minval_s[r] = Math.pow(10, S / 10) * a.numlines_s[r]);
              }
              (a.s3_ss = wt(a.s3ind_s, a.npart_s, m, g, _, o)),
                A(),
                t.init_fft(a),
                (a.decay = Math.exp((-1 * e) / ((l * v) / 192))),
                (i = h),
                0 != (2 & n.exp_nspsytune) && (i = 1),
                Math.abs(n.msfix) > 0 && (i = n.msfix),
                (n.msfix = i);
              for (var k = 0; k < a.npart_l; k++)
                a.s3ind[k][1] > a.npart_l - 1 &&
                  (a.s3ind[k][1] = a.npart_l - 1);
              var R = (576 * a.mode_gr) / v;
              if (
                ((a.ATH.decay = Math.pow(10, -1.2 * R)),
                (a.ATH.adjust = 0.01),
                (a.ATH.adjustLimit = 1),
                K(a.bo_l[L.SBMAX_l - 1] <= a.npart_l),
                K(a.bo_s[L.SBMAX_s - 1] <= a.npart_s),
                -1 != n.ATHtype)
              ) {
                var T = n.out_samplerate / L.BLKSIZE,
                  O = 0;
                for (M = 0, r = 0; r < L.BLKSIZE / 2; ++r)
                  (M += T),
                    (a.ATH.eql_w[r] =
                      1 / Math.pow(10, this.ATHformula(M, n) / 10)),
                    (O += a.ATH.eql_w[r]);
                for (O = 1 / O, r = L.BLKSIZE / 2; --r >= 0; )
                  a.ATH.eql_w[r] *= O;
              }
              for (k = b = 0; k < a.npart_s; ++k)
                for (r = 0; r < a.numlines_s[k]; ++r) ++b;
              for (K(129 == b), k = b = 0; k < a.npart_l; ++k)
                for (r = 0; r < a.numlines_l[k]; ++r) ++b;
              for (K(513 == b), b = 0, r = 0; r < a.npart_l; r++)
                (M = (v * (b + a.numlines_l[r] / 2)) / (1 * L.BLKSIZE)),
                  (a.mld_cb_l[r] = Mt(M)),
                  (b += a.numlines_l[r]);
              for (; r < L.CBANDS; ++r) a.mld_cb_l[r] = 1;
              for (b = 0, r = 0; r < a.npart_s; r++)
                (M = (v * (b + a.numlines_s[r] / 2)) / (1 * L.BLKSIZE_s)),
                  (a.mld_cb_s[r] = Mt(M)),
                  (b += a.numlines_s[r]);
              for (; r < L.CBANDS; ++r) a.mld_cb_s[r] = 1;
              return 0;
            }),
            (this.ATHformula = function (t, e) {
              var n;
              switch (e.ATHtype) {
                case 0:
                  n = St(t, 9);
                  break;
                case 1:
                  n = St(t, -1);
                  break;
                case 2:
                default:
                  n = St(t, 0);
                  break;
                case 3:
                  n = St(t, 1) + 6;
                  break;
                case 4:
                  n = St(t, e.ATHcurve);
              }
              return n;
            });
        }
        var Q = $;
        function J(t) {
          var e = t;
          this.ordinal = function () {
            return e;
          };
        }
        (J.STEREO = new J(0)),
          (J.JOINT_STEREO = new J(1)),
          (J.DUAL_CHANNEL = new J(2)),
          (J.MONO = new J(3)),
          (J.NOT_SET = new J(4));
        var tt = J;
        function et() {
          (this.class_id = 0),
            (this.num_samples = 0),
            (this.num_channels = 0),
            (this.in_samplerate = 0),
            (this.out_samplerate = 0),
            (this.scale = 0),
            (this.scale_left = 0),
            (this.scale_right = 0),
            (this.analysis = !1),
            (this.bWriteVbrTag = !1),
            (this.decode_only = !1),
            (this.quality = 0),
            (this.mode = tt.STEREO),
            (this.force_ms = !1),
            (this.free_format = !1),
            (this.findReplayGain = !1),
            (this.decode_on_the_fly = !1),
            (this.write_id3tag_automatic = !1),
            (this.brate = 0),
            (this.compression_ratio = 0),
            (this.copyright = 0),
            (this.original = 0),
            (this.extension = 0),
            (this.emphasis = 0),
            (this.error_protection = 0),
            (this.strict_ISO = !1),
            (this.disable_reservoir = !1),
            (this.quant_comp = 0),
            (this.quant_comp_short = 0),
            (this.experimentalY = !1),
            (this.experimentalZ = 0),
            (this.exp_nspsytune = 0),
            (this.preset = 0),
            (this.VBR = null),
            (this.VBR_q_frac = 0),
            (this.VBR_q = 0),
            (this.VBR_mean_bitrate_kbps = 0),
            (this.VBR_min_bitrate_kbps = 0),
            (this.VBR_max_bitrate_kbps = 0),
            (this.VBR_hard_min = 0),
            (this.lowpassfreq = 0),
            (this.highpassfreq = 0),
            (this.lowpasswidth = 0),
            (this.highpasswidth = 0),
            (this.maskingadjust = 0),
            (this.maskingadjust_short = 0),
            (this.ATHonly = !1),
            (this.ATHshort = !1),
            (this.noATH = !1),
            (this.ATHtype = 0),
            (this.ATHcurve = 0),
            (this.ATHlower = 0),
            (this.athaa_type = 0),
            (this.athaa_loudapprox = 0),
            (this.athaa_sensitivity = 0),
            (this.short_blocks = null),
            (this.useTemporal = !1),
            (this.interChRatio = 0),
            (this.msfix = 0),
            (this.tune = !1),
            (this.tune_value_a = 0),
            (this.version = 0),
            (this.encoder_delay = 0),
            (this.encoder_padding = 0),
            (this.framesize = 0),
            (this.frameNum = 0),
            (this.lame_allocated_gfp = 0),
            (this.internal_flags = null);
        }
        var nt = et,
          rt = {};
        rt.SFBMAX = 3 * L.SBMAX_s;
        var it = rt,
          at = m.new_float,
          ot = m.new_int;
        function st() {
          (this.xr = at(576)),
            (this.l3_enc = ot(576)),
            (this.scalefac = ot(it.SFBMAX)),
            (this.xrpow_max = 0),
            (this.part2_3_length = 0),
            (this.big_values = 0),
            (this.count1 = 0),
            (this.global_gain = 0),
            (this.scalefac_compress = 0),
            (this.block_type = 0),
            (this.mixed_block_flag = 0),
            (this.table_select = ot(3)),
            (this.subblock_gain = ot(4)),
            (this.region0_count = 0),
            (this.region1_count = 0),
            (this.preflag = 0),
            (this.scalefac_scale = 0),
            (this.count1table_select = 0),
            (this.part2_length = 0),
            (this.sfb_lmax = 0),
            (this.sfb_smin = 0),
            (this.psy_lmax = 0),
            (this.sfbmax = 0),
            (this.psymax = 0),
            (this.sfbdivide = 0),
            (this.width = ot(it.SFBMAX)),
            (this.window = ot(it.SFBMAX)),
            (this.count1bits = 0),
            (this.sfb_partition_table = null),
            (this.slen = ot(4)),
            (this.max_nonzero_coeff = 0);
          var t = this;
          function e(t) {
            return new Int32Array(t);
          }
          function n(t) {
            return new Float32Array(t);
          }
          this.assign = function (r) {
            (t.xr = n(r.xr)),
              (t.l3_enc = e(r.l3_enc)),
              (t.scalefac = e(r.scalefac)),
              (t.xrpow_max = r.xrpow_max),
              (t.part2_3_length = r.part2_3_length),
              (t.big_values = r.big_values),
              (t.count1 = r.count1),
              (t.global_gain = r.global_gain),
              (t.scalefac_compress = r.scalefac_compress),
              (t.block_type = r.block_type),
              (t.mixed_block_flag = r.mixed_block_flag),
              (t.table_select = e(r.table_select)),
              (t.subblock_gain = e(r.subblock_gain)),
              (t.region0_count = r.region0_count),
              (t.region1_count = r.region1_count),
              (t.preflag = r.preflag),
              (t.scalefac_scale = r.scalefac_scale),
              (t.count1table_select = r.count1table_select),
              (t.part2_length = r.part2_length),
              (t.sfb_lmax = r.sfb_lmax),
              (t.sfb_smin = r.sfb_smin),
              (t.psy_lmax = r.psy_lmax),
              (t.sfbmax = r.sfbmax),
              (t.psymax = r.psymax),
              (t.sfbdivide = r.sfbdivide),
              (t.width = e(r.width)),
              (t.window = e(r.window)),
              (t.count1bits = r.count1bits),
              (t.sfb_partition_table = r.sfb_partition_table.slice(0)),
              (t.slen = e(r.slen)),
              (t.max_nonzero_coeff = r.max_nonzero_coeff);
          };
        }
        var lt = st,
          ct = m.new_int;
        function ut() {
          (this.tt = [
            [null, null],
            [null, null],
          ]),
            (this.main_data_begin = 0),
            (this.private_bits = 0),
            (this.resvDrain_pre = 0),
            (this.resvDrain_post = 0),
            (this.scfsi = [ct(4), ct(4)]);
          for (var t = 0; t < 2; t++)
            for (var e = 0; e < 2; e++) this.tt[t][e] = new lt();
        }
        var dt = ut,
          ht = m.System,
          ft = m.new_int;
        function pt(t, e, n, r) {
          (this.l = ft(1 + L.SBMAX_l)),
            (this.s = ft(1 + L.SBMAX_s)),
            (this.psfb21 = ft(1 + L.PSFB21)),
            (this.psfb12 = ft(1 + L.PSFB12));
          var i = this.l,
            a = this.s;
          4 == arguments.length &&
            ((this.arrL = arguments[0]),
            (this.arrS = arguments[1]),
            (this.arr21 = arguments[2]),
            (this.arr12 = arguments[3]),
            ht.arraycopy(
              this.arrL,
              0,
              i,
              0,
              Math.min(this.arrL.length, this.l.length)
            ),
            ht.arraycopy(
              this.arrS,
              0,
              a,
              0,
              Math.min(this.arrS.length, this.s.length)
            ),
            ht.arraycopy(
              this.arr21,
              0,
              this.psfb21,
              0,
              Math.min(this.arr21.length, this.psfb21.length)
            ),
            ht.arraycopy(
              this.arr12,
              0,
              this.psfb12,
              0,
              Math.min(this.arr12.length, this.psfb12.length)
            ));
        }
        var mt = pt,
          gt = m.new_float,
          _t = m.new_float_n,
          vt = m.new_int;
        function bt() {
          (this.last_en_subshort = _t([4, 9])),
            (this.lastAttacks = vt(4)),
            (this.pefirbuf = gt(19)),
            (this.longfact = gt(L.SBMAX_l)),
            (this.shortfact = gt(L.SBMAX_s)),
            (this.attackthre = 0),
            (this.attackthre_s = 0);
        }
        var yt = bt;
        function xt() {
          (this.sum = 0),
            (this.seen = 0),
            (this.want = 0),
            (this.pos = 0),
            (this.size = 0),
            (this.bag = null),
            (this.nVbrNumFrames = 0),
            (this.nBytesWritten = 0),
            (this.TotalFrameSize = 0);
        }
        var wt = xt,
          Mt = m.new_byte,
          St = m.new_double,
          At = m.new_float,
          Et = m.new_float_n,
          kt = m.new_int,
          Rt = m.new_int_n;
        function Tt() {
          var t = 40;
          function e() {
            (this.write_timing = 0), (this.ptr = 0), (this.buf = Mt(t));
          }
          (this.Class_ID = 0),
            (this.lame_encode_frame_init = 0),
            (this.iteration_init_init = 0),
            (this.fill_buffer_resample_init = 0),
            (this.mfbuf = Et([2, Tt.MFSIZE])),
            (this.mode_gr = 0),
            (this.channels_in = 0),
            (this.channels_out = 0),
            (this.resample_ratio = 0),
            (this.mf_samples_to_encode = 0),
            (this.mf_size = 0),
            (this.VBR_min_bitrate = 0),
            (this.VBR_max_bitrate = 0),
            (this.bitrate_index = 0),
            (this.samplerate_index = 0),
            (this.mode_ext = 0),
            (this.lowpass1 = 0),
            (this.lowpass2 = 0),
            (this.highpass1 = 0),
            (this.highpass2 = 0),
            (this.noise_shaping = 0),
            (this.noise_shaping_amp = 0),
            (this.substep_shaping = 0),
            (this.psymodel = 0),
            (this.noise_shaping_stop = 0),
            (this.subblock_gain = 0),
            (this.use_best_huffman = 0),
            (this.full_outer_loop = 0),
            (this.l3_side = new dt()),
            (this.ms_ratio = At(2)),
            (this.padding = 0),
            (this.frac_SpF = 0),
            (this.slot_lag = 0),
            (this.tag_spec = null),
            (this.nMusicCRC = 0),
            (this.OldValue = kt(2)),
            (this.CurrentStep = kt(2)),
            (this.masking_lower = 0),
            (this.bv_scf = kt(576)),
            (this.pseudohalf = kt(it.SFBMAX)),
            (this.sfb21_extra = !1),
            (this.inbuf_old = new Array(2)),
            (this.blackfilt = new Array(2 * Tt.BPC + 1)),
            (this.itime = St(2)),
            (this.sideinfo_len = 0),
            (this.sb_sample = Et([2, 2, 18, L.SBLIMIT])),
            (this.amp_filter = At(32)),
            (this.header = new Array(Tt.MAX_HEADER_BUF)),
            (this.h_ptr = 0),
            (this.w_ptr = 0),
            (this.ancillary_flag = 0),
            (this.ResvSize = 0),
            (this.ResvMax = 0),
            (this.scalefac_band = new mt()),
            (this.minval_l = At(L.CBANDS)),
            (this.minval_s = At(L.CBANDS)),
            (this.nb_1 = Et([4, L.CBANDS])),
            (this.nb_2 = Et([4, L.CBANDS])),
            (this.nb_s1 = Et([4, L.CBANDS])),
            (this.nb_s2 = Et([4, L.CBANDS])),
            (this.s3_ss = null),
            (this.s3_ll = null),
            (this.decay = 0),
            (this.thm = new Array(4)),
            (this.en = new Array(4)),
            (this.tot_ener = At(4)),
            (this.loudness_sq = Et([2, 2])),
            (this.loudness_sq_save = At(2)),
            (this.mld_l = At(L.SBMAX_l)),
            (this.mld_s = At(L.SBMAX_s)),
            (this.bm_l = kt(L.SBMAX_l)),
            (this.bo_l = kt(L.SBMAX_l)),
            (this.bm_s = kt(L.SBMAX_s)),
            (this.bo_s = kt(L.SBMAX_s)),
            (this.npart_l = 0),
            (this.npart_s = 0),
            (this.s3ind = Rt([L.CBANDS, 2])),
            (this.s3ind_s = Rt([L.CBANDS, 2])),
            (this.numlines_s = kt(L.CBANDS)),
            (this.numlines_l = kt(L.CBANDS)),
            (this.rnumlines_l = At(L.CBANDS)),
            (this.mld_cb_l = At(L.CBANDS)),
            (this.mld_cb_s = At(L.CBANDS)),
            (this.numlines_s_num1 = 0),
            (this.numlines_l_num1 = 0),
            (this.pe = At(4)),
            (this.ms_ratio_s_old = 0),
            (this.ms_ratio_l_old = 0),
            (this.ms_ener_ratio_old = 0),
            (this.blocktype_old = kt(2)),
            (this.nsPsy = new yt()),
            (this.VBR_seek_table = new wt()),
            (this.ATH = null),
            (this.PSY = null),
            (this.nogap_total = 0),
            (this.nogap_current = 0),
            (this.decode_on_the_fly = !0),
            (this.findReplayGain = !0),
            (this.findPeakSample = !0),
            (this.PeakSample = 0),
            (this.RadioGain = 0),
            (this.AudiophileGain = 0),
            (this.rgdata = null),
            (this.noclipGainChange = 0),
            (this.noclipScale = 0),
            (this.bitrate_stereoMode_Hist = Rt([16, 5])),
            (this.bitrate_blockType_Hist = Rt([16, 6])),
            (this.pinfo = null),
            (this.hip = null),
            (this.in_buffer_nsamples = 0),
            (this.in_buffer_0 = null),
            (this.in_buffer_1 = null),
            (this.iteration_loop = null);
          for (var n = 0; n < this.en.length; n++) this.en[n] = new E();
          for (n = 0; n < this.thm.length; n++) this.thm[n] = new E();
          for (n = 0; n < this.header.length; n++) this.header[n] = new e();
        }
        (Tt.MFSIZE = 3456 + L.ENCDELAY - L.MDCTDELAY),
          (Tt.MAX_HEADER_BUF = 256),
          (Tt.MAX_BITS_PER_CHANNEL = 4095),
          (Tt.MAX_BITS_PER_GRANULE = 7680),
          (Tt.BPC = 320);
        var Ot = Tt,
          Pt = m.new_float;
        function Ct() {
          (this.useAdjust = 0),
            (this.aaSensitivityP = 0),
            (this.adjust = 0),
            (this.adjustLimit = 0),
            (this.decay = 0),
            (this.floor = 0),
            (this.l = Pt(L.SBMAX_l)),
            (this.s = Pt(L.SBMAX_s)),
            (this.psfb21 = Pt(L.PSFB21)),
            (this.psfb12 = Pt(L.PSFB12)),
            (this.cb_l = Pt(L.CBANDS)),
            (this.cb_s = Pt(L.CBANDS)),
            (this.eql_w = Pt(L.BLKSIZE / 2));
        }
        var Dt = Ct,
          It = m.System,
          Bt = m.Arrays;
        function Nt() {
          var t = 64.82,
            e = (Nt.YULE_ORDER, 0.95),
            n = (Nt.MAX_SAMP_FREQ, Nt.RMS_WINDOW_TIME_NUMERATOR),
            r = Nt.RMS_WINDOW_TIME_DENOMINATOR,
            i =
              (Nt.MAX_SAMPLES_PER_WINDOW,
              [
                [
                  0.038575994352, -3.84664617118067, -0.02160367184185,
                  7.81501653005538, -0.00123395316851, -11.34170355132042,
                  -9291677959e-14, 13.05504219327545, -0.01655260341619,
                  -12.28759895145294, 0.02161526843274, 9.4829380631979,
                  -0.02074045215285, -5.87257861775999, 0.00594298065125,
                  2.75465861874613, 0.00306428023191, -0.86984376593551,
                  0.00012025322027, 0.13919314567432, 0.00288463683916,
                ],
                [
                  0.0541865640643, -3.47845948550071, -0.02911007808948,
                  6.36317777566148, -0.00848709379851, -8.54751527471874,
                  -0.00851165645469, 9.4769360780128, -0.00834990904936,
                  -8.81498681370155, 0.02245293253339, 6.85401540936998,
                  -0.02596338512915, -4.39470996079559, 0.01624864962975,
                  2.19611684890774, -0.00240879051584, -0.75104302451432,
                  0.00674613682247, 0.13149317958808, -0.00187763777362,
                ],
                [
                  0.15457299681924, -2.37898834973084, -0.09331049056315,
                  2.84868151156327, -0.06247880153653, -2.64577170229825,
                  0.02163541888798, 2.23697657451713, -0.05588393329856,
                  -1.67148153367602, 0.04781476674921, 1.00595954808547,
                  0.00222312597743, -0.45953458054983, 0.03174092540049,
                  0.16378164858596, -0.01390589421898, -0.05032077717131,
                  0.00651420667831, 0.0234789740702, -0.00881362733839,
                ],
                [
                  0.30296907319327, -1.61273165137247, -0.22613988682123,
                  1.0797749225997, -0.08587323730772, -0.2565625775407,
                  0.03282930172664, -0.1627671912044, -0.00915702933434,
                  -0.22638893773906, -0.02364141202522, 0.39120800788284,
                  -0.00584456039913, -0.22138138954925, 0.06276101321749,
                  0.04500235387352, -828086748e-14, 0.02005851806501,
                  0.00205861885564, 0.00302439095741, -0.02950134983287,
                ],
                [
                  0.33642304856132, -1.49858979367799, -0.2557224142557,
                  0.87350271418188, -0.11828570177555, 0.12205022308084,
                  0.11921148675203, -0.80774944671438, -0.07834489609479,
                  0.47854794562326, -0.0046997791438, -0.12453458140019,
                  -0.0058950022444, -0.04067510197014, 0.05724228140351,
                  0.08333755284107, 0.00832043980773, -0.04237348025746,
                  -0.0163538138454, 0.02977207319925, -0.0176017656815,
                ],
                [
                  0.4491525660845, -0.62820619233671, -0.14351757464547,
                  0.29661783706366, -0.22784394429749, -0.372563729424,
                  -0.01419140100551, 0.00213767857124, 0.04078262797139,
                  -0.42029820170918, -0.12398163381748, 0.22199650564824,
                  0.04097565135648, 0.00613424350682, 0.10478503600251,
                  0.06747620744683, -0.01863887810927, 0.05784820375801,
                  -0.03193428438915, 0.03222754072173, 0.00541907748707,
                ],
                [
                  0.56619470757641, -1.04800335126349, -0.75464456939302,
                  0.29156311971249, 0.1624213774223, -0.26806001042947,
                  0.16744243493672, 0.00819999645858, -0.18901604199609,
                  0.45054734505008, 0.3093178284183, -0.33032403314006,
                  -0.27562961986224, 0.0673936833311, 0.00647310677246,
                  -0.04784254229033, 0.08647503780351, 0.01639907836189,
                  -0.0378898455484, 0.01807364323573, -0.00588215443421,
                ],
                [
                  0.58100494960553, -0.51035327095184, -0.53174909058578,
                  -0.31863563325245, -0.14289799034253, -0.20256413484477,
                  0.17520704835522, 0.1472815413433, 0.02377945217615,
                  0.38952639978999, 0.15558449135573, -0.23313271880868,
                  -0.25344790059353, -0.05246019024463, 0.01628462406333,
                  -0.02505961724053, 0.06920467763959, 0.02442357316099,
                  -0.03721611395801, 0.01818801111503, -0.00749618797172,
                ],
                [
                  0.53648789255105, -0.2504987195602, -0.42163034350696,
                  -0.43193942311114, -0.00275953611929, -0.03424681017675,
                  0.04267842219415, -0.04678328784242, -0.10214864179676,
                  0.26408300200955, 0.14590772289388, 0.15113130533216,
                  -0.02459864859345, -0.17556493366449, -0.11202315195388,
                  -0.18823009262115, -0.04060034127, 0.05477720428674,
                  0.0478866554818, 0.0470440968812, -0.02217936801134,
                ],
              ]),
            a = [
              [
                0.98621192462708, -1.97223372919527, -1.97242384925416,
                0.97261396931306, 0.98621192462708,
              ],
              [
                0.98500175787242, -1.96977855582618, -1.97000351574484,
                0.9702284756635, 0.98500175787242,
              ],
              [
                0.97938932735214, -1.95835380975398, -1.95877865470428,
                0.95920349965459, 0.97938932735214,
              ],
              [
                0.97531843204928, -1.95002759149878, -1.95063686409857,
                0.95124613669835, 0.97531843204928,
              ],
              [
                0.97316523498161, -1.94561023566527, -1.94633046996323,
                0.94705070426118, 0.97316523498161,
              ],
              [
                0.96454515552826, -1.92783286977036, -1.92909031105652,
                0.93034775234268, 0.96454515552826,
              ],
              [
                0.96009142950541, -1.91858953033784, -1.92018285901082,
                0.92177618768381, 0.96009142950541,
              ],
              [
                0.95856916599601, -1.9154210807478, -1.91713833199203,
                0.91885558323625, 0.95856916599601,
              ],
              [
                0.94597685600279, -1.88903307939452, -1.89195371200558,
                0.89487434461664, 0.94597685600279,
              ],
            ];
          function o(t, e, n, r, i, a) {
            for (; 0 != i--; )
              (n[r] =
                1e-10 +
                t[e + 0] * a[0] -
                n[r - 1] * a[1] +
                t[e - 1] * a[2] -
                n[r - 2] * a[3] +
                t[e - 2] * a[4] -
                n[r - 3] * a[5] +
                t[e - 3] * a[6] -
                n[r - 4] * a[7] +
                t[e - 4] * a[8] -
                n[r - 5] * a[9] +
                t[e - 5] * a[10] -
                n[r - 6] * a[11] +
                t[e - 6] * a[12] -
                n[r - 7] * a[13] +
                t[e - 7] * a[14] -
                n[r - 8] * a[15] +
                t[e - 8] * a[16] -
                n[r - 9] * a[17] +
                t[e - 9] * a[18] -
                n[r - 10] * a[19] +
                t[e - 10] * a[20]),
                ++r,
                ++e;
          }
          function s(t, e, n, r, i, a) {
            for (; 0 != i--; )
              (n[r] =
                t[e + 0] * a[0] -
                n[r - 1] * a[1] +
                t[e - 1] * a[2] -
                n[r - 2] * a[3] +
                t[e - 2] * a[4]),
                ++r,
                ++e;
          }
          function l(t, e) {
            for (var i = 0; i < MAX_ORDER; i++)
              t.linprebuf[i] =
                t.lstepbuf[i] =
                t.loutbuf[i] =
                t.rinprebuf[i] =
                t.rstepbuf[i] =
                t.routbuf[i] =
                  0;
            switch (0 | e) {
              case 48e3:
                t.reqindex = 0;
                break;
              case 44100:
                t.reqindex = 1;
                break;
              case 32e3:
                t.reqindex = 2;
                break;
              case 24e3:
                t.reqindex = 3;
                break;
              case 22050:
                t.reqindex = 4;
                break;
              case 16e3:
                t.reqindex = 5;
                break;
              case 12e3:
                t.reqindex = 6;
                break;
              case 11025:
                t.reqindex = 7;
                break;
              case 8e3:
                t.reqindex = 8;
                break;
              default:
                return INIT_GAIN_ANALYSIS_ERROR;
            }
            return (
              (t.sampleWindow = 0 | ((e * n + r - 1) / r)),
              (t.lsum = 0),
              (t.rsum = 0),
              (t.totsamp = 0),
              Bt.ill(t.A, 0),
              INIT_GAIN_ANALYSIS_OK
            );
          }
          function c(t) {
            return t * t;
          }
          function u(n, r) {
            var i,
              a = 0;
            for (i = 0; i < r; i++) a += n[i];
            if (0 == a) return GAIN_NOT_ENOUGH_SAMPLES;
            var o = 0 | Math.ceil(a * (1 - e));
            for (i = r; i-- > 0 && !((o -= n[i]) <= 0); );
            return t - i / Nt.STEPS_per_dB;
          }
          (this.InitGainAnalysis = function (t, e) {
            return l(t, e) != INIT_GAIN_ANALYSIS_OK
              ? INIT_GAIN_ANALYSIS_ERROR
              : ((t.linpre = MAX_ORDER),
                (t.rinpre = MAX_ORDER),
                (t.lstep = MAX_ORDER),
                (t.rstep = MAX_ORDER),
                (t.lout = MAX_ORDER),
                (t.rout = MAX_ORDER),
                Bt.fill(t.B, 0),
                INIT_GAIN_ANALYSIS_OK);
          }),
            (this.AnalyzeSamples = function (t, e, n, r, l, u, d) {
              var h, f, p, m, g, _, v;
              if (0 == u) return GAIN_ANALYSIS_OK;
              switch (((v = 0), (g = u), d)) {
                case 1:
                  (r = e), (l = n);
                  break;
                case 2:
                  break;
                default:
                  return GAIN_ANALYSIS_ERROR;
              }
              for (
                u < MAX_ORDER
                  ? (It.arraycopy(e, n, t.linprebuf, MAX_ORDER, u),
                    It.arraycopy(r, l, t.rinprebuf, MAX_ORDER, u))
                  : (It.arraycopy(e, n, t.linprebuf, MAX_ORDER, MAX_ORDER),
                    It.arraycopy(r, l, t.rinprebuf, MAX_ORDER, MAX_ORDER));
                g > 0;

              ) {
                (_ =
                  g > t.sampleWindow - t.totsamp
                    ? t.sampleWindow - t.totsamp
                    : g),
                  v < MAX_ORDER
                    ? ((h = t.linpre + v),
                      (f = t.linprebuf),
                      (p = t.rinpre + v),
                      (m = t.rinprebuf),
                      _ > MAX_ORDER - v && (_ = MAX_ORDER - v))
                    : ((h = n + v), (f = e), (p = l + v), (m = r)),
                  o(f, h, t.lstepbuf, t.lstep + t.totsamp, _, i[t.reqindex]),
                  o(m, p, t.rstepbuf, t.rstep + t.totsamp, _, i[t.reqindex]),
                  s(
                    t.lstepbuf,
                    t.lstep + t.totsamp,
                    t.loutbuf,
                    t.lout + t.totsamp,
                    _,
                    a[t.reqindex]
                  ),
                  s(
                    t.rstepbuf,
                    t.rstep + t.totsamp,
                    t.routbuf,
                    t.rout + t.totsamp,
                    _,
                    a[t.reqindex]
                  ),
                  (h = t.lout + t.totsamp),
                  (f = t.loutbuf),
                  (p = t.rout + t.totsamp),
                  (m = t.routbuf);
                for (var b = _ % 8; 0 != b--; )
                  (t.lsum += c(f[h++])), (t.rsum += c(m[p++]));
                for (b = _ / 8; 0 != b--; )
                  (t.lsum +=
                    c(f[h + 0]) +
                    c(f[h + 1]) +
                    c(f[h + 2]) +
                    c(f[h + 3]) +
                    c(f[h + 4]) +
                    c(f[h + 5]) +
                    c(f[h + 6]) +
                    c(f[h + 7])),
                    (h += 8),
                    (t.rsum +=
                      c(m[p + 0]) +
                      c(m[p + 1]) +
                      c(m[p + 2]) +
                      c(m[p + 3]) +
                      c(m[p + 4]) +
                      c(m[p + 5]) +
                      c(m[p + 6]) +
                      c(m[p + 7])),
                    (p += 8);
                if (
                  ((g -= _),
                  (v += _),
                  (t.totsamp += _),
                  t.totsamp == t.sampleWindow)
                ) {
                  var y =
                      10 *
                      Nt.STEPS_per_dB *
                      Math.log10(((t.lsum + t.rsum) / t.totsamp) * 0.5 + 1e-37),
                    x = y <= 0 ? 0 : 0 | y;
                  x >= t.A.length && (x = t.A.length - 1),
                    t.A[x]++,
                    (t.lsum = t.rsum = 0),
                    It.arraycopy(t.loutbuf, t.totsamp, t.loutbuf, 0, MAX_ORDER),
                    It.arraycopy(t.routbuf, t.totsamp, t.routbuf, 0, MAX_ORDER),
                    It.arraycopy(
                      t.lstepbuf,
                      t.totsamp,
                      t.lstepbuf,
                      0,
                      MAX_ORDER
                    ),
                    It.arraycopy(
                      t.rstepbuf,
                      t.totsamp,
                      t.rstepbuf,
                      0,
                      MAX_ORDER
                    ),
                    (t.totsamp = 0);
                }
                if (t.totsamp > t.sampleWindow) return GAIN_ANALYSIS_ERROR;
              }
              return (
                u < MAX_ORDER
                  ? (It.arraycopy(
                      t.linprebuf,
                      u,
                      t.linprebuf,
                      0,
                      MAX_ORDER - u
                    ),
                    It.arraycopy(t.rinprebuf, u, t.rinprebuf, 0, MAX_ORDER - u),
                    It.arraycopy(e, n, t.linprebuf, MAX_ORDER - u, u),
                    It.arraycopy(r, l, t.rinprebuf, MAX_ORDER - u, u))
                  : (It.arraycopy(
                      e,
                      n + u - MAX_ORDER,
                      t.linprebuf,
                      0,
                      MAX_ORDER
                    ),
                    It.arraycopy(
                      r,
                      l + u - MAX_ORDER,
                      t.rinprebuf,
                      0,
                      MAX_ORDER
                    )),
                GAIN_ANALYSIS_OK
              );
            }),
            (this.GetTitleGain = function (t) {
              for (var e = u(t.A, t.A.length), n = 0; n < t.A.length; n++)
                (t.B[n] += t.A[n]), (t.A[n] = 0);
              for (n = 0; n < MAX_ORDER; n++)
                t.linprebuf[n] =
                  t.lstepbuf[n] =
                  t.loutbuf[n] =
                  t.rinprebuf[n] =
                  t.rstepbuf[n] =
                  t.routbuf[n] =
                    0;
              return (t.totsamp = 0), (t.lsum = t.rsum = 0), e;
            });
        }
        (Nt.STEPS_per_dB = 100),
          (Nt.MAX_dB = 120),
          (Nt.GAIN_NOT_ENOUGH_SAMPLES = -24601),
          (Nt.GAIN_ANALYSIS_ERROR = 0),
          (Nt.GAIN_ANALYSIS_OK = 1),
          (Nt.INIT_GAIN_ANALYSIS_ERROR = 0),
          (Nt.INIT_GAIN_ANALYSIS_OK = 1),
          (Nt.YULE_ORDER = 10),
          (Nt.MAX_ORDER = Nt.YULE_ORDER),
          (Nt.MAX_SAMP_FREQ = 48e3),
          (Nt.RMS_WINDOW_TIME_NUMERATOR = 1),
          (Nt.RMS_WINDOW_TIME_DENOMINATOR = 20),
          (Nt.MAX_SAMPLES_PER_WINDOW =
            (Nt.MAX_SAMP_FREQ * Nt.RMS_WINDOW_TIME_NUMERATOR) /
              Nt.RMS_WINDOW_TIME_DENOMINATOR +
            1);
        var Lt = Nt,
          Vt = m.new_float,
          Ft = m.new_int;
        function Ht() {
          (this.linprebuf = Vt(2 * Lt.MAX_ORDER)),
            (this.linpre = 0),
            (this.lstepbuf = Vt(Lt.MAX_SAMPLES_PER_WINDOW + Lt.MAX_ORDER)),
            (this.lstep = 0),
            (this.loutbuf = Vt(Lt.MAX_SAMPLES_PER_WINDOW + Lt.MAX_ORDER)),
            (this.lout = 0),
            (this.rinprebuf = Vt(2 * Lt.MAX_ORDER)),
            (this.rinpre = 0),
            (this.rstepbuf = Vt(Lt.MAX_SAMPLES_PER_WINDOW + Lt.MAX_ORDER)),
            (this.rstep = 0),
            (this.routbuf = Vt(Lt.MAX_SAMPLES_PER_WINDOW + Lt.MAX_ORDER)),
            (this.rout = 0),
            (this.sampleWindow = 0),
            (this.totsamp = 0),
            (this.lsum = 0),
            (this.rsum = 0),
            (this.freqindex = 0),
            (this.first = 0),
            (this.A = Ft(0 | (Lt.STEPS_per_dB * Lt.MAX_dB))),
            (this.B = Ft(0 | (Lt.STEPS_per_dB * Lt.MAX_dB)));
        }
        var jt = Ht;
        function Yt(t) {
          this.bits = t;
        }
        var Wt = Yt,
          Ut = m.new_float,
          zt = m.new_int,
          Gt = m.assert;
        function qt(t) {
          var e = t;
          (this.quantize = e),
            (this.iteration_loop = function (t, e, n, r) {
              var i,
                a = t.internal_flags,
                o = Ut(it.SFBMAX),
                s = Ut(576),
                l = zt(2),
                c = 0,
                u = a.l3_side,
                d = new Wt(c);
              this.quantize.rv.ResvFrameBegin(t, d), (c = d.bits);
              for (var h = 0; h < a.mode_gr; h++) {
                (i = this.quantize.qupvt.on_pe(t, e, l, c, h, h)),
                  a.mode_ext == L.MPG_MD_MS_LR &&
                    (this.quantize.ms_convert(a.l3_side, h),
                    this.quantize.qupvt.reduce_side(l, n[h], c, i));
                for (var f = 0; f < a.channels_out; f++) {
                  var p,
                    m,
                    g = u.tt[h][f];
                  g.block_type != L.SHORT_TYPE
                    ? ((p = 0), (m = a.PSY.mask_adjust - p))
                    : ((p = 0), (m = a.PSY.mask_adjust_short - p)),
                    (a.masking_lower = Math.pow(10, 0.1 * m)),
                    this.quantize.init_outer_loop(a, g),
                    this.quantize.init_xrpow(a, g, s) &&
                      (this.quantize.qupvt.calc_xmin(t, r[h][f], g, o),
                      this.quantize.outer_loop(t, g, o, s, f, l[f])),
                    this.quantize.iteration_finish_one(a, h, f),
                    Gt(g.part2_3_length <= Ot.MAX_BITS_PER_CHANNEL),
                    Gt(g.part2_3_length <= l[f]);
                }
              }
              this.quantize.rv.ResvFrameEnd(a, c);
            });
        }
        var Xt = qt;
        function Zt(t, e, n, r) {
          (this.xlen = t), (this.linmax = e), (this.table = n), (this.hlen = r);
        }
        var Kt = {
          t1HB: [1, 1, 1, 0],
          t2HB: [1, 2, 1, 3, 1, 1, 3, 2, 0],
          t3HB: [3, 2, 1, 1, 1, 1, 3, 2, 0],
          t5HB: [1, 2, 6, 5, 3, 1, 4, 4, 7, 5, 7, 1, 6, 1, 1, 0],
          t6HB: [7, 3, 5, 1, 6, 2, 3, 2, 5, 4, 4, 1, 3, 3, 2, 0],
          t7HB: [
            1, 2, 10, 19, 16, 10, 3, 3, 7, 10, 5, 3, 11, 4, 13, 17, 8, 4, 12,
            11, 18, 15, 11, 2, 7, 6, 9, 14, 3, 1, 6, 4, 5, 3, 2, 0,
          ],
          t8HB: [
            3, 4, 6, 18, 12, 5, 5, 1, 2, 16, 9, 3, 7, 3, 5, 14, 7, 3, 19, 17,
            15, 13, 10, 4, 13, 5, 8, 11, 5, 1, 12, 4, 4, 1, 1, 0,
          ],
          t9HB: [
            7, 5, 9, 14, 15, 7, 6, 4, 5, 5, 6, 7, 7, 6, 8, 8, 8, 5, 15, 6, 9,
            10, 5, 1, 11, 7, 9, 6, 4, 1, 14, 4, 6, 2, 6, 0,
          ],
          t10HB: [
            1, 2, 10, 23, 35, 30, 12, 17, 3, 3, 8, 12, 18, 21, 12, 7, 11, 9, 15,
            21, 32, 40, 19, 6, 14, 13, 22, 34, 46, 23, 18, 7, 20, 19, 33, 47,
            27, 22, 9, 3, 31, 22, 41, 26, 21, 20, 5, 3, 14, 13, 10, 11, 16, 6,
            5, 1, 9, 8, 7, 8, 4, 4, 2, 0,
          ],
          t11HB: [
            3, 4, 10, 24, 34, 33, 21, 15, 5, 3, 4, 10, 32, 17, 11, 10, 11, 7,
            13, 18, 30, 31, 20, 5, 25, 11, 19, 59, 27, 18, 12, 5, 35, 33, 31,
            58, 30, 16, 7, 5, 28, 26, 32, 19, 17, 15, 8, 14, 14, 12, 9, 13, 14,
            9, 4, 1, 11, 4, 6, 6, 6, 3, 2, 0,
          ],
          t12HB: [
            9, 6, 16, 33, 41, 39, 38, 26, 7, 5, 6, 9, 23, 16, 26, 11, 17, 7, 11,
            14, 21, 30, 10, 7, 17, 10, 15, 12, 18, 28, 14, 5, 32, 13, 22, 19,
            18, 16, 9, 5, 40, 17, 31, 29, 17, 13, 4, 2, 27, 12, 11, 15, 10, 7,
            4, 1, 27, 12, 8, 12, 6, 3, 1, 0,
          ],
          t13HB: [
            1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19, 3, 4,
            12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14, 15, 13, 23,
            36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16, 22, 20, 37, 61,
            56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14, 35, 16, 60, 57, 97,
            75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24, 58, 27, 50, 96, 76, 70,
            93, 84, 77, 58, 79, 29, 74, 49, 41, 17, 47, 45, 78, 74, 115, 94, 90,
            79, 69, 83, 71, 50, 59, 38, 36, 15, 72, 34, 56, 95, 92, 85, 91, 90,
            86, 73, 77, 65, 51, 44, 43, 42, 43, 20, 30, 44, 55, 78, 72, 87, 78,
            61, 46, 54, 37, 30, 20, 16, 53, 25, 41, 37, 44, 59, 54, 81, 66, 76,
            57, 54, 37, 18, 39, 11, 35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55,
            21, 22, 26, 38, 22, 53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23,
            27, 14, 9, 7, 34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18,
            17, 9, 5, 45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6,
            3, 48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2, 16,
            15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1,
          ],
          t15HB: [
            7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122,
            63, 13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36,
            19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33, 29,
            28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29, 52, 22,
            42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27, 77, 37, 35,
            66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38, 125, 32, 60, 56,
            50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30, 109, 53, 49, 94, 88,
            75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25, 90, 43, 41, 77, 73, 63,
            56, 92, 77, 66, 47, 67, 48, 53, 36, 20, 71, 34, 67, 60, 58, 49, 88,
            76, 67, 106, 71, 54, 38, 39, 23, 15, 109, 53, 51, 47, 90, 82, 58,
            57, 48, 72, 57, 41, 23, 27, 62, 9, 86, 42, 40, 37, 70, 64, 52, 43,
            70, 55, 42, 25, 29, 18, 11, 11, 118, 68, 30, 55, 50, 46, 74, 65, 49,
            39, 24, 16, 22, 13, 14, 7, 91, 44, 39, 38, 34, 63, 52, 45, 31, 52,
            28, 19, 14, 8, 9, 3, 123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17,
            12, 15, 10, 2, 1, 71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8,
            6, 2, 0,
          ],
          t16HB: [
            1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376,
            17, 3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9,
            15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206,
            16, 45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387,
            365, 26, 75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226,
            395, 382, 362, 9, 66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232,
            400, 388, 378, 445, 16, 111, 54, 52, 100, 184, 178, 160, 133, 257,
            244, 228, 217, 385, 366, 715, 10, 98, 48, 91, 88, 165, 157, 148,
            261, 248, 407, 397, 372, 380, 889, 884, 8, 85, 84, 81, 159, 156,
            143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7, 154, 76, 73,
            141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11, 139,
            129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439,
            4, 243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706,
            223, 436, 6, 202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443,
            707, 440, 437, 1728, 4, 747, 211, 210, 208, 370, 379, 734, 723, 714,
            1735, 883, 877, 876, 3459, 865, 2, 377, 369, 102, 187, 726, 722,
            358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0, 12, 10, 7, 11, 10,
            17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3,
          ],
          t24HB: [
            15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517,
            1032, 88, 14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345,
            319, 297, 279, 42, 47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182,
            340, 315, 295, 541, 18, 81, 39, 75, 70, 134, 125, 116, 220, 204,
            190, 178, 325, 311, 293, 271, 16, 147, 72, 69, 135, 127, 118, 112,
            210, 200, 188, 352, 323, 306, 285, 540, 14, 263, 66, 129, 126, 119,
            114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12, 249, 123, 121,
            117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10, 435,
            115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531,
            381, 17, 427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286,
            268, 514, 377, 16, 335, 199, 197, 191, 189, 181, 174, 333, 321, 305,
            289, 275, 521, 379, 371, 11, 668, 184, 183, 179, 175, 344, 331, 314,
            304, 290, 277, 530, 383, 373, 366, 10, 652, 346, 171, 168, 164, 318,
            309, 299, 287, 276, 263, 513, 375, 368, 362, 6, 648, 322, 316, 312,
            307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4, 620, 300,
            296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2,
            1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360,
            358, 356, 0, 43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3,
          ],
          t32HB: [1, 10, 8, 20, 12, 20, 16, 32, 14, 12, 24, 0, 28, 16, 24, 16],
          t33HB: [15, 28, 26, 48, 22, 40, 36, 64, 14, 24, 20, 32, 12, 16, 8, 0],
          t1l: [1, 4, 3, 5],
          t2l: [1, 4, 7, 4, 5, 7, 6, 7, 8],
          t3l: [2, 3, 7, 4, 4, 7, 6, 7, 8],
          t5l: [1, 4, 7, 8, 4, 5, 8, 9, 7, 8, 9, 10, 8, 8, 9, 10],
          t6l: [3, 4, 6, 8, 4, 4, 6, 7, 5, 6, 7, 8, 7, 7, 8, 9],
          t7l: [
            1, 4, 7, 9, 9, 10, 4, 6, 8, 9, 9, 10, 7, 7, 9, 10, 10, 11, 8, 9, 10,
            11, 11, 11, 8, 9, 10, 11, 11, 12, 9, 10, 11, 12, 12, 12,
          ],
          t8l: [
            2, 4, 7, 9, 9, 10, 4, 4, 6, 10, 10, 10, 7, 6, 8, 10, 10, 11, 9, 10,
            10, 11, 11, 12, 9, 9, 10, 11, 12, 12, 10, 10, 11, 11, 13, 13,
          ],
          t9l: [
            3, 4, 6, 7, 9, 10, 4, 5, 6, 7, 8, 10, 5, 6, 7, 8, 9, 10, 7, 7, 8, 9,
            9, 10, 8, 8, 9, 9, 10, 11, 9, 9, 10, 10, 11, 11,
          ],
          t10l: [
            1, 4, 7, 9, 10, 10, 10, 11, 4, 6, 8, 9, 10, 11, 10, 10, 7, 8, 9, 10,
            11, 12, 11, 11, 8, 9, 10, 11, 12, 12, 11, 12, 9, 10, 11, 12, 12, 12,
            12, 12, 10, 11, 12, 12, 13, 13, 12, 13, 9, 10, 11, 12, 12, 12, 13,
            13, 10, 10, 11, 12, 12, 13, 13, 13,
          ],
          t11l: [
            2, 4, 6, 8, 9, 10, 9, 10, 4, 5, 6, 8, 10, 10, 9, 10, 6, 7, 8, 9, 10,
            11, 10, 10, 8, 8, 9, 11, 10, 12, 10, 11, 9, 10, 10, 11, 11, 12, 11,
            12, 9, 10, 11, 12, 12, 13, 12, 13, 9, 9, 9, 10, 11, 12, 12, 12, 9,
            9, 10, 11, 12, 12, 12, 12,
          ],
          t12l: [
            4, 4, 6, 8, 9, 10, 10, 10, 4, 5, 6, 7, 9, 9, 10, 10, 6, 6, 7, 8, 9,
            10, 9, 10, 7, 7, 8, 8, 9, 10, 10, 10, 8, 8, 9, 9, 10, 10, 10, 11, 9,
            9, 10, 10, 10, 11, 10, 11, 9, 9, 9, 10, 10, 11, 11, 12, 10, 10, 10,
            11, 11, 11, 11, 12,
          ],
          t13l: [
            1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14, 4, 6, 8,
            9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14, 7, 8, 9, 10, 11,
            11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15, 8, 9, 10, 11, 11, 12,
            12, 12, 12, 13, 13, 13, 13, 14, 15, 15, 9, 9, 11, 11, 12, 12, 13,
            13, 12, 13, 13, 14, 14, 15, 15, 16, 10, 10, 11, 12, 12, 12, 13, 13,
            13, 13, 14, 13, 15, 15, 16, 16, 10, 11, 12, 12, 13, 13, 13, 13, 13,
            14, 14, 14, 15, 15, 16, 16, 11, 11, 12, 13, 13, 13, 14, 14, 14, 14,
            15, 15, 15, 16, 18, 18, 10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14,
            15, 15, 16, 17, 17, 11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16,
            16, 16, 18, 17, 11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16,
            17, 18, 19, 12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17,
            17, 18, 12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18,
            18, 13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18,
            14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18, 13,
            14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18,
          ],
          t15l: [
            3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14, 5, 5, 7,
            8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 6, 7, 7, 8, 9, 9,
            10, 10, 10, 11, 11, 12, 12, 13, 13, 13, 7, 8, 8, 9, 9, 10, 10, 11,
            11, 11, 12, 12, 12, 13, 13, 13, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11,
            12, 12, 12, 13, 13, 13, 9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12,
            13, 13, 13, 14, 10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13,
            13, 14, 14, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13,
            13, 14, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14,
            14, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14,
            11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14, 11,
            11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15, 12, 12,
            11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15, 12, 12, 12,
            12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 13, 13, 13, 13,
            13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15, 13, 13, 13, 13, 13,
            13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15,
          ],
          t16_5l: [
            1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11, 4, 6, 8,
            9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11, 7, 8, 9, 10, 11,
            11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12, 9, 9, 10, 11, 11, 12,
            12, 12, 13, 13, 14, 14, 14, 15, 15, 13, 10, 10, 11, 11, 12, 12, 13,
            13, 13, 14, 14, 14, 15, 15, 15, 12, 10, 10, 11, 11, 12, 13, 13, 14,
            13, 14, 14, 15, 15, 15, 16, 13, 11, 11, 11, 12, 13, 13, 13, 13, 14,
            14, 14, 14, 15, 15, 16, 13, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15,
            15, 15, 15, 17, 17, 13, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15,
            15, 16, 16, 16, 13, 12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16,
            15, 16, 15, 14, 12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17,
            17, 16, 13, 13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15,
            16, 14, 13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18,
            14, 15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14,
            14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14, 11,
            11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12,
          ],
          t16l: [
            1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10, 4, 6, 8,
            9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10, 7, 8, 9, 10, 11,
            11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11, 9, 9, 10, 11, 11, 12,
            12, 12, 13, 13, 14, 14, 14, 15, 15, 12, 10, 10, 11, 11, 12, 12, 13,
            13, 13, 14, 14, 14, 15, 15, 15, 11, 10, 10, 11, 11, 12, 13, 13, 14,
            13, 14, 14, 15, 15, 15, 16, 12, 11, 11, 11, 12, 13, 13, 13, 13, 14,
            14, 14, 14, 15, 15, 16, 12, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15,
            15, 15, 15, 17, 17, 12, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15,
            15, 16, 16, 16, 12, 12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16,
            15, 16, 15, 13, 12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17,
            17, 16, 12, 13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15,
            16, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18,
            13, 15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13,
            14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13, 10,
            10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10,
          ],
          t24l: [
            4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10, 5, 6, 7,
            8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10, 7, 7, 8, 9, 9, 10,
            10, 11, 11, 11, 11, 12, 12, 12, 13, 9, 8, 8, 9, 9, 10, 10, 10, 11,
            11, 11, 11, 12, 12, 12, 12, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11,
            12, 12, 12, 12, 13, 9, 10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12,
            12, 12, 12, 12, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12,
            12, 12, 13, 9, 11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12,
            13, 13, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13,
            13, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13,
            10, 12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10,
            12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10, 12,
            12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10, 12, 12,
            12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10, 13, 12, 12,
            12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10, 9, 9, 9, 9, 9,
            9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6,
          ],
          t32l: [1, 5, 5, 7, 5, 8, 7, 9, 5, 7, 7, 9, 7, 9, 9, 10],
          t33l: [4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8],
        };
        (Kt.ht = [
          new Zt(0, 0, null, null),
          new Zt(2, 0, Kt.t1HB, Kt.t1l),
          new Zt(3, 0, Kt.t2HB, Kt.t2l),
          new Zt(3, 0, Kt.t3HB, Kt.t3l),
          new Zt(0, 0, null, null),
          new Zt(4, 0, Kt.t5HB, Kt.t5l),
          new Zt(4, 0, Kt.t6HB, Kt.t6l),
          new Zt(6, 0, Kt.t7HB, Kt.t7l),
          new Zt(6, 0, Kt.t8HB, Kt.t8l),
          new Zt(6, 0, Kt.t9HB, Kt.t9l),
          new Zt(8, 0, Kt.t10HB, Kt.t10l),
          new Zt(8, 0, Kt.t11HB, Kt.t11l),
          new Zt(8, 0, Kt.t12HB, Kt.t12l),
          new Zt(16, 0, Kt.t13HB, Kt.t13l),
          new Zt(0, 0, null, Kt.t16_5l),
          new Zt(16, 0, Kt.t15HB, Kt.t15l),
          new Zt(1, 1, Kt.t16HB, Kt.t16l),
          new Zt(2, 3, Kt.t16HB, Kt.t16l),
          new Zt(3, 7, Kt.t16HB, Kt.t16l),
          new Zt(4, 15, Kt.t16HB, Kt.t16l),
          new Zt(6, 63, Kt.t16HB, Kt.t16l),
          new Zt(8, 255, Kt.t16HB, Kt.t16l),
          new Zt(10, 1023, Kt.t16HB, Kt.t16l),
          new Zt(13, 8191, Kt.t16HB, Kt.t16l),
          new Zt(4, 15, Kt.t24HB, Kt.t24l),
          new Zt(5, 31, Kt.t24HB, Kt.t24l),
          new Zt(6, 63, Kt.t24HB, Kt.t24l),
          new Zt(7, 127, Kt.t24HB, Kt.t24l),
          new Zt(8, 255, Kt.t24HB, Kt.t24l),
          new Zt(9, 511, Kt.t24HB, Kt.t24l),
          new Zt(11, 2047, Kt.t24HB, Kt.t24l),
          new Zt(13, 8191, Kt.t24HB, Kt.t24l),
          new Zt(0, 0, Kt.t32HB, Kt.t32l),
          new Zt(0, 0, Kt.t33HB, Kt.t33l),
        ]),
          (Kt.largetbl = [
            65540, 327685, 458759, 589832, 655369, 655370, 720906, 720907,
            786443, 786444, 786444, 851980, 851980, 851980, 917517, 655370,
            262149, 393222, 524295, 589832, 655369, 720906, 720906, 720907,
            786443, 786443, 786444, 851980, 917516, 851980, 917516, 655370,
            458759, 524295, 589832, 655369, 720905, 720906, 786442, 786443,
            851979, 786443, 851979, 851980, 851980, 917516, 917517, 720905,
            589832, 589832, 655369, 720905, 720906, 786442, 786442, 786443,
            851979, 851979, 917515, 917516, 917516, 983052, 983052, 786441,
            655369, 655369, 720905, 720906, 786442, 786442, 851978, 851979,
            851979, 917515, 917516, 917516, 983052, 983052, 983053, 720905,
            655370, 655369, 720906, 720906, 786442, 851978, 851979, 917515,
            851979, 917515, 917516, 983052, 983052, 983052, 1048588, 786441,
            720906, 720906, 720906, 786442, 851978, 851979, 851979, 851979,
            917515, 917516, 917516, 917516, 983052, 983052, 1048589, 786441,
            720907, 720906, 786442, 786442, 851979, 851979, 851979, 917515,
            917516, 983052, 983052, 983052, 983052, 1114125, 1114125, 786442,
            720907, 786443, 786443, 851979, 851979, 851979, 917515, 917515,
            983051, 983052, 983052, 983052, 1048588, 1048589, 1048589, 786442,
            786443, 786443, 786443, 851979, 851979, 917515, 917515, 983052,
            983052, 983052, 983052, 1048588, 983053, 1048589, 983053, 851978,
            786444, 851979, 786443, 851979, 917515, 917516, 917516, 917516,
            983052, 1048588, 1048588, 1048589, 1114125, 1114125, 1048589,
            786442, 851980, 851980, 851979, 851979, 917515, 917516, 983052,
            1048588, 1048588, 1048588, 1048588, 1048589, 1048589, 983053,
            1048589, 851978, 851980, 917516, 917516, 917516, 917516, 983052,
            983052, 983052, 983052, 1114124, 1048589, 1048589, 1048589, 1048589,
            1179661, 851978, 983052, 917516, 917516, 917516, 983052, 983052,
            1048588, 1048588, 1048589, 1179661, 1114125, 1114125, 1114125,
            1245197, 1114125, 851978, 917517, 983052, 851980, 917516, 1048588,
            1048588, 983052, 1048589, 1048589, 1114125, 1179661, 1114125,
            1245197, 1114125, 1048589, 851978, 655369, 655369, 655369, 720905,
            720905, 786441, 786441, 786441, 851977, 851977, 851977, 851978,
            851978, 851978, 851978, 655366,
          ]),
          (Kt.table23 = [
            65538, 262147, 458759, 262148, 327684, 458759, 393222, 458759,
            524296,
          ]),
          (Kt.table56 = [
            65539, 262148, 458758, 524296, 262148, 327684, 524294, 589831,
            458757, 524294, 589831, 655368, 524295, 524295, 589832, 655369,
          ]),
          (Kt.bitrate_table = [
            [0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1],
            [
              0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320,
              -1,
            ],
            [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1],
          ]),
          (Kt.samplerate_table = [
            [22050, 24e3, 16e3, -1],
            [44100, 48e3, 32e3, -1],
            [11025, 12e3, 8e3, -1],
          ]),
          (Kt.scfsi_band = [0, 6, 11, 16, 21]);
        var $t = Kt,
          Qt = m.VbrMode,
          Jt = m.Float,
          te = m.Util,
          ee = m.new_float,
          ne = m.new_int,
          re = m.assert;
        function ie() {
          var t = null,
            e = null,
            n = null;
          function r(t) {
            return re(0 <= t + ie.Q_MAX2 && t < ie.Q_MAX), u[t + ie.Q_MAX2];
          }
          (this.setModules = function (r, i, a) {
            (t = r), (e = i), (n = a);
          }),
            (this.IPOW20 = function (t) {
              return re(0 <= t && t < ie.Q_MAX), d[t];
            });
          var i = 2220446049250313e-31,
            a = ie.IXMAX_VAL + 2,
            o = ie.Q_MAX,
            s = ie.Q_MAX2,
            l = (ie.LARGE_BITS, 100);
          this.nr_of_sfb_block = [
            [
              [6, 5, 5, 5],
              [9, 9, 9, 9],
              [6, 9, 9, 9],
            ],
            [
              [6, 5, 7, 3],
              [9, 9, 12, 6],
              [6, 9, 12, 6],
            ],
            [
              [11, 10, 0, 0],
              [18, 18, 0, 0],
              [15, 18, 0, 0],
            ],
            [
              [7, 7, 7, 0],
              [12, 12, 12, 0],
              [6, 15, 12, 0],
            ],
            [
              [6, 6, 6, 3],
              [12, 9, 9, 6],
              [6, 12, 9, 6],
            ],
            [
              [8, 8, 5, 0],
              [15, 12, 9, 0],
              [6, 18, 9, 0],
            ],
          ];
          var c = [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0,
          ];
          (this.pretab = c),
            (this.sfBandIndex = [
              new mt(
                [
                  0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168,
                  200, 238, 284, 336, 396, 464, 522, 576,
                ],
                [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192],
                [0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0]
              ),
              new mt(
                [
                  0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162,
                  194, 232, 278, 332, 394, 464, 540, 576,
                ],
                [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192],
                [0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0]
              ),
              new mt(
                [
                  0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168,
                  200, 238, 284, 336, 396, 464, 522, 576,
                ],
                [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192],
                [0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0]
              ),
              new mt(
                [
                  0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134,
                  162, 196, 238, 288, 342, 418, 576,
                ],
                [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192],
                [0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0]
              ),
              new mt(
                [
                  0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128,
                  156, 190, 230, 276, 330, 384, 576,
                ],
                [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192],
                [0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0]
              ),
              new mt(
                [
                  0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126,
                  156, 194, 240, 296, 364, 448, 550, 576,
                ],
                [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192],
                [0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0]
              ),
              new mt(
                [
                  0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168,
                  200, 238, 284, 336, 396, 464, 522, 576,
                ],
                [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192],
                [0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0]
              ),
              new mt(
                [
                  0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168,
                  200, 238, 284, 336, 396, 464, 522, 576,
                ],
                [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192],
                [0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0]
              ),
              new mt(
                [
                  0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280,
                  336, 400, 476, 566, 568, 570, 572, 574, 576,
                ],
                [0, 8, 16, 24, 36, 52, 72, 96, 124, 160, 162, 164, 166, 192],
                [0, 0, 0, 0, 0, 0, 0],
                [0, 0, 0, 0, 0, 0, 0]
              ),
            ]);
          var u = ee(o + s + 1),
            d = ee(o),
            h = ee(a),
            f = ee(a);
          function p(t, e) {
            var r = n.ATHformula(e, t);
            return (r -= l), (r = Math.pow(10, r / 10 + t.ATHlower));
          }
          function m(t) {
            for (
              var e = t.internal_flags.ATH.l,
                n = t.internal_flags.ATH.psfb21,
                r = t.internal_flags.ATH.s,
                i = t.internal_flags.ATH.psfb12,
                a = t.internal_flags,
                o = t.out_samplerate,
                s = 0;
              s < L.SBMAX_l;
              s++
            ) {
              var l = a.scalefac_band.l[s],
                c = a.scalefac_band.l[s + 1];
              e[s] = Jt.MAX_VALUE;
              for (var u = l; u < c; u++) {
                var d = p(t, (u * o) / 1152);
                e[s] = Math.min(e[s], d);
              }
            }
            for (s = 0; s < L.PSFB21; s++)
              for (
                l = a.scalefac_band.psfb21[s],
                  c = a.scalefac_band.psfb21[s + 1],
                  n[s] = Jt.MAX_VALUE,
                  u = l;
                u < c;
                u++
              )
                (d = p(t, (u * o) / 1152)), (n[s] = Math.min(n[s], d));
            for (s = 0; s < L.SBMAX_s; s++) {
              for (
                l = a.scalefac_band.s[s],
                  c = a.scalefac_band.s[s + 1],
                  r[s] = Jt.MAX_VALUE,
                  u = l;
                u < c;
                u++
              )
                (d = p(t, (u * o) / 384)), (r[s] = Math.min(r[s], d));
              r[s] *= a.scalefac_band.s[s + 1] - a.scalefac_band.s[s];
            }
            for (s = 0; s < L.PSFB12; s++) {
              for (
                l = a.scalefac_band.psfb12[s],
                  c = a.scalefac_band.psfb12[s + 1],
                  i[s] = Jt.MAX_VALUE,
                  u = l;
                u < c;
                u++
              )
                (d = p(t, (u * o) / 384)), (i[s] = Math.min(i[s], d));
              i[s] *= a.scalefac_band.s[13] - a.scalefac_band.s[12];
            }
            if (t.noATH) {
              for (s = 0; s < L.SBMAX_l; s++) e[s] = 1e-20;
              for (s = 0; s < L.PSFB21; s++) n[s] = 1e-20;
              for (s = 0; s < L.SBMAX_s; s++) r[s] = 1e-20;
              for (s = 0; s < L.PSFB12; s++) i[s] = 1e-20;
            }
            a.ATH.floor = 10 * Math.log10(p(t, -1));
          }
          function g(t) {
            this.s = t;
          }
          (this.adj43 = f),
            (this.iteration_init = function (e) {
              var n,
                r = e.internal_flags,
                i = r.l3_side;
              if (0 == r.iteration_init_init) {
                for (
                  r.iteration_init_init = 1,
                    i.main_data_begin = 0,
                    m(e),
                    h[0] = 0,
                    n = 1;
                  n < a;
                  n++
                )
                  h[n] = Math.pow(n, 4 / 3);
                for (n = 0; n < a - 1; n++)
                  f[n] = n + 1 - Math.pow(0.5 * (h[n] + h[n + 1]), 0.75);
                for (f[n] = 0.5, n = 0; n < o; n++)
                  d[n] = Math.pow(2, -0.1875 * (n - 210));
                for (n = 0; n <= o + s; n++)
                  u[n] = Math.pow(2, 0.25 * (n - 210 - s));
                var l, c, p, g;
                for (
                  t.huffman_init(r),
                    (n = (e.exp_nspsytune >> 2) & 63) >= 32 && (n -= 64),
                    l = Math.pow(10, n / 4 / 10),
                    (n = (e.exp_nspsytune >> 8) & 63) >= 32 && (n -= 64),
                    c = Math.pow(10, n / 4 / 10),
                    (n = (e.exp_nspsytune >> 14) & 63) >= 32 && (n -= 64),
                    p = Math.pow(10, n / 4 / 10),
                    (n = (e.exp_nspsytune >> 20) & 63) >= 32 && (n -= 64),
                    g = p * Math.pow(10, n / 4 / 10),
                    n = 0;
                  n < L.SBMAX_l;
                  n++
                )
                  (_ = n <= 6 ? l : n <= 13 ? c : n <= 20 ? p : g),
                    (r.nsPsy.longfact[n] = _);
                for (n = 0; n < L.SBMAX_s; n++) {
                  var _;
                  (_ = n <= 5 ? l : n <= 10 ? c : n <= 11 ? p : g),
                    (r.nsPsy.shortfact[n] = _);
                }
              }
            }),
            (this.on_pe = function (t, n, r, i, a, o) {
              var s,
                l,
                c = t.internal_flags,
                u = 0,
                d = ne(2),
                h = new Wt(u),
                f = e.ResvMaxBits(t, i, h, o),
                p = (u = h.bits) + f;
              for (
                p > Ot.MAX_BITS_PER_GRANULE && (p = Ot.MAX_BITS_PER_GRANULE),
                  s = 0,
                  l = 0;
                l < c.channels_out;
                ++l
              )
                (r[l] = Math.min(Ot.MAX_BITS_PER_CHANNEL, u / c.channels_out)),
                  (d[l] = 0 | ((r[l] * n[a][l]) / 700 - r[l])),
                  d[l] > (3 * i) / 4 && (d[l] = (3 * i) / 4),
                  d[l] < 0 && (d[l] = 0),
                  d[l] + r[l] > Ot.MAX_BITS_PER_CHANNEL &&
                    (d[l] = Math.max(0, Ot.MAX_BITS_PER_CHANNEL - r[l])),
                  (s += d[l]);
              if (s > f)
                for (l = 0; l < c.channels_out; ++l) d[l] = (f * d[l]) / s;
              for (l = 0; l < c.channels_out; ++l) (r[l] += d[l]), (f -= d[l]);
              for (s = 0, l = 0; l < c.channels_out; ++l) s += r[l];
              if (s > Ot.MAX_BITS_PER_GRANULE) {
                var m = 0;
                for (l = 0; l < c.channels_out; ++l)
                  (r[l] *= Ot.MAX_BITS_PER_GRANULE), (r[l] /= s), (m += r[l]);
                re(m <= Ot.MAX_BITS_PER_GRANULE);
              }
              return p;
            }),
            (this.reduce_side = function (t, e, n, r) {
              re(r <= Ot.MAX_BITS_PER_GRANULE),
                re(t[0] + t[1] <= Ot.MAX_BITS_PER_GRANULE);
              var i = (0.33 * (0.5 - e)) / 0.5;
              i < 0 && (i = 0), i > 0.5 && (i = 0.5);
              var a = 0 | (0.5 * i * (t[0] + t[1]));
              a > Ot.MAX_BITS_PER_CHANNEL - t[0] &&
                (a = Ot.MAX_BITS_PER_CHANNEL - t[0]),
                a < 0 && (a = 0),
                t[1] >= 125 &&
                  (t[1] - a > 125
                    ? (t[0] < n && (t[0] += a), (t[1] -= a))
                    : ((t[0] += t[1] - 125), (t[1] = 125))),
                (a = t[0] + t[1]) > r &&
                  ((t[0] = (r * t[0]) / a), (t[1] = (r * t[1]) / a)),
                re(t[0] <= Ot.MAX_BITS_PER_CHANNEL),
                re(t[1] <= Ot.MAX_BITS_PER_CHANNEL),
                re(t[0] + t[1] <= Ot.MAX_BITS_PER_GRANULE);
            }),
            (this.athAdjust = function (t, e, n) {
              var r = 90.30873362,
                i = 94.82444863,
                a = te.FAST_LOG10_X(e, 10),
                o = t * t,
                s = 0;
              return (
                (a -= n),
                o > 1e-20 && (s = 1 + te.FAST_LOG10_X(o, 10 / r)),
                s < 0 && (s = 0),
                (a *= s),
                (a += n + r - i),
                Math.pow(10, 0.1 * a)
              );
            }),
            (this.calc_xmin = function (t, e, n, r) {
              var a,
                o = 0,
                s = t.internal_flags,
                l = 0,
                c = 0,
                u = s.ATH,
                d = n.xr,
                h = t.VBR == Qt.vbr_mtrh ? 1 : 0,
                f = s.masking_lower;
              for (
                (t.VBR != Qt.vbr_mtrh && t.VBR != Qt.vbr_mt) || (f = 1), a = 0;
                a < n.psy_lmax;
                a++
              ) {
                (x =
                  (y =
                    t.VBR == Qt.vbr_rh || t.VBR == Qt.vbr_mtrh
                      ? athAdjust(u.adjust, u.l[a], u.floor)
                      : u.adjust * u.l[a]) / (_ = n.width[a])),
                  (w = i),
                  (E = _ >> 1),
                  (A = 0);
                do {
                  (A += k = d[l] * d[l]),
                    (w += k < x ? k : x),
                    (A += R = d[++l] * d[l]),
                    (w += R < x ? R : x),
                    l++;
                } while (--E > 0);
                A > y && c++,
                  a == L.SBPSY_l &&
                    w < (S = y * s.nsPsy.longfact[a]) &&
                    (w = S),
                  0 != h && (y = w),
                  t.ATHonly ||
                    ((M = e.en.l[a]) > 0 &&
                      ((S = (A * e.thm.l[a] * f) / M),
                      0 != h && (S *= s.nsPsy.longfact[a]),
                      y < S && (y = S))),
                  (r[o++] = 0 != h ? y : y * s.nsPsy.longfact[a]);
              }
              var p = 575;
              if (n.block_type != L.SHORT_TYPE)
                for (var m = 576; 0 != m-- && BitStream.EQ(d[m], 0); ) p = m;
              n.max_nonzero_coeff = p;
              for (var g = n.sfb_smin; a < n.psymax; g++, a += 3) {
                var _, v, b;
                for (
                  b =
                    t.VBR == Qt.vbr_rh || t.VBR == Qt.vbr_mtrh
                      ? athAdjust(u.adjust, u.s[g], u.floor)
                      : u.adjust * u.s[g],
                    _ = n.width[a],
                    v = 0;
                  v < 3;
                  v++
                ) {
                  var y,
                    x,
                    w,
                    M,
                    S,
                    A = 0,
                    E = _ >> 1;
                  (x = b / _), (w = i);
                  do {
                    var k, R;
                    (A += k = d[l] * d[l]),
                      (w += k < x ? k : x),
                      (A += R = d[++l] * d[l]),
                      (w += R < x ? R : x),
                      l++;
                  } while (--E > 0);
                  A > b && c++,
                    g == L.SBPSY_s &&
                      w < (S = b * s.nsPsy.shortfact[g]) &&
                      (w = S),
                    (y = 0 != h ? w : b),
                    t.ATHonly ||
                      t.ATHshort ||
                      ((M = e.en.s[g][v]) > 0 &&
                        ((S = (A * e.thm.s[g][v] * f) / M),
                        0 != h && (S *= s.nsPsy.shortfact[g]),
                        y < S && (y = S))),
                    (r[o++] = 0 != h ? y : y * s.nsPsy.shortfact[g]);
                }
                t.useTemporal &&
                  (r[o - 3] > r[o - 3 + 1] &&
                    (r[o - 3 + 1] += (r[o - 3] - r[o - 3 + 1]) * s.decay),
                  r[o - 3 + 1] > r[o - 3 + 2] &&
                    (r[o - 3 + 2] += (r[o - 3 + 1] - r[o - 3 + 2]) * s.decay));
              }
              return c;
            }),
            (this.calc_noise_core = function (t, e, n, r) {
              var i = 0,
                a = e.s,
                o = t.l3_enc;
              if (a > t.count1)
                for (; 0 != n--; )
                  (l = t.xr[a]),
                    a++,
                    (i += l * l),
                    (l = t.xr[a]),
                    a++,
                    (i += l * l);
              else if (a > t.big_values) {
                var s = ee(2);
                for (s[0] = 0, s[1] = r; 0 != n--; )
                  (l = Math.abs(t.xr[a]) - s[o[a]]),
                    a++,
                    (i += l * l),
                    (l = Math.abs(t.xr[a]) - s[o[a]]),
                    a++,
                    (i += l * l);
              } else
                for (; 0 != n--; ) {
                  var l;
                  (l = Math.abs(t.xr[a]) - h[o[a]] * r),
                    a++,
                    (i += l * l),
                    (l = Math.abs(t.xr[a]) - h[o[a]] * r),
                    a++,
                    (i += l * l);
                }
              return (e.s = a), i;
            }),
            (this.calc_noise = function (t, e, n, i, a) {
              var o,
                s,
                l = 0,
                u = 0,
                d = 0,
                h = 0,
                f = 0,
                p = -20,
                m = 0,
                _ = t.scalefac,
                v = 0;
              for (i.over_SSD = 0, o = 0; o < t.psymax; o++) {
                var b,
                  y =
                    t.global_gain -
                    ((_[v++] + (0 != t.preflag ? c[o] : 0)) <<
                      (t.scalefac_scale + 1)) -
                    8 * t.subblock_gain[t.window[o]],
                  x = 0;
                if (null != a && a.step[o] == y)
                  (x = a.noise[o]),
                    (m += t.width[o]),
                    (n[l++] = x / e[u++]),
                    (x = a.noise_log[o]);
                else {
                  var w,
                    M = r(y);
                  (s = t.width[o] >> 1),
                    m + t.width[o] > t.max_nonzero_coeff &&
                      (s = (w = t.max_nonzero_coeff - m + 1) > 0 ? w >> 1 : 0);
                  var S = new g(m);
                  (x = this.calc_noise_core(t, S, s, M)),
                    (m = S.s),
                    null != a && ((a.step[o] = y), (a.noise[o] = x)),
                    (x = n[l++] = x / e[u++]),
                    (x = te.FAST_LOG10(Math.max(x, 1e-20))),
                    null != a && (a.noise_log[o] = x);
                }
                null != a && (a.global_gain = t.global_gain),
                  (f += x),
                  x > 0 &&
                    ((b = Math.max(0 | (10 * x + 0.5), 1)),
                    (i.over_SSD += b * b),
                    d++,
                    (h += x)),
                  (p = Math.max(p, x));
              }
              return (
                (i.over_count = d),
                (i.tot_noise = f),
                (i.over_noise = h),
                (i.max_noise = p),
                d
              );
            }),
            (this.set_pinfo = function (t, e, n, r, i) {
              var a,
                o,
                s,
                l,
                u,
                d = t.internal_flags,
                h = 0 == e.scalefac_scale ? 0.5 : 1,
                f = e.scalefac,
                p = ee(L3Side.SFBMAX),
                m = ee(L3Side.SFBMAX),
                g = new CalcNoiseResult();
              calc_xmin(t, n, e, p), calc_noise(e, p, m, g, null);
              var _ = 0;
              for (
                o = e.sfb_lmax,
                  e.block_type != L.SHORT_TYPE &&
                    0 == e.mixed_block_flag &&
                    (o = 22),
                  a = 0;
                a < o;
                a++
              ) {
                var v = d.scalefac_band.l[a],
                  b = (y = d.scalefac_band.l[a + 1]) - v;
                for (l = 0; _ < y; _++) l += e.xr[_] * e.xr[_];
                (l /= b),
                  (u = 1e15),
                  (d.pinfo.en[r][i][a] = u * l),
                  (d.pinfo.xfsf[r][i][a] = (u * p[a] * m[a]) / b),
                  n.en.l[a] > 0 && !t.ATHonly ? (l /= n.en.l[a]) : (l = 0),
                  (d.pinfo.thr[r][i][a] =
                    u * Math.max(l * n.thm.l[a], d.ATH.l[a])),
                  (d.pinfo.LAMEsfb[r][i][a] = 0),
                  0 != e.preflag &&
                    a >= 11 &&
                    (d.pinfo.LAMEsfb[r][i][a] = -h * c[a]),
                  a < L.SBPSY_l &&
                    (re(f[a] >= 0), (d.pinfo.LAMEsfb[r][i][a] -= h * f[a]));
              }
              if (e.block_type == L.SHORT_TYPE)
                for (o = a, a = e.sfb_smin; a < L.SBMAX_s; a++) {
                  (v = d.scalefac_band.s[a]),
                    (b = (y = d.scalefac_band.s[a + 1]) - v);
                  for (var y, x = 0; x < 3; x++) {
                    for (l = 0, s = v; s < y; s++)
                      (l += e.xr[_] * e.xr[_]), _++;
                    (l = Math.max(l / b, 1e-20)),
                      (u = 1e15),
                      (d.pinfo.en_s[r][i][3 * a + x] = u * l),
                      (d.pinfo.xfsf_s[r][i][3 * a + x] = (u * p[o] * m[o]) / b),
                      n.en.s[a][x] > 0 ? (l /= n.en.s[a][x]) : (l = 0),
                      (t.ATHonly || t.ATHshort) && (l = 0),
                      (d.pinfo.thr_s[r][i][3 * a + x] =
                        u * Math.max(l * n.thm.s[a][x], d.ATH.s[a])),
                      (d.pinfo.LAMEsfb_s[r][i][3 * a + x] =
                        -2 * e.subblock_gain[x]),
                      a < L.SBPSY_s &&
                        (d.pinfo.LAMEsfb_s[r][i][3 * a + x] -= h * f[o]),
                      o++;
                  }
                }
              (d.pinfo.LAMEqss[r][i] = e.global_gain),
                (d.pinfo.LAMEmainbits[r][i] =
                  e.part2_3_length + e.part2_length),
                (d.pinfo.LAMEsfbits[r][i] = e.part2_length),
                (d.pinfo.over[r][i] = g.over_count),
                (d.pinfo.max_noise[r][i] = 10 * g.max_noise),
                (d.pinfo.over_noise[r][i] = 10 * g.over_noise),
                (d.pinfo.tot_noise[r][i] = 10 * g.tot_noise),
                (d.pinfo.over_SSD[r][i] = g.over_SSD);
            });
        }
        (ie.Q_MAX = 257),
          (ie.Q_MAX2 = 116),
          (ie.LARGE_BITS = 1e5),
          (ie.IXMAX_VAL = 8206);
        var ae = ie,
          oe = m.System,
          se = m.Arrays,
          le = m.new_int,
          ce = m.assert;
        function ue() {
          var t = null;
          function e(t) {
            this.bits = 0 | t;
          }
          (this.qupvt = null),
            (this.setModules = function (e) {
              (this.qupvt = e), (t = e);
            });
          var n = [
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 0],
            [0, 1],
            [1, 1],
            [1, 1],
            [1, 2],
            [2, 2],
            [2, 3],
            [2, 3],
            [3, 4],
            [3, 4],
            [3, 4],
            [4, 5],
            [4, 5],
            [4, 6],
            [5, 6],
            [5, 6],
            [5, 7],
            [6, 7],
            [6, 7],
          ];
          function r(t, e, n, r, i, a) {
            var o = 0.5946 / e;
            for (ce(t > 0), t >>= 1; 0 != t--; )
              (i[a++] = o > n[r++] ? 0 : 1), (i[a++] = o > n[r++] ? 0 : 1);
          }
          function i(e, n, r, i, a, o) {
            ce(e > 0);
            var s = (e >>= 1) % 2;
            for (e >>= 1; 0 != e--; ) {
              var l, c, u, d, h, f, p, m;
              (l = r[i++] * n),
                (c = r[i++] * n),
                (h = 0 | l),
                (u = r[i++] * n),
                (f = 0 | c),
                (d = r[i++] * n),
                (p = 0 | u),
                (l += t.adj43[h]),
                (m = 0 | d),
                (c += t.adj43[f]),
                (a[o++] = 0 | l),
                (u += t.adj43[p]),
                (a[o++] = 0 | c),
                (d += t.adj43[m]),
                (a[o++] = 0 | u),
                (a[o++] = 0 | d);
            }
            0 != s &&
              ((h = 0 | (l = r[i++] * n)),
              (f = 0 | (c = r[i++] * n)),
              (l += t.adj43[h]),
              (c += t.adj43[f]),
              (a[o++] = 0 | l),
              (a[o++] = 0 | c));
          }
          function a(e, n, a, o, s) {
            var l,
              c,
              u,
              d = 0,
              h = 0,
              f = 0,
              p = 0,
              m = n,
              g = 0,
              _ = m,
              v = 0,
              b = e,
              y = 0;
            for (
              u = null != s && o.global_gain == s.global_gain,
                c = o.block_type == L.SHORT_TYPE ? 38 : 21,
                l = 0;
              l <= c;
              l++
            ) {
              var x = -1;
              if (
                ((u || o.block_type == L.NORM_TYPE) &&
                  (x =
                    o.global_gain -
                    ((o.scalefac[l] + (0 != o.preflag ? t.pretab[l] : 0)) <<
                      (o.scalefac_scale + 1)) -
                    8 * o.subblock_gain[o.window[l]]),
                ce(o.width[l] >= 0),
                u && s.step[l] == x)
              )
                0 != h && (i(h, a, b, y, _, v), (h = 0)),
                  0 != f && (r(f, a, b, y, _, v), (f = 0));
              else {
                var w,
                  M = o.width[l];
                if (
                  (d + o.width[l] > o.max_nonzero_coeff &&
                    ((w = o.max_nonzero_coeff - d + 1),
                    se.fill(n, o.max_nonzero_coeff, 576, 0),
                    (M = w) < 0 && (M = 0),
                    (l = c + 1)),
                  0 == h && 0 == f && ((_ = m), (v = g), (b = e), (y = p)),
                  null != s &&
                  s.sfb_count1 > 0 &&
                  l >= s.sfb_count1 &&
                  s.step[l] > 0 &&
                  x >= s.step[l]
                    ? (0 != h &&
                        (i(h, a, b, y, _, v),
                        (h = 0),
                        (_ = m),
                        (v = g),
                        (b = e),
                        (y = p)),
                      (f += M))
                    : (0 != f &&
                        (r(f, a, b, y, _, v),
                        (f = 0),
                        (_ = m),
                        (v = g),
                        (b = e),
                        (y = p)),
                      (h += M)),
                  M <= 0)
                ) {
                  0 != f && (r(f, a, b, y, _, v), (f = 0)),
                    0 != h && (i(h, a, b, y, _, v), (h = 0));
                  break;
                }
              }
              l <= c &&
                ((g += o.width[l]), (p += o.width[l]), (d += o.width[l]));
            }
            0 != h && (i(h, a, b, y, _, v), (h = 0)),
              0 != f && (r(f, a, b, y, _, v), (f = 0));
          }
          function o(t, e, n) {
            var r = 0,
              i = 0;
            do {
              var a = t[e++],
                o = t[e++];
              r < a && (r = a), i < o && (i = o);
            } while (e < n);
            return r < i && (r = i), r;
          }
          function s(t, e, n, r, i, a) {
            var o,
              s = 65536 * $t.ht[r].xlen + $t.ht[i].xlen,
              l = 0;
            do {
              var c = t[e++],
                u = t[e++];
              0 != c && (c > 14 && ((c = 15), (l += s)), (c *= 16)),
                0 != u && (u > 14 && ((u = 15), (l += s)), (c += u)),
                (l += $t.largetbl[c]);
            } while (e < n);
            return (
              (o = 65535 & l),
              (l >>= 16) > o && ((l = o), (r = i)),
              (a.bits += l),
              r
            );
          }
          function l(t, e, n, r) {
            var i = 0,
              a = $t.ht[1].hlen;
            do {
              var o = 2 * t[e + 0] + t[e + 1];
              (e += 2), (i += a[o]);
            } while (e < n);
            return (r.bits += i), 1;
          }
          function c(t, e, n, r, i) {
            var a,
              o,
              s = 0,
              l = $t.ht[r].xlen;
            o = 2 == r ? $t.table23 : $t.table56;
            do {
              var c = t[e + 0] * l + t[e + 1];
              (e += 2), (s += o[c]);
            } while (e < n);
            return (
              (a = 65535 & s),
              (s >>= 16) > a && ((s = a), r++),
              (i.bits += s),
              r
            );
          }
          function u(t, e, n, r, i) {
            var a = 0,
              o = 0,
              s = 0,
              l = $t.ht[r].xlen,
              c = $t.ht[r].hlen,
              u = $t.ht[r + 1].hlen,
              d = $t.ht[r + 2].hlen;
            do {
              var h = t[e + 0] * l + t[e + 1];
              (e += 2), (a += c[h]), (o += u[h]), (s += d[h]);
            } while (e < n);
            var f = r;
            return (
              a > o && ((a = o), f++),
              a > s && ((a = s), (f = r + 2)),
              (i.bits += a),
              f
            );
          }
          var d = [1, 2, 5, 7, 7, 10, 10, 13, 13, 13, 13, 13, 13, 13, 13];
          function h(t, e, n, r) {
            var i = o(t, e, n);
            switch (i) {
              case 0:
                return i;
              case 1:
                return l(t, e, n, r);
              case 2:
              case 3:
                return c(t, e, n, d[i - 1], r);
              case 4:
              case 5:
              case 6:
              case 7:
              case 8:
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 14:
              case 15:
                return u(t, e, n, d[i - 1], r);
              default:
                if (i > ae.IXMAX_VAL) return (r.bits = ae.LARGE_BITS), -1;
                var a, h;
                for (i -= 15, a = 24; a < 32 && !($t.ht[a].linmax >= i); a++);
                for (h = a - 8; h < 24 && !($t.ht[h].linmax >= i); h++);
                return s(t, e, n, h, a, r);
            }
          }
          function f(t, n, r, i, a, o, s) {
            for (var l = n.big_values, c = 0; c <= 22; c++)
              i[c] = ae.LARGE_BITS;
            for (c = 0; c < 16; c++) {
              var u = t.scalefac_band.l[c + 1];
              if (u >= l) break;
              var d = 0,
                f = new e(d),
                p = h(r, 0, u, f);
              d = f.bits;
              for (var m = 0; m < 8; m++) {
                var g = t.scalefac_band.l[c + m + 2];
                if (g >= l) break;
                var _ = d,
                  v = h(r, u, g, (f = new e(_)));
                (_ = f.bits),
                  i[c + m] > _ &&
                    ((i[c + m] = _),
                    (a[c + m] = c),
                    (o[c + m] = p),
                    (s[c + m] = v));
              }
            }
          }
          function p(t, n, r, i, a, o, s, l) {
            for (var c = n.big_values, u = 2; u < L.SBMAX_l + 1; u++) {
              var d = t.scalefac_band.l[u];
              if (d >= c) break;
              var f = a[u - 2] + n.count1bits;
              if (r.part2_3_length <= f) break;
              var p = new e(f),
                m = h(i, d, c, p);
              (f = p.bits),
                r.part2_3_length <= f ||
                  (r.assign(n),
                  (r.part2_3_length = f),
                  (r.region0_count = o[u - 2]),
                  (r.region1_count = u - 2 - o[u - 2]),
                  (r.table_select[0] = s[u - 2]),
                  (r.table_select[1] = l[u - 2]),
                  (r.table_select[2] = m));
            }
          }
          (this.noquant_count_bits = function (t, n, r) {
            var i = n.l3_enc,
              a = Math.min(576, ((n.max_nonzero_coeff + 2) >> 1) << 1);
            for (
              null != r && (r.sfb_count1 = 0);
              a > 1 && 0 == (i[a - 1] | i[a - 2]);
              a -= 2
            );
            n.count1 = a;
            for (var o = 0, s = 0; a > 3; a -= 4) {
              var l;
              if (
                (2147483647 & (i[a - 1] | i[a - 2] | i[a - 3] | i[a - 4])) >
                1
              )
                break;
              (l = 2 * (2 * (2 * i[a - 4] + i[a - 3]) + i[a - 2]) + i[a - 1]),
                (o += $t.t32l[l]),
                (s += $t.t33l[l]);
            }
            var c = o;
            if (
              ((n.count1table_select = 0),
              o > s && ((c = s), (n.count1table_select = 1)),
              (n.count1bits = c),
              (n.big_values = a),
              0 == a)
            )
              return c;
            if (n.block_type == L.SHORT_TYPE)
              (o = 3 * t.scalefac_band.s[3]) > n.big_values &&
                (o = n.big_values),
                (s = n.big_values);
            else if (n.block_type == L.NORM_TYPE) {
              if (
                (ce(a <= 576),
                (o = n.region0_count = t.bv_scf[a - 2]),
                (s = n.region1_count = t.bv_scf[a - 1]),
                ce(o + s + 2 < L.SBPSY_l),
                (s = t.scalefac_band.l[o + s + 2]),
                (o = t.scalefac_band.l[o + 1]),
                s < a)
              ) {
                var u = new e(c);
                (n.table_select[2] = h(i, s, a, u)), (c = u.bits);
              }
            } else
              (n.region0_count = 7),
                (n.region1_count = L.SBMAX_l - 1 - 7 - 1),
                (o = t.scalefac_band.l[8]) > (s = a) && (o = s);
            if (
              ((o = Math.min(o, a)),
              (s = Math.min(s, a)),
              ce(o >= 0),
              ce(s >= 0),
              0 < o &&
                ((u = new e(c)),
                (n.table_select[0] = h(i, 0, o, u)),
                (c = u.bits)),
              o < s &&
                ((u = new e(c)),
                (n.table_select[1] = h(i, o, s, u)),
                (c = u.bits)),
              2 == t.use_best_huffman &&
                ((n.part2_3_length = c),
                best_huffman_divide(t, n),
                (c = n.part2_3_length)),
              null != r && n.block_type == L.NORM_TYPE)
            ) {
              for (var d = 0; t.scalefac_band.l[d] < n.big_values; ) d++;
              r.sfb_count1 = d;
            }
            return c;
          }),
            (this.count_bits = function (e, n, r, i) {
              var o = r.l3_enc,
                s = ae.IXMAX_VAL / t.IPOW20(r.global_gain);
              if (r.xrpow_max > s) return ae.LARGE_BITS;
              if (
                (a(n, o, t.IPOW20(r.global_gain), r, i),
                0 != (2 & e.substep_shaping))
              )
                for (
                  var l = 0,
                    c = r.global_gain + r.scalefac_scale,
                    u = 0.634521682242439 / t.IPOW20(c),
                    d = 0;
                  d < r.sfbmax;
                  d++
                ) {
                  var h,
                    f = r.width[d];
                  if ((ce(f >= 0), 0 == e.pseudohalf[d])) l += f;
                  else
                    for (h = l, l += f; h < l; ++h) o[h] = n[h] >= u ? o[h] : 0;
                }
              return this.noquant_count_bits(e, r, i);
            }),
            (this.best_huffman_divide = function (t, n) {
              var r = new lt(),
                i = n.l3_enc,
                a = le(23),
                o = le(23),
                s = le(23),
                l = le(23);
              if (n.block_type != L.SHORT_TYPE || 1 != t.mode_gr) {
                r.assign(n),
                  n.block_type == L.NORM_TYPE &&
                    (f(t, n, i, a, o, s, l), p(t, r, n, i, a, o, s, l));
                var c = r.big_values;
                if (
                  !(0 == c || (i[c - 2] | i[c - 1]) > 1) &&
                  !((c = n.count1 + 2) > 576)
                ) {
                  r.assign(n), (r.count1 = c);
                  var u = 0,
                    d = 0;
                  for (ce(c <= 576); c > r.big_values; c -= 4) {
                    var m =
                      2 * (2 * (2 * i[c - 4] + i[c - 3]) + i[c - 2]) + i[c - 1];
                    (u += $t.t32l[m]), (d += $t.t33l[m]);
                  }
                  if (
                    ((r.big_values = c),
                    (r.count1table_select = 0),
                    u > d && ((u = d), (r.count1table_select = 1)),
                    (r.count1bits = u),
                    r.block_type == L.NORM_TYPE)
                  )
                    p(t, r, n, i, a, o, s, l);
                  else {
                    if (
                      ((r.part2_3_length = u),
                      (u = t.scalefac_band.l[8]) > c && (u = c),
                      u > 0)
                    ) {
                      var g = new e(r.part2_3_length);
                      (r.table_select[0] = h(i, 0, u, g)),
                        (r.part2_3_length = g.bits);
                    }
                    c > u &&
                      ((g = new e(r.part2_3_length)),
                      (r.table_select[1] = h(i, u, c, g)),
                      (r.part2_3_length = g.bits)),
                      n.part2_3_length > r.part2_3_length && n.assign(r);
                  }
                }
              }
            });
          var m = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16],
            g = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8],
            _ = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4],
            v = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];
          function b(t, e) {
            for (
              var n, r = e.tt[1][t], i = e.tt[0][t], a = 0;
              a < $t.scfsi_band.length - 1;
              a++
            ) {
              for (
                n = $t.scfsi_band[a];
                n < $t.scfsi_band[a + 1] &&
                !(i.scalefac[n] != r.scalefac[n] && r.scalefac[n] >= 0);
                n++
              );
              if (n == $t.scfsi_band[a + 1]) {
                for (n = $t.scfsi_band[a]; n < $t.scfsi_band[a + 1]; n++)
                  r.scalefac[n] = -1;
                e.scfsi[t][a] = 1;
              }
            }
            var o = 0,
              s = 0;
            for (n = 0; n < 11; n++)
              -1 != r.scalefac[n] &&
                (s++, o < r.scalefac[n] && (o = r.scalefac[n]));
            for (var l = 0, c = 0; n < L.SBPSY_l; n++)
              -1 != r.scalefac[n] &&
                (c++, l < r.scalefac[n] && (l = r.scalefac[n]));
            for (a = 0; a < 16; a++)
              if (o < m[a] && l < g[a]) {
                var u = _[a] * s + v[a] * c;
                r.part2_length > u &&
                  ((r.part2_length = u), (r.scalefac_compress = a));
              }
          }
          function y(t, e) {
            for (var n = 0; n < e; ++n) if (t[n] < 0) return !1;
            return !0;
          }
          (ue.slen1_tab = _),
            (ue.slen2_tab = v),
            (this.best_scalefac_store = function (e, n, r, i) {
              var a,
                o,
                s,
                l,
                c = i.tt[n][r],
                u = 0;
              for (s = 0, a = 0; a < c.sfbmax; a++) {
                var d = c.width[a];
                for (
                  ce(d >= 0), s += d, l = -d;
                  l < 0 && 0 == c.l3_enc[l + s];
                  l++
                );
                0 == l && (c.scalefac[a] = u = -2);
              }
              if (0 == c.scalefac_scale && 0 == c.preflag) {
                var h = 0;
                for (a = 0; a < c.sfbmax; a++)
                  c.scalefac[a] > 0 && (h |= c.scalefac[a]);
                if (0 == (1 & h) && 0 != h) {
                  for (a = 0; a < c.sfbmax; a++)
                    c.scalefac[a] > 0 && (c.scalefac[a] >>= 1);
                  c.scalefac_scale = u = 1;
                }
              }
              if (
                0 == c.preflag &&
                c.block_type != L.SHORT_TYPE &&
                2 == e.mode_gr
              ) {
                for (
                  a = 11;
                  a < L.SBPSY_l &&
                  !(c.scalefac[a] < t.pretab[a] && -2 != c.scalefac[a]);
                  a++
                );
                if (a == L.SBPSY_l) {
                  for (a = 11; a < L.SBPSY_l; a++)
                    c.scalefac[a] > 0 && (c.scalefac[a] -= t.pretab[a]);
                  c.preflag = u = 1;
                }
              }
              for (o = 0; o < 4; o++) i.scfsi[r][o] = 0;
              for (
                2 == e.mode_gr &&
                  1 == n &&
                  i.tt[0][r].block_type != L.SHORT_TYPE &&
                  i.tt[1][r].block_type != L.SHORT_TYPE &&
                  (b(r, i), (u = 0)),
                  a = 0;
                a < c.sfbmax;
                a++
              )
                -2 == c.scalefac[a] && (c.scalefac[a] = 0);
              0 != u &&
                (2 == e.mode_gr
                  ? this.scale_bitcount(c)
                  : this.scale_bitcount_lsf(e, c));
            });
          var x = [
              0, 18, 36, 54, 54, 36, 54, 72, 54, 72, 90, 72, 90, 108, 108, 126,
            ],
            w = [
              0, 18, 36, 54, 51, 35, 53, 71, 52, 70, 88, 69, 87, 105, 104, 122,
            ],
            M = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42, 52, 43, 53, 63, 64, 74];
          this.scale_bitcount = function (e) {
            var n,
              r,
              i,
              a = 0,
              o = 0,
              s = e.scalefac;
            if ((ce(y(s, e.sfbmax)), e.block_type == L.SHORT_TYPE))
              (i = x), 0 != e.mixed_block_flag && (i = w);
            else if (((i = M), 0 == e.preflag)) {
              for (r = 11; r < L.SBPSY_l && !(s[r] < t.pretab[r]); r++);
              if (r == L.SBPSY_l)
                for (e.preflag = 1, r = 11; r < L.SBPSY_l; r++)
                  s[r] -= t.pretab[r];
            }
            for (r = 0; r < e.sfbdivide; r++) a < s[r] && (a = s[r]);
            for (; r < e.sfbmax; r++) o < s[r] && (o = s[r]);
            for (e.part2_length = ae.LARGE_BITS, n = 0; n < 16; n++)
              a < m[n] &&
                o < g[n] &&
                e.part2_length > i[n] &&
                ((e.part2_length = i[n]), (e.scalefac_compress = n));
            return e.part2_length == ae.LARGE_BITS;
          };
          var S = [
            [15, 15, 7, 7],
            [15, 15, 7, 0],
            [7, 3, 0, 0],
            [15, 31, 31, 0],
            [7, 7, 7, 0],
            [3, 3, 0, 0],
          ];
          this.scale_bitcount_lsf = function (e, n) {
            var r,
              i,
              a,
              o,
              s,
              l,
              c,
              u,
              d = le(4),
              h = n.scalefac;
            for (r = 0 != n.preflag ? 2 : 0, c = 0; c < 4; c++) d[c] = 0;
            if (n.block_type == L.SHORT_TYPE) {
              i = 1;
              var f = t.nr_of_sfb_block[r][i];
              for (u = 0, a = 0; a < 4; a++)
                for (o = f[a] / 3, c = 0; c < o; c++, u++)
                  for (s = 0; s < 3; s++)
                    h[3 * u + s] > d[a] && (d[a] = h[3 * u + s]);
            } else
              for (i = 0, f = t.nr_of_sfb_block[r][i], u = 0, a = 0; a < 4; a++)
                for (o = f[a], c = 0; c < o; c++, u++)
                  h[u] > d[a] && (d[a] = h[u]);
            for (l = !1, a = 0; a < 4; a++) d[a] > S[r][a] && (l = !0);
            if (!l) {
              var p, m, g, _;
              for (
                n.sfb_partition_table = t.nr_of_sfb_block[r][i], a = 0;
                a < 4;
                a++
              )
                n.slen[a] = A[d[a]];
              switch (
                ((p = n.slen[0]),
                (m = n.slen[1]),
                (g = n.slen[2]),
                (_ = n.slen[3]),
                r)
              ) {
                case 0:
                  n.scalefac_compress = ((5 * p + m) << 4) + (g << 2) + _;
                  break;
                case 1:
                  n.scalefac_compress = 400 + ((5 * p + m) << 2) + g;
                  break;
                case 2:
                  n.scalefac_compress = 500 + 3 * p + m;
                  break;
                default:
                  oe.err.printf("intensity stereo not implemented yet\n");
              }
            }
            if (!l)
              for (
                ce(null != n.sfb_partition_table), n.part2_length = 0, a = 0;
                a < 4;
                a++
              )
                n.part2_length += n.slen[a] * n.sfb_partition_table[a];
            return l;
          };
          var A = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4];
          this.huffman_init = function (t) {
            for (var e = 2; e <= 576; e += 2) {
              for (var r, i = 0; t.scalefac_band.l[++i] < e; );
              for (r = n[i][0]; t.scalefac_band.l[r + 1] > e; ) r--;
              for (
                r < 0 && (r = n[i][0]), t.bv_scf[e - 2] = r, r = n[i][1];
                t.scalefac_band.l[r + t.bv_scf[e - 2] + 2] > e;

              )
                r--;
              r < 0 && (r = n[i][1]), (t.bv_scf[e - 1] = r);
            }
          };
        }
        var de = ue,
          he = m.System,
          fe = m.Arrays,
          pe = m.new_byte,
          me = m.new_float_n,
          ge = m.new_int,
          _e = m.assert;
        function ve() {
          var t = this,
            e = 32773,
            n = 32,
            r = null,
            i = null,
            a = null,
            o = null;
          this.setModules = function (t, e, n, s) {
            (r = t), (i = e), (a = n), (o = s);
          };
          var s = null,
            l = 0,
            c = 0,
            u = 0;
          function d(t) {
            he.arraycopy(t.header[t.w_ptr].buf, 0, s, c, t.sideinfo_len),
              (c += t.sideinfo_len),
              (l += 8 * t.sideinfo_len),
              (t.w_ptr = (t.w_ptr + 1) & (Ot.MAX_HEADER_BUF - 1));
          }
          function h(t, e, r) {
            for (_e(r < n - 2); r > 0; ) {
              var i;
              0 == u &&
                ((u = 8),
                c++,
                _e(c < Lame.LAME_MAXMP3BUFFER),
                _e(t.header[t.w_ptr].write_timing >= l),
                t.header[t.w_ptr].write_timing == l && d(t),
                (s[c] = 0)),
                (i = Math.min(r, u)),
                (u -= i),
                _e((r -= i) < n),
                _e(u < n),
                (s[c] |= (e >> r) << u),
                (l += i);
            }
          }
          function f(t, e, r) {
            for (_e(r < n - 2); r > 0; ) {
              var i;
              0 == u &&
                ((u = 8), c++, _e(c < Lame.LAME_MAXMP3BUFFER), (s[c] = 0)),
                (i = Math.min(r, u)),
                (u -= i),
                _e((r -= i) < n),
                _e(u < n),
                (s[c] |= (e >> r) << u),
                (l += i);
            }
          }
          function p(t, e) {
            var n,
              r = t.internal_flags;
            if (
              (_e(e >= 0),
              e >= 8 && (h(r, 76, 8), (e -= 8)),
              e >= 8 && (h(r, 65, 8), (e -= 8)),
              e >= 8 && (h(r, 77, 8), (e -= 8)),
              e >= 8 && (h(r, 69, 8), (e -= 8)),
              e >= 32)
            ) {
              var i = a.getLameShortVersion();
              if (e >= 32)
                for (n = 0; n < i.length && e >= 8; ++n)
                  (e -= 8), h(r, i.charAt(n), 8);
            }
            for (; e >= 1; e -= 1)
              h(r, r.ancillary_flag, 1),
                (r.ancillary_flag ^= t.disable_reservoir ? 0 : 1);
            _e(0 == e);
          }
          function m(t, e, r) {
            for (var i = t.header[t.h_ptr].ptr; r > 0; ) {
              var a = Math.min(r, 8 - (7 & i));
              _e((r -= a) < n),
                (t.header[t.h_ptr].buf[i >> 3] |=
                  (e >> r) << (8 - (7 & i) - a)),
                (i += a);
            }
            t.header[t.h_ptr].ptr = i;
          }
          function g(t, n) {
            t <<= 8;
            for (var r = 0; r < 8; r++)
              0 != (65536 & ((n <<= 1) ^ (t <<= 1))) && (n ^= e);
            return n;
          }
          function _(t, e) {
            var n,
              r,
              i,
              a = t.internal_flags;
            if (
              ((n = a.l3_side),
              (a.header[a.h_ptr].ptr = 0),
              fe.fill(a.header[a.h_ptr].buf, 0, a.sideinfo_len, 0),
              t.out_samplerate < 16e3 ? m(a, 4094, 12) : m(a, 4095, 12),
              m(a, t.version, 1),
              m(a, 1, 2),
              m(a, t.error_protection ? 0 : 1, 1),
              m(a, a.bitrate_index, 4),
              m(a, a.samplerate_index, 2),
              m(a, a.padding, 1),
              m(a, t.extension, 1),
              m(a, t.mode.ordinal(), 2),
              m(a, a.mode_ext, 2),
              m(a, t.copyright, 1),
              m(a, t.original, 1),
              m(a, t.emphasis, 2),
              t.error_protection && m(a, 0, 16),
              1 == t.version)
            ) {
              for (
                _e(n.main_data_begin >= 0),
                  m(a, n.main_data_begin, 9),
                  2 == a.channels_out
                    ? m(a, n.private_bits, 3)
                    : m(a, n.private_bits, 5),
                  i = 0;
                i < a.channels_out;
                i++
              ) {
                var o;
                for (o = 0; o < 4; o++) m(a, n.scfsi[i][o], 1);
              }
              for (r = 0; r < 2; r++)
                for (i = 0; i < a.channels_out; i++)
                  m(a, (s = n.tt[r][i]).part2_3_length + s.part2_length, 12),
                    m(a, s.big_values / 2, 9),
                    m(a, s.global_gain, 8),
                    m(a, s.scalefac_compress, 4),
                    s.block_type != L.NORM_TYPE
                      ? (m(a, 1, 1),
                        m(a, s.block_type, 2),
                        m(a, s.mixed_block_flag, 1),
                        14 == s.table_select[0] && (s.table_select[0] = 16),
                        m(a, s.table_select[0], 5),
                        14 == s.table_select[1] && (s.table_select[1] = 16),
                        m(a, s.table_select[1], 5),
                        m(a, s.subblock_gain[0], 3),
                        m(a, s.subblock_gain[1], 3),
                        m(a, s.subblock_gain[2], 3))
                      : (m(a, 0, 1),
                        14 == s.table_select[0] && (s.table_select[0] = 16),
                        m(a, s.table_select[0], 5),
                        14 == s.table_select[1] && (s.table_select[1] = 16),
                        m(a, s.table_select[1], 5),
                        14 == s.table_select[2] && (s.table_select[2] = 16),
                        m(a, s.table_select[2], 5),
                        _e(0 <= s.region0_count && s.region0_count < 16),
                        _e(0 <= s.region1_count && s.region1_count < 8),
                        m(a, s.region0_count, 4),
                        m(a, s.region1_count, 3)),
                    m(a, s.preflag, 1),
                    m(a, s.scalefac_scale, 1),
                    m(a, s.count1table_select, 1);
            } else
              for (
                _e(n.main_data_begin >= 0),
                  m(a, n.main_data_begin, 8),
                  m(a, n.private_bits, a.channels_out),
                  r = 0,
                  i = 0;
                i < a.channels_out;
                i++
              ) {
                var s;
                m(a, (s = n.tt[r][i]).part2_3_length + s.part2_length, 12),
                  m(a, s.big_values / 2, 9),
                  m(a, s.global_gain, 8),
                  m(a, s.scalefac_compress, 9),
                  s.block_type != L.NORM_TYPE
                    ? (m(a, 1, 1),
                      m(a, s.block_type, 2),
                      m(a, s.mixed_block_flag, 1),
                      14 == s.table_select[0] && (s.table_select[0] = 16),
                      m(a, s.table_select[0], 5),
                      14 == s.table_select[1] && (s.table_select[1] = 16),
                      m(a, s.table_select[1], 5),
                      m(a, s.subblock_gain[0], 3),
                      m(a, s.subblock_gain[1], 3),
                      m(a, s.subblock_gain[2], 3))
                    : (m(a, 0, 1),
                      14 == s.table_select[0] && (s.table_select[0] = 16),
                      m(a, s.table_select[0], 5),
                      14 == s.table_select[1] && (s.table_select[1] = 16),
                      m(a, s.table_select[1], 5),
                      14 == s.table_select[2] && (s.table_select[2] = 16),
                      m(a, s.table_select[2], 5),
                      _e(0 <= s.region0_count && s.region0_count < 16),
                      _e(0 <= s.region1_count && s.region1_count < 8),
                      m(a, s.region0_count, 4),
                      m(a, s.region1_count, 3)),
                  m(a, s.scalefac_scale, 1),
                  m(a, s.count1table_select, 1);
              }
            t.error_protection && CRC_writeheader(a, a.header[a.h_ptr].buf);
            var l = a.h_ptr;
            _e(a.header[l].ptr == 8 * a.sideinfo_len),
              (a.h_ptr = (l + 1) & (Ot.MAX_HEADER_BUF - 1)),
              (a.header[a.h_ptr].write_timing = a.header[l].write_timing + e),
              a.h_ptr == a.w_ptr &&
                he.err.println(
                  "Error: MAX_HEADER_BUF too small in bitstream.c \n"
                );
          }
          function v(t, e) {
            var n,
              r = $t.ht[e.count1table_select + 32],
              i = 0,
              a = e.big_values,
              o = e.big_values;
            for (
              _e(e.count1table_select < 2), n = (e.count1 - e.big_values) / 4;
              n > 0;
              --n
            ) {
              var s,
                l = 0,
                c = 0;
              0 != (s = e.l3_enc[a + 0]) &&
                ((c += 8), e.xr[o + 0] < 0 && l++, _e(s <= 1)),
                0 != (s = e.l3_enc[a + 1]) &&
                  ((c += 4), (l *= 2), e.xr[o + 1] < 0 && l++, _e(s <= 1)),
                0 != (s = e.l3_enc[a + 2]) &&
                  ((c += 2), (l *= 2), e.xr[o + 2] < 0 && l++, _e(s <= 1)),
                0 != (s = e.l3_enc[a + 3]) &&
                  (c++, (l *= 2), e.xr[o + 3] < 0 && l++, _e(s <= 1)),
                (a += 4),
                (o += 4),
                h(t, l + r.table[c], r.hlen[c]),
                (i += r.hlen[c]);
            }
            return i;
          }
          function b(t, e, r, i, a) {
            var o = $t.ht[e],
              s = 0;
            if ((_e(e < 32), 0 == e)) return s;
            for (var l = r; l < i; l += 2) {
              var c = 0,
                u = 0,
                d = o.xlen,
                f = o.xlen,
                p = 0,
                m = a.l3_enc[l],
                g = a.l3_enc[l + 1];
              if ((0 != m && (a.xr[l] < 0 && p++, c--), e > 15)) {
                if (m > 14) {
                  var _ = m - 15;
                  _e(_ <= o.linmax), (p |= _ << 1), (u = d), (m = 15);
                }
                if (g > 14) {
                  var v = g - 15;
                  _e(v <= o.linmax), (p <<= d), (p |= v), (u += d), (g = 15);
                }
                f = 16;
              }
              0 != g && ((p <<= 1), a.xr[l + 1] < 0 && p++, c--),
                _e((m | g) < 16),
                (m = m * f + g),
                (u -= c),
                (c += o.hlen[m]),
                _e(c <= n),
                _e(u <= n),
                h(t, o.table[m], c),
                h(t, p, u),
                (s += c + u);
            }
            return s;
          }
          function y(t, e) {
            var n = 3 * t.scalefac_band.s[3];
            n > e.big_values && (n = e.big_values);
            var r = b(t, e.table_select[0], 0, n, e);
            return (r += b(t, e.table_select[1], n, e.big_values, e));
          }
          function x(t, e) {
            var n, r, i, a;
            (n = e.big_values), _e(0 <= n && n <= 576);
            var o = e.region0_count + 1;
            return (
              _e(0 <= o),
              _e(o < t.scalefac_band.l.length),
              (i = t.scalefac_band.l[o]),
              (o += e.region1_count + 1),
              _e(0 <= o),
              _e(o < t.scalefac_band.l.length),
              i > n && (i = n),
              (a = t.scalefac_band.l[o]) > n && (a = n),
              (r = b(t, e.table_select[0], 0, i, e)),
              (r += b(t, e.table_select[1], i, a, e)),
              (r += b(t, e.table_select[2], a, n, e))
            );
          }
          function w(t) {
            var e,
              n,
              r,
              i,
              a = 0,
              o = t.internal_flags,
              s = o.l3_side;
            if (1 == t.version)
              for (e = 0; e < 2; e++)
                for (n = 0; n < o.channels_out; n++) {
                  var l = s.tt[e][n],
                    c = de.slen1_tab[l.scalefac_compress],
                    u = de.slen2_tab[l.scalefac_compress];
                  for (i = 0, r = 0; r < l.sfbdivide; r++)
                    -1 != l.scalefac[r] && (h(o, l.scalefac[r], c), (i += c));
                  for (; r < l.sfbmax; r++)
                    -1 != l.scalefac[r] && (h(o, l.scalefac[r], u), (i += u));
                  _e(i == l.part2_length),
                    l.block_type == L.SHORT_TYPE
                      ? (i += y(o, l))
                      : (i += x(o, l)),
                    (i += v(o, l)),
                    _e(i == l.part2_3_length + l.part2_length),
                    (a += i);
                }
            else
              for (e = 0, n = 0; n < o.channels_out; n++) {
                l = s.tt[e][n];
                var d,
                  f,
                  p = 0;
                if (
                  (_e(null != l.sfb_partition_table),
                  (i = 0),
                  (r = 0),
                  (f = 0),
                  l.block_type == L.SHORT_TYPE)
                ) {
                  for (; f < 4; f++) {
                    var m = l.sfb_partition_table[f] / 3,
                      g = l.slen[f];
                    for (d = 0; d < m; d++, r++)
                      h(o, Math.max(l.scalefac[3 * r + 0], 0), g),
                        h(o, Math.max(l.scalefac[3 * r + 1], 0), g),
                        h(o, Math.max(l.scalefac[3 * r + 2], 0), g),
                        (p += 3 * g);
                  }
                  i += y(o, l);
                } else {
                  for (; f < 4; f++)
                    for (
                      m = l.sfb_partition_table[f], g = l.slen[f], d = 0;
                      d < m;
                      d++, r++
                    )
                      h(o, Math.max(l.scalefac[r], 0), g), (p += g);
                  i += x(o, l);
                }
                (i += v(o, l)),
                  _e(i == l.part2_3_length),
                  _e(p == l.part2_length),
                  (a += p + i);
              }
            return a;
          }
          function M() {
            this.total = 0;
          }
          function S(e, n) {
            var r,
              i,
              a,
              o,
              s,
              u = e.internal_flags;
            return (
              (s = u.w_ptr),
              -1 == (o = u.h_ptr - 1) && (o = Ot.MAX_HEADER_BUF - 1),
              (r = u.header[o].write_timing - l),
              (n.total = r),
              r >= 0 &&
                ((i = 1 + o - s),
                o < s && (i = 1 + o - s + Ot.MAX_HEADER_BUF),
                (r -= 8 * i * u.sideinfo_len)),
              (r += a = t.getframebits(e)),
              (n.total += a),
              n.total % 8 != 0
                ? (n.total = 1 + n.total / 8)
                : (n.total = n.total / 8),
              (n.total += c + 1),
              r < 0 && he.err.println("strange error flushing buffer ... \n"),
              r
            );
          }
          (this.getframebits = function (t) {
            var e,
              n = t.internal_flags;
            return (
              (e =
                0 != n.bitrate_index
                  ? $t.bitrate_table[t.version][n.bitrate_index]
                  : t.brate),
              _e(8 <= e && e <= 640),
              8 *
                (0 |
                  ((72e3 * (t.version + 1) * e) / t.out_samplerate + n.padding))
            );
          }),
            (this.CRC_writeheader = function (t, e) {
              var n = 65535;
              (n = g(255 & e[2], n)), (n = g(255 & e[3], n));
              for (var r = 6; r < t.sideinfo_len; r++) n = g(255 & e[r], n);
              (e[4] = byte(n >> 8)), (e[5] = byte(255 & n));
            }),
            (this.flush_bitstream = function (t) {
              var e,
                n,
                i = t.internal_flags,
                a = i.h_ptr - 1;
              if (
                (-1 == a && (a = Ot.MAX_HEADER_BUF - 1),
                (e = i.l3_side),
                !((n = S(t, new M())) < 0))
              ) {
                if (
                  (p(t, n),
                  _e(i.header[a].write_timing + this.getframebits(t) == l),
                  (i.ResvSize = 0),
                  (e.main_data_begin = 0),
                  i.findReplayGain)
                ) {
                  var o = r.GetTitleGain(i.rgdata);
                  _e(NEQ(o, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES)),
                    (i.RadioGain = 0 | Math.floor(10 * o + 0.5));
                }
                i.findPeakSample &&
                  ((i.noclipGainChange =
                    0 | Math.ceil(20 * Math.log10(i.PeakSample / 32767) * 10)),
                  i.noclipGainChange > 0 && (EQ(t.scale, 1) || EQ(t.scale, 0))
                    ? (i.noclipScale =
                        Math.floor((32767 / i.PeakSample) * 100) / 100)
                    : (i.noclipScale = -1));
              }
            }),
            (this.add_dummy_byte = function (t, e, n) {
              for (var r, i = t.internal_flags; n-- > 0; )
                for (f(i, e, 8), r = 0; r < Ot.MAX_HEADER_BUF; ++r)
                  i.header[r].write_timing += 8;
            }),
            (this.format_bitstream = function (t) {
              var e,
                n = t.internal_flags;
              e = n.l3_side;
              var r = this.getframebits(t);
              p(t, e.resvDrain_pre), _(t, r);
              var i = 8 * n.sideinfo_len;
              if (
                ((i += w(t)),
                p(t, e.resvDrain_post),
                (i += e.resvDrain_post),
                (e.main_data_begin += (r - i) / 8),
                S(t, new M()) != n.ResvSize &&
                  he.err.println(
                    "Internal buffer inconsistency. flushbits <> ResvSize"
                  ),
                8 * e.main_data_begin != n.ResvSize &&
                  (he.err.printf(
                    "bit reservoir error: \nl3_side.main_data_begin: %d \nResvoir size:             %d \nresv drain (post)         %d \nresv drain (pre)          %d \nheader and sideinfo:      %d \ndata bits:                %d \ntotal bits:               %d (remainder: %d) \nbitsperframe:             %d \n",
                    8 * e.main_data_begin,
                    n.ResvSize,
                    e.resvDrain_post,
                    e.resvDrain_pre,
                    8 * n.sideinfo_len,
                    i - e.resvDrain_post - 8 * n.sideinfo_len,
                    i,
                    i % 8,
                    r
                  ),
                  he.err.println(
                    "This is a fatal error.  It has several possible causes:"
                  ),
                  he.err.println(
                    "90%%  LAME compiled with buggy version of gcc using advanced optimizations"
                  ),
                  he.err.println(" 9%%  Your system is overclocked"),
                  he.err.println(" 1%%  bug in LAME encoding library"),
                  (n.ResvSize = 8 * e.main_data_begin)),
                _e(l % 8 == 0),
                l > 1e9)
              ) {
                var a;
                for (a = 0; a < Ot.MAX_HEADER_BUF; ++a)
                  n.header[a].write_timing -= l;
                l = 0;
              }
              return 0;
            }),
            (this.copy_buffer = function (t, e, n, a, l) {
              var d = c + 1;
              if (d <= 0) return 0;
              if (0 != a && d > a) return -1;
              if ((he.arraycopy(s, 0, e, n, d), (c = -1), (u = 0), 0 != l)) {
                var h = ge(1);
                if (
                  ((h[0] = t.nMusicCRC),
                  o.updateMusicCRC(h, e, n, d),
                  (t.nMusicCRC = h[0]),
                  d > 0 && (t.VBR_seek_table.nBytesWritten += d),
                  t.decode_on_the_fly)
                )
                  for (var f, p = me([2, 1152]), m = d, g = -1; 0 != g; )
                    if (
                      ((g = i.hip_decode1_unclipped(
                        t.hip,
                        e,
                        n,
                        m,
                        p[0],
                        p[1]
                      )),
                      (m = 0),
                      -1 == g && (g = 0),
                      g > 0)
                    ) {
                      if ((_e(g <= 1152), t.findPeakSample)) {
                        for (f = 0; f < g; f++)
                          p[0][f] > t.PeakSample
                            ? (t.PeakSample = p[0][f])
                            : -p[0][f] > t.PeakSample &&
                              (t.PeakSample = -p[0][f]);
                        if (t.channels_out > 1)
                          for (f = 0; f < g; f++)
                            p[1][f] > t.PeakSample
                              ? (t.PeakSample = p[1][f])
                              : -p[1][f] > t.PeakSample &&
                                (t.PeakSample = -p[1][f]);
                      }
                      if (
                        t.findReplayGain &&
                        r.AnalyzeSamples(
                          t.rgdata,
                          p[0],
                          0,
                          p[1],
                          0,
                          g,
                          t.channels_out
                        ) == GainAnalysis.GAIN_ANALYSIS_ERROR
                      )
                        return -6;
                    }
              }
              return d;
            }),
            (this.init_bit_stream_w = function (t) {
              (s = pe(Lame.LAME_MAXMP3BUFFER)),
                (t.h_ptr = t.w_ptr = 0),
                (t.header[t.h_ptr].write_timing = 0),
                (c = -1),
                (u = 0),
                (l = 0);
            });
        }
        (ve.EQ = function (t, e) {
          return Math.abs(t) > Math.abs(e)
            ? Math.abs(t - e) <= 1e-6 * Math.abs(t)
            : Math.abs(t - e) <= 1e-6 * Math.abs(e);
        }),
          (ve.NEQ = function (t, e) {
            return !ve.EQ(t, e);
          });
        var be = ve,
          ye = m.System,
          xe = m.VbrMode,
          we = m.ShortBlock,
          Me = m.new_float,
          Se = m.new_int_n,
          Ae = m.new_short_n,
          Ee = m.assert;
        function ke() {
          var t = this,
            e = 131072;
          (ke.V9 = 410),
            (ke.V8 = 420),
            (ke.V7 = 430),
            (ke.V6 = 440),
            (ke.V5 = 450),
            (ke.V4 = 460),
            (ke.V3 = 470),
            (ke.V2 = 480),
            (ke.V1 = 490),
            (ke.V0 = 500),
            (ke.R3MIX = 1e3),
            (ke.STANDARD = 1001),
            (ke.EXTREME = 1002),
            (ke.INSANE = 1003),
            (ke.STANDARD_FAST = 1004),
            (ke.EXTREME_FAST = 1005),
            (ke.MEDIUM = 1006),
            (ke.MEDIUM_FAST = 1007);
          var n,
            r,
            i,
            a,
            o,
            s = 16384 + e;
          ke.LAME_MAXMP3BUFFER = s;
          var l,
            c,
            u,
            d = new Q();
          function h() {
            (this.mask_adjust = 0),
              (this.mask_adjust_short = 0),
              (this.bo_l_weight = Me(L.SBMAX_l)),
              (this.bo_s_weight = Me(L.SBMAX_s));
          }
          function f() {
            this.lowerlimit = 0;
          }
          function p(t, e) {
            this.lowpass = e;
          }
          (this.enc = new L()),
            (this.setModules = function (t, e, s, h, f, p, m, g, _) {
              (n = t),
                (r = e),
                (i = s),
                (a = h),
                (o = f),
                (l = p),
                (c = g),
                (u = _),
                this.enc.setModules(r, d, a, l);
            });
          var m = 4294479419;
          function g(t) {
            var e;
            return (
              (t.class_id = m),
              (e = t.internal_flags = new Ot()),
              (t.mode = MPEGMode.NOT_SET),
              (t.original = 1),
              (t.in_samplerate = 44100),
              (t.num_channels = 2),
              (t.num_samples = -1),
              (t.bWriteVbrTag = !0),
              (t.quality = -1),
              (t.short_blocks = null),
              (e.subblock_gain = -1),
              (t.lowpassfreq = 0),
              (t.highpassfreq = 0),
              (t.lowpasswidth = -1),
              (t.highpasswidth = -1),
              (t.VBR = xe.vbr_off),
              (t.VBR_q = 4),
              (t.ATHcurve = -1),
              (t.VBR_mean_bitrate_kbps = 128),
              (t.VBR_min_bitrate_kbps = 0),
              (t.VBR_max_bitrate_kbps = 0),
              (t.VBR_hard_min = 0),
              (e.VBR_min_bitrate = 1),
              (e.VBR_max_bitrate = 13),
              (t.quant_comp = -1),
              (t.quant_comp_short = -1),
              (t.msfix = -1),
              (e.resample_ratio = 1),
              (e.OldValue[0] = 180),
              (e.OldValue[1] = 180),
              (e.CurrentStep[0] = 4),
              (e.CurrentStep[1] = 4),
              (e.masking_lower = 1),
              (e.nsPsy.attackthre = -1),
              (e.nsPsy.attackthre_s = -1),
              (t.scale = -1),
              (t.athaa_type = -1),
              (t.ATHtype = -1),
              (t.athaa_loudapprox = -1),
              (t.athaa_sensitivity = 0),
              (t.useTemporal = null),
              (t.interChRatio = -1),
              (e.mf_samples_to_encode = L.ENCDELAY + L.POSTDELAY),
              (t.encoder_padding = 0),
              (e.mf_size = L.ENCDELAY - L.MDCTDELAY),
              (t.findReplayGain = !1),
              (t.decode_on_the_fly = !1),
              (e.decode_on_the_fly = !1),
              (e.findReplayGain = !1),
              (e.findPeakSample = !1),
              (e.RadioGain = 0),
              (e.AudiophileGain = 0),
              (e.noclipGainChange = 0),
              (e.noclipScale = -1),
              (t.preset = 0),
              (t.write_id3tag_automatic = !0),
              0
            );
          }
          function _(t) {
            return t > 1 ? 0 : t <= 0 ? 1 : Math.cos((Math.PI / 2) * t);
          }
          function v(t, e) {
            var n = 44100;
            return (
              e >= 48e3
                ? (n = 48e3)
                : e >= 44100
                ? (n = 44100)
                : e >= 32e3
                ? (n = 32e3)
                : e >= 24e3
                ? (n = 24e3)
                : e >= 22050
                ? (n = 22050)
                : e >= 16e3
                ? (n = 16e3)
                : e >= 12e3
                ? (n = 12e3)
                : e >= 11025
                ? (n = 11025)
                : e >= 8e3 && (n = 8e3),
              -1 == t
                ? n
                : (t <= 15960 && (n = 44100),
                  t <= 15250 && (n = 32e3),
                  t <= 11220 && (n = 24e3),
                  t <= 9970 && (n = 22050),
                  t <= 7230 && (n = 16e3),
                  t <= 5420 && (n = 12e3),
                  t <= 4510 && (n = 11025),
                  t <= 3970 && (n = 8e3),
                  e < n
                    ? e > 44100
                      ? 48e3
                      : e > 32e3
                      ? 44100
                      : e > 24e3
                      ? 32e3
                      : e > 22050
                      ? 24e3
                      : e > 16e3
                      ? 22050
                      : e > 12e3
                      ? 16e3
                      : e > 11025
                      ? 12e3
                      : e > 8e3
                      ? 11025
                      : 8e3
                    : n)
            );
          }
          function b(t, e) {
            switch (t) {
              case 44100:
                return (e.version = 1), 0;
              case 48e3:
                return (e.version = 1), 1;
              case 32e3:
                return (e.version = 1), 2;
              case 22050:
              case 11025:
                return (e.version = 0), 0;
              case 24e3:
              case 12e3:
                return (e.version = 0), 1;
              case 16e3:
              case 8e3:
                return (e.version = 0), 2;
              default:
                return (e.version = 0), -1;
            }
          }
          function y(t, e, n) {
            n < 16e3 && (e = 2);
            for (var r = $t.bitrate_table[e][1], i = 2; i <= 14; i++)
              $t.bitrate_table[e][i] > 0 &&
                Math.abs($t.bitrate_table[e][i] - t) < Math.abs(r - t) &&
                (r = $t.bitrate_table[e][i]);
            return r;
          }
          function x(t, e, n) {
            n < 16e3 && (e = 2);
            for (var r = 0; r <= 14; r++)
              if ($t.bitrate_table[e][r] > 0 && $t.bitrate_table[e][r] == t)
                return r;
            return -1;
          }
          function w(e, n) {
            var r = [
                new p(8, 2e3),
                new p(16, 3700),
                new p(24, 3900),
                new p(32, 5500),
                new p(40, 7e3),
                new p(48, 7500),
                new p(56, 1e4),
                new p(64, 11e3),
                new p(80, 13500),
                new p(96, 15100),
                new p(112, 15600),
                new p(128, 17e3),
                new p(160, 17500),
                new p(192, 18600),
                new p(224, 19400),
                new p(256, 19700),
                new p(320, 20500),
              ],
              i = t.nearestBitrateFullIndex(n);
            e.lowerlimit = r[i].lowpass;
          }
          function M(t) {
            var e = t.internal_flags,
              n = 32,
              r = -1;
            if (e.lowpass1 > 0) {
              for (var i = 999, a = 0; a <= 31; a++)
                (c = a / 31) >= e.lowpass2 && (n = Math.min(n, a)),
                  e.lowpass1 < c && c < e.lowpass2 && (i = Math.min(i, a));
              (e.lowpass1 = 999 == i ? (n - 0.75) / 31 : (i - 0.75) / 31),
                (e.lowpass2 = n / 31);
            }
            if (
              (e.highpass2 > 0 &&
                e.highpass2 < (0.75 / 31) * 0.9 &&
                ((e.highpass1 = 0),
                (e.highpass2 = 0),
                ye.err.println(
                  "Warning: highpass filter disabled.  highpass frequency too small\n"
                )),
              e.highpass2 > 0)
            ) {
              var o = -1;
              for (a = 0; a <= 31; a++)
                (c = a / 31) <= e.highpass1 && (r = Math.max(r, a)),
                  e.highpass1 < c && c < e.highpass2 && (o = Math.max(o, a));
              (e.highpass1 = r / 31),
                (e.highpass2 = -1 == o ? (r + 0.75) / 31 : (o + 0.75) / 31);
            }
            for (a = 0; a < 32; a++) {
              var s,
                l,
                c = a / 31;
              (s =
                e.highpass2 > e.highpass1
                  ? _((e.highpass2 - c) / (e.highpass2 - e.highpass1 + 1e-20))
                  : 1),
                (l =
                  e.lowpass2 > e.lowpass1
                    ? _((c - e.lowpass1) / (e.lowpass2 - e.lowpass1 + 1e-20))
                    : 1),
                (e.amp_filter[a] = s * l);
            }
          }
          function S(t) {
            var e = t.internal_flags;
            switch (t.quality) {
              default:
              case 9:
                (e.psymodel = 0),
                  (e.noise_shaping = 0),
                  (e.noise_shaping_amp = 0),
                  (e.noise_shaping_stop = 0),
                  (e.use_best_huffman = 0),
                  (e.full_outer_loop = 0);
                break;
              case 8:
                t.quality = 7;
              case 7:
                (e.psymodel = 1),
                  (e.noise_shaping = 0),
                  (e.noise_shaping_amp = 0),
                  (e.noise_shaping_stop = 0),
                  (e.use_best_huffman = 0),
                  (e.full_outer_loop = 0);
                break;
              case 6:
              case 5:
                (e.psymodel = 1),
                  0 == e.noise_shaping && (e.noise_shaping = 1),
                  (e.noise_shaping_amp = 0),
                  (e.noise_shaping_stop = 0),
                  -1 == e.subblock_gain && (e.subblock_gain = 1),
                  (e.use_best_huffman = 0),
                  (e.full_outer_loop = 0);
                break;
              case 4:
                (e.psymodel = 1),
                  0 == e.noise_shaping && (e.noise_shaping = 1),
                  (e.noise_shaping_amp = 0),
                  (e.noise_shaping_stop = 0),
                  -1 == e.subblock_gain && (e.subblock_gain = 1),
                  (e.use_best_huffman = 1),
                  (e.full_outer_loop = 0);
                break;
              case 3:
                (e.psymodel = 1),
                  0 == e.noise_shaping && (e.noise_shaping = 1),
                  (e.noise_shaping_amp = 1),
                  (e.noise_shaping_stop = 1),
                  -1 == e.subblock_gain && (e.subblock_gain = 1),
                  (e.use_best_huffman = 1),
                  (e.full_outer_loop = 0);
                break;
              case 2:
                (e.psymodel = 1),
                  0 == e.noise_shaping && (e.noise_shaping = 1),
                  0 == e.substep_shaping && (e.substep_shaping = 2),
                  (e.noise_shaping_amp = 1),
                  (e.noise_shaping_stop = 1),
                  -1 == e.subblock_gain && (e.subblock_gain = 1),
                  (e.use_best_huffman = 1),
                  (e.full_outer_loop = 0);
                break;
              case 1:
              case 0:
                (e.psymodel = 1),
                  0 == e.noise_shaping && (e.noise_shaping = 1),
                  0 == e.substep_shaping && (e.substep_shaping = 2),
                  (e.noise_shaping_amp = 2),
                  (e.noise_shaping_stop = 1),
                  -1 == e.subblock_gain && (e.subblock_gain = 1),
                  (e.use_best_huffman = 1),
                  (e.full_outer_loop = 0);
            }
          }
          function A(t) {
            var e = t.internal_flags;
            (t.frameNum = 0),
              t.write_id3tag_automatic && c.id3tag_write_v2(t),
              (e.bitrate_stereoMode_Hist = Se([16, 5])),
              (e.bitrate_blockType_Hist = Se([16, 6])),
              (e.PeakSample = 0),
              t.bWriteVbrTag && l.InitVbrTag(t);
          }
          function E(t, e) {
            (null == t.in_buffer_0 || t.in_buffer_nsamples < e) &&
              ((t.in_buffer_0 = Me(e)),
              (t.in_buffer_1 = Me(e)),
              (t.in_buffer_nsamples = e));
          }
          function k(t) {
            var e = L.BLKSIZE + t.framesize - L.FFTOFFSET;
            return (
              (e = Math.max(e, 512 + t.framesize - 32)), Ee(Ot.MFSIZE >= e), e
            );
          }
          function R(t, e, i, a, o, s, l) {
            var c,
              u,
              d,
              h,
              f,
              p = t.internal_flags,
              g = 0,
              _ = [null, null],
              v = [null, null];
            if (p.Class_ID != m) return -3;
            if (0 == a) return 0;
            if ((f = r.copy_buffer(p, o, s, l, 0)) < 0) return f;
            if (
              ((s += f),
              (g += f),
              (v[0] = e),
              (v[1] = i),
              be.NEQ(t.scale, 0) && be.NEQ(t.scale, 1))
            )
              for (u = 0; u < a; ++u)
                (v[0][u] *= t.scale),
                  2 == p.channels_out && (v[1][u] *= t.scale);
            if (be.NEQ(t.scale_left, 0) && be.NEQ(t.scale_left, 1))
              for (u = 0; u < a; ++u) v[0][u] *= t.scale_left;
            if (be.NEQ(t.scale_right, 0) && be.NEQ(t.scale_right, 1))
              for (u = 0; u < a; ++u) v[1][u] *= t.scale_right;
            if (2 == t.num_channels && 1 == p.channels_out)
              for (u = 0; u < a; ++u)
                (v[0][u] = 0.5 * (v[0][u] + v[1][u])), (v[1][u] = 0);
            (h = k(t)), (_[0] = p.mfbuf[0]), (_[1] = p.mfbuf[1]);
            for (var b = 0; a > 0; ) {
              var y = [null, null],
                x = 0,
                w = 0;
              (y[0] = v[0]), (y[1] = v[1]);
              var M = new O();
              if (
                (B(t, _, y, b, a, M),
                (x = M.n_in),
                (w = M.n_out),
                p.findReplayGain &&
                  !p.decode_on_the_fly &&
                  n.AnalyzeSamples(
                    p.rgdata,
                    _[0],
                    p.mf_size,
                    _[1],
                    p.mf_size,
                    w,
                    p.channels_out
                  ) == GainAnalysis.GAIN_ANALYSIS_ERROR)
              )
                return -6;
              if (
                ((a -= x),
                (b += x),
                p.channels_out,
                (p.mf_size += w),
                Ee(p.mf_size <= Ot.MFSIZE),
                p.mf_samples_to_encode < 1 &&
                  (p.mf_samples_to_encode = L.ENCDELAY + L.POSTDELAY),
                (p.mf_samples_to_encode += w),
                p.mf_size >= h)
              ) {
                var S = l - g;
                if ((0 == l && (S = 0), (c = T(t, _[0], _[1], o, s, S)) < 0))
                  return c;
                for (
                  s += c,
                    g += c,
                    p.mf_size -= t.framesize,
                    p.mf_samples_to_encode -= t.framesize,
                    d = 0;
                  d < p.channels_out;
                  d++
                )
                  for (u = 0; u < p.mf_size; u++)
                    _[d][u] = _[d][u + t.framesize];
              }
            }
            return Ee(0 == a), g;
          }
          function T(e, n, r, i, a, o) {
            var s = t.enc.lame_encode_mp3_frame(e, n, r, i, a, o);
            return e.frameNum++, s;
          }
          function O() {
            (this.n_in = 0), (this.n_out = 0);
          }
          function P() {
            this.num_used = 0;
          }
          function C(t, e) {
            return 0 != e ? C(e, t % e) : t;
          }
          function D(t, e, n) {
            var r = Math.PI * e;
            (t /= n) < 0 && (t = 0), t > 1 && (t = 1);
            var i = t - 0.5,
              a =
                0.42 -
                0.5 * Math.cos(2 * t * Math.PI) +
                0.08 * Math.cos(4 * t * Math.PI);
            return Math.abs(i) < 1e-9
              ? r / Math.PI
              : (a * Math.sin(n * r * i)) / (Math.PI * n * i);
          }
          function I(t, e, n, r, i, a, o, s, l) {
            var c,
              u,
              d = t.internal_flags,
              h = 0,
              f = t.out_samplerate / C(t.out_samplerate, t.in_samplerate);
            f > Ot.BPC && (f = Ot.BPC);
            var p =
                Math.abs(
                  d.resample_ratio - Math.floor(0.5 + d.resample_ratio)
                ) < 1e-4
                  ? 1
                  : 0,
              m = 1 / d.resample_ratio;
            m > 1 && (m = 1);
            var g = 31;
            0 == g % 2 && --g;
            var _ = (g += p) + 1;
            if (0 == d.fill_buffer_resample_init) {
              for (
                d.inbuf_old[0] = Me(_), d.inbuf_old[1] = Me(_), c = 0;
                c <= 2 * f;
                ++c
              )
                d.blackfilt[c] = Me(_);
              for (d.itime[0] = 0, d.itime[1] = 0, h = 0; h <= 2 * f; h++) {
                var v = 0,
                  b = (h - f) / (2 * f);
                for (c = 0; c <= g; c++)
                  v += d.blackfilt[h][c] = D(c - b, m, g);
                for (c = 0; c <= g; c++) d.blackfilt[h][c] /= v;
              }
              d.fill_buffer_resample_init = 1;
            }
            var y = d.inbuf_old[l];
            for (u = 0; u < r; u++) {
              var x, w;
              if (
                ((x = u * d.resample_ratio),
                g + (h = 0 | Math.floor(x - d.itime[l])) - g / 2 >= o)
              )
                break;
              (b = x - d.itime[l] - (h + (g % 2) * 0.5)),
                Ee(Math.abs(b) <= 0.501),
                (w = 0 | Math.floor(2 * b * f + f + 0.5));
              var M = 0;
              for (c = 0; c <= g; ++c) {
                var S = c + h - g / 2;
                Ee(S < o),
                  Ee(S + _ >= 0),
                  (M += (S < 0 ? y[_ + S] : i[a + S]) * d.blackfilt[w][c]);
              }
              e[n + u] = M;
            }
            if (
              ((s.num_used = Math.min(o, g + h - g / 2)),
              (d.itime[l] += s.num_used - u * d.resample_ratio),
              s.num_used >= _)
            )
              for (c = 0; c < _; c++) y[c] = i[a + s.num_used + c - _];
            else {
              var A = _ - s.num_used;
              for (c = 0; c < A; ++c) y[c] = y[c + s.num_used];
              for (h = 0; c < _; ++c, ++h) y[c] = i[a + h];
              Ee(h == s.num_used);
            }
            return u;
          }
          function B(t, e, n, r, i, a) {
            var o = t.internal_flags;
            if (o.resample_ratio < 0.9999 || o.resample_ratio > 1.0001)
              for (var s = 0; s < o.channels_out; s++) {
                var l = new P();
                (a.n_out = I(
                  t,
                  e[s],
                  o.mf_size,
                  t.framesize,
                  n[s],
                  r,
                  i,
                  l,
                  s
                )),
                  (a.n_in = l.num_used);
              }
            else {
              (a.n_out = Math.min(t.framesize, i)), (a.n_in = a.n_out);
              for (var c = 0; c < a.n_out; ++c)
                (e[0][o.mf_size + c] = n[0][r + c]),
                  2 == o.channels_out && (e[1][o.mf_size + c] = n[1][r + c]);
            }
          }
          (this.lame_init = function () {
            var t = new nt();
            return 0 != g(t) ? null : ((t.lame_allocated_gfp = 1), t);
          }),
            (this.nearestBitrateFullIndex = function (t) {
              var e = [
                  8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192,
                  224, 256, 320,
                ],
                n = 0,
                r = 0,
                i = 0,
                a = 0;
              (a = e[16]), (i = 16), (r = e[16]), (n = 16);
              for (var o = 0; o < 16; o++)
                if (Math.max(t, e[o + 1]) != t) {
                  (a = e[o + 1]), (i = o + 1), (r = e[o]), (n = o);
                  break;
                }
              return a - t > t - r ? n : i;
            }),
            (this.lame_init_params = function (t) {
              var e = t.internal_flags;
              if (
                ((e.Class_ID = 0),
                null == e.ATH && (e.ATH = new Dt()),
                null == e.PSY && (e.PSY = new h()),
                null == e.rgdata && (e.rgdata = new jt()),
                (e.channels_in = t.num_channels),
                1 == e.channels_in && (t.mode = MPEGMode.MONO),
                (e.channels_out = t.mode == MPEGMode.MONO ? 1 : 2),
                (e.mode_ext = L.MPG_MD_MS_LR),
                t.mode == MPEGMode.MONO && (t.force_ms = !1),
                t.VBR == xe.vbr_off &&
                  128 != t.VBR_mean_bitrate_kbps &&
                  0 == t.brate &&
                  (t.brate = t.VBR_mean_bitrate_kbps),
                t.VBR == xe.vbr_off ||
                  t.VBR == xe.vbr_mtrh ||
                  t.VBR == xe.vbr_mt ||
                  (t.free_format = !1),
                t.VBR == xe.vbr_off &&
                  0 == t.brate &&
                  be.EQ(t.compression_ratio, 0) &&
                  (t.compression_ratio = 11.025),
                t.VBR == xe.vbr_off &&
                  t.compression_ratio > 0 &&
                  (0 == t.out_samplerate &&
                    (t.out_samplerate = map2MP3Frequency(
                      int(0.97 * t.in_samplerate)
                    )),
                  (t.brate =
                    0 |
                    ((16 * t.out_samplerate * e.channels_out) /
                      (1e3 * t.compression_ratio))),
                  (e.samplerate_index = b(t.out_samplerate, t)),
                  t.free_format ||
                    (t.brate = y(t.brate, t.version, t.out_samplerate))),
                0 != t.out_samplerate &&
                  (t.out_samplerate < 16e3
                    ? ((t.VBR_mean_bitrate_kbps = Math.max(
                        t.VBR_mean_bitrate_kbps,
                        8
                      )),
                      (t.VBR_mean_bitrate_kbps = Math.min(
                        t.VBR_mean_bitrate_kbps,
                        64
                      )))
                    : t.out_samplerate < 32e3
                    ? ((t.VBR_mean_bitrate_kbps = Math.max(
                        t.VBR_mean_bitrate_kbps,
                        8
                      )),
                      (t.VBR_mean_bitrate_kbps = Math.min(
                        t.VBR_mean_bitrate_kbps,
                        160
                      )))
                    : ((t.VBR_mean_bitrate_kbps = Math.max(
                        t.VBR_mean_bitrate_kbps,
                        32
                      )),
                      (t.VBR_mean_bitrate_kbps = Math.min(
                        t.VBR_mean_bitrate_kbps,
                        320
                      )))),
                0 == t.lowpassfreq)
              ) {
                var s = 16e3;
                switch (t.VBR) {
                  case xe.vbr_off:
                    w((l = new f()), t.brate), (s = l.lowerlimit);
                    break;
                  case xe.vbr_abr:
                    var l;
                    w((l = new f()), t.VBR_mean_bitrate_kbps),
                      (s = l.lowerlimit);
                    break;
                  case xe.vbr_rh:
                    var c = [
                      19500, 19e3, 18600, 18e3, 17500, 16e3, 15600, 14900,
                      12500, 1e4, 3950,
                    ];
                    if (0 <= t.VBR_q && t.VBR_q <= 9) {
                      var p = c[t.VBR_q],
                        g = c[t.VBR_q + 1],
                        _ = t.VBR_q_frac;
                      s = linear_int(p, g, _);
                    } else s = 19500;
                    break;
                  default:
                    (c = [
                      19500, 19e3, 18500, 18e3, 17500, 16500, 15500, 14500,
                      12500, 9500, 3950,
                    ]),
                      0 <= t.VBR_q && t.VBR_q <= 9
                        ? ((p = c[t.VBR_q]),
                          (g = c[t.VBR_q + 1]),
                          (_ = t.VBR_q_frac),
                          (s = linear_int(p, g, _)))
                        : (s = 19500);
                }
                t.mode != MPEGMode.MONO ||
                  (t.VBR != xe.vbr_off && t.VBR != xe.vbr_abr) ||
                  (s *= 1.5),
                  (t.lowpassfreq = 0 | s);
              }
              if (
                (0 == t.out_samplerate &&
                  (2 * t.lowpassfreq > t.in_samplerate &&
                    (t.lowpassfreq = t.in_samplerate / 2),
                  (t.out_samplerate = v(0 | t.lowpassfreq, t.in_samplerate))),
                (t.lowpassfreq = Math.min(20500, t.lowpassfreq)),
                (t.lowpassfreq = Math.min(t.out_samplerate / 2, t.lowpassfreq)),
                t.VBR == xe.vbr_off &&
                  (t.compression_ratio =
                    (16 * t.out_samplerate * e.channels_out) / (1e3 * t.brate)),
                t.VBR == xe.vbr_abr &&
                  (t.compression_ratio =
                    (16 * t.out_samplerate * e.channels_out) /
                    (1e3 * t.VBR_mean_bitrate_kbps)),
                t.bWriteVbrTag ||
                  ((t.findReplayGain = !1),
                  (t.decode_on_the_fly = !1),
                  (e.findPeakSample = !1)),
                (e.findReplayGain = t.findReplayGain),
                (e.decode_on_the_fly = t.decode_on_the_fly),
                e.decode_on_the_fly && (e.findPeakSample = !0),
                e.findReplayGain &&
                  n.InitGainAnalysis(e.rgdata, t.out_samplerate) ==
                    GainAnalysis.INIT_GAIN_ANALYSIS_ERROR)
              )
                return (t.internal_flags = null), -6;
              switch (
                (e.decode_on_the_fly &&
                  !t.decode_only &&
                  (null != e.hip && u.hip_decode_exit(e.hip),
                  (e.hip = u.hip_decode_init())),
                (e.mode_gr = t.out_samplerate <= 24e3 ? 1 : 2),
                (t.framesize = 576 * e.mode_gr),
                (t.encoder_delay = L.ENCDELAY),
                (e.resample_ratio = t.in_samplerate / t.out_samplerate),
                t.VBR)
              ) {
                case xe.vbr_mt:
                case xe.vbr_rh:
                case xe.vbr_mtrh:
                  var E = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14, 15, 16.5];
                  t.compression_ratio = E[t.VBR_q];
                  break;
                case xe.vbr_abr:
                  t.compression_ratio =
                    (16 * t.out_samplerate * e.channels_out) /
                    (1e3 * t.VBR_mean_bitrate_kbps);
                  break;
                default:
                  t.compression_ratio =
                    (16 * t.out_samplerate * e.channels_out) / (1e3 * t.brate);
              }
              if (
                (t.mode == MPEGMode.NOT_SET && (t.mode = MPEGMode.JOINT_STEREO),
                t.highpassfreq > 0
                  ? ((e.highpass1 = 2 * t.highpassfreq),
                    t.highpasswidth >= 0
                      ? (e.highpass2 = 2 * (t.highpassfreq + t.highpasswidth))
                      : (e.highpass2 = 2 * t.highpassfreq),
                    (e.highpass1 /= t.out_samplerate),
                    (e.highpass2 /= t.out_samplerate))
                  : ((e.highpass1 = 0), (e.highpass2 = 0)),
                t.lowpassfreq > 0
                  ? ((e.lowpass2 = 2 * t.lowpassfreq),
                    t.lowpasswidth >= 0
                      ? ((e.lowpass1 = 2 * (t.lowpassfreq - t.lowpasswidth)),
                        e.lowpass1 < 0 && (e.lowpass1 = 0))
                      : (e.lowpass1 = 2 * t.lowpassfreq),
                    (e.lowpass1 /= t.out_samplerate),
                    (e.lowpass2 /= t.out_samplerate))
                  : ((e.lowpass1 = 0), (e.lowpass2 = 0)),
                M(t),
                (e.samplerate_index = b(t.out_samplerate, t)),
                e.samplerate_index < 0)
              )
                return (t.internal_flags = null), -1;
              if (t.VBR == xe.vbr_off) {
                if (t.free_format) e.bitrate_index = 0;
                else if (
                  ((t.brate = y(t.brate, t.version, t.out_samplerate)),
                  (e.bitrate_index = x(t.brate, t.version, t.out_samplerate)),
                  e.bitrate_index <= 0)
                )
                  return (t.internal_flags = null), -1;
              } else e.bitrate_index = 1;
              t.analysis && (t.bWriteVbrTag = !1),
                null != e.pinfo && (t.bWriteVbrTag = !1),
                r.init_bit_stream_w(e);
              for (
                var k,
                  R =
                    e.samplerate_index +
                    3 * t.version +
                    6 * (t.out_samplerate < 16e3 ? 1 : 0),
                  T = 0;
                T < L.SBMAX_l + 1;
                T++
              )
                e.scalefac_band.l[T] = a.sfBandIndex[R].l[T];
              for (T = 0; T < L.PSFB21 + 1; T++) {
                var O =
                    (e.scalefac_band.l[22] - e.scalefac_band.l[21]) / L.PSFB21,
                  P = e.scalefac_band.l[21] + T * O;
                e.scalefac_band.psfb21[T] = P;
              }
              for (
                e.scalefac_band.psfb21[L.PSFB21] = 576, T = 0;
                T < L.SBMAX_s + 1;
                T++
              )
                e.scalefac_band.s[T] = a.sfBandIndex[R].s[T];
              for (T = 0; T < L.PSFB12 + 1; T++)
                (O =
                  (e.scalefac_band.s[13] - e.scalefac_band.s[12]) / L.PSFB12),
                  (P = e.scalefac_band.s[12] + T * O),
                  (e.scalefac_band.psfb12[T] = P);
              for (
                e.scalefac_band.psfb12[L.PSFB12] = 192,
                  1 == t.version
                    ? (e.sideinfo_len = 1 == e.channels_out ? 21 : 36)
                    : (e.sideinfo_len = 1 == e.channels_out ? 13 : 21),
                  t.error_protection && (e.sideinfo_len += 2),
                  A(t),
                  e.Class_ID = m,
                  k = 0;
                k < 19;
                k++
              )
                e.nsPsy.pefirbuf[k] = 700 * e.mode_gr * e.channels_out;
              switch (
                (-1 == t.ATHtype && (t.ATHtype = 4),
                Ee(t.VBR_q <= 9),
                Ee(t.VBR_q >= 0),
                t.VBR)
              ) {
                case xe.vbr_mt:
                  t.VBR = xe.vbr_mtrh;
                case xe.vbr_mtrh:
                  null == t.useTemporal && (t.useTemporal = !1),
                    i.apply_preset(t, 500 - 10 * t.VBR_q, 0),
                    t.quality < 0 && (t.quality = LAME_DEFAULT_QUALITY),
                    t.quality < 5 && (t.quality = 0),
                    t.quality > 5 && (t.quality = 5),
                    (e.PSY.mask_adjust = t.maskingadjust),
                    (e.PSY.mask_adjust_short = t.maskingadjust_short),
                    t.experimentalY
                      ? (e.sfb21_extra = !1)
                      : (e.sfb21_extra = t.out_samplerate > 44e3),
                    (e.iteration_loop = new VBRNewIterationLoop(o));
                  break;
                case xe.vbr_rh:
                  i.apply_preset(t, 500 - 10 * t.VBR_q, 0),
                    (e.PSY.mask_adjust = t.maskingadjust),
                    (e.PSY.mask_adjust_short = t.maskingadjust_short),
                    t.experimentalY
                      ? (e.sfb21_extra = !1)
                      : (e.sfb21_extra = t.out_samplerate > 44e3),
                    t.quality > 6 && (t.quality = 6),
                    t.quality < 0 && (t.quality = LAME_DEFAULT_QUALITY),
                    (e.iteration_loop = new VBROldIterationLoop(o));
                  break;
                default:
                  var C;
                  (e.sfb21_extra = !1),
                    t.quality < 0 && (t.quality = LAME_DEFAULT_QUALITY),
                    (C = t.VBR) == xe.vbr_off &&
                      (t.VBR_mean_bitrate_kbps = t.brate),
                    i.apply_preset(t, t.VBR_mean_bitrate_kbps, 0),
                    (t.VBR = C),
                    (e.PSY.mask_adjust = t.maskingadjust),
                    (e.PSY.mask_adjust_short = t.maskingadjust_short),
                    C == xe.vbr_off
                      ? (e.iteration_loop = new Xt(o))
                      : (e.iteration_loop = new ABRIterationLoop(o));
              }
              if ((Ee(t.scale >= 0), t.VBR != xe.vbr_off)) {
                if (
                  ((e.VBR_min_bitrate = 1),
                  (e.VBR_max_bitrate = 14),
                  t.out_samplerate < 16e3 && (e.VBR_max_bitrate = 8),
                  0 != t.VBR_min_bitrate_kbps &&
                    ((t.VBR_min_bitrate_kbps = y(
                      t.VBR_min_bitrate_kbps,
                      t.version,
                      t.out_samplerate
                    )),
                    (e.VBR_min_bitrate = x(
                      t.VBR_min_bitrate_kbps,
                      t.version,
                      t.out_samplerate
                    )),
                    e.VBR_min_bitrate < 0))
                )
                  return -1;
                if (
                  0 != t.VBR_max_bitrate_kbps &&
                  ((t.VBR_max_bitrate_kbps = y(
                    t.VBR_max_bitrate_kbps,
                    t.version,
                    t.out_samplerate
                  )),
                  (e.VBR_max_bitrate = x(
                    t.VBR_max_bitrate_kbps,
                    t.version,
                    t.out_samplerate
                  )),
                  e.VBR_max_bitrate < 0)
                )
                  return -1;
                (t.VBR_min_bitrate_kbps =
                  $t.bitrate_table[t.version][e.VBR_min_bitrate]),
                  (t.VBR_max_bitrate_kbps =
                    $t.bitrate_table[t.version][e.VBR_max_bitrate]),
                  (t.VBR_mean_bitrate_kbps = Math.min(
                    $t.bitrate_table[t.version][e.VBR_max_bitrate],
                    t.VBR_mean_bitrate_kbps
                  )),
                  (t.VBR_mean_bitrate_kbps = Math.max(
                    $t.bitrate_table[t.version][e.VBR_min_bitrate],
                    t.VBR_mean_bitrate_kbps
                  ));
              }
              return (
                t.tune &&
                  ((e.PSY.mask_adjust += t.tune_value_a),
                  (e.PSY.mask_adjust_short += t.tune_value_a)),
                S(t),
                Ee(t.scale >= 0),
                t.athaa_type < 0
                  ? (e.ATH.useAdjust = 3)
                  : (e.ATH.useAdjust = t.athaa_type),
                (e.ATH.aaSensitivityP = Math.pow(
                  10,
                  t.athaa_sensitivity / -10
                )),
                null == t.short_blocks &&
                  (t.short_blocks = we.short_block_allowed),
                t.short_blocks != we.short_block_allowed ||
                  (t.mode != MPEGMode.JOINT_STEREO &&
                    t.mode != MPEGMode.STEREO) ||
                  (t.short_blocks = we.short_block_coupled),
                t.quant_comp < 0 && (t.quant_comp = 1),
                t.quant_comp_short < 0 && (t.quant_comp_short = 0),
                t.msfix < 0 && (t.msfix = 0),
                (t.exp_nspsytune = 1 | t.exp_nspsytune),
                t.internal_flags.nsPsy.attackthre < 0 &&
                  (t.internal_flags.nsPsy.attackthre = Q.NSATTACKTHRE),
                t.internal_flags.nsPsy.attackthre_s < 0 &&
                  (t.internal_flags.nsPsy.attackthre_s = Q.NSATTACKTHRE_S),
                Ee(t.scale >= 0),
                t.scale < 0 && (t.scale = 1),
                t.ATHtype < 0 && (t.ATHtype = 4),
                t.ATHcurve < 0 && (t.ATHcurve = 4),
                t.athaa_loudapprox < 0 && (t.athaa_loudapprox = 2),
                t.interChRatio < 0 && (t.interChRatio = 0),
                null == t.useTemporal && (t.useTemporal = !0),
                (e.slot_lag = e.frac_SpF = 0),
                t.VBR == xe.vbr_off &&
                  (e.slot_lag = e.frac_SpF =
                    (72e3 * (t.version + 1) * t.brate) % t.out_samplerate | 0),
                a.iteration_init(t),
                d.psymodel_init(t),
                Ee(t.scale >= 0),
                0
              );
            }),
            (this.lame_encode_flush = function (t, e, n, i) {
              var a,
                o,
                s,
                l,
                u = t.internal_flags,
                d = Ae([2, 1152]),
                h = 0,
                f = u.mf_samples_to_encode - L.POSTDELAY,
                p = k(t);
              if (u.mf_samples_to_encode < 1) return 0;
              for (
                a = 0,
                  t.in_samplerate != t.out_samplerate &&
                    (f += (16 * t.out_samplerate) / t.in_samplerate),
                  (s = t.framesize - (f % t.framesize)) < 576 &&
                    (s += t.framesize),
                  t.encoder_padding = s,
                  l = (f + s) / t.framesize;
                l > 0 && h >= 0;

              ) {
                var m = p - u.mf_size,
                  g = t.frameNum;
                (m *= t.in_samplerate),
                  (m /= t.out_samplerate) > 1152 && (m = 1152),
                  m < 1 && (m = 1),
                  (o = i - a),
                  0 == i && (o = 0),
                  (n += h = this.lame_encode_buffer(t, d[0], d[1], m, e, n, o)),
                  (a += h),
                  (l -= g != t.frameNum ? 1 : 0);
              }
              if (((u.mf_samples_to_encode = 0), h < 0)) return h;
              if (
                ((o = i - a),
                0 == i && (o = 0),
                r.flush_bitstream(t),
                (h = r.copy_buffer(u, e, n, o, 1)) < 0)
              )
                return h;
              if (
                ((n += h),
                (o = i - (a += h)),
                0 == i && (o = 0),
                t.write_id3tag_automatic)
              ) {
                if (
                  (c.id3tag_write_v1(t), (h = r.copy_buffer(u, e, n, o, 0)) < 0)
                )
                  return h;
                a += h;
              }
              return a;
            }),
            (this.lame_encode_buffer = function (t, e, n, r, i, a, o) {
              var s = t.internal_flags,
                l = [null, null];
              if (s.Class_ID != m) return -3;
              if (0 == r) return 0;
              E(s, r), (l[0] = s.in_buffer_0), (l[1] = s.in_buffer_1);
              for (var c = 0; c < r; c++)
                (l[0][c] = e[c]), s.channels_in > 1 && (l[1][c] = n[c]);
              return R(t, l[0], l[1], r, i, a, o);
            });
        }
        var Re = ke,
          Te = m.VbrMode;
        function Oe() {
          function t(t, e, n, r, i, a, o, s, l, c, u, d, h, f, p) {
            (this.vbr_q = t),
              (this.quant_comp = e),
              (this.quant_comp_s = n),
              (this.expY = r),
              (this.st_lrm = i),
              (this.st_s = a),
              (this.masking_adj = o),
              (this.masking_adj_short = s),
              (this.ath_lower = l),
              (this.ath_curve = c),
              (this.ath_sensitivity = u),
              (this.interch = d),
              (this.safejoint = h),
              (this.sfb21mod = f),
              (this.msfix = p);
          }
          function e(t, e, n, r, i, a, o, s, l, c, u, d, h, f) {
            (this.quant_comp = e),
              (this.quant_comp_s = n),
              (this.safejoint = r),
              (this.nsmsfix = i),
              (this.st_lrm = a),
              (this.st_s = o),
              (this.nsbass = s),
              (this.scale = l),
              (this.masking_adj = c),
              (this.ath_lower = u),
              (this.ath_curve = d),
              (this.interch = h),
              (this.sfscale = f);
          }
          var n;
          this.setModules = function (t) {
            n = t;
          };
          var r = [
              new t(
                0,
                9,
                9,
                0,
                5.2,
                125,
                -4.2,
                -6.3,
                4.8,
                1,
                0,
                0,
                2,
                21,
                0.97
              ),
              new t(
                1,
                9,
                9,
                0,
                5.3,
                125,
                -3.6,
                -5.6,
                4.5,
                1.5,
                0,
                0,
                2,
                21,
                1.35
              ),
              new t(
                2,
                9,
                9,
                0,
                5.6,
                125,
                -2.2,
                -3.5,
                2.8,
                2,
                0,
                0,
                2,
                21,
                1.49
              ),
              new t(
                3,
                9,
                9,
                1,
                5.8,
                130,
                -1.8,
                -2.8,
                2.6,
                3,
                -4,
                0,
                2,
                20,
                1.64
              ),
              new t(
                4,
                9,
                9,
                1,
                6,
                135,
                -0.7,
                -1.1,
                1.1,
                3.5,
                -8,
                0,
                2,
                0,
                1.79
              ),
              new t(
                5,
                9,
                9,
                1,
                6.4,
                140,
                0.5,
                0.4,
                -7.5,
                4,
                -12,
                2e-4,
                0,
                0,
                1.95
              ),
              new t(
                6,
                9,
                9,
                1,
                6.6,
                145,
                0.67,
                0.65,
                -14.7,
                6.5,
                -19,
                4e-4,
                0,
                0,
                2.3
              ),
              new t(
                7,
                9,
                9,
                1,
                6.6,
                145,
                0.8,
                0.75,
                -19.7,
                8,
                -22,
                6e-4,
                0,
                0,
                2.7
              ),
              new t(
                8,
                9,
                9,
                1,
                6.6,
                145,
                1.2,
                1.15,
                -27.5,
                10,
                -23,
                7e-4,
                0,
                0,
                0
              ),
              new t(
                9,
                9,
                9,
                1,
                6.6,
                145,
                1.6,
                1.6,
                -36,
                11,
                -25,
                8e-4,
                0,
                0,
                0
              ),
              new t(10, 9, 9, 1, 6.6, 145, 2, 2, -36, 12, -25, 8e-4, 0, 0, 0),
            ],
            i = [
              new t(0, 9, 9, 0, 4.2, 25, -7, -4, 7.5, 1, 0, 0, 2, 26, 0.97),
              new t(
                1,
                9,
                9,
                0,
                4.2,
                25,
                -5.6,
                -3.6,
                4.5,
                1.5,
                0,
                0,
                2,
                21,
                1.35
              ),
              new t(2, 9, 9, 0, 4.2, 25, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49),
              new t(
                3,
                9,
                9,
                1,
                4.2,
                25,
                -3.4,
                -1.25,
                1.1,
                3,
                -4,
                0,
                2,
                15,
                1.64
              ),
              new t(4, 9, 9, 1, 4.2, 25, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79),
              new t(
                5,
                9,
                9,
                1,
                4.2,
                25,
                -1,
                1.65,
                -7.7,
                4,
                -12,
                2e-4,
                0,
                0,
                1.95
              ),
              new t(
                6,
                9,
                9,
                1,
                4.2,
                25,
                -0,
                2.47,
                -7.7,
                6.5,
                -19,
                4e-4,
                0,
                0,
                2
              ),
              new t(7, 9, 9, 1, 4.2, 25, 0.5, 2, -14.5, 8, -22, 6e-4, 0, 0, 2),
              new t(8, 9, 9, 1, 4.2, 25, 1, 2.4, -22, 10, -23, 7e-4, 0, 0, 2),
              new t(
                9,
                9,
                9,
                1,
                4.2,
                25,
                1.5,
                2.95,
                -30,
                11,
                -25,
                8e-4,
                0,
                0,
                2
              ),
              new t(10, 9, 9, 1, 4.2, 25, 2, 2.95, -36, 12, -30, 8e-4, 0, 0, 2),
            ];
          function a(t, e, n) {
            var a = t.VBR == Te.vbr_rh ? r : i,
              o = t.VBR_q_frac,
              s = a[e],
              c = a[e + 1],
              u = s;
            (s.st_lrm = s.st_lrm + o * (c.st_lrm - s.st_lrm)),
              (s.st_s = s.st_s + o * (c.st_s - s.st_s)),
              (s.masking_adj =
                s.masking_adj + o * (c.masking_adj - s.masking_adj)),
              (s.masking_adj_short =
                s.masking_adj_short +
                o * (c.masking_adj_short - s.masking_adj_short)),
              (s.ath_lower = s.ath_lower + o * (c.ath_lower - s.ath_lower)),
              (s.ath_curve = s.ath_curve + o * (c.ath_curve - s.ath_curve)),
              (s.ath_sensitivity =
                s.ath_sensitivity +
                o * (c.ath_sensitivity - s.ath_sensitivity)),
              (s.interch = s.interch + o * (c.interch - s.interch)),
              (s.msfix = s.msfix + o * (c.msfix - s.msfix)),
              l(t, u.vbr_q),
              0 != n
                ? (t.quant_comp = u.quant_comp)
                : Math.abs(t.quant_comp - -1) > 0 ||
                  (t.quant_comp = u.quant_comp),
              0 != n
                ? (t.quant_comp_short = u.quant_comp_s)
                : Math.abs(t.quant_comp_short - -1) > 0 ||
                  (t.quant_comp_short = u.quant_comp_s),
              0 != u.expY && (t.experimentalY = 0 != u.expY),
              0 != n
                ? (t.internal_flags.nsPsy.attackthre = u.st_lrm)
                : Math.abs(t.internal_flags.nsPsy.attackthre - -1) > 0 ||
                  (t.internal_flags.nsPsy.attackthre = u.st_lrm),
              0 != n
                ? (t.internal_flags.nsPsy.attackthre_s = u.st_s)
                : Math.abs(t.internal_flags.nsPsy.attackthre_s - -1) > 0 ||
                  (t.internal_flags.nsPsy.attackthre_s = u.st_s),
              0 != n
                ? (t.maskingadjust = u.masking_adj)
                : Math.abs(t.maskingadjust - 0) > 0 ||
                  (t.maskingadjust = u.masking_adj),
              0 != n
                ? (t.maskingadjust_short = u.masking_adj_short)
                : Math.abs(t.maskingadjust_short - 0) > 0 ||
                  (t.maskingadjust_short = u.masking_adj_short),
              0 != n
                ? (t.ATHlower = -u.ath_lower / 10)
                : Math.abs(10 * -t.ATHlower - 0) > 0 ||
                  (t.ATHlower = -u.ath_lower / 10),
              0 != n
                ? (t.ATHcurve = u.ath_curve)
                : Math.abs(t.ATHcurve - -1) > 0 || (t.ATHcurve = u.ath_curve),
              0 != n
                ? (t.athaa_sensitivity = u.ath_sensitivity)
                : Math.abs(t.athaa_sensitivity - -1) > 0 ||
                  (t.athaa_sensitivity = u.ath_sensitivity),
              u.interch > 0 &&
                (0 != n
                  ? (t.interChRatio = u.interch)
                  : Math.abs(t.interChRatio - -1) > 0 ||
                    (t.interChRatio = u.interch)),
              u.safejoint > 0 &&
                (t.exp_nspsytune = t.exp_nspsytune | u.safejoint),
              u.sfb21mod > 0 &&
                (t.exp_nspsytune = t.exp_nspsytune | (u.sfb21mod << 20)),
              0 != n
                ? (t.msfix = u.msfix)
                : Math.abs(t.msfix - -1) > 0 || (t.msfix = u.msfix),
              0 == n && ((t.VBR_q = e), (t.VBR_q_frac = o));
          }
          var o = [
            new e(8, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -30, 11, 0.0012, 1),
            new e(16, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -25, 11, 0.001, 1),
            new e(24, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -20, 11, 0.001, 1),
            new e(32, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -15, 11, 0.001, 1),
            new e(40, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -10, 11, 9e-4, 1),
            new e(48, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -10, 11, 9e-4, 1),
            new e(56, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -6, 11, 8e-4, 1),
            new e(64, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -2, 11, 8e-4, 1),
            new e(80, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, 0, 8, 7e-4, 1),
            new e(96, 9, 9, 0, 2.5, 6.6, 145, 0, 0.95, 0, 1, 5.5, 6e-4, 1),
            new e(112, 9, 9, 0, 2.25, 6.6, 145, 0, 0.95, 0, 2, 4.5, 5e-4, 1),
            new e(128, 9, 9, 0, 1.95, 6.4, 140, 0, 0.95, 0, 3, 4, 2e-4, 1),
            new e(160, 9, 9, 1, 1.79, 6, 135, 0, 0.95, -2, 5, 3.5, 0, 1),
            new e(192, 9, 9, 1, 1.49, 5.6, 125, 0, 0.97, -4, 7, 3, 0, 0),
            new e(224, 9, 9, 1, 1.25, 5.2, 125, 0, 0.98, -6, 9, 2, 0, 0),
            new e(256, 9, 9, 1, 0.97, 5.2, 125, 0, 1, -8, 10, 1, 0, 0),
            new e(320, 9, 9, 1, 0.9, 5.2, 125, 0, 1, -10, 12, 0, 0, 0),
          ];
          function s(t, e, r) {
            var i = e,
              a = n.nearestBitrateFullIndex(e);
            if (
              ((t.VBR = Te.vbr_abr),
              (t.VBR_mean_bitrate_kbps = i),
              (t.VBR_mean_bitrate_kbps = Math.min(
                t.VBR_mean_bitrate_kbps,
                320
              )),
              (t.VBR_mean_bitrate_kbps = Math.max(t.VBR_mean_bitrate_kbps, 8)),
              (t.brate = t.VBR_mean_bitrate_kbps),
              t.VBR_mean_bitrate_kbps > 320 && (t.disable_reservoir = !0),
              o[a].safejoint > 0 && (t.exp_nspsytune = 2 | t.exp_nspsytune),
              o[a].sfscale > 0 && (t.internal_flags.noise_shaping = 2),
              Math.abs(o[a].nsbass) > 0)
            ) {
              var s = int(4 * o[a].nsbass);
              s < 0 && (s += 64),
                (t.exp_nspsytune = t.exp_nspsytune | (s << 2));
            }
            return (
              0 != r
                ? (t.quant_comp = o[a].quant_comp)
                : Math.abs(t.quant_comp - -1) > 0 ||
                  (t.quant_comp = o[a].quant_comp),
              0 != r
                ? (t.quant_comp_short = o[a].quant_comp_s)
                : Math.abs(t.quant_comp_short - -1) > 0 ||
                  (t.quant_comp_short = o[a].quant_comp_s),
              0 != r
                ? (t.msfix = o[a].nsmsfix)
                : Math.abs(t.msfix - -1) > 0 || (t.msfix = o[a].nsmsfix),
              0 != r
                ? (t.internal_flags.nsPsy.attackthre = o[a].st_lrm)
                : Math.abs(t.internal_flags.nsPsy.attackthre - -1) > 0 ||
                  (t.internal_flags.nsPsy.attackthre = o[a].st_lrm),
              0 != r
                ? (t.internal_flags.nsPsy.attackthre_s = o[a].st_s)
                : Math.abs(t.internal_flags.nsPsy.attackthre_s - -1) > 0 ||
                  (t.internal_flags.nsPsy.attackthre_s = o[a].st_s),
              0 != r
                ? (t.scale = o[a].scale)
                : Math.abs(t.scale - -1) > 0 || (t.scale = o[a].scale),
              0 != r
                ? (t.maskingadjust = o[a].masking_adj)
                : Math.abs(t.maskingadjust - 0) > 0 ||
                  (t.maskingadjust = o[a].masking_adj),
              o[a].masking_adj > 0
                ? 0 != r
                  ? (t.maskingadjust_short = 0.9 * o[a].masking_adj)
                  : Math.abs(t.maskingadjust_short - 0) > 0 ||
                    (t.maskingadjust_short = 0.9 * o[a].masking_adj)
                : 0 != r
                ? (t.maskingadjust_short = 1.1 * o[a].masking_adj)
                : Math.abs(t.maskingadjust_short - 0) > 0 ||
                  (t.maskingadjust_short = 1.1 * o[a].masking_adj),
              0 != r
                ? (t.ATHlower = -o[a].ath_lower / 10)
                : Math.abs(10 * -t.ATHlower - 0) > 0 ||
                  (t.ATHlower = -o[a].ath_lower / 10),
              0 != r
                ? (t.ATHcurve = o[a].ath_curve)
                : Math.abs(t.ATHcurve - -1) > 0 ||
                  (t.ATHcurve = o[a].ath_curve),
              0 != r
                ? (t.interChRatio = o[a].interch)
                : Math.abs(t.interChRatio - -1) > 0 ||
                  (t.interChRatio = o[a].interch),
              e
            );
          }
          function l(t, e) {
            var n = 0;
            return (
              0 > e && ((n = -1), (e = 0)),
              9 < e && ((n = -1), (e = 9)),
              (t.VBR_q = e),
              (t.VBR_q_frac = 0),
              n
            );
          }
          this.apply_preset = function (t, e, n) {
            switch (e) {
              case Lame.R3MIX:
                (e = Lame.V3), (t.VBR = Te.vbr_mtrh);
                break;
              case Lame.MEDIUM:
                (e = Lame.V4), (t.VBR = Te.vbr_rh);
                break;
              case Lame.MEDIUM_FAST:
                (e = Lame.V4), (t.VBR = Te.vbr_mtrh);
                break;
              case Lame.STANDARD:
                (e = Lame.V2), (t.VBR = Te.vbr_rh);
                break;
              case Lame.STANDARD_FAST:
                (e = Lame.V2), (t.VBR = Te.vbr_mtrh);
                break;
              case Lame.EXTREME:
                (e = Lame.V0), (t.VBR = Te.vbr_rh);
                break;
              case Lame.EXTREME_FAST:
                (e = Lame.V0), (t.VBR = Te.vbr_mtrh);
                break;
              case Lame.INSANE:
                return (
                  (e = 320), (t.preset = e), s(t, e, n), (t.VBR = Te.vbr_off), e
                );
            }
            switch (((t.preset = e), e)) {
              case Lame.V9:
                return a(t, 9, n), e;
              case Lame.V8:
                return a(t, 8, n), e;
              case Lame.V7:
                return a(t, 7, n), e;
              case Lame.V6:
                return a(t, 6, n), e;
              case Lame.V5:
                return a(t, 5, n), e;
              case Lame.V4:
                return a(t, 4, n), e;
              case Lame.V3:
                return a(t, 3, n), e;
              case Lame.V2:
                return a(t, 2, n), e;
              case Lame.V1:
                return a(t, 1, n), e;
              case Lame.V0:
                return a(t, 0, n), e;
            }
            return 8 <= e && e <= 320 ? s(t, e, n) : ((t.preset = 0), e);
          };
        }
        var Pe = Oe;
        function Ce() {
          this.setModules = function (t, e) {};
        }
        var De = Ce;
        function Ie() {
          (this.over_noise = 0),
            (this.tot_noise = 0),
            (this.max_noise = 0),
            (this.over_count = 0),
            (this.over_SSD = 0),
            (this.bits = 0);
        }
        var Be = Ie,
          Ne = m.new_float,
          Le = m.new_int;
        function Ve() {
          (this.global_gain = 0),
            (this.sfb_count1 = 0),
            (this.step = Le(39)),
            (this.noise = Ne(39)),
            (this.noise_log = Ne(39));
        }
        var Fe = Ve,
          He = m.System,
          je = m.VbrMode,
          Ye = m.Util,
          We = m.Arrays,
          Ue = m.new_float,
          ze = m.assert;
        function Ge() {
          var t, e, n;
          (this.rv = null), (this.qupvt = null);
          var r,
            i = new De();
          function a(t, e, n, r) {
            r = 0;
            for (var i = 0; i <= n; ++i) {
              var a = Math.abs(t.xr[i]);
              (r += a),
                (e[i] = Math.sqrt(a * Math.sqrt(a))),
                e[i] > t.xrpow_max && (t.xrpow_max = e[i]);
            }
            return r;
          }
          function o(t, e) {
            var r = t.ATH,
              i = e.xr;
            if (e.block_type != L.SHORT_TYPE)
              for (var a = !1, o = L.PSFB21 - 1; o >= 0 && !a; o--) {
                var s = t.scalefac_band.psfb21[o],
                  l = t.scalefac_band.psfb21[o + 1],
                  c = n.athAdjust(r.adjust, r.psfb21[o], r.floor);
                t.nsPsy.longfact[21] > 1e-12 && (c *= t.nsPsy.longfact[21]);
                for (var u = l - 1; u >= s; u--) {
                  if (!(Math.abs(i[u]) < c)) {
                    a = !0;
                    break;
                  }
                  i[u] = 0;
                }
              }
            else
              for (var d = 0; d < 3; d++)
                for (a = !1, o = L.PSFB12 - 1; o >= 0 && !a; o--) {
                  l =
                    (s =
                      3 * t.scalefac_band.s[12] +
                      (t.scalefac_band.s[13] - t.scalefac_band.s[12]) * d +
                      (t.scalefac_band.psfb12[o] - t.scalefac_band.psfb12[0])) +
                    (t.scalefac_band.psfb12[o + 1] - t.scalefac_band.psfb12[o]);
                  var h = n.athAdjust(r.adjust, r.psfb12[o], r.floor);
                  for (
                    t.nsPsy.shortfact[12] > 1e-12 &&
                      (h *= t.nsPsy.shortfact[12]),
                      u = l - 1;
                    u >= s;
                    u--
                  ) {
                    if (!(Math.abs(i[u]) < h)) {
                      a = !0;
                      break;
                    }
                    i[u] = 0;
                  }
                }
          }
          function s(t) {
            this.ordinal = t;
          }
          function l(t, e, n, i, a) {
            var o,
              l = t.CurrentStep[i],
              c = !1,
              u = t.OldValue[i],
              d = s.BINSEARCH_NONE;
            for (e.global_gain = u, n -= e.part2_length, ze(0 != l); ; ) {
              var h;
              if (((o = r.count_bits(t, a, e, null)), 1 == l || o == n)) break;
              o > n
                ? (d == s.BINSEARCH_DOWN && (c = !0),
                  c && (l /= 2),
                  (d = s.BINSEARCH_UP),
                  (h = l))
                : (d == s.BINSEARCH_UP && (c = !0),
                  c && (l /= 2),
                  (d = s.BINSEARCH_DOWN),
                  (h = -l)),
                (e.global_gain += h),
                e.global_gain < 0 && ((e.global_gain = 0), (c = !0)),
                e.global_gain > 255 && ((e.global_gain = 255), (c = !0));
            }
            for (
              ze(e.global_gain >= 0), ze(e.global_gain < 256);
              o > n && e.global_gain < 255;

            )
              e.global_gain++, (o = r.count_bits(t, a, e, null));
            return (
              (t.CurrentStep[i] = u - e.global_gain >= 4 ? 4 : 2),
              (t.OldValue[i] = e.global_gain),
              (e.part2_3_length = o),
              o
            );
          }
          function c(t) {
            for (var e = 0; e < t.sfbmax; e++)
              if (t.scalefac[e] + t.subblock_gain[t.window[e]] == 0) return !1;
            return !0;
          }
          function u(t) {
            return Ye.FAST_LOG10(0.368 + 0.632 * t * t * t);
          }
          function d(t, e) {
            for (var n = 1e-37, r = 0; r < e.psymax; r++) n += u(t[r]);
            return Math.max(1e-20, n);
          }
          function h(t, e, n, r, i) {
            var a;
            switch (t) {
              default:
              case 9:
                e.over_count > 0
                  ? ((a = n.over_SSD <= e.over_SSD),
                    n.over_SSD == e.over_SSD && (a = n.bits < e.bits))
                  : (a =
                      n.max_noise < 0 &&
                      10 * n.max_noise + n.bits <= 10 * e.max_noise + e.bits);
                break;
              case 0:
                a =
                  n.over_count < e.over_count ||
                  (n.over_count == e.over_count &&
                    n.over_noise < e.over_noise) ||
                  (n.over_count == e.over_count &&
                    BitStream.EQ(n.over_noise, e.over_noise) &&
                    n.tot_noise < e.tot_noise);
                break;
              case 8:
                n.max_noise = d(i, r);
              case 1:
                a = n.max_noise < e.max_noise;
                break;
              case 2:
                a = n.tot_noise < e.tot_noise;
                break;
              case 3:
                a = n.tot_noise < e.tot_noise && n.max_noise < e.max_noise;
                break;
              case 4:
                a =
                  (n.max_noise <= 0 && e.max_noise > 0.2) ||
                  (n.max_noise <= 0 &&
                    e.max_noise < 0 &&
                    e.max_noise > n.max_noise - 0.2 &&
                    n.tot_noise < e.tot_noise) ||
                  (n.max_noise <= 0 &&
                    e.max_noise > 0 &&
                    e.max_noise > n.max_noise - 0.2 &&
                    n.tot_noise < e.tot_noise + e.over_noise) ||
                  (n.max_noise > 0 &&
                    e.max_noise > -0.05 &&
                    e.max_noise > n.max_noise - 0.1 &&
                    n.tot_noise + n.over_noise < e.tot_noise + e.over_noise) ||
                  (n.max_noise > 0 &&
                    e.max_noise > -0.1 &&
                    e.max_noise > n.max_noise - 0.15 &&
                    n.tot_noise + n.over_noise + n.over_noise <
                      e.tot_noise + e.over_noise + e.over_noise);
                break;
              case 5:
                a =
                  n.over_noise < e.over_noise ||
                  (BitStream.EQ(n.over_noise, e.over_noise) &&
                    n.tot_noise < e.tot_noise);
                break;
              case 6:
                a =
                  n.over_noise < e.over_noise ||
                  (BitStream.EQ(n.over_noise, e.over_noise) &&
                    (n.max_noise < e.max_noise ||
                      (BitStream.EQ(n.max_noise, e.max_noise) &&
                        n.tot_noise <= e.tot_noise)));
                break;
              case 7:
                a = n.over_count < e.over_count || n.over_noise < e.over_noise;
            }
            return 0 == e.over_count && (a = a && n.bits < e.bits), a;
          }
          function f(t, e, n, r, i) {
            var a,
              o = t.internal_flags;
            a = 0 == e.scalefac_scale ? 1.2968395546510096 : 1.6817928305074292;
            for (var s = 0, l = 0; l < e.sfbmax; l++) s < n[l] && (s = n[l]);
            var c = o.noise_shaping_amp;
            switch ((3 == c && (c = i ? 2 : 1), c)) {
              case 2:
                break;
              case 1:
                s > 1 ? (s = Math.pow(s, 0.5)) : (s *= 0.95);
                break;
              default:
                s > 1 ? (s = 1) : (s *= 0.95);
            }
            var u = 0;
            for (l = 0; l < e.sfbmax; l++) {
              var d,
                h = e.width[l];
              if (((u += h), !(n[l] < s))) {
                if (
                  0 != (2 & o.substep_shaping) &&
                  ((o.pseudohalf[l] = 0 == o.pseudohalf[l] ? 1 : 0),
                  0 == o.pseudohalf[l] && 2 == o.noise_shaping_amp)
                )
                  return;
                for (e.scalefac[l]++, d = -h; d < 0; d++)
                  (r[u + d] *= a),
                    r[u + d] > e.xrpow_max && (e.xrpow_max = r[u + d]);
                if (2 == o.noise_shaping_amp) return;
              }
            }
          }
          function p(t, e) {
            for (var r = 1.2968395546510096, i = 0, a = 0; a < t.sfbmax; a++) {
              var o = t.width[a],
                s = t.scalefac[a];
              if (
                (0 != t.preflag && (s += n.pretab[a]), (i += o), 0 != (1 & s))
              ) {
                s++;
                for (var l = -o; l < 0; l++)
                  (e[i + l] *= r),
                    e[i + l] > t.xrpow_max && (t.xrpow_max = e[i + l]);
              }
              t.scalefac[a] = s >> 1;
            }
            (t.preflag = 0), (t.scalefac_scale = 1);
          }
          function m(t, e, r) {
            var i,
              a = e.scalefac;
            for (i = 0; i < e.sfb_lmax; i++) if (a[i] >= 16) return !0;
            for (var o = 0; o < 3; o++) {
              var s = 0,
                l = 0;
              for (i = e.sfb_lmax + o; i < e.sfbdivide; i += 3)
                s < a[i] && (s = a[i]);
              for (; i < e.sfbmax; i += 3) l < a[i] && (l = a[i]);
              if (!(s < 16 && l < 8)) {
                if (e.subblock_gain[o] >= 7) return !0;
                e.subblock_gain[o]++;
                var c = t.scalefac_band.l[e.sfb_lmax];
                for (i = e.sfb_lmax + o; i < e.sfbmax; i += 3) {
                  var u = e.width[i],
                    d = a[i];
                  if ((ze(d >= 0), (d -= 4 >> e.scalefac_scale) >= 0))
                    (a[i] = d), (c += 3 * u);
                  else {
                    a[i] = 0;
                    var h = 210 + (d << (e.scalefac_scale + 1));
                    (p = n.IPOW20(h)), (c += u * (o + 1));
                    for (var f = -u; f < 0; f++)
                      (r[c + f] *= p),
                        r[c + f] > e.xrpow_max && (e.xrpow_max = r[c + f]);
                    c += u * (3 - o - 1);
                  }
                }
                var p = n.IPOW20(202);
                for (c += e.width[i] * (o + 1), f = -e.width[i]; f < 0; f++)
                  (r[c + f] *= p),
                    r[c + f] > e.xrpow_max && (e.xrpow_max = r[c + f]);
              }
            }
            return !1;
          }
          function g(t, e, n, i, a) {
            var o = t.internal_flags;
            f(t, e, n, i, a);
            var s = c(e);
            return (
              !s &&
              (!(s =
                2 == o.mode_gr
                  ? r.scale_bitcount(e)
                  : r.scale_bitcount_lsf(o, e)) ||
                (o.noise_shaping > 1 &&
                  (We.fill(o.pseudohalf, 0),
                  0 == e.scalefac_scale
                    ? (p(e, i), (s = !1))
                    : e.block_type == L.SHORT_TYPE &&
                      o.subblock_gain > 0 &&
                      (s = m(o, e, i) || c(e))),
                s ||
                  (s =
                    2 == o.mode_gr
                      ? r.scale_bitcount(e)
                      : r.scale_bitcount_lsf(o, e)),
                !s))
            );
          }
          (this.setModules = function (a, o, s, l) {
            (t = a),
              (e = o),
              (this.rv = o),
              (n = s),
              (this.qupvt = s),
              (r = l),
              i.setModules(n, r);
          }),
            (this.ms_convert = function (t, e) {
              for (var n = 0; n < 576; ++n) {
                var r = t.tt[e][0].xr[n],
                  i = t.tt[e][1].xr[n];
                (t.tt[e][0].xr[n] = (r + i) * (0.5 * Ye.SQRT2)),
                  (t.tt[e][1].xr[n] = (r - i) * (0.5 * Ye.SQRT2));
              }
            }),
            (this.init_xrpow = function (t, e, n) {
              var r = 0,
                i = 0 | e.max_nonzero_coeff;
              if (
                (ze(null != n),
                (e.xrpow_max = 0),
                ze(0 <= i && i <= 575),
                We.fill(n, i, 576, 0),
                (r = a(e, n, i, r)) > 1e-20)
              ) {
                var o = 0;
                0 != (2 & t.substep_shaping) && (o = 1);
                for (var s = 0; s < e.psymax; s++) t.pseudohalf[s] = o;
                return !0;
              }
              return We.fill(e.l3_enc, 0, 576, 0), !1;
            }),
            (this.init_outer_loop = function (t, e) {
              (e.part2_3_length = 0),
                (e.big_values = 0),
                (e.count1 = 0),
                (e.global_gain = 210),
                (e.scalefac_compress = 0),
                (e.table_select[0] = 0),
                (e.table_select[1] = 0),
                (e.table_select[2] = 0),
                (e.subblock_gain[0] = 0),
                (e.subblock_gain[1] = 0),
                (e.subblock_gain[2] = 0),
                (e.subblock_gain[3] = 0),
                (e.region0_count = 0),
                (e.region1_count = 0),
                (e.preflag = 0),
                (e.scalefac_scale = 0),
                (e.count1table_select = 0),
                (e.part2_length = 0),
                (e.sfb_lmax = L.SBPSY_l),
                (e.sfb_smin = L.SBPSY_s),
                (e.psy_lmax = t.sfb21_extra ? L.SBMAX_l : L.SBPSY_l),
                (e.psymax = e.psy_lmax),
                (e.sfbmax = e.sfb_lmax),
                (e.sfbdivide = 11);
              for (var r = 0; r < L.SBMAX_l; r++)
                (e.width[r] = t.scalefac_band.l[r + 1] - t.scalefac_band.l[r]),
                  (e.window[r] = 3);
              if (e.block_type == L.SHORT_TYPE) {
                var i = Ue(576);
                (e.sfb_smin = 0),
                  (e.sfb_lmax = 0),
                  0 != e.mixed_block_flag &&
                    ((e.sfb_smin = 3), (e.sfb_lmax = 2 * t.mode_gr + 4)),
                  (e.psymax =
                    e.sfb_lmax +
                    3 * ((t.sfb21_extra ? L.SBMAX_s : L.SBPSY_s) - e.sfb_smin)),
                  (e.sfbmax = e.sfb_lmax + 3 * (L.SBPSY_s - e.sfb_smin)),
                  (e.sfbdivide = e.sfbmax - 18),
                  (e.psy_lmax = e.sfb_lmax);
                var a = t.scalefac_band.l[e.sfb_lmax];
                for (
                  He.arraycopy(e.xr, 0, i, 0, 576), r = e.sfb_smin;
                  r < L.SBMAX_s;
                  r++
                )
                  for (
                    var s = t.scalefac_band.s[r],
                      l = t.scalefac_band.s[r + 1],
                      c = 0;
                    c < 3;
                    c++
                  )
                    for (var u = s; u < l; u++) e.xr[a++] = i[3 * u + c];
                var d = e.sfb_lmax;
                for (r = e.sfb_smin; r < L.SBMAX_s; r++)
                  (e.width[d] =
                    e.width[d + 1] =
                    e.width[d + 2] =
                      t.scalefac_band.s[r + 1] - t.scalefac_band.s[r]),
                    (e.window[d] = 0),
                    (e.window[d + 1] = 1),
                    (e.window[d + 2] = 2),
                    (d += 3);
              }
              (e.count1bits = 0),
                (e.sfb_partition_table = n.nr_of_sfb_block[0][0]),
                (e.slen[0] = 0),
                (e.slen[1] = 0),
                (e.slen[2] = 0),
                (e.slen[3] = 0),
                (e.max_nonzero_coeff = 575),
                We.fill(e.scalefac, 0),
                o(t, e);
            }),
            (s.BINSEARCH_NONE = new s(0)),
            (s.BINSEARCH_UP = new s(1)),
            (s.BINSEARCH_DOWN = new s(2)),
            (this.trancate_smallspectrums = function (t, e, i, a) {
              var o = Ue(it.SFBMAX);
              if (
                (0 != (4 & t.substep_shaping) ||
                  e.block_type != L.SHORT_TYPE) &&
                0 == (128 & t.substep_shaping)
              ) {
                n.calc_noise(e, i, o, new Be(), null);
                for (var s = 0; s < 576; s++) {
                  var l = 0;
                  0 != e.l3_enc[s] && (l = Math.abs(e.xr[s])), (a[s] = l);
                }
                s = 0;
                var c = 8;
                e.block_type == L.SHORT_TYPE && (c = 6);
                do {
                  var u,
                    d,
                    h,
                    f,
                    p = e.width[c];
                  if (
                    ((s += p),
                    !(o[c] >= 1) &&
                      (We.sort(a, s - p, p), !BitStream.EQ(a[s - 1], 0)))
                  ) {
                    (u = (1 - o[c]) * i[c]), (d = 0), (f = 0);
                    do {
                      var m;
                      for (
                        h = 1;
                        f + h < p &&
                        !BitStream.NEQ(a[f + s - p], a[f + s + h - p]);
                        h++
                      );
                      if (u < (m = a[f + s - p] * a[f + s - p] * h)) {
                        0 != f && (d = a[f + s - p - 1]);
                        break;
                      }
                      (u -= m), (f += h);
                    } while (f < p);
                    if (!BitStream.EQ(d, 0))
                      do {
                        Math.abs(e.xr[s - p]) <= d && (e.l3_enc[s - p] = 0);
                      } while (--p > 0);
                  }
                } while (++c < e.psymax);
                e.part2_3_length = r.noquant_count_bits(t, e, null);
              }
            }),
            (this.outer_loop = function (t, e, i, a, o, s) {
              var c = t.internal_flags,
                u = new lt(),
                d = Ue(576),
                f = Ue(it.SFBMAX),
                p = new Be(),
                m = new Fe(),
                _ = 9999999,
                v = !1,
                b = !1,
                y = 0;
              if ((l(c, e, s, o, a), 0 == c.noise_shaping)) return 100;
              n.calc_noise(e, i, f, p, m),
                (p.bits = e.part2_3_length),
                u.assign(e);
              var x = 0;
              for (He.arraycopy(a, 0, d, 0, 576); !v; ) {
                do {
                  var w,
                    M = new Be(),
                    S = 255;
                  if (
                    ((w = 0 != (2 & c.substep_shaping) ? 20 : 3), c.sfb21_extra)
                  ) {
                    if (f[u.sfbmax] > 1) break;
                    if (
                      u.block_type == L.SHORT_TYPE &&
                      (f[u.sfbmax + 1] > 1 || f[u.sfbmax + 2] > 1)
                    )
                      break;
                  }
                  if (!g(t, u, f, a, b)) break;
                  0 != u.scalefac_scale && (S = 254);
                  var A = s - u.part2_length;
                  if (A <= 0) break;
                  for (
                    ;
                    (u.part2_3_length = r.count_bits(c, a, u, m)) > A &&
                    u.global_gain <= S;

                  )
                    u.global_gain++;
                  if (u.global_gain > S) break;
                  if (0 == p.over_count) {
                    for (
                      ;
                      (u.part2_3_length = r.count_bits(c, a, u, m)) > _ &&
                      u.global_gain <= S;

                    )
                      u.global_gain++;
                    if (u.global_gain > S) break;
                  }
                  if (
                    (n.calc_noise(u, i, f, M, m),
                    (M.bits = u.part2_3_length),
                    0 !=
                      (h(
                        e.block_type != L.SHORT_TYPE
                          ? t.quant_comp
                          : t.quant_comp_short,
                        p,
                        M,
                        u,
                        f
                      )
                        ? 1
                        : 0))
                  )
                    (_ = e.part2_3_length),
                      (p = M),
                      e.assign(u),
                      (x = 0),
                      He.arraycopy(a, 0, d, 0, 576);
                  else if (0 == c.full_outer_loop) {
                    if (++x > w && 0 == p.over_count) break;
                    if (3 == c.noise_shaping_amp && b && x > 30) break;
                    if (3 == c.noise_shaping_amp && b && u.global_gain - y > 15)
                      break;
                  }
                } while (u.global_gain + u.scalefac_scale < 255);
                3 == c.noise_shaping_amp
                  ? b
                    ? (v = !0)
                    : (u.assign(e),
                      He.arraycopy(d, 0, a, 0, 576),
                      (x = 0),
                      (y = u.global_gain),
                      (b = !0))
                  : (v = !0);
              }
              return (
                ze(e.global_gain + e.scalefac_scale <= 255),
                t.VBR == je.vbr_rh || t.VBR == je.vbr_mtrh
                  ? He.arraycopy(d, 0, a, 0, 576)
                  : 0 != (1 & c.substep_shaping) &&
                    trancate_smallspectrums(c, e, i, a),
                p.over_count
              );
            }),
            (this.iteration_finish_one = function (t, n, i) {
              var a = t.l3_side,
                o = a.tt[n][i];
              r.best_scalefac_store(t, n, i, a),
                1 == t.use_best_huffman && r.best_huffman_divide(t, o),
                e.ResvAdjust(t, o);
            }),
            (this.VBR_encode_granule = function (t, e, n, r, i, a, o) {
              var s,
                l = t.internal_flags,
                c = new lt(),
                u = Ue(576),
                d = o,
                h = o + 1,
                f = (o + a) / 2,
                p = 0,
                m = l.sfb21_extra;
              ze(d <= LameInternalFlags.MAX_BITS_PER_CHANNEL),
                We.fill(c.l3_enc, 0);
              do {
                ze(f >= a),
                  ze(f <= o),
                  ze(a <= o),
                  (l.sfb21_extra = !(f > d - 42) && m),
                  outer_loop(t, e, n, r, i, f) <= 0
                    ? ((p = 1),
                      (h = e.part2_3_length),
                      c.assign(e),
                      He.arraycopy(r, 0, u, 0, 576),
                      (s = (o = h - 32) - a),
                      (f = (o + a) / 2))
                    : ((s = o - (a = f + 32)),
                      (f = (o + a) / 2),
                      0 != p &&
                        ((p = 2), e.assign(c), He.arraycopy(u, 0, r, 0, 576)));
              } while (s > 12);
              (l.sfb21_extra = m),
                2 == p && He.arraycopy(c.l3_enc, 0, e.l3_enc, 0, 576),
                ze(e.part2_3_length <= d);
            }),
            (this.get_framebits = function (n, r) {
              var i = n.internal_flags;
              i.bitrate_index = i.VBR_min_bitrate;
              var a = t.getframebits(n);
              (i.bitrate_index = 1), (a = t.getframebits(n));
              for (var o = 1; o <= i.VBR_max_bitrate; o++) {
                i.bitrate_index = o;
                var s = new MeanBits(a);
                (r[o] = e.ResvFrameBegin(n, s)), (a = s.bits);
              }
            }),
            (this.VBR_old_prepare = function (t, r, i, a, o, s, l, c, u) {
              var d,
                h = t.internal_flags,
                f = 0,
                p = 1,
                m = 0;
              h.bitrate_index = h.VBR_max_bitrate;
              var g = e.ResvFrameBegin(t, new MeanBits(0)) / h.mode_gr;
              get_framebits(t, s);
              for (var _ = 0; _ < h.mode_gr; _++) {
                var v = n.on_pe(t, r, c[_], g, _, 0);
                h.mode_ext == L.MPG_MD_MS_LR &&
                  (ms_convert(h.l3_side, _), n.reduce_side(c[_], i[_], g, v));
                for (var b = 0; b < h.channels_out; ++b) {
                  var y = h.l3_side.tt[_][b];
                  y.block_type != L.SHORT_TYPE
                    ? ((f = 1.28 / (1 + Math.exp(3.5 - r[_][b] / 300)) - 0.05),
                      (d = h.PSY.mask_adjust - f))
                    : ((f = 2.56 / (1 + Math.exp(3.5 - r[_][b] / 300)) - 0.14),
                      (d = h.PSY.mask_adjust_short - f)),
                    (h.masking_lower = Math.pow(10, 0.1 * d)),
                    init_outer_loop(h, y),
                    (u[_][b] = n.calc_xmin(t, a[_][b], y, o[_][b])),
                    0 != u[_][b] && (p = 0),
                    (l[_][b] = 126),
                    (m += c[_][b]);
                }
              }
              for (_ = 0; _ < h.mode_gr; _++)
                for (b = 0; b < h.channels_out; b++)
                  m > s[h.VBR_max_bitrate] &&
                    ((c[_][b] *= s[h.VBR_max_bitrate]), (c[_][b] /= m)),
                    l[_][b] > c[_][b] && (l[_][b] = c[_][b]);
              return p;
            }),
            (this.bitpressure_strategy = function (t, e, n, r) {
              for (var i = 0; i < t.mode_gr; i++)
                for (var a = 0; a < t.channels_out; a++) {
                  for (
                    var o = t.l3_side.tt[i][a], s = e[i][a], l = 0, c = 0;
                    c < o.psy_lmax;
                    c++
                  )
                    s[l++] *= 1 + (0.029 * c * c) / L.SBMAX_l / L.SBMAX_l;
                  if (o.block_type == L.SHORT_TYPE)
                    for (c = o.sfb_smin; c < L.SBMAX_s; c++)
                      (s[l++] *= 1 + (0.029 * c * c) / L.SBMAX_s / L.SBMAX_s),
                        (s[l++] *= 1 + (0.029 * c * c) / L.SBMAX_s / L.SBMAX_s),
                        (s[l++] *= 1 + (0.029 * c * c) / L.SBMAX_s / L.SBMAX_s);
                  r[i][a] = 0 | Math.max(n[i][a], 0.9 * r[i][a]);
                }
            }),
            (this.VBR_new_prepare = function (t, r, i, a, o, s) {
              var l,
                c = t.internal_flags,
                u = 1,
                d = 0,
                h = 0;
              if (t.free_format)
                (c.bitrate_index = 0),
                  (f = new MeanBits(d)),
                  (l = e.ResvFrameBegin(t, f)),
                  (d = f.bits),
                  (o[0] = l);
              else {
                c.bitrate_index = c.VBR_max_bitrate;
                var f = new MeanBits(d);
                e.ResvFrameBegin(t, f),
                  (d = f.bits),
                  get_framebits(t, o),
                  (l = o[c.VBR_max_bitrate]);
              }
              for (var p = 0; p < c.mode_gr; p++) {
                n.on_pe(t, r, s[p], d, p, 0),
                  c.mode_ext == L.MPG_MD_MS_LR && ms_convert(c.l3_side, p);
                for (var m = 0; m < c.channels_out; ++m) {
                  var g = c.l3_side.tt[p][m];
                  (c.masking_lower = Math.pow(10, 0.1 * c.PSY.mask_adjust)),
                    init_outer_loop(c, g),
                    0 != n.calc_xmin(t, i[p][m], g, a[p][m]) && (u = 0),
                    (h += s[p][m]);
                }
              }
              for (p = 0; p < c.mode_gr; p++)
                for (m = 0; m < c.channels_out; m++)
                  h > l && ((s[p][m] *= l), (s[p][m] /= h));
              return u;
            }),
            (this.calc_target_bits = function (r, i, a, o, s, l) {
              var c,
                u,
                d,
                h,
                f = r.internal_flags,
                p = f.l3_side,
                m = 0;
              f.bitrate_index = f.VBR_max_bitrate;
              var g = new MeanBits(m);
              for (
                l[0] = e.ResvFrameBegin(r, g),
                  m = g.bits,
                  f.bitrate_index = 1,
                  m = t.getframebits(r) - 8 * f.sideinfo_len,
                  s[0] = m / (f.mode_gr * f.channels_out),
                  m = r.VBR_mean_bitrate_kbps * r.framesize * 1e3,
                  0 != (1 & f.substep_shaping) && (m *= 1.09),
                  m /= r.out_samplerate,
                  m -= 8 * f.sideinfo_len,
                  m /= f.mode_gr * f.channels_out,
                  (c = 0.93 + (0.07 * (11 - r.compression_ratio)) / 5.5) <
                    0.9 && (c = 0.9),
                  c > 1 && (c = 1),
                  u = 0;
                u < f.mode_gr;
                u++
              ) {
                var _ = 0;
                for (d = 0; d < f.channels_out; d++) {
                  if (((o[u][d] = int(c * m)), i[u][d] > 700)) {
                    var v = int((i[u][d] - 700) / 1.4),
                      b = p.tt[u][d];
                    (o[u][d] = int(c * m)),
                      b.block_type == L.SHORT_TYPE && v < m / 2 && (v = m / 2),
                      v > (3 * m) / 2 ? (v = (3 * m) / 2) : v < 0 && (v = 0),
                      (o[u][d] += v);
                  }
                  o[u][d] > LameInternalFlags.MAX_BITS_PER_CHANNEL &&
                    (o[u][d] = LameInternalFlags.MAX_BITS_PER_CHANNEL),
                    (_ += o[u][d]);
                }
                if (_ > LameInternalFlags.MAX_BITS_PER_GRANULE)
                  for (d = 0; d < f.channels_out; ++d)
                    (o[u][d] *= LameInternalFlags.MAX_BITS_PER_GRANULE),
                      (o[u][d] /= _);
              }
              if (f.mode_ext == L.MPG_MD_MS_LR)
                for (u = 0; u < f.mode_gr; u++)
                  n.reduce_side(
                    o[u],
                    a[u],
                    m * f.channels_out,
                    LameInternalFlags.MAX_BITS_PER_GRANULE
                  );
              for (h = 0, u = 0; u < f.mode_gr; u++)
                for (d = 0; d < f.channels_out; d++)
                  o[u][d] > LameInternalFlags.MAX_BITS_PER_CHANNEL &&
                    (o[u][d] = LameInternalFlags.MAX_BITS_PER_CHANNEL),
                    (h += o[u][d]);
              if (h > l[0])
                for (u = 0; u < f.mode_gr; u++)
                  for (d = 0; d < f.channels_out; d++)
                    (o[u][d] *= l[0]), (o[u][d] /= h);
            });
        }
        var qe = Ge,
          Xe = m.assert;
        function Ze() {
          var t;
          (this.setModules = function (e) {
            t = e;
          }),
            (this.ResvFrameBegin = function (e, n) {
              var r,
                i = e.internal_flags,
                a = i.l3_side,
                o = t.getframebits(e);
              n.bits = (o - 8 * i.sideinfo_len) / i.mode_gr;
              var s = 2048 * i.mode_gr - 8;
              e.brate > 320
                ? (r =
                    8 *
                    int((1e3 * e.brate) / (e.out_samplerate / 1152) / 8 + 0.5))
                : ((r = 11520),
                  e.strict_ISO &&
                    (r = 8 * int(32e4 / (e.out_samplerate / 1152) / 8 + 0.5))),
                (i.ResvMax = r - o),
                i.ResvMax > s && (i.ResvMax = s),
                (i.ResvMax < 0 || e.disable_reservoir) && (i.ResvMax = 0);
              var l = n.bits * i.mode_gr + Math.min(i.ResvSize, i.ResvMax);
              return (
                l > r && (l = r),
                Xe(0 == i.ResvMax % 8),
                Xe(i.ResvMax >= 0),
                (a.resvDrain_pre = 0),
                null != i.pinfo &&
                  ((i.pinfo.mean_bits = n.bits / 2),
                  (i.pinfo.resvsize = i.ResvSize)),
                l
              );
            }),
            (this.ResvMaxBits = function (t, e, n, r) {
              var i,
                a = t.internal_flags,
                o = a.ResvSize,
                s = a.ResvMax;
              0 != r && (o += e),
                0 != (1 & a.substep_shaping) && (s *= 0.9),
                (n.bits = e),
                10 * o > 9 * s
                  ? ((i = o - (9 * s) / 10),
                    (n.bits += i),
                    (a.substep_shaping |= 128))
                  : ((i = 0),
                    (a.substep_shaping &= 127),
                    t.disable_reservoir ||
                      0 != (1 & a.substep_shaping) ||
                      (n.bits -= 0.1 * e));
              var l = o < (6 * a.ResvMax) / 10 ? o : (6 * a.ResvMax) / 10;
              return (l -= i) < 0 && (l = 0), l;
            }),
            (this.ResvAdjust = function (t, e) {
              t.ResvSize -= e.part2_3_length + e.part2_length;
            }),
            (this.ResvFrameEnd = function (t, e) {
              var n,
                r = t.l3_side;
              t.ResvSize += e * t.mode_gr;
              var i = 0;
              (r.resvDrain_post = 0),
                (r.resvDrain_pre = 0),
                0 != (n = t.ResvSize % 8) && (i += n),
                (n = t.ResvSize - i - t.ResvMax) > 0 &&
                  (Xe(0 == n % 8), Xe(n >= 0), (i += n));
              var a = Math.min(8 * r.main_data_begin, i) / 8;
              (r.resvDrain_pre += 8 * a),
                (i -= 8 * a),
                (t.ResvSize -= 8 * a),
                (r.main_data_begin -= a),
                (r.resvDrain_post += i),
                (t.ResvSize -= i);
            });
        }
        var Ke = Ze;
        function $e() {
          var t = "http://www.mp3dev.org/",
            e = 3,
            n = 98,
            r = 4,
            i = 0,
            a = 93;
          (this.getLameVersion = function () {
            return e + "." + n + "." + r;
          }),
            (this.getLameShortVersion = function () {
              return e + "." + n + "." + r;
            }),
            (this.getLameVeryShortVersion = function () {
              return "LAME" + e + "." + n + "r";
            }),
            (this.getPsyVersion = function () {
              return i + "." + a;
            }),
            (this.getLameUrl = function () {
              return t;
            }),
            (this.getLameOsBitness = function () {
              return "32bits";
            });
        }
        var Qe = $e,
          Je = m.System,
          tn = m.VbrMode,
          en = m.ShortBlock,
          nn = m.Arrays,
          rn = m.new_byte,
          an = m.assert;
        function on() {
          var t, e, n;
          this.setModules = function (r, i, a) {
            (t = r), (e = i), (n = a);
          };
          var r = 1,
            i = 2,
            a = 4,
            o = 8,
            s = on.NUMTOCENTRIES,
            l = on.MAXFRAMESIZE,
            c =
              s +
              4 +
              4 +
              4 +
              4 +
              4 +
              9 +
              1 +
              1 +
              8 +
              1 +
              1 +
              3 +
              1 +
              1 +
              2 +
              4 +
              2 +
              2,
            u = 128,
            d = 64,
            h = 32,
            f = null,
            p = "Xing",
            m = "Info",
            g = [
              0, 49345, 49537, 320, 49921, 960, 640, 49729, 50689, 1728, 1920,
              51009, 1280, 50625, 50305, 1088, 52225, 3264, 3456, 52545, 3840,
              53185, 52865, 3648, 2560, 51905, 52097, 2880, 51457, 2496, 2176,
              51265, 55297, 6336, 6528, 55617, 6912, 56257, 55937, 6720, 7680,
              57025, 57217, 8e3, 56577, 7616, 7296, 56385, 5120, 54465, 54657,
              5440, 55041, 6080, 5760, 54849, 53761, 4800, 4992, 54081, 4352,
              53697, 53377, 4160, 61441, 12480, 12672, 61761, 13056, 62401,
              62081, 12864, 13824, 63169, 63361, 14144, 62721, 13760, 13440,
              62529, 15360, 64705, 64897, 15680, 65281, 16320, 16e3, 65089,
              64001, 15040, 15232, 64321, 14592, 63937, 63617, 14400, 10240,
              59585, 59777, 10560, 60161, 11200, 10880, 59969, 60929, 11968,
              12160, 61249, 11520, 60865, 60545, 11328, 58369, 9408, 9600,
              58689, 9984, 59329, 59009, 9792, 8704, 58049, 58241, 9024, 57601,
              8640, 8320, 57409, 40961, 24768, 24960, 41281, 25344, 41921,
              41601, 25152, 26112, 42689, 42881, 26432, 42241, 26048, 25728,
              42049, 27648, 44225, 44417, 27968, 44801, 28608, 28288, 44609,
              43521, 27328, 27520, 43841, 26880, 43457, 43137, 26688, 30720,
              47297, 47489, 31040, 47873, 31680, 31360, 47681, 48641, 32448,
              32640, 48961, 32e3, 48577, 48257, 31808, 46081, 29888, 30080,
              46401, 30464, 47041, 46721, 30272, 29184, 45761, 45953, 29504,
              45313, 29120, 28800, 45121, 20480, 37057, 37249, 20800, 37633,
              21440, 21120, 37441, 38401, 22208, 22400, 38721, 21760, 38337,
              38017, 21568, 39937, 23744, 23936, 40257, 24320, 40897, 40577,
              24128, 23040, 39617, 39809, 23360, 39169, 22976, 22656, 38977,
              34817, 18624, 18816, 35137, 19200, 35777, 35457, 19008, 19968,
              36545, 36737, 20288, 36097, 19904, 19584, 35905, 17408, 33985,
              34177, 17728, 34561, 18368, 18048, 34369, 33281, 17088, 17280,
              33601, 16640, 33217, 32897, 16448,
            ];
          function _(t, e) {
            if (
              (t.nVbrNumFrames++,
              (t.sum += e),
              t.seen++,
              !(t.seen < t.want) &&
                (t.pos < t.size &&
                  ((t.bag[t.pos] = t.sum), t.pos++, (t.seen = 0)),
                t.pos == t.size))
            ) {
              for (var n = 1; n < t.size; n += 2) t.bag[n / 2] = t.bag[n];
              (t.want *= 2), (t.pos /= 2);
            }
          }
          function v(t, e) {
            if (!(t.pos <= 0))
              for (var n = 1; n < s; ++n) {
                var r = n / s,
                  i = 0 | Math.floor(r * t.pos);
                i > t.pos - 1 && (i = t.pos - 1);
                var a = 0 | ((256 * t.bag[i]) / t.sum);
                a > 255 && (a = 255), (e[n] = 255 & a);
              }
          }
          function b(t, e) {
            var n = 255 & t[e + 0];
            return (
              (n <<= 8),
              (n |= 255 & t[e + 1]),
              (n <<= 8),
              (n |= 255 & t[e + 2]),
              (n <<= 8),
              (n |= 255 & t[e + 3])
            );
          }
          function y(t, e, n) {
            (t[e + 0] = 255 & (n >> 24)),
              (t[e + 1] = 255 & (n >> 16)),
              (t[e + 2] = 255 & (n >> 8)),
              (t[e + 3] = 255 & n);
          }
          function x(t, e, n) {
            (t[e + 0] = 255 & (n >> 8)), (t[e + 1] = 255 & n);
          }
          function w(t, e) {
            return (
              new String(t, e, p.length(), f).equals(p) ||
              new String(t, e, m.length(), f).equals(m)
            );
          }
          function M(t, e, n) {
            return 255 & ((t << e) | (n & ~(-1 << e)));
          }
          function S(e, n) {
            var r = e.internal_flags;
            (n[0] = M(n[0], 8, 255)),
              (n[1] = M(n[1], 3, 7)),
              (n[1] = M(n[1], 1, e.out_samplerate < 16e3 ? 0 : 1)),
              (n[1] = M(n[1], 1, e.version)),
              (n[1] = M(n[1], 2, 1)),
              (n[1] = M(n[1], 1, e.error_protection ? 0 : 1)),
              (n[2] = M(n[2], 4, r.bitrate_index)),
              (n[2] = M(n[2], 2, r.samplerate_index)),
              (n[2] = M(n[2], 1, 0)),
              (n[2] = M(n[2], 1, e.extension)),
              (n[3] = M(n[3], 2, e.mode.ordinal())),
              (n[3] = M(n[3], 2, r.mode_ext)),
              (n[3] = M(n[3], 1, e.copyright)),
              (n[3] = M(n[3], 1, e.original)),
              (n[3] = M(n[3], 2, e.emphasis)),
              (n[0] = 255);
            var i,
              a,
              o = 241 & n[1];
            (i = 1 == e.version ? u : e.out_samplerate < 16e3 ? h : d),
              e.VBR == tn.vbr_off && (i = e.brate),
              (a = e.free_format
                ? 0
                : 255 & (16 * t.BitrateIndex(i, e.version, e.out_samplerate))),
              1 == e.version
                ? ((n[1] = 255 & (10 | o)),
                  (o = 13 & n[2]),
                  (n[2] = 255 & (a | o)))
                : ((n[1] = 255 & (2 | o)),
                  (o = 13 & n[2]),
                  (n[2] = 255 & (a | o)));
          }
          function A(t, e) {
            return (e = (e >> 8) ^ g[255 & (e ^ t)]);
          }
          function E(t, e, r, i, a) {
            var o,
              s,
              l = t.internal_flags,
              c = 0,
              u = t.encoder_delay,
              d = t.encoder_padding,
              h = 100 - 10 * t.VBR_q - t.quality,
              f = n.getLameVeryShortVersion(),
              p = 0,
              m = [1, 5, 3, 2, 4, 0, 3],
              g =
                0 |
                (t.lowpassfreq / 100 + 0.5 > 255
                  ? 255
                  : t.lowpassfreq / 100 + 0.5),
              _ = 0,
              v = 0,
              b = 0,
              w = t.internal_flags.noise_shaping,
              M = 0,
              S = 0,
              E = 0,
              k = 0,
              R = 0,
              T = 0 != (1 & t.exp_nspsytune),
              O = 0 != (2 & t.exp_nspsytune),
              P = !1,
              C = !1,
              D = t.internal_flags.nogap_total,
              I = t.internal_flags.nogap_current,
              B = t.ATHtype,
              N = 0;
            switch (t.VBR) {
              case vbr_abr:
                s = t.VBR_mean_bitrate_kbps;
                break;
              case vbr_off:
                s = t.brate;
                break;
              default:
                s = t.VBR_min_bitrate_kbps;
            }
            switch (
              ((o =
                16 * p + (t.VBR.ordinal() < m.length ? m[t.VBR.ordinal()] : 0)),
              l.findReplayGain &&
                (l.RadioGain > 510 && (l.RadioGain = 510),
                l.RadioGain < -510 && (l.RadioGain = -510),
                (v = 8192),
                (v |= 3072),
                l.RadioGain >= 0
                  ? (v |= l.RadioGain)
                  : ((v |= 512), (v |= -l.RadioGain))),
              l.findPeakSample &&
                (_ = Math.abs(
                  0 | ((l.PeakSample / 32767) * Math.pow(2, 23) + 0.5)
                )),
              -1 != D && (I > 0 && (C = !0), I < D - 1 && (P = !0)),
              (N =
                B +
                ((T ? 1 : 0) << 4) +
                ((O ? 1 : 0) << 5) +
                ((P ? 1 : 0) << 6) +
                ((C ? 1 : 0) << 7)),
              h < 0 && (h = 0),
              t.mode)
            ) {
              case MONO:
                M = 0;
                break;
              case STEREO:
                M = 1;
                break;
              case DUAL_CHANNEL:
                M = 2;
                break;
              case JOINT_STEREO:
                M = t.force_ms ? 4 : 3;
                break;
              case NOT_SET:
              default:
                M = 7;
            }
            (E =
              t.in_samplerate <= 32e3
                ? 0
                : 48e3 == t.in_samplerate
                ? 2
                : t.in_samplerate > 48e3
                ? 3
                : 1),
              (t.short_blocks == en.short_block_forced ||
                t.short_blocks == en.short_block_dispensed ||
                (-1 == t.lowpassfreq && -1 == t.highpassfreq) ||
                t.scale_left < t.scale_right ||
                t.scale_left > t.scale_right ||
                (t.disable_reservoir && t.brate < 320) ||
                t.noATH ||
                t.ATHonly ||
                0 == B ||
                t.in_samplerate <= 32e3) &&
                (S = 1),
              (k = w + (M << 2) + (S << 5) + (E << 6)),
              (R = l.nMusicCRC),
              y(r, i + c, h),
              (c += 4);
            for (var L = 0; L < 9; L++) r[i + c + L] = 255 & f.charAt(L);
            (r[i + (c += 9)] = 255 & o),
              (r[i + ++c] = 255 & g),
              y(r, i + ++c, _),
              x(r, i + (c += 4), v),
              x(r, i + (c += 2), b),
              (r[i + (c += 2)] = 255 & N),
              (r[i + ++c] = s >= 255 ? 255 : 255 & s),
              (r[i + ++c] = 255 & (u >> 4)),
              (r[i + c + 1] = 255 & ((u << 4) + (d >> 8))),
              (r[i + c + 2] = 255 & d),
              (r[i + (c += 3)] = 255 & k),
              c++,
              (r[i + c++] = 0),
              x(r, i + c, t.preset),
              y(r, i + (c += 2), e),
              x(r, i + (c += 4), R),
              (c += 2);
            for (var V = 0; V < c; V++) a = A(r[i + V], a);
            return x(r, i + c, a), (c += 2);
          }
          function k(t) {
            t.seek(0);
            var e = rn(10);
            return (
              t.readFully(e),
              new String(e, "ISO-8859-1").startsWith("ID3")
                ? 0
                : (((127 & e[6]) << 21) |
                    ((127 & e[7]) << 14) |
                    ((127 & e[8]) << 7) |
                    (127 & e[9])) +
                  e.length
            );
          }
          (this.addVbrFrame = function (t) {
            var e = t.internal_flags,
              n = Tables.bitrate_table[t.version][e.bitrate_index];
            an(null != e.VBR_seek_table.bag), _(e.VBR_seek_table, n);
          }),
            (this.getVbrTag = function (t) {
              var e = new VBRTagData(),
                n = 0;
              e.flags = 0;
              var l = (t[n + 1] >> 3) & 1,
                c = (t[n + 2] >> 2) & 3,
                u = (t[n + 3] >> 6) & 3,
                d = (t[n + 2] >> 4) & 15;
              if (
                ((d = Tables.bitrate_table[l][d]),
                t[n + 1] >> 4 == 14
                  ? (e.samprate = Tables.samplerate_table[2][c])
                  : (e.samprate = Tables.samplerate_table[l][c]),
                !w(t, (n += 0 != l ? (3 != u ? 36 : 21) : 3 != u ? 21 : 13)))
              )
                return null;
              (n += 4), (e.hId = l);
              var h = (e.flags = b(t, n));
              if (
                ((n += 4),
                0 != (h & r) && ((e.frames = b(t, n)), (n += 4)),
                0 != (h & i) && ((e.bytes = b(t, n)), (n += 4)),
                0 != (h & a))
              ) {
                if (null != e.toc)
                  for (var f = 0; f < s; f++) e.toc[f] = t[n + f];
                n += s;
              }
              (e.vbrScale = -1),
                0 != (h & o) && ((e.vbrScale = b(t, n)), (n += 4)),
                (e.headersize = (72e3 * (l + 1) * d) / e.samprate);
              var p = t[(n += 21) + 0] << 4;
              p += t[n + 1] >> 4;
              var m = (15 & t[n + 1]) << 8;
              return (
                (p < 0 || p > 3e3) && (p = -1),
                ((m += 255 & t[n + 2]) < 0 || m > 3e3) && (m = -1),
                (e.encDelay = p),
                (e.encPadding = m),
                e
              );
            }),
            (this.InitVbrTag = function (t) {
              var n,
                r = t.internal_flags;
              (n = 1 == t.version ? u : t.out_samplerate < 16e3 ? h : d),
                t.VBR == tn.vbr_off && (n = t.brate);
              var i = (72e3 * (t.version + 1) * n) / t.out_samplerate,
                a = r.sideinfo_len + c;
              if (((r.VBR_seek_table.TotalFrameSize = i), i < a || i > l))
                t.bWriteVbrTag = !1;
              else {
                (r.VBR_seek_table.nVbrNumFrames = 0),
                  (r.VBR_seek_table.nBytesWritten = 0),
                  (r.VBR_seek_table.sum = 0),
                  (r.VBR_seek_table.seen = 0),
                  (r.VBR_seek_table.want = 1),
                  (r.VBR_seek_table.pos = 0),
                  null == r.VBR_seek_table.bag &&
                    ((r.VBR_seek_table.bag = new int[400]()),
                    (r.VBR_seek_table.size = 400));
                var o = rn(l);
                S(t, o);
                for (var s = r.VBR_seek_table.TotalFrameSize, f = 0; f < s; ++f)
                  e.add_dummy_byte(t, 255 & o[f], 1);
              }
            }),
            (this.updateMusicCRC = function (t, e, n, r) {
              for (var i = 0; i < r; ++i) t[0] = A(e[n + i], t[0]);
            }),
            (this.getLameTagFrame = function (t, n) {
              var l = t.internal_flags;
              if (!t.bWriteVbrTag) return 0;
              if (l.Class_ID != Lame.LAME_ID) return 0;
              if (l.VBR_seek_table.pos <= 0) return 0;
              if (n.length < l.VBR_seek_table.TotalFrameSize)
                return l.VBR_seek_table.TotalFrameSize;
              nn.fill(n, 0, l.VBR_seek_table.TotalFrameSize, 0), S(t, n);
              var c = rn(s);
              if (t.free_format)
                for (var u = 1; u < s; ++u) c[u] = 255 & ((255 * u) / 100);
              else v(l.VBR_seek_table, c);
              var d = l.sideinfo_len;
              t.error_protection && (d -= 2),
                t.VBR == tn.vbr_off
                  ? ((n[d++] = 255 & m.charAt(0)),
                    (n[d++] = 255 & m.charAt(1)),
                    (n[d++] = 255 & m.charAt(2)),
                    (n[d++] = 255 & m.charAt(3)))
                  : ((n[d++] = 255 & p.charAt(0)),
                    (n[d++] = 255 & p.charAt(1)),
                    (n[d++] = 255 & p.charAt(2)),
                    (n[d++] = 255 & p.charAt(3))),
                y(n, d, r + i + a + o),
                y(n, (d += 4), l.VBR_seek_table.nVbrNumFrames),
                (d += 4);
              var h =
                l.VBR_seek_table.nBytesWritten +
                l.VBR_seek_table.TotalFrameSize;
              y(n, d, 0 | h),
                (d += 4),
                Je.arraycopy(c, 0, n, d, c.length),
                (d += c.length),
                t.error_protection && e.CRC_writeheader(l, n);
              var f = 0;
              for (u = 0; u < d; u++) f = A(n[u], f);
              return (d += E(t, h, n, d, f)), l.VBR_seek_table.TotalFrameSize;
            }),
            (this.putVbrTag = function (t, e) {
              if (t.internal_flags.VBR_seek_table.pos <= 0) return -1;
              if ((e.seek(e.length()), 0 == e.length())) return -1;
              var n = k(e);
              e.seek(n);
              var r = rn(l),
                i = getLameTagFrame(t, r);
              return i > r.length ? -1 : (i < 1 || e.write(r, 0, i), 0);
            });
        }
        (on.NUMTOCENTRIES = 100), (on.MAXFRAMESIZE = 2880);
        var sn = on,
          ln = m.new_byte,
          cn = m.assert;
        function un() {
          this.setModules = function (t, e) {};
        }
        function dn() {
          this.setModules = function (t, e, n) {};
        }
        function hn() {}
        function fn() {
          this.setModules = function (t, e) {};
        }
        function pn(t, e, n) {
          3 != arguments.length &&
            (console.error(
              "WARN: Mp3Encoder(channels, samplerate, kbps) not specified"
            ),
            (t = 1),
            (e = 44100),
            (n = 128));
          var r = new Lame(),
            i = new un(),
            a = new GainAnalysis(),
            o = new BitStream(),
            s = new Presets(),
            l = new QuantizePVT(),
            c = new Quantize(),
            u = new sn(),
            d = new Qe(),
            h = new fn(),
            f = new Reservoir(),
            p = new Takehiro(),
            m = new dn(),
            g = new hn();
          r.setModules(a, o, s, l, c, u, d, h, g),
            o.setModules(a, g, d, u),
            h.setModules(o, d),
            s.setModules(r),
            c.setModules(o, f, l, p),
            l.setModules(p, f, r.enc.psy),
            f.setModules(o),
            p.setModules(l),
            u.setModules(r, o, d),
            i.setModules(m, g),
            m.setModules(d, h, s);
          var _ = r.lame_init();
          (_.num_channels = t),
            (_.in_samplerate = e),
            (_.brate = n),
            (_.mode = MPEGMode.STEREO),
            (_.quality = 3),
            (_.bWriteVbrTag = !1),
            (_.disable_reservoir = !0),
            (_.write_id3tag_automatic = !1);
          var v = r.lame_init_params(_);
          cn(0 == v);
          var b = 1152,
            y = 0 | (1.25 * b + 7200),
            x = ln(y);
          (this.encodeBuffer = function (e, n) {
            1 == t && (n = e),
              cn(e.length == n.length),
              e.length > b &&
                ((b = e.length), (x = ln((y = 0 | (1.25 * b + 7200)))));
            var i = r.lame_encode_buffer(_, e, n, e.length, x, 0, y);
            return new Int8Array(x.subarray(0, i));
          }),
            (this.flush = function () {
              var t = r.lame_encode_flush(_, x, 0, y);
              return new Int8Array(x.subarray(0, t));
            });
        }
        function mn() {
          (this.dataOffset = 0),
            (this.dataLen = 0),
            (this.channels = 0),
            (this.sampleRate = 0);
        }
        function gn(t) {
          return (
            (t.charCodeAt(0) << 24) |
            (t.charCodeAt(1) << 16) |
            (t.charCodeAt(2) << 8) |
            t.charCodeAt(3)
          );
        }
        (Lame = Re),
          (Presets = Pe),
          (GainAnalysis = Lt),
          (QuantizePVT = ae),
          (Quantize = qe),
          (Takehiro = de),
          (Reservoir = Ke),
          (MPEGMode = tt),
          (BitStream = be),
          (mn.RIFF = gn("RIFF")),
          (mn.WAVE = gn("WAVE")),
          (mn.fmt_ = gn("fmt ")),
          (mn.data = gn("data")),
          (mn.readHeader = function (t) {
            var e = new mn(),
              n = t.getUint32(0, !1);
            if (
              mn.RIFF == n &&
              (t.getUint32(4, !0),
              mn.WAVE == t.getUint32(8, !1) && mn.fmt_ == t.getUint32(12, !1))
            ) {
              var r = t.getUint32(16, !0),
                i = 20;
              switch (r) {
                case 16:
                case 18:
                  (e.channels = t.getUint16(i + 2, !0)),
                    (e.sampleRate = t.getUint32(i + 4, !0));
                  break;
                default:
                  throw "extended fmt chunk not implemented";
              }
              i += r;
              for (
                var a = mn.data, o = 0;
                a != n &&
                ((n = t.getUint32(i, !1)),
                (o = t.getUint32(i + 4, !0)),
                a != n);

              )
                i += o + 8;
              return (e.dataLen = o), (e.dataOffset = i + 8), e;
            }
          });
        var _n = pn,
          vn = function (t, e) {
            if (!(t instanceof e))
              throw new TypeError("Cannot call a class as a function");
          },
          bn = (function () {
            function t(t, e) {
              for (var n = 0; n < e.length; n++) {
                var r = e[n];
                (r.enumerable = r.enumerable || !1),
                  (r.configurable = !0),
                  "value" in r && (r.writable = !0),
                  Object.defineProperty(t, r.key, r);
              }
            }
            return function (e, n, r) {
              return n && t(e.prototype, n), r && t(e, r), e;
            };
          })(),
          yn = (function () {
            function t(e) {
              vn(this, t),
                (this.config = { sampleRate: 44100, bitRate: 128 }),
                Object.assign(this.config, e),
                (this.mp3Encoder = new _n(
                  1,
                  this.config.sampleRate,
                  this.config.bitRate
                )),
                (this.maxSamples = 1152),
                (this.samplesMono = null),
                this.clearBuffer();
            }
            return (
              bn(t, [
                {
                  key: "clearBuffer",
                  value: function () {
                    this.dataBuffer = [];
                  },
                },
                {
                  key: "appendToBuffer",
                  value: function (t) {
                    this.dataBuffer.push(new Int8Array(t));
                  },
                },
                {
                  key: "floatTo16BitPCM",
                  value: function (t, e) {
                    for (var n = 0; n < t.length; n++) {
                      var r = Math.max(-1, Math.min(1, t[n]));
                      e[n] = r < 0 ? 32768 * r : 32767 * r;
                    }
                  },
                },
                {
                  key: "convertBuffer",
                  value: function (t) {
                    var e = new Float32Array(t),
                      n = new Int16Array(t.length);
                    return this.floatTo16BitPCM(e, n), n;
                  },
                },
                {
                  key: "encode",
                  value: function (t) {
                    this.samplesMono = this.convertBuffer(t);
                    for (
                      var e = this.samplesMono.length, n = 0;
                      e >= 0;
                      n += this.maxSamples
                    ) {
                      var r = this.samplesMono.subarray(n, n + this.maxSamples),
                        i = this.mp3Encoder.encodeBuffer(r);
                      this.appendToBuffer(i), (e -= this.maxSamples);
                    }
                  },
                },
                {
                  key: "finish",
                  value: function () {
                    return (
                      this.appendToBuffer(this.mp3Encoder.flush()),
                      this.dataBuffer
                    );
                  },
                },
              ]),
              t
            );
          })();
        return (function () {
          function t(e) {
            vn(this, t),
              (this.config = {
                bitRate: 128,
                startRecordingAt: 300,
                deviceId: null,
              }),
              (this.activeStream = null),
              (this.context = null),
              (this.microphone = null),
              (this.processor = null),
              (this.startTime = 0),
              Object.assign(this.config, e);
          }
          return (
            bn(t, [
              {
                key: "addMicrophoneListener",
                value: function (t) {
                  var e = this;
                  (this.activeStream = t),
                    (this.timerToStart = setTimeout(function () {
                      delete e.timerToStart;
                    }, this.config.startRecordingAt)),
                    (this.microphone = this.context.createMediaStreamSource(t)),
                    (this.processor = this.context.createScriptProcessor(
                      0,
                      1,
                      1
                    )),
                    (this.processor.onaudioprocess = function (t) {
                      e.timerToStart ||
                        e.lameEncoder.encode(t.inputBuffer.getChannelData(0));
                    }),
                    this.microphone.connect(this.processor),
                    this.processor.connect(this.context.destination);
                },
              },
              {
                key: "stop",
                value: function () {
                  return (
                    this.processor &&
                      this.microphone &&
                      (this.microphone.disconnect(),
                      this.processor.disconnect(),
                      this.context &&
                        "closed" !== this.context.state &&
                        this.context.close(),
                      (this.processor.onaudioprocess = null),
                      this.activeStream.getAudioTracks().forEach(function (t) {
                        return t.stop();
                      })),
                    this
                  );
                },
              },
              {
                key: "start",
                value: function () {
                  var t = this,
                    e = window.AudioContext || window.webkitAudioContext;
                  (this.context = new e()),
                    (this.config.sampleRate = this.context.sampleRate),
                    (this.lameEncoder = new yn(this.config));
                  var n = !this.config.deviceId || {
                    deviceId: { exact: this.config.deviceId },
                  };
                  return new Promise(function (e, r) {
                    navigator.mediaDevices
                      .getUserMedia({ audio: n })
                      .then(function (n) {
                        t.addMicrophoneListener(n), e(n);
                      })
                      .catch(function (t) {
                        r(t);
                      });
                  });
                },
              },
              {
                key: "getMp3",
                value: function () {
                  var t = this,
                    e = this.lameEncoder.finish();
                  return new Promise(function (n, r) {
                    0 === e.length
                      ? r(new Error("No buffer to send"))
                      : (n([e, new Blob(e, { type: "audio/mp3" })]),
                        t.lameEncoder.clearBuffer());
                  });
                },
              },
            ]),
            t
          );
        })();
      })();
    },
    2426: function (t, e, n) {
      (t = n.nmd(t)).exports = (function () {
        "use strict";
        var e, n;
        function r() {
          return e.apply(null, arguments);
        }
        function i(t) {
          e = t;
        }
        function a(t) {
          return (
            t instanceof Array ||
            "[object Array]" === Object.prototype.toString.call(t)
          );
        }
        function o(t) {
          return (
            null != t && "[object Object]" === Object.prototype.toString.call(t)
          );
        }
        function s(t, e) {
          return Object.prototype.hasOwnProperty.call(t, e);
        }
        function l(t) {
          if (Object.getOwnPropertyNames)
            return 0 === Object.getOwnPropertyNames(t).length;
          var e;
          for (e in t) if (s(t, e)) return !1;
          return !0;
        }
        function c(t) {
          return void 0 === t;
        }
        function u(t) {
          return (
            "number" === typeof t ||
            "[object Number]" === Object.prototype.toString.call(t)
          );
        }
        function d(t) {
          return (
            t instanceof Date ||
            "[object Date]" === Object.prototype.toString.call(t)
          );
        }
        function h(t, e) {
          var n,
            r = [],
            i = t.length;
          for (n = 0; n < i; ++n) r.push(e(t[n], n));
          return r;
        }
        function f(t, e) {
          for (var n in e) s(e, n) && (t[n] = e[n]);
          return (
            s(e, "toString") && (t.toString = e.toString),
            s(e, "valueOf") && (t.valueOf = e.valueOf),
            t
          );
        }
        function p(t, e, n, r) {
          return Xn(t, e, n, r, !0).utc();
        }
        function m() {
          return {
            empty: !1,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: !1,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: !1,
            userInvalidated: !1,
            iso: !1,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: !1,
            weekdayMismatch: !1,
          };
        }
        function g(t) {
          return null == t._pf && (t._pf = m()), t._pf;
        }
        function _(t) {
          if (null == t._isValid) {
            var e = g(t),
              r = n.call(e.parsedDateParts, function (t) {
                return null != t;
              }),
              i =
                !isNaN(t._d.getTime()) &&
                e.overflow < 0 &&
                !e.empty &&
                !e.invalidEra &&
                !e.invalidMonth &&
                !e.invalidWeekday &&
                !e.weekdayMismatch &&
                !e.nullInput &&
                !e.invalidFormat &&
                !e.userInvalidated &&
                (!e.meridiem || (e.meridiem && r));
            if (
              (t._strict &&
                (i =
                  i &&
                  0 === e.charsLeftOver &&
                  0 === e.unusedTokens.length &&
                  void 0 === e.bigHour),
              null != Object.isFrozen && Object.isFrozen(t))
            )
              return i;
            t._isValid = i;
          }
          return t._isValid;
        }
        function v(t) {
          var e = p(NaN);
          return null != t ? f(g(e), t) : (g(e).userInvalidated = !0), e;
        }
        n = Array.prototype.some
          ? Array.prototype.some
          : function (t) {
              var e,
                n = Object(this),
                r = n.length >>> 0;
              for (e = 0; e < r; e++)
                if (e in n && t.call(this, n[e], e, n)) return !0;
              return !1;
            };
        var b = (r.momentProperties = []),
          y = !1;
        function x(t, e) {
          var n,
            r,
            i,
            a = b.length;
          if (
            (c(e._isAMomentObject) || (t._isAMomentObject = e._isAMomentObject),
            c(e._i) || (t._i = e._i),
            c(e._f) || (t._f = e._f),
            c(e._l) || (t._l = e._l),
            c(e._strict) || (t._strict = e._strict),
            c(e._tzm) || (t._tzm = e._tzm),
            c(e._isUTC) || (t._isUTC = e._isUTC),
            c(e._offset) || (t._offset = e._offset),
            c(e._pf) || (t._pf = g(e)),
            c(e._locale) || (t._locale = e._locale),
            a > 0)
          )
            for (n = 0; n < a; n++) c((i = e[(r = b[n])])) || (t[r] = i);
          return t;
        }
        function w(t) {
          x(this, t),
            (this._d = new Date(null != t._d ? t._d.getTime() : NaN)),
            this.isValid() || (this._d = new Date(NaN)),
            !1 === y && ((y = !0), r.updateOffset(this), (y = !1));
        }
        function M(t) {
          return t instanceof w || (null != t && null != t._isAMomentObject);
        }
        function S(t) {
          !1 === r.suppressDeprecationWarnings &&
            "undefined" !== typeof console &&
            console.warn &&
            console.warn("Deprecation warning: " + t);
        }
        function A(t, e) {
          var n = !0;
          return f(function () {
            if (
              (null != r.deprecationHandler && r.deprecationHandler(null, t), n)
            ) {
              var i,
                a,
                o,
                l = [],
                c = arguments.length;
              for (a = 0; a < c; a++) {
                if (((i = ""), "object" === typeof arguments[a])) {
                  for (o in ((i += "\n[" + a + "] "), arguments[0]))
                    s(arguments[0], o) &&
                      (i += o + ": " + arguments[0][o] + ", ");
                  i = i.slice(0, -2);
                } else i = arguments[a];
                l.push(i);
              }
              S(
                t +
                  "\nArguments: " +
                  Array.prototype.slice.call(l).join("") +
                  "\n" +
                  new Error().stack
              ),
                (n = !1);
            }
            return e.apply(this, arguments);
          }, e);
        }
        var E,
          k = {};
        function R(t, e) {
          null != r.deprecationHandler && r.deprecationHandler(t, e),
            k[t] || (S(e), (k[t] = !0));
        }
        function T(t) {
          return (
            ("undefined" !== typeof Function && t instanceof Function) ||
            "[object Function]" === Object.prototype.toString.call(t)
          );
        }
        function O(t) {
          var e, n;
          for (n in t)
            s(t, n) && (T((e = t[n])) ? (this[n] = e) : (this["_" + n] = e));
          (this._config = t),
            (this._dayOfMonthOrdinalParseLenient = new RegExp(
              (this._dayOfMonthOrdinalParse.source ||
                this._ordinalParse.source) +
                "|" +
                /\d{1,2}/.source
            ));
        }
        function P(t, e) {
          var n,
            r = f({}, t);
          for (n in e)
            s(e, n) &&
              (o(t[n]) && o(e[n])
                ? ((r[n] = {}), f(r[n], t[n]), f(r[n], e[n]))
                : null != e[n]
                ? (r[n] = e[n])
                : delete r[n]);
          for (n in t) s(t, n) && !s(e, n) && o(t[n]) && (r[n] = f({}, r[n]));
          return r;
        }
        function C(t) {
          null != t && this.set(t);
        }
        (r.suppressDeprecationWarnings = !1),
          (r.deprecationHandler = null),
          (E = Object.keys
            ? Object.keys
            : function (t) {
                var e,
                  n = [];
                for (e in t) s(t, e) && n.push(e);
                return n;
              });
        var D = {
          sameDay: "[Today at] LT",
          nextDay: "[Tomorrow at] LT",
          nextWeek: "dddd [at] LT",
          lastDay: "[Yesterday at] LT",
          lastWeek: "[Last] dddd [at] LT",
          sameElse: "L",
        };
        function I(t, e, n) {
          var r = this._calendar[t] || this._calendar.sameElse;
          return T(r) ? r.call(e, n) : r;
        }
        function B(t, e, n) {
          var r = "" + Math.abs(t),
            i = e - r.length;
          return (
            (t >= 0 ? (n ? "+" : "") : "-") +
            Math.pow(10, Math.max(0, i)).toString().substr(1) +
            r
          );
        }
        var N =
            /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
          L = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
          V = {},
          F = {};
        function H(t, e, n, r) {
          var i = r;
          "string" === typeof r &&
            (i = function () {
              return this[r]();
            }),
            t && (F[t] = i),
            e &&
              (F[e[0]] = function () {
                return B(i.apply(this, arguments), e[1], e[2]);
              }),
            n &&
              (F[n] = function () {
                return this.localeData().ordinal(i.apply(this, arguments), t);
              });
        }
        function j(t) {
          return t.match(/\[[\s\S]/)
            ? t.replace(/^\[|\]$/g, "")
            : t.replace(/\\/g, "");
        }
        function Y(t) {
          var e,
            n,
            r = t.match(N);
          for (e = 0, n = r.length; e < n; e++)
            F[r[e]] ? (r[e] = F[r[e]]) : (r[e] = j(r[e]));
          return function (e) {
            var i,
              a = "";
            for (i = 0; i < n; i++) a += T(r[i]) ? r[i].call(e, t) : r[i];
            return a;
          };
        }
        function W(t, e) {
          return t.isValid()
            ? ((e = U(e, t.localeData())), (V[e] = V[e] || Y(e)), V[e](t))
            : t.localeData().invalidDate();
        }
        function U(t, e) {
          var n = 5;
          function r(t) {
            return e.longDateFormat(t) || t;
          }
          for (L.lastIndex = 0; n >= 0 && L.test(t); )
            (t = t.replace(L, r)), (L.lastIndex = 0), (n -= 1);
          return t;
        }
        var z = {
          LTS: "h:mm:ss A",
          LT: "h:mm A",
          L: "MM/DD/YYYY",
          LL: "MMMM D, YYYY",
          LLL: "MMMM D, YYYY h:mm A",
          LLLL: "dddd, MMMM D, YYYY h:mm A",
        };
        function G(t) {
          var e = this._longDateFormat[t],
            n = this._longDateFormat[t.toUpperCase()];
          return e || !n
            ? e
            : ((this._longDateFormat[t] = n
                .match(N)
                .map(function (t) {
                  return "MMMM" === t ||
                    "MM" === t ||
                    "DD" === t ||
                    "dddd" === t
                    ? t.slice(1)
                    : t;
                })
                .join("")),
              this._longDateFormat[t]);
        }
        var q = "Invalid date";
        function X() {
          return this._invalidDate;
        }
        var Z = "%d",
          K = /\d{1,2}/;
        function $(t) {
          return this._ordinal.replace("%d", t);
        }
        var Q = {
          future: "in %s",
          past: "%s ago",
          s: "a few seconds",
          ss: "%d seconds",
          m: "a minute",
          mm: "%d minutes",
          h: "an hour",
          hh: "%d hours",
          d: "a day",
          dd: "%d days",
          w: "a week",
          ww: "%d weeks",
          M: "a month",
          MM: "%d months",
          y: "a year",
          yy: "%d years",
        };
        function J(t, e, n, r) {
          var i = this._relativeTime[n];
          return T(i) ? i(t, e, n, r) : i.replace(/%d/i, t);
        }
        function tt(t, e) {
          var n = this._relativeTime[t > 0 ? "future" : "past"];
          return T(n) ? n(e) : n.replace(/%s/i, e);
        }
        var et = {};
        function nt(t, e) {
          var n = t.toLowerCase();
          et[n] = et[n + "s"] = et[e] = t;
        }
        function rt(t) {
          return "string" === typeof t ? et[t] || et[t.toLowerCase()] : void 0;
        }
        function it(t) {
          var e,
            n,
            r = {};
          for (n in t) s(t, n) && (e = rt(n)) && (r[e] = t[n]);
          return r;
        }
        var at = {};
        function ot(t, e) {
          at[t] = e;
        }
        function st(t) {
          var e,
            n = [];
          for (e in t) s(t, e) && n.push({ unit: e, priority: at[e] });
          return (
            n.sort(function (t, e) {
              return t.priority - e.priority;
            }),
            n
          );
        }
        function lt(t) {
          return (t % 4 === 0 && t % 100 !== 0) || t % 400 === 0;
        }
        function ct(t) {
          return t < 0 ? Math.ceil(t) || 0 : Math.floor(t);
        }
        function ut(t) {
          var e = +t,
            n = 0;
          return 0 !== e && isFinite(e) && (n = ct(e)), n;
        }
        function dt(t, e) {
          return function (n) {
            return null != n
              ? (ft(this, t, n), r.updateOffset(this, e), this)
              : ht(this, t);
          };
        }
        function ht(t, e) {
          return t.isValid()
            ? t._d["get" + (t._isUTC ? "UTC" : "") + e]()
            : NaN;
        }
        function ft(t, e, n) {
          t.isValid() &&
            !isNaN(n) &&
            ("FullYear" === e &&
            lt(t.year()) &&
            1 === t.month() &&
            29 === t.date()
              ? ((n = ut(n)),
                t._d["set" + (t._isUTC ? "UTC" : "") + e](
                  n,
                  t.month(),
                  Jt(n, t.month())
                ))
              : t._d["set" + (t._isUTC ? "UTC" : "") + e](n));
        }
        function pt(t) {
          return T(this[(t = rt(t))]) ? this[t]() : this;
        }
        function mt(t, e) {
          if ("object" === typeof t) {
            var n,
              r = st((t = it(t))),
              i = r.length;
            for (n = 0; n < i; n++) this[r[n].unit](t[r[n].unit]);
          } else if (T(this[(t = rt(t))])) return this[t](e);
          return this;
        }
        var gt,
          _t = /\d/,
          vt = /\d\d/,
          bt = /\d{3}/,
          yt = /\d{4}/,
          xt = /[+-]?\d{6}/,
          wt = /\d\d?/,
          Mt = /\d\d\d\d?/,
          St = /\d\d\d\d\d\d?/,
          At = /\d{1,3}/,
          Et = /\d{1,4}/,
          kt = /[+-]?\d{1,6}/,
          Rt = /\d+/,
          Tt = /[+-]?\d+/,
          Ot = /Z|[+-]\d\d:?\d\d/gi,
          Pt = /Z|[+-]\d\d(?::?\d\d)?/gi,
          Ct = /[+-]?\d+(\.\d{1,3})?/,
          Dt =
            /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
        function It(t, e, n) {
          gt[t] = T(e)
            ? e
            : function (t, r) {
                return t && n ? n : e;
              };
        }
        function Bt(t, e) {
          return s(gt, t) ? gt[t](e._strict, e._locale) : new RegExp(Nt(t));
        }
        function Nt(t) {
          return Lt(
            t
              .replace("\\", "")
              .replace(
                /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
                function (t, e, n, r, i) {
                  return e || n || r || i;
                }
              )
          );
        }
        function Lt(t) {
          return t.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
        }
        gt = {};
        var Vt = {};
        function Ft(t, e) {
          var n,
            r,
            i = e;
          for (
            "string" === typeof t && (t = [t]),
              u(e) &&
                (i = function (t, n) {
                  n[e] = ut(t);
                }),
              r = t.length,
              n = 0;
            n < r;
            n++
          )
            Vt[t[n]] = i;
        }
        function Ht(t, e) {
          Ft(t, function (t, n, r, i) {
            (r._w = r._w || {}), e(t, r._w, r, i);
          });
        }
        function jt(t, e, n) {
          null != e && s(Vt, t) && Vt[t](e, n._a, n, t);
        }
        var Yt,
          Wt = 0,
          Ut = 1,
          zt = 2,
          Gt = 3,
          qt = 4,
          Xt = 5,
          Zt = 6,
          Kt = 7,
          $t = 8;
        function Qt(t, e) {
          return ((t % e) + e) % e;
        }
        function Jt(t, e) {
          if (isNaN(t) || isNaN(e)) return NaN;
          var n = Qt(e, 12);
          return (
            (t += (e - n) / 12),
            1 === n ? (lt(t) ? 29 : 28) : 31 - ((n % 7) % 2)
          );
        }
        (Yt = Array.prototype.indexOf
          ? Array.prototype.indexOf
          : function (t) {
              var e;
              for (e = 0; e < this.length; ++e) if (this[e] === t) return e;
              return -1;
            }),
          H("M", ["MM", 2], "Mo", function () {
            return this.month() + 1;
          }),
          H("MMM", 0, 0, function (t) {
            return this.localeData().monthsShort(this, t);
          }),
          H("MMMM", 0, 0, function (t) {
            return this.localeData().months(this, t);
          }),
          nt("month", "M"),
          ot("month", 8),
          It("M", wt),
          It("MM", wt, vt),
          It("MMM", function (t, e) {
            return e.monthsShortRegex(t);
          }),
          It("MMMM", function (t, e) {
            return e.monthsRegex(t);
          }),
          Ft(["M", "MM"], function (t, e) {
            e[Ut] = ut(t) - 1;
          }),
          Ft(["MMM", "MMMM"], function (t, e, n, r) {
            var i = n._locale.monthsParse(t, r, n._strict);
            null != i ? (e[Ut] = i) : (g(n).invalidMonth = t);
          });
        var te =
            "January_February_March_April_May_June_July_August_September_October_November_December".split(
              "_"
            ),
          ee = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
          ne = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
          re = Dt,
          ie = Dt;
        function ae(t, e) {
          return t
            ? a(this._months)
              ? this._months[t.month()]
              : this._months[
                  (this._months.isFormat || ne).test(e)
                    ? "format"
                    : "standalone"
                ][t.month()]
            : a(this._months)
            ? this._months
            : this._months.standalone;
        }
        function oe(t, e) {
          return t
            ? a(this._monthsShort)
              ? this._monthsShort[t.month()]
              : this._monthsShort[ne.test(e) ? "format" : "standalone"][
                  t.month()
                ]
            : a(this._monthsShort)
            ? this._monthsShort
            : this._monthsShort.standalone;
        }
        function se(t, e, n) {
          var r,
            i,
            a,
            o = t.toLocaleLowerCase();
          if (!this._monthsParse)
            for (
              this._monthsParse = [],
                this._longMonthsParse = [],
                this._shortMonthsParse = [],
                r = 0;
              r < 12;
              ++r
            )
              (a = p([2e3, r])),
                (this._shortMonthsParse[r] = this.monthsShort(
                  a,
                  ""
                ).toLocaleLowerCase()),
                (this._longMonthsParse[r] = this.months(
                  a,
                  ""
                ).toLocaleLowerCase());
          return n
            ? "MMM" === e
              ? -1 !== (i = Yt.call(this._shortMonthsParse, o))
                ? i
                : null
              : -1 !== (i = Yt.call(this._longMonthsParse, o))
              ? i
              : null
            : "MMM" === e
            ? -1 !== (i = Yt.call(this._shortMonthsParse, o)) ||
              -1 !== (i = Yt.call(this._longMonthsParse, o))
              ? i
              : null
            : -1 !== (i = Yt.call(this._longMonthsParse, o)) ||
              -1 !== (i = Yt.call(this._shortMonthsParse, o))
            ? i
            : null;
        }
        function le(t, e, n) {
          var r, i, a;
          if (this._monthsParseExact) return se.call(this, t, e, n);
          for (
            this._monthsParse ||
              ((this._monthsParse = []),
              (this._longMonthsParse = []),
              (this._shortMonthsParse = [])),
              r = 0;
            r < 12;
            r++
          ) {
            if (
              ((i = p([2e3, r])),
              n &&
                !this._longMonthsParse[r] &&
                ((this._longMonthsParse[r] = new RegExp(
                  "^" + this.months(i, "").replace(".", "") + "$",
                  "i"
                )),
                (this._shortMonthsParse[r] = new RegExp(
                  "^" + this.monthsShort(i, "").replace(".", "") + "$",
                  "i"
                ))),
              n ||
                this._monthsParse[r] ||
                ((a =
                  "^" + this.months(i, "") + "|^" + this.monthsShort(i, "")),
                (this._monthsParse[r] = new RegExp(a.replace(".", ""), "i"))),
              n && "MMMM" === e && this._longMonthsParse[r].test(t))
            )
              return r;
            if (n && "MMM" === e && this._shortMonthsParse[r].test(t)) return r;
            if (!n && this._monthsParse[r].test(t)) return r;
          }
        }
        function ce(t, e) {
          var n;
          if (!t.isValid()) return t;
          if ("string" === typeof e)
            if (/^\d+$/.test(e)) e = ut(e);
            else if (!u((e = t.localeData().monthsParse(e)))) return t;
          return (
            (n = Math.min(t.date(), Jt(t.year(), e))),
            t._d["set" + (t._isUTC ? "UTC" : "") + "Month"](e, n),
            t
          );
        }
        function ue(t) {
          return null != t
            ? (ce(this, t), r.updateOffset(this, !0), this)
            : ht(this, "Month");
        }
        function de() {
          return Jt(this.year(), this.month());
        }
        function he(t) {
          return this._monthsParseExact
            ? (s(this, "_monthsRegex") || pe.call(this),
              t ? this._monthsShortStrictRegex : this._monthsShortRegex)
            : (s(this, "_monthsShortRegex") || (this._monthsShortRegex = re),
              this._monthsShortStrictRegex && t
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex);
        }
        function fe(t) {
          return this._monthsParseExact
            ? (s(this, "_monthsRegex") || pe.call(this),
              t ? this._monthsStrictRegex : this._monthsRegex)
            : (s(this, "_monthsRegex") || (this._monthsRegex = ie),
              this._monthsStrictRegex && t
                ? this._monthsStrictRegex
                : this._monthsRegex);
        }
        function pe() {
          function t(t, e) {
            return e.length - t.length;
          }
          var e,
            n,
            r = [],
            i = [],
            a = [];
          for (e = 0; e < 12; e++)
            (n = p([2e3, e])),
              r.push(this.monthsShort(n, "")),
              i.push(this.months(n, "")),
              a.push(this.months(n, "")),
              a.push(this.monthsShort(n, ""));
          for (r.sort(t), i.sort(t), a.sort(t), e = 0; e < 12; e++)
            (r[e] = Lt(r[e])), (i[e] = Lt(i[e]));
          for (e = 0; e < 24; e++) a[e] = Lt(a[e]);
          (this._monthsRegex = new RegExp("^(" + a.join("|") + ")", "i")),
            (this._monthsShortRegex = this._monthsRegex),
            (this._monthsStrictRegex = new RegExp(
              "^(" + i.join("|") + ")",
              "i"
            )),
            (this._monthsShortStrictRegex = new RegExp(
              "^(" + r.join("|") + ")",
              "i"
            ));
        }
        function me(t) {
          return lt(t) ? 366 : 365;
        }
        H("Y", 0, 0, function () {
          var t = this.year();
          return t <= 9999 ? B(t, 4) : "+" + t;
        }),
          H(0, ["YY", 2], 0, function () {
            return this.year() % 100;
          }),
          H(0, ["YYYY", 4], 0, "year"),
          H(0, ["YYYYY", 5], 0, "year"),
          H(0, ["YYYYYY", 6, !0], 0, "year"),
          nt("year", "y"),
          ot("year", 1),
          It("Y", Tt),
          It("YY", wt, vt),
          It("YYYY", Et, yt),
          It("YYYYY", kt, xt),
          It("YYYYYY", kt, xt),
          Ft(["YYYYY", "YYYYYY"], Wt),
          Ft("YYYY", function (t, e) {
            e[Wt] = 2 === t.length ? r.parseTwoDigitYear(t) : ut(t);
          }),
          Ft("YY", function (t, e) {
            e[Wt] = r.parseTwoDigitYear(t);
          }),
          Ft("Y", function (t, e) {
            e[Wt] = parseInt(t, 10);
          }),
          (r.parseTwoDigitYear = function (t) {
            return ut(t) + (ut(t) > 68 ? 1900 : 2e3);
          });
        var ge = dt("FullYear", !0);
        function _e() {
          return lt(this.year());
        }
        function ve(t, e, n, r, i, a, o) {
          var s;
          return (
            t < 100 && t >= 0
              ? ((s = new Date(t + 400, e, n, r, i, a, o)),
                isFinite(s.getFullYear()) && s.setFullYear(t))
              : (s = new Date(t, e, n, r, i, a, o)),
            s
          );
        }
        function be(t) {
          var e, n;
          return (
            t < 100 && t >= 0
              ? (((n = Array.prototype.slice.call(arguments))[0] = t + 400),
                (e = new Date(Date.UTC.apply(null, n))),
                isFinite(e.getUTCFullYear()) && e.setUTCFullYear(t))
              : (e = new Date(Date.UTC.apply(null, arguments))),
            e
          );
        }
        function ye(t, e, n) {
          var r = 7 + e - n;
          return (-(7 + be(t, 0, r).getUTCDay() - e) % 7) + r - 1;
        }
        function xe(t, e, n, r, i) {
          var a,
            o,
            s = 1 + 7 * (e - 1) + ((7 + n - r) % 7) + ye(t, r, i);
          return (
            s <= 0
              ? (o = me((a = t - 1)) + s)
              : s > me(t)
              ? ((a = t + 1), (o = s - me(t)))
              : ((a = t), (o = s)),
            { year: a, dayOfYear: o }
          );
        }
        function we(t, e, n) {
          var r,
            i,
            a = ye(t.year(), e, n),
            o = Math.floor((t.dayOfYear() - a - 1) / 7) + 1;
          return (
            o < 1
              ? (r = o + Me((i = t.year() - 1), e, n))
              : o > Me(t.year(), e, n)
              ? ((r = o - Me(t.year(), e, n)), (i = t.year() + 1))
              : ((i = t.year()), (r = o)),
            { week: r, year: i }
          );
        }
        function Me(t, e, n) {
          var r = ye(t, e, n),
            i = ye(t + 1, e, n);
          return (me(t) - r + i) / 7;
        }
        function Se(t) {
          return we(t, this._week.dow, this._week.doy).week;
        }
        H("w", ["ww", 2], "wo", "week"),
          H("W", ["WW", 2], "Wo", "isoWeek"),
          nt("week", "w"),
          nt("isoWeek", "W"),
          ot("week", 5),
          ot("isoWeek", 5),
          It("w", wt),
          It("ww", wt, vt),
          It("W", wt),
          It("WW", wt, vt),
          Ht(["w", "ww", "W", "WW"], function (t, e, n, r) {
            e[r.substr(0, 1)] = ut(t);
          });
        var Ae = { dow: 0, doy: 6 };
        function Ee() {
          return this._week.dow;
        }
        function ke() {
          return this._week.doy;
        }
        function Re(t) {
          var e = this.localeData().week(this);
          return null == t ? e : this.add(7 * (t - e), "d");
        }
        function Te(t) {
          var e = we(this, 1, 4).week;
          return null == t ? e : this.add(7 * (t - e), "d");
        }
        function Oe(t, e) {
          return "string" !== typeof t
            ? t
            : isNaN(t)
            ? "number" === typeof (t = e.weekdaysParse(t))
              ? t
              : null
            : parseInt(t, 10);
        }
        function Pe(t, e) {
          return "string" === typeof t
            ? e.weekdaysParse(t) % 7 || 7
            : isNaN(t)
            ? null
            : t;
        }
        function Ce(t, e) {
          return t.slice(e, 7).concat(t.slice(0, e));
        }
        H("d", 0, "do", "day"),
          H("dd", 0, 0, function (t) {
            return this.localeData().weekdaysMin(this, t);
          }),
          H("ddd", 0, 0, function (t) {
            return this.localeData().weekdaysShort(this, t);
          }),
          H("dddd", 0, 0, function (t) {
            return this.localeData().weekdays(this, t);
          }),
          H("e", 0, 0, "weekday"),
          H("E", 0, 0, "isoWeekday"),
          nt("day", "d"),
          nt("weekday", "e"),
          nt("isoWeekday", "E"),
          ot("day", 11),
          ot("weekday", 11),
          ot("isoWeekday", 11),
          It("d", wt),
          It("e", wt),
          It("E", wt),
          It("dd", function (t, e) {
            return e.weekdaysMinRegex(t);
          }),
          It("ddd", function (t, e) {
            return e.weekdaysShortRegex(t);
          }),
          It("dddd", function (t, e) {
            return e.weekdaysRegex(t);
          }),
          Ht(["dd", "ddd", "dddd"], function (t, e, n, r) {
            var i = n._locale.weekdaysParse(t, r, n._strict);
            null != i ? (e.d = i) : (g(n).invalidWeekday = t);
          }),
          Ht(["d", "e", "E"], function (t, e, n, r) {
            e[r] = ut(t);
          });
        var De =
            "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
              "_"
            ),
          Ie = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
          Be = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
          Ne = Dt,
          Le = Dt,
          Ve = Dt;
        function Fe(t, e) {
          var n = a(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                t && !0 !== t && this._weekdays.isFormat.test(e)
                  ? "format"
                  : "standalone"
              ];
          return !0 === t ? Ce(n, this._week.dow) : t ? n[t.day()] : n;
        }
        function He(t) {
          return !0 === t
            ? Ce(this._weekdaysShort, this._week.dow)
            : t
            ? this._weekdaysShort[t.day()]
            : this._weekdaysShort;
        }
        function je(t) {
          return !0 === t
            ? Ce(this._weekdaysMin, this._week.dow)
            : t
            ? this._weekdaysMin[t.day()]
            : this._weekdaysMin;
        }
        function Ye(t, e, n) {
          var r,
            i,
            a,
            o = t.toLocaleLowerCase();
          if (!this._weekdaysParse)
            for (
              this._weekdaysParse = [],
                this._shortWeekdaysParse = [],
                this._minWeekdaysParse = [],
                r = 0;
              r < 7;
              ++r
            )
              (a = p([2e3, 1]).day(r)),
                (this._minWeekdaysParse[r] = this.weekdaysMin(
                  a,
                  ""
                ).toLocaleLowerCase()),
                (this._shortWeekdaysParse[r] = this.weekdaysShort(
                  a,
                  ""
                ).toLocaleLowerCase()),
                (this._weekdaysParse[r] = this.weekdays(
                  a,
                  ""
                ).toLocaleLowerCase());
          return n
            ? "dddd" === e
              ? -1 !== (i = Yt.call(this._weekdaysParse, o))
                ? i
                : null
              : "ddd" === e
              ? -1 !== (i = Yt.call(this._shortWeekdaysParse, o))
                ? i
                : null
              : -1 !== (i = Yt.call(this._minWeekdaysParse, o))
              ? i
              : null
            : "dddd" === e
            ? -1 !== (i = Yt.call(this._weekdaysParse, o)) ||
              -1 !== (i = Yt.call(this._shortWeekdaysParse, o)) ||
              -1 !== (i = Yt.call(this._minWeekdaysParse, o))
              ? i
              : null
            : "ddd" === e
            ? -1 !== (i = Yt.call(this._shortWeekdaysParse, o)) ||
              -1 !== (i = Yt.call(this._weekdaysParse, o)) ||
              -1 !== (i = Yt.call(this._minWeekdaysParse, o))
              ? i
              : null
            : -1 !== (i = Yt.call(this._minWeekdaysParse, o)) ||
              -1 !== (i = Yt.call(this._weekdaysParse, o)) ||
              -1 !== (i = Yt.call(this._shortWeekdaysParse, o))
            ? i
            : null;
        }
        function We(t, e, n) {
          var r, i, a;
          if (this._weekdaysParseExact) return Ye.call(this, t, e, n);
          for (
            this._weekdaysParse ||
              ((this._weekdaysParse = []),
              (this._minWeekdaysParse = []),
              (this._shortWeekdaysParse = []),
              (this._fullWeekdaysParse = [])),
              r = 0;
            r < 7;
            r++
          ) {
            if (
              ((i = p([2e3, 1]).day(r)),
              n &&
                !this._fullWeekdaysParse[r] &&
                ((this._fullWeekdaysParse[r] = new RegExp(
                  "^" + this.weekdays(i, "").replace(".", "\\.?") + "$",
                  "i"
                )),
                (this._shortWeekdaysParse[r] = new RegExp(
                  "^" + this.weekdaysShort(i, "").replace(".", "\\.?") + "$",
                  "i"
                )),
                (this._minWeekdaysParse[r] = new RegExp(
                  "^" + this.weekdaysMin(i, "").replace(".", "\\.?") + "$",
                  "i"
                ))),
              this._weekdaysParse[r] ||
                ((a =
                  "^" +
                  this.weekdays(i, "") +
                  "|^" +
                  this.weekdaysShort(i, "") +
                  "|^" +
                  this.weekdaysMin(i, "")),
                (this._weekdaysParse[r] = new RegExp(a.replace(".", ""), "i"))),
              n && "dddd" === e && this._fullWeekdaysParse[r].test(t))
            )
              return r;
            if (n && "ddd" === e && this._shortWeekdaysParse[r].test(t))
              return r;
            if (n && "dd" === e && this._minWeekdaysParse[r].test(t)) return r;
            if (!n && this._weekdaysParse[r].test(t)) return r;
          }
        }
        function Ue(t) {
          if (!this.isValid()) return null != t ? this : NaN;
          var e = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
          return null != t
            ? ((t = Oe(t, this.localeData())), this.add(t - e, "d"))
            : e;
        }
        function ze(t) {
          if (!this.isValid()) return null != t ? this : NaN;
          var e = (this.day() + 7 - this.localeData()._week.dow) % 7;
          return null == t ? e : this.add(t - e, "d");
        }
        function Ge(t) {
          if (!this.isValid()) return null != t ? this : NaN;
          if (null != t) {
            var e = Pe(t, this.localeData());
            return this.day(this.day() % 7 ? e : e - 7);
          }
          return this.day() || 7;
        }
        function qe(t) {
          return this._weekdaysParseExact
            ? (s(this, "_weekdaysRegex") || Ke.call(this),
              t ? this._weekdaysStrictRegex : this._weekdaysRegex)
            : (s(this, "_weekdaysRegex") || (this._weekdaysRegex = Ne),
              this._weekdaysStrictRegex && t
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex);
        }
        function Xe(t) {
          return this._weekdaysParseExact
            ? (s(this, "_weekdaysRegex") || Ke.call(this),
              t ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
            : (s(this, "_weekdaysShortRegex") ||
                (this._weekdaysShortRegex = Le),
              this._weekdaysShortStrictRegex && t
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex);
        }
        function Ze(t) {
          return this._weekdaysParseExact
            ? (s(this, "_weekdaysRegex") || Ke.call(this),
              t ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
            : (s(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Ve),
              this._weekdaysMinStrictRegex && t
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex);
        }
        function Ke() {
          function t(t, e) {
            return e.length - t.length;
          }
          var e,
            n,
            r,
            i,
            a,
            o = [],
            s = [],
            l = [],
            c = [];
          for (e = 0; e < 7; e++)
            (n = p([2e3, 1]).day(e)),
              (r = Lt(this.weekdaysMin(n, ""))),
              (i = Lt(this.weekdaysShort(n, ""))),
              (a = Lt(this.weekdays(n, ""))),
              o.push(r),
              s.push(i),
              l.push(a),
              c.push(r),
              c.push(i),
              c.push(a);
          o.sort(t),
            s.sort(t),
            l.sort(t),
            c.sort(t),
            (this._weekdaysRegex = new RegExp("^(" + c.join("|") + ")", "i")),
            (this._weekdaysShortRegex = this._weekdaysRegex),
            (this._weekdaysMinRegex = this._weekdaysRegex),
            (this._weekdaysStrictRegex = new RegExp(
              "^(" + l.join("|") + ")",
              "i"
            )),
            (this._weekdaysShortStrictRegex = new RegExp(
              "^(" + s.join("|") + ")",
              "i"
            )),
            (this._weekdaysMinStrictRegex = new RegExp(
              "^(" + o.join("|") + ")",
              "i"
            ));
        }
        function $e() {
          return this.hours() % 12 || 12;
        }
        function Qe() {
          return this.hours() || 24;
        }
        function Je(t, e) {
          H(t, 0, 0, function () {
            return this.localeData().meridiem(this.hours(), this.minutes(), e);
          });
        }
        function tn(t, e) {
          return e._meridiemParse;
        }
        function en(t) {
          return "p" === (t + "").toLowerCase().charAt(0);
        }
        H("H", ["HH", 2], 0, "hour"),
          H("h", ["hh", 2], 0, $e),
          H("k", ["kk", 2], 0, Qe),
          H("hmm", 0, 0, function () {
            return "" + $e.apply(this) + B(this.minutes(), 2);
          }),
          H("hmmss", 0, 0, function () {
            return (
              "" + $e.apply(this) + B(this.minutes(), 2) + B(this.seconds(), 2)
            );
          }),
          H("Hmm", 0, 0, function () {
            return "" + this.hours() + B(this.minutes(), 2);
          }),
          H("Hmmss", 0, 0, function () {
            return (
              "" + this.hours() + B(this.minutes(), 2) + B(this.seconds(), 2)
            );
          }),
          Je("a", !0),
          Je("A", !1),
          nt("hour", "h"),
          ot("hour", 13),
          It("a", tn),
          It("A", tn),
          It("H", wt),
          It("h", wt),
          It("k", wt),
          It("HH", wt, vt),
          It("hh", wt, vt),
          It("kk", wt, vt),
          It("hmm", Mt),
          It("hmmss", St),
          It("Hmm", Mt),
          It("Hmmss", St),
          Ft(["H", "HH"], Gt),
          Ft(["k", "kk"], function (t, e, n) {
            var r = ut(t);
            e[Gt] = 24 === r ? 0 : r;
          }),
          Ft(["a", "A"], function (t, e, n) {
            (n._isPm = n._locale.isPM(t)), (n._meridiem = t);
          }),
          Ft(["h", "hh"], function (t, e, n) {
            (e[Gt] = ut(t)), (g(n).bigHour = !0);
          }),
          Ft("hmm", function (t, e, n) {
            var r = t.length - 2;
            (e[Gt] = ut(t.substr(0, r))),
              (e[qt] = ut(t.substr(r))),
              (g(n).bigHour = !0);
          }),
          Ft("hmmss", function (t, e, n) {
            var r = t.length - 4,
              i = t.length - 2;
            (e[Gt] = ut(t.substr(0, r))),
              (e[qt] = ut(t.substr(r, 2))),
              (e[Xt] = ut(t.substr(i))),
              (g(n).bigHour = !0);
          }),
          Ft("Hmm", function (t, e, n) {
            var r = t.length - 2;
            (e[Gt] = ut(t.substr(0, r))), (e[qt] = ut(t.substr(r)));
          }),
          Ft("Hmmss", function (t, e, n) {
            var r = t.length - 4,
              i = t.length - 2;
            (e[Gt] = ut(t.substr(0, r))),
              (e[qt] = ut(t.substr(r, 2))),
              (e[Xt] = ut(t.substr(i)));
          });
        var nn = /[ap]\.?m?\.?/i,
          rn = dt("Hours", !0);
        function an(t, e, n) {
          return t > 11 ? (n ? "pm" : "PM") : n ? "am" : "AM";
        }
        var on,
          sn = {
            calendar: D,
            longDateFormat: z,
            invalidDate: q,
            ordinal: Z,
            dayOfMonthOrdinalParse: K,
            relativeTime: Q,
            months: te,
            monthsShort: ee,
            week: Ae,
            weekdays: De,
            weekdaysMin: Be,
            weekdaysShort: Ie,
            meridiemParse: nn,
          },
          ln = {},
          cn = {};
        function un(t, e) {
          var n,
            r = Math.min(t.length, e.length);
          for (n = 0; n < r; n += 1) if (t[n] !== e[n]) return n;
          return r;
        }
        function dn(t) {
          return t ? t.toLowerCase().replace("_", "-") : t;
        }
        function hn(t) {
          for (var e, n, r, i, a = 0; a < t.length; ) {
            for (
              e = (i = dn(t[a]).split("-")).length,
                n = (n = dn(t[a + 1])) ? n.split("-") : null;
              e > 0;

            ) {
              if ((r = pn(i.slice(0, e).join("-")))) return r;
              if (n && n.length >= e && un(i, n) >= e - 1) break;
              e--;
            }
            a++;
          }
          return on;
        }
        function fn(t) {
          return null != t.match("^[^/\\\\]*$");
        }
        function pn(e) {
          var n = null;
          if (void 0 === ln[e] && t && t.exports && fn(e))
            try {
              (n = on._abbr),
                Object(
                  (function () {
                    var t = new Error("Cannot find module 'undefined'");
                    throw ((t.code = "MODULE_NOT_FOUND"), t);
                  })()
                ),
                mn(n);
            } catch (r) {
              ln[e] = null;
            }
          return ln[e];
        }
        function mn(t, e) {
          var n;
          return (
            t &&
              ((n = c(e) ? vn(t) : gn(t, e))
                ? (on = n)
                : "undefined" !== typeof console &&
                  console.warn &&
                  console.warn(
                    "Locale " + t + " not found. Did you forget to load it?"
                  )),
            on._abbr
          );
        }
        function gn(t, e) {
          if (null !== e) {
            var n,
              r = sn;
            if (((e.abbr = t), null != ln[t]))
              R(
                "defineLocaleOverride",
                "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
              ),
                (r = ln[t]._config);
            else if (null != e.parentLocale)
              if (null != ln[e.parentLocale]) r = ln[e.parentLocale]._config;
              else {
                if (null == (n = pn(e.parentLocale)))
                  return (
                    cn[e.parentLocale] || (cn[e.parentLocale] = []),
                    cn[e.parentLocale].push({ name: t, config: e }),
                    null
                  );
                r = n._config;
              }
            return (
              (ln[t] = new C(P(r, e))),
              cn[t] &&
                cn[t].forEach(function (t) {
                  gn(t.name, t.config);
                }),
              mn(t),
              ln[t]
            );
          }
          return delete ln[t], null;
        }
        function _n(t, e) {
          if (null != e) {
            var n,
              r,
              i = sn;
            null != ln[t] && null != ln[t].parentLocale
              ? ln[t].set(P(ln[t]._config, e))
              : (null != (r = pn(t)) && (i = r._config),
                (e = P(i, e)),
                null == r && (e.abbr = t),
                ((n = new C(e)).parentLocale = ln[t]),
                (ln[t] = n)),
              mn(t);
          } else
            null != ln[t] &&
              (null != ln[t].parentLocale
                ? ((ln[t] = ln[t].parentLocale), t === mn() && mn(t))
                : null != ln[t] && delete ln[t]);
          return ln[t];
        }
        function vn(t) {
          var e;
          if ((t && t._locale && t._locale._abbr && (t = t._locale._abbr), !t))
            return on;
          if (!a(t)) {
            if ((e = pn(t))) return e;
            t = [t];
          }
          return hn(t);
        }
        function bn() {
          return E(ln);
        }
        function yn(t) {
          var e,
            n = t._a;
          return (
            n &&
              -2 === g(t).overflow &&
              ((e =
                n[Ut] < 0 || n[Ut] > 11
                  ? Ut
                  : n[zt] < 1 || n[zt] > Jt(n[Wt], n[Ut])
                  ? zt
                  : n[Gt] < 0 ||
                    n[Gt] > 24 ||
                    (24 === n[Gt] &&
                      (0 !== n[qt] || 0 !== n[Xt] || 0 !== n[Zt]))
                  ? Gt
                  : n[qt] < 0 || n[qt] > 59
                  ? qt
                  : n[Xt] < 0 || n[Xt] > 59
                  ? Xt
                  : n[Zt] < 0 || n[Zt] > 999
                  ? Zt
                  : -1),
              g(t)._overflowDayOfYear && (e < Wt || e > zt) && (e = zt),
              g(t)._overflowWeeks && -1 === e && (e = Kt),
              g(t)._overflowWeekday && -1 === e && (e = $t),
              (g(t).overflow = e)),
            t
          );
        }
        var xn =
            /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
          wn =
            /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
          Mn = /Z|[+-]\d\d(?::?\d\d)?/,
          Sn = [
            ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
            ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
            ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
            ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
            ["YYYY-DDD", /\d{4}-\d{3}/],
            ["YYYY-MM", /\d{4}-\d\d/, !1],
            ["YYYYYYMMDD", /[+-]\d{10}/],
            ["YYYYMMDD", /\d{8}/],
            ["GGGG[W]WWE", /\d{4}W\d{3}/],
            ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
            ["YYYYDDD", /\d{7}/],
            ["YYYYMM", /\d{6}/, !1],
            ["YYYY", /\d{4}/, !1],
          ],
          An = [
            ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
            ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
            ["HH:mm:ss", /\d\d:\d\d:\d\d/],
            ["HH:mm", /\d\d:\d\d/],
            ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
            ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
            ["HHmmss", /\d\d\d\d\d\d/],
            ["HHmm", /\d\d\d\d/],
            ["HH", /\d\d/],
          ],
          En = /^\/?Date\((-?\d+)/i,
          kn =
            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
          Rn = {
            UT: 0,
            GMT: 0,
            EDT: -240,
            EST: -300,
            CDT: -300,
            CST: -360,
            MDT: -360,
            MST: -420,
            PDT: -420,
            PST: -480,
          };
        function Tn(t) {
          var e,
            n,
            r,
            i,
            a,
            o,
            s = t._i,
            l = xn.exec(s) || wn.exec(s),
            c = Sn.length,
            u = An.length;
          if (l) {
            for (g(t).iso = !0, e = 0, n = c; e < n; e++)
              if (Sn[e][1].exec(l[1])) {
                (i = Sn[e][0]), (r = !1 !== Sn[e][2]);
                break;
              }
            if (null == i) return void (t._isValid = !1);
            if (l[3]) {
              for (e = 0, n = u; e < n; e++)
                if (An[e][1].exec(l[3])) {
                  a = (l[2] || " ") + An[e][0];
                  break;
                }
              if (null == a) return void (t._isValid = !1);
            }
            if (!r && null != a) return void (t._isValid = !1);
            if (l[4]) {
              if (!Mn.exec(l[4])) return void (t._isValid = !1);
              o = "Z";
            }
            (t._f = i + (a || "") + (o || "")), jn(t);
          } else t._isValid = !1;
        }
        function On(t, e, n, r, i, a) {
          var o = [
            Pn(t),
            ee.indexOf(e),
            parseInt(n, 10),
            parseInt(r, 10),
            parseInt(i, 10),
          ];
          return a && o.push(parseInt(a, 10)), o;
        }
        function Pn(t) {
          var e = parseInt(t, 10);
          return e <= 49 ? 2e3 + e : e <= 999 ? 1900 + e : e;
        }
        function Cn(t) {
          return t
            .replace(/\([^()]*\)|[\n\t]/g, " ")
            .replace(/(\s\s+)/g, " ")
            .replace(/^\s\s*/, "")
            .replace(/\s\s*$/, "");
        }
        function Dn(t, e, n) {
          return (
            !t ||
            Ie.indexOf(t) === new Date(e[0], e[1], e[2]).getDay() ||
            ((g(n).weekdayMismatch = !0), (n._isValid = !1), !1)
          );
        }
        function In(t, e, n) {
          if (t) return Rn[t];
          if (e) return 0;
          var r = parseInt(n, 10),
            i = r % 100;
          return ((r - i) / 100) * 60 + i;
        }
        function Bn(t) {
          var e,
            n = kn.exec(Cn(t._i));
          if (n) {
            if (((e = On(n[4], n[3], n[2], n[5], n[6], n[7])), !Dn(n[1], e, t)))
              return;
            (t._a = e),
              (t._tzm = In(n[8], n[9], n[10])),
              (t._d = be.apply(null, t._a)),
              t._d.setUTCMinutes(t._d.getUTCMinutes() - t._tzm),
              (g(t).rfc2822 = !0);
          } else t._isValid = !1;
        }
        function Nn(t) {
          var e = En.exec(t._i);
          null === e
            ? (Tn(t),
              !1 === t._isValid &&
                (delete t._isValid,
                Bn(t),
                !1 === t._isValid &&
                  (delete t._isValid,
                  t._strict
                    ? (t._isValid = !1)
                    : r.createFromInputFallback(t))))
            : (t._d = new Date(+e[1]));
        }
        function Ln(t, e, n) {
          return null != t ? t : null != e ? e : n;
        }
        function Vn(t) {
          var e = new Date(r.now());
          return t._useUTC
            ? [e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate()]
            : [e.getFullYear(), e.getMonth(), e.getDate()];
        }
        function Fn(t) {
          var e,
            n,
            r,
            i,
            a,
            o = [];
          if (!t._d) {
            for (
              r = Vn(t),
                t._w && null == t._a[zt] && null == t._a[Ut] && Hn(t),
                null != t._dayOfYear &&
                  ((a = Ln(t._a[Wt], r[Wt])),
                  (t._dayOfYear > me(a) || 0 === t._dayOfYear) &&
                    (g(t)._overflowDayOfYear = !0),
                  (n = be(a, 0, t._dayOfYear)),
                  (t._a[Ut] = n.getUTCMonth()),
                  (t._a[zt] = n.getUTCDate())),
                e = 0;
              e < 3 && null == t._a[e];
              ++e
            )
              t._a[e] = o[e] = r[e];
            for (; e < 7; e++)
              t._a[e] = o[e] = null == t._a[e] ? (2 === e ? 1 : 0) : t._a[e];
            24 === t._a[Gt] &&
              0 === t._a[qt] &&
              0 === t._a[Xt] &&
              0 === t._a[Zt] &&
              ((t._nextDay = !0), (t._a[Gt] = 0)),
              (t._d = (t._useUTC ? be : ve).apply(null, o)),
              (i = t._useUTC ? t._d.getUTCDay() : t._d.getDay()),
              null != t._tzm &&
                t._d.setUTCMinutes(t._d.getUTCMinutes() - t._tzm),
              t._nextDay && (t._a[Gt] = 24),
              t._w &&
                "undefined" !== typeof t._w.d &&
                t._w.d !== i &&
                (g(t).weekdayMismatch = !0);
          }
        }
        function Hn(t) {
          var e, n, r, i, a, o, s, l, c;
          null != (e = t._w).GG || null != e.W || null != e.E
            ? ((a = 1),
              (o = 4),
              (n = Ln(e.GG, t._a[Wt], we(Zn(), 1, 4).year)),
              (r = Ln(e.W, 1)),
              ((i = Ln(e.E, 1)) < 1 || i > 7) && (l = !0))
            : ((a = t._locale._week.dow),
              (o = t._locale._week.doy),
              (c = we(Zn(), a, o)),
              (n = Ln(e.gg, t._a[Wt], c.year)),
              (r = Ln(e.w, c.week)),
              null != e.d
                ? ((i = e.d) < 0 || i > 6) && (l = !0)
                : null != e.e
                ? ((i = e.e + a), (e.e < 0 || e.e > 6) && (l = !0))
                : (i = a)),
            r < 1 || r > Me(n, a, o)
              ? (g(t)._overflowWeeks = !0)
              : null != l
              ? (g(t)._overflowWeekday = !0)
              : ((s = xe(n, r, i, a, o)),
                (t._a[Wt] = s.year),
                (t._dayOfYear = s.dayOfYear));
        }
        function jn(t) {
          if (t._f !== r.ISO_8601)
            if (t._f !== r.RFC_2822) {
              (t._a = []), (g(t).empty = !0);
              var e,
                n,
                i,
                a,
                o,
                s,
                l,
                c = "" + t._i,
                u = c.length,
                d = 0;
              for (
                l = (i = U(t._f, t._locale).match(N) || []).length, e = 0;
                e < l;
                e++
              )
                (a = i[e]),
                  (n = (c.match(Bt(a, t)) || [])[0]) &&
                    ((o = c.substr(0, c.indexOf(n))).length > 0 &&
                      g(t).unusedInput.push(o),
                    (c = c.slice(c.indexOf(n) + n.length)),
                    (d += n.length)),
                  F[a]
                    ? (n ? (g(t).empty = !1) : g(t).unusedTokens.push(a),
                      jt(a, n, t))
                    : t._strict && !n && g(t).unusedTokens.push(a);
              (g(t).charsLeftOver = u - d),
                c.length > 0 && g(t).unusedInput.push(c),
                t._a[Gt] <= 12 &&
                  !0 === g(t).bigHour &&
                  t._a[Gt] > 0 &&
                  (g(t).bigHour = void 0),
                (g(t).parsedDateParts = t._a.slice(0)),
                (g(t).meridiem = t._meridiem),
                (t._a[Gt] = Yn(t._locale, t._a[Gt], t._meridiem)),
                null !== (s = g(t).era) &&
                  (t._a[Wt] = t._locale.erasConvertYear(s, t._a[Wt])),
                Fn(t),
                yn(t);
            } else Bn(t);
          else Tn(t);
        }
        function Yn(t, e, n) {
          var r;
          return null == n
            ? e
            : null != t.meridiemHour
            ? t.meridiemHour(e, n)
            : null != t.isPM
            ? ((r = t.isPM(n)) && e < 12 && (e += 12),
              r || 12 !== e || (e = 0),
              e)
            : e;
        }
        function Wn(t) {
          var e,
            n,
            r,
            i,
            a,
            o,
            s = !1,
            l = t._f.length;
          if (0 === l)
            return (g(t).invalidFormat = !0), void (t._d = new Date(NaN));
          for (i = 0; i < l; i++)
            (a = 0),
              (o = !1),
              (e = x({}, t)),
              null != t._useUTC && (e._useUTC = t._useUTC),
              (e._f = t._f[i]),
              jn(e),
              _(e) && (o = !0),
              (a += g(e).charsLeftOver),
              (a += 10 * g(e).unusedTokens.length),
              (g(e).score = a),
              s
                ? a < r && ((r = a), (n = e))
                : (null == r || a < r || o) &&
                  ((r = a), (n = e), o && (s = !0));
          f(t, n || e);
        }
        function Un(t) {
          if (!t._d) {
            var e = it(t._i),
              n = void 0 === e.day ? e.date : e.day;
            (t._a = h(
              [e.year, e.month, n, e.hour, e.minute, e.second, e.millisecond],
              function (t) {
                return t && parseInt(t, 10);
              }
            )),
              Fn(t);
          }
        }
        function zn(t) {
          var e = new w(yn(Gn(t)));
          return e._nextDay && (e.add(1, "d"), (e._nextDay = void 0)), e;
        }
        function Gn(t) {
          var e = t._i,
            n = t._f;
          return (
            (t._locale = t._locale || vn(t._l)),
            null === e || (void 0 === n && "" === e)
              ? v({ nullInput: !0 })
              : ("string" === typeof e && (t._i = e = t._locale.preparse(e)),
                M(e)
                  ? new w(yn(e))
                  : (d(e) ? (t._d = e) : a(n) ? Wn(t) : n ? jn(t) : qn(t),
                    _(t) || (t._d = null),
                    t))
          );
        }
        function qn(t) {
          var e = t._i;
          c(e)
            ? (t._d = new Date(r.now()))
            : d(e)
            ? (t._d = new Date(e.valueOf()))
            : "string" === typeof e
            ? Nn(t)
            : a(e)
            ? ((t._a = h(e.slice(0), function (t) {
                return parseInt(t, 10);
              })),
              Fn(t))
            : o(e)
            ? Un(t)
            : u(e)
            ? (t._d = new Date(e))
            : r.createFromInputFallback(t);
        }
        function Xn(t, e, n, r, i) {
          var s = {};
          return (
            (!0 !== e && !1 !== e) || ((r = e), (e = void 0)),
            (!0 !== n && !1 !== n) || ((r = n), (n = void 0)),
            ((o(t) && l(t)) || (a(t) && 0 === t.length)) && (t = void 0),
            (s._isAMomentObject = !0),
            (s._useUTC = s._isUTC = i),
            (s._l = n),
            (s._i = t),
            (s._f = e),
            (s._strict = r),
            zn(s)
          );
        }
        function Zn(t, e, n, r) {
          return Xn(t, e, n, r, !1);
        }
        (r.createFromInputFallback = A(
          "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
          function (t) {
            t._d = new Date(t._i + (t._useUTC ? " UTC" : ""));
          }
        )),
          (r.ISO_8601 = function () {}),
          (r.RFC_2822 = function () {});
        var Kn = A(
            "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
            function () {
              var t = Zn.apply(null, arguments);
              return this.isValid() && t.isValid()
                ? t < this
                  ? this
                  : t
                : v();
            }
          ),
          $n = A(
            "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
            function () {
              var t = Zn.apply(null, arguments);
              return this.isValid() && t.isValid()
                ? t > this
                  ? this
                  : t
                : v();
            }
          );
        function Qn(t, e) {
          var n, r;
          if ((1 === e.length && a(e[0]) && (e = e[0]), !e.length)) return Zn();
          for (n = e[0], r = 1; r < e.length; ++r)
            (e[r].isValid() && !e[r][t](n)) || (n = e[r]);
          return n;
        }
        function Jn() {
          return Qn("isBefore", [].slice.call(arguments, 0));
        }
        function tr() {
          return Qn("isAfter", [].slice.call(arguments, 0));
        }
        var er = function () {
            return Date.now ? Date.now() : +new Date();
          },
          nr = [
            "year",
            "quarter",
            "month",
            "week",
            "day",
            "hour",
            "minute",
            "second",
            "millisecond",
          ];
        function rr(t) {
          var e,
            n,
            r = !1,
            i = nr.length;
          for (e in t)
            if (
              s(t, e) &&
              (-1 === Yt.call(nr, e) || (null != t[e] && isNaN(t[e])))
            )
              return !1;
          for (n = 0; n < i; ++n)
            if (t[nr[n]]) {
              if (r) return !1;
              parseFloat(t[nr[n]]) !== ut(t[nr[n]]) && (r = !0);
            }
          return !0;
        }
        function ir() {
          return this._isValid;
        }
        function ar() {
          return Rr(NaN);
        }
        function or(t) {
          var e = it(t),
            n = e.year || 0,
            r = e.quarter || 0,
            i = e.month || 0,
            a = e.week || e.isoWeek || 0,
            o = e.day || 0,
            s = e.hour || 0,
            l = e.minute || 0,
            c = e.second || 0,
            u = e.millisecond || 0;
          (this._isValid = rr(e)),
            (this._milliseconds = +u + 1e3 * c + 6e4 * l + 1e3 * s * 60 * 60),
            (this._days = +o + 7 * a),
            (this._months = +i + 3 * r + 12 * n),
            (this._data = {}),
            (this._locale = vn()),
            this._bubble();
        }
        function sr(t) {
          return t instanceof or;
        }
        function lr(t) {
          return t < 0 ? -1 * Math.round(-1 * t) : Math.round(t);
        }
        function cr(t, e, n) {
          var r,
            i = Math.min(t.length, e.length),
            a = Math.abs(t.length - e.length),
            o = 0;
          for (r = 0; r < i; r++)
            ((n && t[r] !== e[r]) || (!n && ut(t[r]) !== ut(e[r]))) && o++;
          return o + a;
        }
        function ur(t, e) {
          H(t, 0, 0, function () {
            var t = this.utcOffset(),
              n = "+";
            return (
              t < 0 && ((t = -t), (n = "-")),
              n + B(~~(t / 60), 2) + e + B(~~t % 60, 2)
            );
          });
        }
        ur("Z", ":"),
          ur("ZZ", ""),
          It("Z", Pt),
          It("ZZ", Pt),
          Ft(["Z", "ZZ"], function (t, e, n) {
            (n._useUTC = !0), (n._tzm = hr(Pt, t));
          });
        var dr = /([\+\-]|\d\d)/gi;
        function hr(t, e) {
          var n,
            r,
            i = (e || "").match(t);
          return null === i
            ? null
            : 0 ===
              (r =
                60 *
                  (n = ((i[i.length - 1] || []) + "").match(dr) || [
                    "-",
                    0,
                    0,
                  ])[1] +
                ut(n[2]))
            ? 0
            : "+" === n[0]
            ? r
            : -r;
        }
        function fr(t, e) {
          var n, i;
          return e._isUTC
            ? ((n = e.clone()),
              (i =
                (M(t) || d(t) ? t.valueOf() : Zn(t).valueOf()) - n.valueOf()),
              n._d.setTime(n._d.valueOf() + i),
              r.updateOffset(n, !1),
              n)
            : Zn(t).local();
        }
        function pr(t) {
          return -Math.round(t._d.getTimezoneOffset());
        }
        function mr(t, e, n) {
          var i,
            a = this._offset || 0;
          if (!this.isValid()) return null != t ? this : NaN;
          if (null != t) {
            if ("string" === typeof t) {
              if (null === (t = hr(Pt, t))) return this;
            } else Math.abs(t) < 16 && !n && (t *= 60);
            return (
              !this._isUTC && e && (i = pr(this)),
              (this._offset = t),
              (this._isUTC = !0),
              null != i && this.add(i, "m"),
              a !== t &&
                (!e || this._changeInProgress
                  ? Dr(this, Rr(t - a, "m"), 1, !1)
                  : this._changeInProgress ||
                    ((this._changeInProgress = !0),
                    r.updateOffset(this, !0),
                    (this._changeInProgress = null))),
              this
            );
          }
          return this._isUTC ? a : pr(this);
        }
        function gr(t, e) {
          return null != t
            ? ("string" !== typeof t && (t = -t), this.utcOffset(t, e), this)
            : -this.utcOffset();
        }
        function _r(t) {
          return this.utcOffset(0, t);
        }
        function vr(t) {
          return (
            this._isUTC &&
              (this.utcOffset(0, t),
              (this._isUTC = !1),
              t && this.subtract(pr(this), "m")),
            this
          );
        }
        function br() {
          if (null != this._tzm) this.utcOffset(this._tzm, !1, !0);
          else if ("string" === typeof this._i) {
            var t = hr(Ot, this._i);
            null != t ? this.utcOffset(t) : this.utcOffset(0, !0);
          }
          return this;
        }
        function yr(t) {
          return (
            !!this.isValid() &&
            ((t = t ? Zn(t).utcOffset() : 0), (this.utcOffset() - t) % 60 === 0)
          );
        }
        function xr() {
          return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
          );
        }
        function wr() {
          if (!c(this._isDSTShifted)) return this._isDSTShifted;
          var t,
            e = {};
          return (
            x(e, this),
            (e = Gn(e))._a
              ? ((t = e._isUTC ? p(e._a) : Zn(e._a)),
                (this._isDSTShifted =
                  this.isValid() && cr(e._a, t.toArray()) > 0))
              : (this._isDSTShifted = !1),
            this._isDSTShifted
          );
        }
        function Mr() {
          return !!this.isValid() && !this._isUTC;
        }
        function Sr() {
          return !!this.isValid() && this._isUTC;
        }
        function Ar() {
          return !!this.isValid() && this._isUTC && 0 === this._offset;
        }
        r.updateOffset = function () {};
        var Er = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
          kr =
            /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
        function Rr(t, e) {
          var n,
            r,
            i,
            a = t,
            o = null;
          return (
            sr(t)
              ? (a = { ms: t._milliseconds, d: t._days, M: t._months })
              : u(t) || !isNaN(+t)
              ? ((a = {}), e ? (a[e] = +t) : (a.milliseconds = +t))
              : (o = Er.exec(t))
              ? ((n = "-" === o[1] ? -1 : 1),
                (a = {
                  y: 0,
                  d: ut(o[zt]) * n,
                  h: ut(o[Gt]) * n,
                  m: ut(o[qt]) * n,
                  s: ut(o[Xt]) * n,
                  ms: ut(lr(1e3 * o[Zt])) * n,
                }))
              : (o = kr.exec(t))
              ? ((n = "-" === o[1] ? -1 : 1),
                (a = {
                  y: Tr(o[2], n),
                  M: Tr(o[3], n),
                  w: Tr(o[4], n),
                  d: Tr(o[5], n),
                  h: Tr(o[6], n),
                  m: Tr(o[7], n),
                  s: Tr(o[8], n),
                }))
              : null == a
              ? (a = {})
              : "object" === typeof a &&
                ("from" in a || "to" in a) &&
                ((i = Pr(Zn(a.from), Zn(a.to))),
                ((a = {}).ms = i.milliseconds),
                (a.M = i.months)),
            (r = new or(a)),
            sr(t) && s(t, "_locale") && (r._locale = t._locale),
            sr(t) && s(t, "_isValid") && (r._isValid = t._isValid),
            r
          );
        }
        function Tr(t, e) {
          var n = t && parseFloat(t.replace(",", "."));
          return (isNaN(n) ? 0 : n) * e;
        }
        function Or(t, e) {
          var n = {};
          return (
            (n.months = e.month() - t.month() + 12 * (e.year() - t.year())),
            t.clone().add(n.months, "M").isAfter(e) && --n.months,
            (n.milliseconds = +e - +t.clone().add(n.months, "M")),
            n
          );
        }
        function Pr(t, e) {
          var n;
          return t.isValid() && e.isValid()
            ? ((e = fr(e, t)),
              t.isBefore(e)
                ? (n = Or(t, e))
                : (((n = Or(e, t)).milliseconds = -n.milliseconds),
                  (n.months = -n.months)),
              n)
            : { milliseconds: 0, months: 0 };
        }
        function Cr(t, e) {
          return function (n, r) {
            var i;
            return (
              null === r ||
                isNaN(+r) ||
                (R(
                  e,
                  "moment()." +
                    e +
                    "(period, number) is deprecated. Please use moment()." +
                    e +
                    "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
                ),
                (i = n),
                (n = r),
                (r = i)),
              Dr(this, Rr(n, r), t),
              this
            );
          };
        }
        function Dr(t, e, n, i) {
          var a = e._milliseconds,
            o = lr(e._days),
            s = lr(e._months);
          t.isValid() &&
            ((i = null == i || i),
            s && ce(t, ht(t, "Month") + s * n),
            o && ft(t, "Date", ht(t, "Date") + o * n),
            a && t._d.setTime(t._d.valueOf() + a * n),
            i && r.updateOffset(t, o || s));
        }
        (Rr.fn = or.prototype), (Rr.invalid = ar);
        var Ir = Cr(1, "add"),
          Br = Cr(-1, "subtract");
        function Nr(t) {
          return "string" === typeof t || t instanceof String;
        }
        function Lr(t) {
          return (
            M(t) ||
            d(t) ||
            Nr(t) ||
            u(t) ||
            Fr(t) ||
            Vr(t) ||
            null === t ||
            void 0 === t
          );
        }
        function Vr(t) {
          var e,
            n,
            r = o(t) && !l(t),
            i = !1,
            a = [
              "years",
              "year",
              "y",
              "months",
              "month",
              "M",
              "days",
              "day",
              "d",
              "dates",
              "date",
              "D",
              "hours",
              "hour",
              "h",
              "minutes",
              "minute",
              "m",
              "seconds",
              "second",
              "s",
              "milliseconds",
              "millisecond",
              "ms",
            ],
            c = a.length;
          for (e = 0; e < c; e += 1) (n = a[e]), (i = i || s(t, n));
          return r && i;
        }
        function Fr(t) {
          var e = a(t),
            n = !1;
          return (
            e &&
              (n =
                0 ===
                t.filter(function (e) {
                  return !u(e) && Nr(t);
                }).length),
            e && n
          );
        }
        function Hr(t) {
          var e,
            n,
            r = o(t) && !l(t),
            i = !1,
            a = [
              "sameDay",
              "nextDay",
              "lastDay",
              "nextWeek",
              "lastWeek",
              "sameElse",
            ];
          for (e = 0; e < a.length; e += 1) (n = a[e]), (i = i || s(t, n));
          return r && i;
        }
        function jr(t, e) {
          var n = t.diff(e, "days", !0);
          return n < -6
            ? "sameElse"
            : n < -1
            ? "lastWeek"
            : n < 0
            ? "lastDay"
            : n < 1
            ? "sameDay"
            : n < 2
            ? "nextDay"
            : n < 7
            ? "nextWeek"
            : "sameElse";
        }
        function Yr(t, e) {
          1 === arguments.length &&
            (arguments[0]
              ? Lr(arguments[0])
                ? ((t = arguments[0]), (e = void 0))
                : Hr(arguments[0]) && ((e = arguments[0]), (t = void 0))
              : ((t = void 0), (e = void 0)));
          var n = t || Zn(),
            i = fr(n, this).startOf("day"),
            a = r.calendarFormat(this, i) || "sameElse",
            o = e && (T(e[a]) ? e[a].call(this, n) : e[a]);
          return this.format(o || this.localeData().calendar(a, this, Zn(n)));
        }
        function Wr() {
          return new w(this);
        }
        function Ur(t, e) {
          var n = M(t) ? t : Zn(t);
          return (
            !(!this.isValid() || !n.isValid()) &&
            ("millisecond" === (e = rt(e) || "millisecond")
              ? this.valueOf() > n.valueOf()
              : n.valueOf() < this.clone().startOf(e).valueOf())
          );
        }
        function zr(t, e) {
          var n = M(t) ? t : Zn(t);
          return (
            !(!this.isValid() || !n.isValid()) &&
            ("millisecond" === (e = rt(e) || "millisecond")
              ? this.valueOf() < n.valueOf()
              : this.clone().endOf(e).valueOf() < n.valueOf())
          );
        }
        function Gr(t, e, n, r) {
          var i = M(t) ? t : Zn(t),
            a = M(e) ? e : Zn(e);
          return (
            !!(this.isValid() && i.isValid() && a.isValid()) &&
            ("(" === (r = r || "()")[0]
              ? this.isAfter(i, n)
              : !this.isBefore(i, n)) &&
            (")" === r[1] ? this.isBefore(a, n) : !this.isAfter(a, n))
          );
        }
        function qr(t, e) {
          var n,
            r = M(t) ? t : Zn(t);
          return (
            !(!this.isValid() || !r.isValid()) &&
            ("millisecond" === (e = rt(e) || "millisecond")
              ? this.valueOf() === r.valueOf()
              : ((n = r.valueOf()),
                this.clone().startOf(e).valueOf() <= n &&
                  n <= this.clone().endOf(e).valueOf()))
          );
        }
        function Xr(t, e) {
          return this.isSame(t, e) || this.isAfter(t, e);
        }
        function Zr(t, e) {
          return this.isSame(t, e) || this.isBefore(t, e);
        }
        function Kr(t, e, n) {
          var r, i, a;
          if (!this.isValid()) return NaN;
          if (!(r = fr(t, this)).isValid()) return NaN;
          switch (
            ((i = 6e4 * (r.utcOffset() - this.utcOffset())), (e = rt(e)))
          ) {
            case "year":
              a = $r(this, r) / 12;
              break;
            case "month":
              a = $r(this, r);
              break;
            case "quarter":
              a = $r(this, r) / 3;
              break;
            case "second":
              a = (this - r) / 1e3;
              break;
            case "minute":
              a = (this - r) / 6e4;
              break;
            case "hour":
              a = (this - r) / 36e5;
              break;
            case "day":
              a = (this - r - i) / 864e5;
              break;
            case "week":
              a = (this - r - i) / 6048e5;
              break;
            default:
              a = this - r;
          }
          return n ? a : ct(a);
        }
        function $r(t, e) {
          if (t.date() < e.date()) return -$r(e, t);
          var n = 12 * (e.year() - t.year()) + (e.month() - t.month()),
            r = t.clone().add(n, "months");
          return (
            -(
              n +
              (e - r < 0
                ? (e - r) / (r - t.clone().add(n - 1, "months"))
                : (e - r) / (t.clone().add(n + 1, "months") - r))
            ) || 0
          );
        }
        function Qr() {
          return this.clone()
            .locale("en")
            .format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
        }
        function Jr(t) {
          if (!this.isValid()) return null;
          var e = !0 !== t,
            n = e ? this.clone().utc() : this;
          return n.year() < 0 || n.year() > 9999
            ? W(
                n,
                e
                  ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
                  : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
              )
            : T(Date.prototype.toISOString)
            ? e
              ? this.toDate().toISOString()
              : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3)
                  .toISOString()
                  .replace("Z", W(n, "Z"))
            : W(
                n,
                e
                  ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
                  : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
              );
        }
        function ti() {
          if (!this.isValid()) return "moment.invalid(/* " + this._i + " */)";
          var t,
            e,
            n,
            r,
            i = "moment",
            a = "";
          return (
            this.isLocal() ||
              ((i = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone"),
              (a = "Z")),
            (t = "[" + i + '("]'),
            (e = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY"),
            (n = "-MM-DD[T]HH:mm:ss.SSS"),
            (r = a + '[")]'),
            this.format(t + e + n + r)
          );
        }
        function ei(t) {
          t || (t = this.isUtc() ? r.defaultFormatUtc : r.defaultFormat);
          var e = W(this, t);
          return this.localeData().postformat(e);
        }
        function ni(t, e) {
          return this.isValid() && ((M(t) && t.isValid()) || Zn(t).isValid())
            ? Rr({ to: this, from: t }).locale(this.locale()).humanize(!e)
            : this.localeData().invalidDate();
        }
        function ri(t) {
          return this.from(Zn(), t);
        }
        function ii(t, e) {
          return this.isValid() && ((M(t) && t.isValid()) || Zn(t).isValid())
            ? Rr({ from: this, to: t }).locale(this.locale()).humanize(!e)
            : this.localeData().invalidDate();
        }
        function ai(t) {
          return this.to(Zn(), t);
        }
        function oi(t) {
          var e;
          return void 0 === t
            ? this._locale._abbr
            : (null != (e = vn(t)) && (this._locale = e), this);
        }
        (r.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ"),
          (r.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]");
        var si = A(
          "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
          function (t) {
            return void 0 === t ? this.localeData() : this.locale(t);
          }
        );
        function li() {
          return this._locale;
        }
        var ci = 1e3,
          ui = 60 * ci,
          di = 60 * ui,
          hi = 3506328 * di;
        function fi(t, e) {
          return ((t % e) + e) % e;
        }
        function pi(t, e, n) {
          return t < 100 && t >= 0
            ? new Date(t + 400, e, n) - hi
            : new Date(t, e, n).valueOf();
        }
        function mi(t, e, n) {
          return t < 100 && t >= 0
            ? Date.UTC(t + 400, e, n) - hi
            : Date.UTC(t, e, n);
        }
        function gi(t) {
          var e, n;
          if (void 0 === (t = rt(t)) || "millisecond" === t || !this.isValid())
            return this;
          switch (((n = this._isUTC ? mi : pi), t)) {
            case "year":
              e = n(this.year(), 0, 1);
              break;
            case "quarter":
              e = n(this.year(), this.month() - (this.month() % 3), 1);
              break;
            case "month":
              e = n(this.year(), this.month(), 1);
              break;
            case "week":
              e = n(this.year(), this.month(), this.date() - this.weekday());
              break;
            case "isoWeek":
              e = n(
                this.year(),
                this.month(),
                this.date() - (this.isoWeekday() - 1)
              );
              break;
            case "day":
            case "date":
              e = n(this.year(), this.month(), this.date());
              break;
            case "hour":
              (e = this._d.valueOf()),
                (e -= fi(e + (this._isUTC ? 0 : this.utcOffset() * ui), di));
              break;
            case "minute":
              (e = this._d.valueOf()), (e -= fi(e, ui));
              break;
            case "second":
              (e = this._d.valueOf()), (e -= fi(e, ci));
          }
          return this._d.setTime(e), r.updateOffset(this, !0), this;
        }
        function _i(t) {
          var e, n;
          if (void 0 === (t = rt(t)) || "millisecond" === t || !this.isValid())
            return this;
          switch (((n = this._isUTC ? mi : pi), t)) {
            case "year":
              e = n(this.year() + 1, 0, 1) - 1;
              break;
            case "quarter":
              e = n(this.year(), this.month() - (this.month() % 3) + 3, 1) - 1;
              break;
            case "month":
              e = n(this.year(), this.month() + 1, 1) - 1;
              break;
            case "week":
              e =
                n(this.year(), this.month(), this.date() - this.weekday() + 7) -
                1;
              break;
            case "isoWeek":
              e =
                n(
                  this.year(),
                  this.month(),
                  this.date() - (this.isoWeekday() - 1) + 7
                ) - 1;
              break;
            case "day":
            case "date":
              e = n(this.year(), this.month(), this.date() + 1) - 1;
              break;
            case "hour":
              (e = this._d.valueOf()),
                (e +=
                  di -
                  fi(e + (this._isUTC ? 0 : this.utcOffset() * ui), di) -
                  1);
              break;
            case "minute":
              (e = this._d.valueOf()), (e += ui - fi(e, ui) - 1);
              break;
            case "second":
              (e = this._d.valueOf()), (e += ci - fi(e, ci) - 1);
          }
          return this._d.setTime(e), r.updateOffset(this, !0), this;
        }
        function vi() {
          return this._d.valueOf() - 6e4 * (this._offset || 0);
        }
        function bi() {
          return Math.floor(this.valueOf() / 1e3);
        }
        function yi() {
          return new Date(this.valueOf());
        }
        function xi() {
          var t = this;
          return [
            t.year(),
            t.month(),
            t.date(),
            t.hour(),
            t.minute(),
            t.second(),
            t.millisecond(),
          ];
        }
        function wi() {
          var t = this;
          return {
            years: t.year(),
            months: t.month(),
            date: t.date(),
            hours: t.hours(),
            minutes: t.minutes(),
            seconds: t.seconds(),
            milliseconds: t.milliseconds(),
          };
        }
        function Mi() {
          return this.isValid() ? this.toISOString() : null;
        }
        function Si() {
          return _(this);
        }
        function Ai() {
          return f({}, g(this));
        }
        function Ei() {
          return g(this).overflow;
        }
        function ki() {
          return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
          };
        }
        function Ri(t, e) {
          var n,
            i,
            a,
            o = this._eras || vn("en")._eras;
          for (n = 0, i = o.length; n < i; ++n)
            switch (
              ("string" === typeof o[n].since &&
                ((a = r(o[n].since).startOf("day")),
                (o[n].since = a.valueOf())),
              typeof o[n].until)
            ) {
              case "undefined":
                o[n].until = 1 / 0;
                break;
              case "string":
                (a = r(o[n].until).startOf("day").valueOf()),
                  (o[n].until = a.valueOf());
            }
          return o;
        }
        function Ti(t, e, n) {
          var r,
            i,
            a,
            o,
            s,
            l = this.eras();
          for (t = t.toUpperCase(), r = 0, i = l.length; r < i; ++r)
            if (
              ((a = l[r].name.toUpperCase()),
              (o = l[r].abbr.toUpperCase()),
              (s = l[r].narrow.toUpperCase()),
              n)
            )
              switch (e) {
                case "N":
                case "NN":
                case "NNN":
                  if (o === t) return l[r];
                  break;
                case "NNNN":
                  if (a === t) return l[r];
                  break;
                case "NNNNN":
                  if (s === t) return l[r];
              }
            else if ([a, o, s].indexOf(t) >= 0) return l[r];
        }
        function Oi(t, e) {
          var n = t.since <= t.until ? 1 : -1;
          return void 0 === e
            ? r(t.since).year()
            : r(t.since).year() + (e - t.offset) * n;
        }
        function Pi() {
          var t,
            e,
            n,
            r = this.localeData().eras();
          for (t = 0, e = r.length; t < e; ++t) {
            if (
              ((n = this.clone().startOf("day").valueOf()),
              r[t].since <= n && n <= r[t].until)
            )
              return r[t].name;
            if (r[t].until <= n && n <= r[t].since) return r[t].name;
          }
          return "";
        }
        function Ci() {
          var t,
            e,
            n,
            r = this.localeData().eras();
          for (t = 0, e = r.length; t < e; ++t) {
            if (
              ((n = this.clone().startOf("day").valueOf()),
              r[t].since <= n && n <= r[t].until)
            )
              return r[t].narrow;
            if (r[t].until <= n && n <= r[t].since) return r[t].narrow;
          }
          return "";
        }
        function Di() {
          var t,
            e,
            n,
            r = this.localeData().eras();
          for (t = 0, e = r.length; t < e; ++t) {
            if (
              ((n = this.clone().startOf("day").valueOf()),
              r[t].since <= n && n <= r[t].until)
            )
              return r[t].abbr;
            if (r[t].until <= n && n <= r[t].since) return r[t].abbr;
          }
          return "";
        }
        function Ii() {
          var t,
            e,
            n,
            i,
            a = this.localeData().eras();
          for (t = 0, e = a.length; t < e; ++t)
            if (
              ((n = a[t].since <= a[t].until ? 1 : -1),
              (i = this.clone().startOf("day").valueOf()),
              (a[t].since <= i && i <= a[t].until) ||
                (a[t].until <= i && i <= a[t].since))
            )
              return (this.year() - r(a[t].since).year()) * n + a[t].offset;
          return this.year();
        }
        function Bi(t) {
          return (
            s(this, "_erasNameRegex") || Yi.call(this),
            t ? this._erasNameRegex : this._erasRegex
          );
        }
        function Ni(t) {
          return (
            s(this, "_erasAbbrRegex") || Yi.call(this),
            t ? this._erasAbbrRegex : this._erasRegex
          );
        }
        function Li(t) {
          return (
            s(this, "_erasNarrowRegex") || Yi.call(this),
            t ? this._erasNarrowRegex : this._erasRegex
          );
        }
        function Vi(t, e) {
          return e.erasAbbrRegex(t);
        }
        function Fi(t, e) {
          return e.erasNameRegex(t);
        }
        function Hi(t, e) {
          return e.erasNarrowRegex(t);
        }
        function ji(t, e) {
          return e._eraYearOrdinalRegex || Rt;
        }
        function Yi() {
          var t,
            e,
            n = [],
            r = [],
            i = [],
            a = [],
            o = this.eras();
          for (t = 0, e = o.length; t < e; ++t)
            r.push(Lt(o[t].name)),
              n.push(Lt(o[t].abbr)),
              i.push(Lt(o[t].narrow)),
              a.push(Lt(o[t].name)),
              a.push(Lt(o[t].abbr)),
              a.push(Lt(o[t].narrow));
          (this._erasRegex = new RegExp("^(" + a.join("|") + ")", "i")),
            (this._erasNameRegex = new RegExp("^(" + r.join("|") + ")", "i")),
            (this._erasAbbrRegex = new RegExp("^(" + n.join("|") + ")", "i")),
            (this._erasNarrowRegex = new RegExp("^(" + i.join("|") + ")", "i"));
        }
        function Wi(t, e) {
          H(0, [t, t.length], 0, e);
        }
        function Ui(t) {
          return Ki.call(
            this,
            t,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
          );
        }
        function zi(t) {
          return Ki.call(this, t, this.isoWeek(), this.isoWeekday(), 1, 4);
        }
        function Gi() {
          return Me(this.year(), 1, 4);
        }
        function qi() {
          return Me(this.isoWeekYear(), 1, 4);
        }
        function Xi() {
          var t = this.localeData()._week;
          return Me(this.year(), t.dow, t.doy);
        }
        function Zi() {
          var t = this.localeData()._week;
          return Me(this.weekYear(), t.dow, t.doy);
        }
        function Ki(t, e, n, r, i) {
          var a;
          return null == t
            ? we(this, r, i).year
            : (e > (a = Me(t, r, i)) && (e = a), $i.call(this, t, e, n, r, i));
        }
        function $i(t, e, n, r, i) {
          var a = xe(t, e, n, r, i),
            o = be(a.year, 0, a.dayOfYear);
          return (
            this.year(o.getUTCFullYear()),
            this.month(o.getUTCMonth()),
            this.date(o.getUTCDate()),
            this
          );
        }
        function Qi(t) {
          return null == t
            ? Math.ceil((this.month() + 1) / 3)
            : this.month(3 * (t - 1) + (this.month() % 3));
        }
        H("N", 0, 0, "eraAbbr"),
          H("NN", 0, 0, "eraAbbr"),
          H("NNN", 0, 0, "eraAbbr"),
          H("NNNN", 0, 0, "eraName"),
          H("NNNNN", 0, 0, "eraNarrow"),
          H("y", ["y", 1], "yo", "eraYear"),
          H("y", ["yy", 2], 0, "eraYear"),
          H("y", ["yyy", 3], 0, "eraYear"),
          H("y", ["yyyy", 4], 0, "eraYear"),
          It("N", Vi),
          It("NN", Vi),
          It("NNN", Vi),
          It("NNNN", Fi),
          It("NNNNN", Hi),
          Ft(["N", "NN", "NNN", "NNNN", "NNNNN"], function (t, e, n, r) {
            var i = n._locale.erasParse(t, r, n._strict);
            i ? (g(n).era = i) : (g(n).invalidEra = t);
          }),
          It("y", Rt),
          It("yy", Rt),
          It("yyy", Rt),
          It("yyyy", Rt),
          It("yo", ji),
          Ft(["y", "yy", "yyy", "yyyy"], Wt),
          Ft(["yo"], function (t, e, n, r) {
            var i;
            n._locale._eraYearOrdinalRegex &&
              (i = t.match(n._locale._eraYearOrdinalRegex)),
              n._locale.eraYearOrdinalParse
                ? (e[Wt] = n._locale.eraYearOrdinalParse(t, i))
                : (e[Wt] = parseInt(t, 10));
          }),
          H(0, ["gg", 2], 0, function () {
            return this.weekYear() % 100;
          }),
          H(0, ["GG", 2], 0, function () {
            return this.isoWeekYear() % 100;
          }),
          Wi("gggg", "weekYear"),
          Wi("ggggg", "weekYear"),
          Wi("GGGG", "isoWeekYear"),
          Wi("GGGGG", "isoWeekYear"),
          nt("weekYear", "gg"),
          nt("isoWeekYear", "GG"),
          ot("weekYear", 1),
          ot("isoWeekYear", 1),
          It("G", Tt),
          It("g", Tt),
          It("GG", wt, vt),
          It("gg", wt, vt),
          It("GGGG", Et, yt),
          It("gggg", Et, yt),
          It("GGGGG", kt, xt),
          It("ggggg", kt, xt),
          Ht(["gggg", "ggggg", "GGGG", "GGGGG"], function (t, e, n, r) {
            e[r.substr(0, 2)] = ut(t);
          }),
          Ht(["gg", "GG"], function (t, e, n, i) {
            e[i] = r.parseTwoDigitYear(t);
          }),
          H("Q", 0, "Qo", "quarter"),
          nt("quarter", "Q"),
          ot("quarter", 7),
          It("Q", _t),
          Ft("Q", function (t, e) {
            e[Ut] = 3 * (ut(t) - 1);
          }),
          H("D", ["DD", 2], "Do", "date"),
          nt("date", "D"),
          ot("date", 9),
          It("D", wt),
          It("DD", wt, vt),
          It("Do", function (t, e) {
            return t
              ? e._dayOfMonthOrdinalParse || e._ordinalParse
              : e._dayOfMonthOrdinalParseLenient;
          }),
          Ft(["D", "DD"], zt),
          Ft("Do", function (t, e) {
            e[zt] = ut(t.match(wt)[0]);
          });
        var Ji = dt("Date", !0);
        function ta(t) {
          var e =
            Math.round(
              (this.clone().startOf("day") - this.clone().startOf("year")) /
                864e5
            ) + 1;
          return null == t ? e : this.add(t - e, "d");
        }
        H("DDD", ["DDDD", 3], "DDDo", "dayOfYear"),
          nt("dayOfYear", "DDD"),
          ot("dayOfYear", 4),
          It("DDD", At),
          It("DDDD", bt),
          Ft(["DDD", "DDDD"], function (t, e, n) {
            n._dayOfYear = ut(t);
          }),
          H("m", ["mm", 2], 0, "minute"),
          nt("minute", "m"),
          ot("minute", 14),
          It("m", wt),
          It("mm", wt, vt),
          Ft(["m", "mm"], qt);
        var ea = dt("Minutes", !1);
        H("s", ["ss", 2], 0, "second"),
          nt("second", "s"),
          ot("second", 15),
          It("s", wt),
          It("ss", wt, vt),
          Ft(["s", "ss"], Xt);
        var na,
          ra,
          ia = dt("Seconds", !1);
        for (
          H("S", 0, 0, function () {
            return ~~(this.millisecond() / 100);
          }),
            H(0, ["SS", 2], 0, function () {
              return ~~(this.millisecond() / 10);
            }),
            H(0, ["SSS", 3], 0, "millisecond"),
            H(0, ["SSSS", 4], 0, function () {
              return 10 * this.millisecond();
            }),
            H(0, ["SSSSS", 5], 0, function () {
              return 100 * this.millisecond();
            }),
            H(0, ["SSSSSS", 6], 0, function () {
              return 1e3 * this.millisecond();
            }),
            H(0, ["SSSSSSS", 7], 0, function () {
              return 1e4 * this.millisecond();
            }),
            H(0, ["SSSSSSSS", 8], 0, function () {
              return 1e5 * this.millisecond();
            }),
            H(0, ["SSSSSSSSS", 9], 0, function () {
              return 1e6 * this.millisecond();
            }),
            nt("millisecond", "ms"),
            ot("millisecond", 16),
            It("S", At, _t),
            It("SS", At, vt),
            It("SSS", At, bt),
            na = "SSSS";
          na.length <= 9;
          na += "S"
        )
          It(na, Rt);
        function aa(t, e) {
          e[Zt] = ut(1e3 * ("0." + t));
        }
        for (na = "S"; na.length <= 9; na += "S") Ft(na, aa);
        function oa() {
          return this._isUTC ? "UTC" : "";
        }
        function sa() {
          return this._isUTC ? "Coordinated Universal Time" : "";
        }
        (ra = dt("Milliseconds", !1)),
          H("z", 0, 0, "zoneAbbr"),
          H("zz", 0, 0, "zoneName");
        var la = w.prototype;
        function ca(t) {
          return Zn(1e3 * t);
        }
        function ua() {
          return Zn.apply(null, arguments).parseZone();
        }
        function da(t) {
          return t;
        }
        (la.add = Ir),
          (la.calendar = Yr),
          (la.clone = Wr),
          (la.diff = Kr),
          (la.endOf = _i),
          (la.format = ei),
          (la.from = ni),
          (la.fromNow = ri),
          (la.to = ii),
          (la.toNow = ai),
          (la.get = pt),
          (la.invalidAt = Ei),
          (la.isAfter = Ur),
          (la.isBefore = zr),
          (la.isBetween = Gr),
          (la.isSame = qr),
          (la.isSameOrAfter = Xr),
          (la.isSameOrBefore = Zr),
          (la.isValid = Si),
          (la.lang = si),
          (la.locale = oi),
          (la.localeData = li),
          (la.max = $n),
          (la.min = Kn),
          (la.parsingFlags = Ai),
          (la.set = mt),
          (la.startOf = gi),
          (la.subtract = Br),
          (la.toArray = xi),
          (la.toObject = wi),
          (la.toDate = yi),
          (la.toISOString = Jr),
          (la.inspect = ti),
          "undefined" !== typeof Symbol &&
            null != Symbol.for &&
            (la[Symbol.for("nodejs.util.inspect.custom")] = function () {
              return "Moment<" + this.format() + ">";
            }),
          (la.toJSON = Mi),
          (la.toString = Qr),
          (la.unix = bi),
          (la.valueOf = vi),
          (la.creationData = ki),
          (la.eraName = Pi),
          (la.eraNarrow = Ci),
          (la.eraAbbr = Di),
          (la.eraYear = Ii),
          (la.year = ge),
          (la.isLeapYear = _e),
          (la.weekYear = Ui),
          (la.isoWeekYear = zi),
          (la.quarter = la.quarters = Qi),
          (la.month = ue),
          (la.daysInMonth = de),
          (la.week = la.weeks = Re),
          (la.isoWeek = la.isoWeeks = Te),
          (la.weeksInYear = Xi),
          (la.weeksInWeekYear = Zi),
          (la.isoWeeksInYear = Gi),
          (la.isoWeeksInISOWeekYear = qi),
          (la.date = Ji),
          (la.day = la.days = Ue),
          (la.weekday = ze),
          (la.isoWeekday = Ge),
          (la.dayOfYear = ta),
          (la.hour = la.hours = rn),
          (la.minute = la.minutes = ea),
          (la.second = la.seconds = ia),
          (la.millisecond = la.milliseconds = ra),
          (la.utcOffset = mr),
          (la.utc = _r),
          (la.local = vr),
          (la.parseZone = br),
          (la.hasAlignedHourOffset = yr),
          (la.isDST = xr),
          (la.isLocal = Mr),
          (la.isUtcOffset = Sr),
          (la.isUtc = Ar),
          (la.isUTC = Ar),
          (la.zoneAbbr = oa),
          (la.zoneName = sa),
          (la.dates = A("dates accessor is deprecated. Use date instead.", Ji)),
          (la.months = A(
            "months accessor is deprecated. Use month instead",
            ue
          )),
          (la.years = A("years accessor is deprecated. Use year instead", ge)),
          (la.zone = A(
            "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
            gr
          )),
          (la.isDSTShifted = A(
            "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
            wr
          ));
        var ha = C.prototype;
        function fa(t, e, n, r) {
          var i = vn(),
            a = p().set(r, e);
          return i[n](a, t);
        }
        function pa(t, e, n) {
          if ((u(t) && ((e = t), (t = void 0)), (t = t || ""), null != e))
            return fa(t, e, n, "month");
          var r,
            i = [];
          for (r = 0; r < 12; r++) i[r] = fa(t, r, n, "month");
          return i;
        }
        function ma(t, e, n, r) {
          "boolean" === typeof t
            ? (u(e) && ((n = e), (e = void 0)), (e = e || ""))
            : ((n = e = t),
              (t = !1),
              u(e) && ((n = e), (e = void 0)),
              (e = e || ""));
          var i,
            a = vn(),
            o = t ? a._week.dow : 0,
            s = [];
          if (null != n) return fa(e, (n + o) % 7, r, "day");
          for (i = 0; i < 7; i++) s[i] = fa(e, (i + o) % 7, r, "day");
          return s;
        }
        function ga(t, e) {
          return pa(t, e, "months");
        }
        function _a(t, e) {
          return pa(t, e, "monthsShort");
        }
        function va(t, e, n) {
          return ma(t, e, n, "weekdays");
        }
        function ba(t, e, n) {
          return ma(t, e, n, "weekdaysShort");
        }
        function ya(t, e, n) {
          return ma(t, e, n, "weekdaysMin");
        }
        (ha.calendar = I),
          (ha.longDateFormat = G),
          (ha.invalidDate = X),
          (ha.ordinal = $),
          (ha.preparse = da),
          (ha.postformat = da),
          (ha.relativeTime = J),
          (ha.pastFuture = tt),
          (ha.set = O),
          (ha.eras = Ri),
          (ha.erasParse = Ti),
          (ha.erasConvertYear = Oi),
          (ha.erasAbbrRegex = Ni),
          (ha.erasNameRegex = Bi),
          (ha.erasNarrowRegex = Li),
          (ha.months = ae),
          (ha.monthsShort = oe),
          (ha.monthsParse = le),
          (ha.monthsRegex = fe),
          (ha.monthsShortRegex = he),
          (ha.week = Se),
          (ha.firstDayOfYear = ke),
          (ha.firstDayOfWeek = Ee),
          (ha.weekdays = Fe),
          (ha.weekdaysMin = je),
          (ha.weekdaysShort = He),
          (ha.weekdaysParse = We),
          (ha.weekdaysRegex = qe),
          (ha.weekdaysShortRegex = Xe),
          (ha.weekdaysMinRegex = Ze),
          (ha.isPM = en),
          (ha.meridiem = an),
          mn("en", {
            eras: [
              {
                since: "0001-01-01",
                until: 1 / 0,
                offset: 1,
                name: "Anno Domini",
                narrow: "AD",
                abbr: "AD",
              },
              {
                since: "0000-12-31",
                until: -1 / 0,
                offset: 1,
                name: "Before Christ",
                narrow: "BC",
                abbr: "BC",
              },
            ],
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function (t) {
              var e = t % 10;
              return (
                t +
                (1 === ut((t % 100) / 10)
                  ? "th"
                  : 1 === e
                  ? "st"
                  : 2 === e
                  ? "nd"
                  : 3 === e
                  ? "rd"
                  : "th")
              );
            },
          }),
          (r.lang = A(
            "moment.lang is deprecated. Use moment.locale instead.",
            mn
          )),
          (r.langData = A(
            "moment.langData is deprecated. Use moment.localeData instead.",
            vn
          ));
        var xa = Math.abs;
        function wa() {
          var t = this._data;
          return (
            (this._milliseconds = xa(this._milliseconds)),
            (this._days = xa(this._days)),
            (this._months = xa(this._months)),
            (t.milliseconds = xa(t.milliseconds)),
            (t.seconds = xa(t.seconds)),
            (t.minutes = xa(t.minutes)),
            (t.hours = xa(t.hours)),
            (t.months = xa(t.months)),
            (t.years = xa(t.years)),
            this
          );
        }
        function Ma(t, e, n, r) {
          var i = Rr(e, n);
          return (
            (t._milliseconds += r * i._milliseconds),
            (t._days += r * i._days),
            (t._months += r * i._months),
            t._bubble()
          );
        }
        function Sa(t, e) {
          return Ma(this, t, e, 1);
        }
        function Aa(t, e) {
          return Ma(this, t, e, -1);
        }
        function Ea(t) {
          return t < 0 ? Math.floor(t) : Math.ceil(t);
        }
        function ka() {
          var t,
            e,
            n,
            r,
            i,
            a = this._milliseconds,
            o = this._days,
            s = this._months,
            l = this._data;
          return (
            (a >= 0 && o >= 0 && s >= 0) ||
              (a <= 0 && o <= 0 && s <= 0) ||
              ((a += 864e5 * Ea(Ta(s) + o)), (o = 0), (s = 0)),
            (l.milliseconds = a % 1e3),
            (t = ct(a / 1e3)),
            (l.seconds = t % 60),
            (e = ct(t / 60)),
            (l.minutes = e % 60),
            (n = ct(e / 60)),
            (l.hours = n % 24),
            (o += ct(n / 24)),
            (s += i = ct(Ra(o))),
            (o -= Ea(Ta(i))),
            (r = ct(s / 12)),
            (s %= 12),
            (l.days = o),
            (l.months = s),
            (l.years = r),
            this
          );
        }
        function Ra(t) {
          return (4800 * t) / 146097;
        }
        function Ta(t) {
          return (146097 * t) / 4800;
        }
        function Oa(t) {
          if (!this.isValid()) return NaN;
          var e,
            n,
            r = this._milliseconds;
          if ("month" === (t = rt(t)) || "quarter" === t || "year" === t)
            switch (
              ((e = this._days + r / 864e5), (n = this._months + Ra(e)), t)
            ) {
              case "month":
                return n;
              case "quarter":
                return n / 3;
              case "year":
                return n / 12;
            }
          else
            switch (((e = this._days + Math.round(Ta(this._months))), t)) {
              case "week":
                return e / 7 + r / 6048e5;
              case "day":
                return e + r / 864e5;
              case "hour":
                return 24 * e + r / 36e5;
              case "minute":
                return 1440 * e + r / 6e4;
              case "second":
                return 86400 * e + r / 1e3;
              case "millisecond":
                return Math.floor(864e5 * e) + r;
              default:
                throw new Error("Unknown unit " + t);
            }
        }
        function Pa() {
          return this.isValid()
            ? this._milliseconds +
                864e5 * this._days +
                (this._months % 12) * 2592e6 +
                31536e6 * ut(this._months / 12)
            : NaN;
        }
        function Ca(t) {
          return function () {
            return this.as(t);
          };
        }
        var Da = Ca("ms"),
          Ia = Ca("s"),
          Ba = Ca("m"),
          Na = Ca("h"),
          La = Ca("d"),
          Va = Ca("w"),
          Fa = Ca("M"),
          Ha = Ca("Q"),
          ja = Ca("y");
        function Ya() {
          return Rr(this);
        }
        function Wa(t) {
          return (t = rt(t)), this.isValid() ? this[t + "s"]() : NaN;
        }
        function Ua(t) {
          return function () {
            return this.isValid() ? this._data[t] : NaN;
          };
        }
        var za = Ua("milliseconds"),
          Ga = Ua("seconds"),
          qa = Ua("minutes"),
          Xa = Ua("hours"),
          Za = Ua("days"),
          Ka = Ua("months"),
          $a = Ua("years");
        function Qa() {
          return ct(this.days() / 7);
        }
        var Ja = Math.round,
          to = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 };
        function eo(t, e, n, r, i) {
          return i.relativeTime(e || 1, !!n, t, r);
        }
        function no(t, e, n, r) {
          var i = Rr(t).abs(),
            a = Ja(i.as("s")),
            o = Ja(i.as("m")),
            s = Ja(i.as("h")),
            l = Ja(i.as("d")),
            c = Ja(i.as("M")),
            u = Ja(i.as("w")),
            d = Ja(i.as("y")),
            h =
              (a <= n.ss && ["s", a]) ||
              (a < n.s && ["ss", a]) ||
              (o <= 1 && ["m"]) ||
              (o < n.m && ["mm", o]) ||
              (s <= 1 && ["h"]) ||
              (s < n.h && ["hh", s]) ||
              (l <= 1 && ["d"]) ||
              (l < n.d && ["dd", l]);
          return (
            null != n.w &&
              (h = h || (u <= 1 && ["w"]) || (u < n.w && ["ww", u])),
            ((h = h ||
              (c <= 1 && ["M"]) ||
              (c < n.M && ["MM", c]) ||
              (d <= 1 && ["y"]) || ["yy", d])[2] = e),
            (h[3] = +t > 0),
            (h[4] = r),
            eo.apply(null, h)
          );
        }
        function ro(t) {
          return void 0 === t ? Ja : "function" === typeof t && ((Ja = t), !0);
        }
        function io(t, e) {
          return (
            void 0 !== to[t] &&
            (void 0 === e
              ? to[t]
              : ((to[t] = e), "s" === t && (to.ss = e - 1), !0))
          );
        }
        function ao(t, e) {
          if (!this.isValid()) return this.localeData().invalidDate();
          var n,
            r,
            i = !1,
            a = to;
          return (
            "object" === typeof t && ((e = t), (t = !1)),
            "boolean" === typeof t && (i = t),
            "object" === typeof e &&
              ((a = Object.assign({}, to, e)),
              null != e.s && null == e.ss && (a.ss = e.s - 1)),
            (r = no(this, !i, a, (n = this.localeData()))),
            i && (r = n.pastFuture(+this, r)),
            n.postformat(r)
          );
        }
        var oo = Math.abs;
        function so(t) {
          return (t > 0) - (t < 0) || +t;
        }
        function lo() {
          if (!this.isValid()) return this.localeData().invalidDate();
          var t,
            e,
            n,
            r,
            i,
            a,
            o,
            s,
            l = oo(this._milliseconds) / 1e3,
            c = oo(this._days),
            u = oo(this._months),
            d = this.asSeconds();
          return d
            ? ((t = ct(l / 60)),
              (e = ct(t / 60)),
              (l %= 60),
              (t %= 60),
              (n = ct(u / 12)),
              (u %= 12),
              (r = l ? l.toFixed(3).replace(/\.?0+$/, "") : ""),
              (i = d < 0 ? "-" : ""),
              (a = so(this._months) !== so(d) ? "-" : ""),
              (o = so(this._days) !== so(d) ? "-" : ""),
              (s = so(this._milliseconds) !== so(d) ? "-" : ""),
              i +
                "P" +
                (n ? a + n + "Y" : "") +
                (u ? a + u + "M" : "") +
                (c ? o + c + "D" : "") +
                (e || t || l ? "T" : "") +
                (e ? s + e + "H" : "") +
                (t ? s + t + "M" : "") +
                (l ? s + r + "S" : ""))
            : "P0D";
        }
        var co = or.prototype;
        return (
          (co.isValid = ir),
          (co.abs = wa),
          (co.add = Sa),
          (co.subtract = Aa),
          (co.as = Oa),
          (co.asMilliseconds = Da),
          (co.asSeconds = Ia),
          (co.asMinutes = Ba),
          (co.asHours = Na),
          (co.asDays = La),
          (co.asWeeks = Va),
          (co.asMonths = Fa),
          (co.asQuarters = Ha),
          (co.asYears = ja),
          (co.valueOf = Pa),
          (co._bubble = ka),
          (co.clone = Ya),
          (co.get = Wa),
          (co.milliseconds = za),
          (co.seconds = Ga),
          (co.minutes = qa),
          (co.hours = Xa),
          (co.days = Za),
          (co.weeks = Qa),
          (co.months = Ka),
          (co.years = $a),
          (co.humanize = ao),
          (co.toISOString = lo),
          (co.toString = lo),
          (co.toJSON = lo),
          (co.locale = oi),
          (co.localeData = li),
          (co.toIsoString = A(
            "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
            lo
          )),
          (co.lang = si),
          H("X", 0, 0, "unix"),
          H("x", 0, 0, "valueOf"),
          It("x", Tt),
          It("X", Ct),
          Ft("X", function (t, e, n) {
            n._d = new Date(1e3 * parseFloat(t));
          }),
          Ft("x", function (t, e, n) {
            n._d = new Date(ut(t));
          }),
          (r.version = "2.29.4"),
          i(Zn),
          (r.fn = la),
          (r.min = Jn),
          (r.max = tr),
          (r.now = er),
          (r.utc = p),
          (r.unix = ca),
          (r.months = ga),
          (r.isDate = d),
          (r.locale = mn),
          (r.invalid = v),
          (r.duration = Rr),
          (r.isMoment = M),
          (r.weekdays = va),
          (r.parseZone = ua),
          (r.localeData = vn),
          (r.isDuration = sr),
          (r.monthsShort = _a),
          (r.weekdaysMin = ya),
          (r.defineLocale = gn),
          (r.updateLocale = _n),
          (r.locales = bn),
          (r.weekdaysShort = ba),
          (r.normalizeUnits = rt),
          (r.relativeTimeRounding = ro),
          (r.relativeTimeThreshold = io),
          (r.calendarFormat = jr),
          (r.prototype = la),
          (r.HTML5_FMT = {
            DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
            DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
            DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
            DATE: "YYYY-MM-DD",
            TIME: "HH:mm",
            TIME_SECONDS: "HH:mm:ss",
            TIME_MS: "HH:mm:ss.SSS",
            WEEK: "GGGG-[W]WW",
            MONTH: "YYYY-MM",
          }),
          r
        );
      })();
    },
    9140: function (t, e, n) {
      !(function (t, e, n, r) {
        "use strict";
        function i(t) {
          return t && "object" === typeof t && "default" in t
            ? t
            : { default: t };
        }
        var a = i(e),
          o = i(n),
          s = i(r);
        function l(t, e) {
          var n =
            ("undefined" !== typeof Symbol && t[Symbol.iterator]) ||
            t["@@iterator"];
          if (!n) {
            if (
              Array.isArray(t) ||
              (n = c(t)) ||
              (e && t && "number" === typeof t.length)
            ) {
              n && (t = n);
              var r = 0,
                i = function () {};
              return {
                s: i,
                n: function () {
                  return r >= t.length
                    ? { done: !0 }
                    : { done: !1, value: t[r++] };
                },
                e: function (t) {
                  throw t;
                },
                f: i,
              };
            }
            throw new TypeError(
              "Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
            );
          }
          var a,
            o = !0,
            s = !1;
          return {
            s: function () {
              n = n.call(t);
            },
            n: function () {
              var t = n.next();
              return (o = t.done), t;
            },
            e: function (t) {
              (s = !0), (a = t);
            },
            f: function () {
              try {
                o || null == n.return || n.return();
              } finally {
                if (s) throw a;
              }
            },
          };
        }
        function c(t, e) {
          if (t) {
            if ("string" === typeof t) return u(t, e);
            var n = Object.prototype.toString.call(t).slice(8, -1);
            return (
              "Object" === n && t.constructor && (n = t.constructor.name),
              "Map" === n || "Set" === n
                ? Array.from(t)
                : "Arguments" === n ||
                  /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                ? u(t, e)
                : void 0
            );
          }
        }
        function u(t, e) {
          (null == e || e > t.length) && (e = t.length);
          for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
          return r;
        }
        var d = (function () {
          function t(e) {
            var n =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0,
              r = arguments.length > 2 ? arguments[2] : void 0;
            if ((o.default(this, t), n < 0 || (void 0 !== r && r < 0)))
              throw new RangeError();
            var i = e.reduce(function (t, e) {
              return t + e.byteLength;
            }, 0);
            if (n > i || (void 0 !== r && n + r > i)) throw new RangeError();
            var a,
              s = [],
              c = void 0 === r ? i - n : r,
              u = [],
              d = 0,
              h = n,
              f = l(e);
            try {
              for (f.s(); !(a = f.n()).done; ) {
                var p = a.value;
                if (0 === u.length)
                  if (p.byteLength > h) {
                    var m = (d = p.byteLength - h) > c ? c : d;
                    s.push(new DataView(p, h, m)), u.push(p);
                  } else h -= p.byteLength;
                else if (d < c) {
                  var g =
                    (d += p.byteLength) > c
                      ? p.byteLength - d + c
                      : p.byteLength;
                  s.push(new DataView(p, 0, g)), u.push(p);
                }
              }
            } catch (_) {
              f.e(_);
            } finally {
              f.f();
            }
            (this._buffers = u),
              (this._byteLength = c),
              (this._byteOffset = h),
              (this._dataViews = s),
              (this._internalBuffer = new DataView(new ArrayBuffer(8)));
          }
          return (
            s.default(t, [
              {
                key: "buffers",
                get: function () {
                  return this._buffers;
                },
              },
              {
                key: "byteLength",
                get: function () {
                  return this._byteLength;
                },
              },
              {
                key: "byteOffset",
                get: function () {
                  return this._byteOffset;
                },
              },
              {
                key: "getFloat32",
                value: function (t, e) {
                  return (
                    this._internalBuffer.setUint8(0, this.getUint8(t + 0)),
                    this._internalBuffer.setUint8(1, this.getUint8(t + 1)),
                    this._internalBuffer.setUint8(2, this.getUint8(t + 2)),
                    this._internalBuffer.setUint8(3, this.getUint8(t + 3)),
                    this._internalBuffer.getFloat32(0, e)
                  );
                },
              },
              {
                key: "getFloat64",
                value: function (t, e) {
                  return (
                    this._internalBuffer.setUint8(0, this.getUint8(t + 0)),
                    this._internalBuffer.setUint8(1, this.getUint8(t + 1)),
                    this._internalBuffer.setUint8(2, this.getUint8(t + 2)),
                    this._internalBuffer.setUint8(3, this.getUint8(t + 3)),
                    this._internalBuffer.setUint8(4, this.getUint8(t + 4)),
                    this._internalBuffer.setUint8(5, this.getUint8(t + 5)),
                    this._internalBuffer.setUint8(6, this.getUint8(t + 6)),
                    this._internalBuffer.setUint8(7, this.getUint8(t + 7)),
                    this._internalBuffer.getFloat64(0, e)
                  );
                },
              },
              {
                key: "getInt16",
                value: function (t, e) {
                  return (
                    this._internalBuffer.setUint8(0, this.getUint8(t + 0)),
                    this._internalBuffer.setUint8(1, this.getUint8(t + 1)),
                    this._internalBuffer.getInt16(0, e)
                  );
                },
              },
              {
                key: "getInt32",
                value: function (t, e) {
                  return (
                    this._internalBuffer.setUint8(0, this.getUint8(t + 0)),
                    this._internalBuffer.setUint8(1, this.getUint8(t + 1)),
                    this._internalBuffer.setUint8(2, this.getUint8(t + 2)),
                    this._internalBuffer.setUint8(3, this.getUint8(t + 3)),
                    this._internalBuffer.getInt32(0, e)
                  );
                },
              },
              {
                key: "getInt8",
                value: function (t) {
                  var e = this._findDataViewWithOffset(t),
                    n = a.default(e, 2),
                    r = n[0],
                    i = n[1];
                  return r.getInt8(t - i);
                },
              },
              {
                key: "getUint16",
                value: function (t, e) {
                  return (
                    this._internalBuffer.setUint8(0, this.getUint8(t + 0)),
                    this._internalBuffer.setUint8(1, this.getUint8(t + 1)),
                    this._internalBuffer.getUint16(0, e)
                  );
                },
              },
              {
                key: "getUint32",
                value: function (t, e) {
                  return (
                    this._internalBuffer.setUint8(0, this.getUint8(t + 0)),
                    this._internalBuffer.setUint8(1, this.getUint8(t + 1)),
                    this._internalBuffer.setUint8(2, this.getUint8(t + 2)),
                    this._internalBuffer.setUint8(3, this.getUint8(t + 3)),
                    this._internalBuffer.getUint32(0, e)
                  );
                },
              },
              {
                key: "getUint8",
                value: function (t) {
                  var e = this._findDataViewWithOffset(t),
                    n = a.default(e, 2),
                    r = n[0],
                    i = n[1];
                  return r.getUint8(t - i);
                },
              },
              {
                key: "setFloat32",
                value: function (t, e, n) {
                  this._internalBuffer.setFloat32(0, e, n),
                    this.setUint8(t, this._internalBuffer.getUint8(0)),
                    this.setUint8(t + 1, this._internalBuffer.getUint8(1)),
                    this.setUint8(t + 2, this._internalBuffer.getUint8(2)),
                    this.setUint8(t + 3, this._internalBuffer.getUint8(3));
                },
              },
              {
                key: "setFloat64",
                value: function (t, e, n) {
                  this._internalBuffer.setFloat64(0, e, n),
                    this.setUint8(t, this._internalBuffer.getUint8(0)),
                    this.setUint8(t + 1, this._internalBuffer.getUint8(1)),
                    this.setUint8(t + 2, this._internalBuffer.getUint8(2)),
                    this.setUint8(t + 3, this._internalBuffer.getUint8(3)),
                    this.setUint8(t + 4, this._internalBuffer.getUint8(4)),
                    this.setUint8(t + 5, this._internalBuffer.getUint8(5)),
                    this.setUint8(t + 6, this._internalBuffer.getUint8(6)),
                    this.setUint8(t + 7, this._internalBuffer.getUint8(7));
                },
              },
              {
                key: "setInt16",
                value: function (t, e, n) {
                  this._internalBuffer.setInt16(0, e, n),
                    this.setUint8(t, this._internalBuffer.getUint8(0)),
                    this.setUint8(t + 1, this._internalBuffer.getUint8(1));
                },
              },
              {
                key: "setInt32",
                value: function (t, e, n) {
                  this._internalBuffer.setInt32(0, e, n),
                    this.setUint8(t, this._internalBuffer.getUint8(0)),
                    this.setUint8(t + 1, this._internalBuffer.getUint8(1)),
                    this.setUint8(t + 2, this._internalBuffer.getUint8(2)),
                    this.setUint8(t + 3, this._internalBuffer.getUint8(3));
                },
              },
              {
                key: "setInt8",
                value: function (t, e) {
                  var n = this._findDataViewWithOffset(t),
                    r = a.default(n, 2),
                    i = r[0],
                    o = r[1];
                  i.setInt8(t - o, e);
                },
              },
              {
                key: "setUint16",
                value: function (t, e, n) {
                  this._internalBuffer.setUint16(0, e, n),
                    this.setUint8(t, this._internalBuffer.getUint8(0)),
                    this.setUint8(t + 1, this._internalBuffer.getUint8(1));
                },
              },
              {
                key: "setUint32",
                value: function (t, e, n) {
                  this._internalBuffer.setUint32(0, e, n),
                    this.setUint8(t, this._internalBuffer.getUint8(0)),
                    this.setUint8(t + 1, this._internalBuffer.getUint8(1)),
                    this.setUint8(t + 2, this._internalBuffer.getUint8(2)),
                    this.setUint8(t + 3, this._internalBuffer.getUint8(3));
                },
              },
              {
                key: "setUint8",
                value: function (t, e) {
                  var n = this._findDataViewWithOffset(t),
                    r = a.default(n, 2),
                    i = r[0],
                    o = r[1];
                  i.setUint8(t - o, e);
                },
              },
              {
                key: "_findDataViewWithOffset",
                value: function (t) {
                  var e,
                    n = 0,
                    r = l(this._dataViews);
                  try {
                    for (r.s(); !(e = r.n()).done; ) {
                      var i = e.value,
                        a = n + i.byteLength;
                      if (t >= n && t < a) return [i, n];
                      n = a;
                    }
                  } catch (o) {
                    r.e(o);
                  } finally {
                    r.f();
                  }
                  throw new RangeError();
                },
              },
            ]),
            t
          );
        })();
        (t.MultiBufferDataView = d),
          Object.defineProperty(t, "__esModule", { value: !0 });
      })(e, n(7424), n(6690), n(9728));
    },
    125: (t, e, n) => {
      "use strict";
      n.d(e, { Z5: () => Ni, _l: () => va, bK: () => wa });
      var r = n(2791),
        i = n(4578),
        a = n(7462),
        o = n(1413);
      function s(t) {
        return (
          "Minified Redux error #" +
          t +
          "; visit https://redux.js.org/Errors?code=" +
          t +
          " for the full message or use the non-minified dev environment for full errors. "
        );
      }
      var l =
          ("function" === typeof Symbol && Symbol.observable) || "@@observable",
        c = function () {
          return Math.random().toString(36).substring(7).split("").join(".");
        },
        u = {
          INIT: "@@redux/INIT" + c(),
          REPLACE: "@@redux/REPLACE" + c(),
          PROBE_UNKNOWN_ACTION: function () {
            return "@@redux/PROBE_UNKNOWN_ACTION" + c();
          },
        };
      function d(t) {
        if ("object" !== typeof t || null === t) return !1;
        for (var e = t; null !== Object.getPrototypeOf(e); )
          e = Object.getPrototypeOf(e);
        return Object.getPrototypeOf(t) === e;
      }
      function h(t, e, n) {
        var r;
        if (
          ("function" === typeof e && "function" === typeof n) ||
          ("function" === typeof n && "function" === typeof arguments[3])
        )
          throw new Error(s(0));
        if (
          ("function" === typeof e &&
            "undefined" === typeof n &&
            ((n = e), (e = void 0)),
          "undefined" !== typeof n)
        ) {
          if ("function" !== typeof n) throw new Error(s(1));
          return n(h)(t, e);
        }
        if ("function" !== typeof t) throw new Error(s(2));
        var i = t,
          a = e,
          o = [],
          c = o,
          f = !1;
        function p() {
          c === o && (c = o.slice());
        }
        function m() {
          if (f) throw new Error(s(3));
          return a;
        }
        function g(t) {
          if ("function" !== typeof t) throw new Error(s(4));
          if (f) throw new Error(s(5));
          var e = !0;
          return (
            p(),
            c.push(t),
            function () {
              if (e) {
                if (f) throw new Error(s(6));
                (e = !1), p();
                var n = c.indexOf(t);
                c.splice(n, 1), (o = null);
              }
            }
          );
        }
        function _(t) {
          if (!d(t)) throw new Error(s(7));
          if ("undefined" === typeof t.type) throw new Error(s(8));
          if (f) throw new Error(s(9));
          try {
            (f = !0), (a = i(a, t));
          } finally {
            f = !1;
          }
          for (var e = (o = c), n = 0; n < e.length; n++) {
            (0, e[n])();
          }
          return t;
        }
        return (
          _({ type: u.INIT }),
          ((r = {
            dispatch: _,
            subscribe: g,
            getState: m,
            replaceReducer: function (t) {
              if ("function" !== typeof t) throw new Error(s(10));
              (i = t), _({ type: u.REPLACE });
            },
          })[l] = function () {
            var t,
              e = g;
            return (
              ((t = {
                subscribe: function (t) {
                  if ("object" !== typeof t || null === t)
                    throw new Error(s(11));
                  function n() {
                    t.next && t.next(m());
                  }
                  return n(), { unsubscribe: e(n) };
                },
              })[l] = function () {
                return this;
              }),
              t
            );
          }),
          r
        );
      }
      function f(t, e) {
        return function () {
          return e(t.apply(this, arguments));
        };
      }
      function p(t, e) {
        if ("function" === typeof t) return f(t, e);
        if ("object" !== typeof t || null === t) throw new Error(s(16));
        var n = {};
        for (var r in t) {
          var i = t[r];
          "function" === typeof i && (n[r] = f(i, e));
        }
        return n;
      }
      function m() {
        for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
          e[n] = arguments[n];
        return 0 === e.length
          ? function (t) {
              return t;
            }
          : 1 === e.length
          ? e[0]
          : e.reduce(function (t, e) {
              return function () {
                return t(e.apply(void 0, arguments));
              };
            });
      }
      var g = r.createContext(null);
      var _ = function (t) {
          t();
        },
        v = function () {
          return _;
        };
      var b = {
        notify: function () {},
        get: function () {
          return [];
        },
      };
      function y(t, e) {
        var n,
          r = b;
        function i() {
          o.onStateChange && o.onStateChange();
        }
        function a() {
          n ||
            ((n = e ? e.addNestedSub(i) : t.subscribe(i)),
            (r = (function () {
              var t = v(),
                e = null,
                n = null;
              return {
                clear: function () {
                  (e = null), (n = null);
                },
                notify: function () {
                  t(function () {
                    for (var t = e; t; ) t.callback(), (t = t.next);
                  });
                },
                get: function () {
                  for (var t = [], n = e; n; ) t.push(n), (n = n.next);
                  return t;
                },
                subscribe: function (t) {
                  var r = !0,
                    i = (n = { callback: t, next: null, prev: n });
                  return (
                    i.prev ? (i.prev.next = i) : (e = i),
                    function () {
                      r &&
                        null !== e &&
                        ((r = !1),
                        i.next ? (i.next.prev = i.prev) : (n = i.prev),
                        i.prev ? (i.prev.next = i.next) : (e = i.next));
                    }
                  );
                },
              };
            })()));
        }
        var o = {
          addNestedSub: function (t) {
            return a(), r.subscribe(t);
          },
          notifyNestedSubs: function () {
            r.notify();
          },
          handleChangeWrapper: i,
          isSubscribed: function () {
            return Boolean(n);
          },
          trySubscribe: a,
          tryUnsubscribe: function () {
            n && (n(), (n = void 0), r.clear(), (r = b));
          },
          getListeners: function () {
            return r;
          },
        };
        return o;
      }
      var x =
        "undefined" !== typeof window &&
        "undefined" !== typeof window.document &&
        "undefined" !== typeof window.document.createElement
          ? r.useLayoutEffect
          : r.useEffect;
      const w = function (t) {
        var e = t.store,
          n = t.context,
          i = t.children,
          a = (0, r.useMemo)(
            function () {
              var t = y(e);
              return { store: e, subscription: t };
            },
            [e]
          ),
          o = (0, r.useMemo)(
            function () {
              return e.getState();
            },
            [e]
          );
        x(
          function () {
            var t = a.subscription;
            return (
              (t.onStateChange = t.notifyNestedSubs),
              t.trySubscribe(),
              o !== e.getState() && t.notifyNestedSubs(),
              function () {
                t.tryUnsubscribe(), (t.onStateChange = null);
              }
            );
          },
          [a, o]
        );
        var s = n || g;
        return r.createElement(s.Provider, { value: a }, i);
      };
      var M = n(3366),
        S = n(2110),
        A = n.n(S),
        E = n(7441),
        k = [
          "getDisplayName",
          "methodName",
          "renderCountProp",
          "shouldHandleStateChanges",
          "storeKey",
          "withRef",
          "forwardRef",
          "context",
        ],
        R = ["reactReduxForwardedRef"],
        T = [],
        O = [null, null];
      function P(t, e) {
        var n = t[1];
        return [e.payload, n + 1];
      }
      function C(t, e, n) {
        x(function () {
          return t.apply(void 0, e);
        }, n);
      }
      function D(t, e, n, r, i, a, o) {
        (t.current = r),
          (e.current = i),
          (n.current = !1),
          a.current && ((a.current = null), o());
      }
      function I(t, e, n, r, i, a, o, s, l, c) {
        if (t) {
          var u = !1,
            d = null,
            h = function () {
              if (!u) {
                var t,
                  n,
                  h = e.getState();
                try {
                  t = r(h, i.current);
                } catch (f) {
                  (n = f), (d = f);
                }
                n || (d = null),
                  t === a.current
                    ? o.current || l()
                    : ((a.current = t),
                      (s.current = t),
                      (o.current = !0),
                      c({ type: "STORE_UPDATED", payload: { error: n } }));
              }
            };
          (n.onStateChange = h), n.trySubscribe(), h();
          return function () {
            if (((u = !0), n.tryUnsubscribe(), (n.onStateChange = null), d))
              throw d;
          };
        }
      }
      var B = function () {
        return [null, 0];
      };
      function N(t, e) {
        void 0 === e && (e = {});
        var n = e,
          i = n.getDisplayName,
          o =
            void 0 === i
              ? function (t) {
                  return "ConnectAdvanced(" + t + ")";
                }
              : i,
          s = n.methodName,
          l = void 0 === s ? "connectAdvanced" : s,
          c = n.renderCountProp,
          u = void 0 === c ? void 0 : c,
          d = n.shouldHandleStateChanges,
          h = void 0 === d || d,
          f = n.storeKey,
          p = void 0 === f ? "store" : f,
          m = (n.withRef, n.forwardRef),
          _ = void 0 !== m && m,
          v = n.context,
          b = void 0 === v ? g : v,
          x = (0, M.Z)(n, k),
          w = b;
        return function (e) {
          var n = e.displayName || e.name || "Component",
            i = o(n),
            s = (0, a.Z)({}, x, {
              getDisplayName: o,
              methodName: l,
              renderCountProp: u,
              shouldHandleStateChanges: h,
              storeKey: p,
              displayName: i,
              wrappedComponentName: n,
              WrappedComponent: e,
            }),
            c = x.pure;
          var d = c
            ? r.useMemo
            : function (t) {
                return t();
              };
          function f(n) {
            var i = (0, r.useMemo)(
                function () {
                  var t = n.reactReduxForwardedRef,
                    e = (0, M.Z)(n, R);
                  return [n.context, t, e];
                },
                [n]
              ),
              o = i[0],
              l = i[1],
              c = i[2],
              u = (0, r.useMemo)(
                function () {
                  return o &&
                    o.Consumer &&
                    (0, E.isContextConsumer)(r.createElement(o.Consumer, null))
                    ? o
                    : w;
                },
                [o, w]
              ),
              f = (0, r.useContext)(u),
              p =
                Boolean(n.store) &&
                Boolean(n.store.getState) &&
                Boolean(n.store.dispatch);
            Boolean(f) && Boolean(f.store);
            var m = p ? n.store : f.store,
              g = (0, r.useMemo)(
                function () {
                  return (function (e) {
                    return t(e.dispatch, s);
                  })(m);
                },
                [m]
              ),
              _ = (0, r.useMemo)(
                function () {
                  if (!h) return O;
                  var t = y(m, p ? null : f.subscription),
                    e = t.notifyNestedSubs.bind(t);
                  return [t, e];
                },
                [m, p, f]
              ),
              v = _[0],
              b = _[1],
              x = (0, r.useMemo)(
                function () {
                  return p ? f : (0, a.Z)({}, f, { subscription: v });
                },
                [p, f, v]
              ),
              S = (0, r.useReducer)(P, T, B),
              A = S[0][0],
              k = S[1];
            if (A && A.error) throw A.error;
            var N = (0, r.useRef)(),
              L = (0, r.useRef)(c),
              V = (0, r.useRef)(),
              F = (0, r.useRef)(!1),
              H = d(
                function () {
                  return V.current && c === L.current
                    ? V.current
                    : g(m.getState(), c);
                },
                [m, A, c]
              );
            C(D, [L, N, F, c, H, V, b]),
              C(I, [h, m, v, g, L, N, F, V, b, k], [m, v, g]);
            var j = (0, r.useMemo)(
              function () {
                return r.createElement(e, (0, a.Z)({}, H, { ref: l }));
              },
              [l, e, H]
            );
            return (0, r.useMemo)(
              function () {
                return h ? r.createElement(u.Provider, { value: x }, j) : j;
              },
              [u, j, x]
            );
          }
          var m = c ? r.memo(f) : f;
          if (
            ((m.WrappedComponent = e), (m.displayName = f.displayName = i), _)
          ) {
            var g = r.forwardRef(function (t, e) {
              return r.createElement(
                m,
                (0, a.Z)({}, t, { reactReduxForwardedRef: e })
              );
            });
            return (g.displayName = i), (g.WrappedComponent = e), A()(g, e);
          }
          return A()(m, e);
        };
      }
      function L(t, e) {
        return t === e
          ? 0 !== t || 0 !== e || 1 / t === 1 / e
          : t !== t && e !== e;
      }
      function V(t, e) {
        if (L(t, e)) return !0;
        if (
          "object" !== typeof t ||
          null === t ||
          "object" !== typeof e ||
          null === e
        )
          return !1;
        var n = Object.keys(t),
          r = Object.keys(e);
        if (n.length !== r.length) return !1;
        for (var i = 0; i < n.length; i++)
          if (
            !Object.prototype.hasOwnProperty.call(e, n[i]) ||
            !L(t[n[i]], e[n[i]])
          )
            return !1;
        return !0;
      }
      function F(t) {
        return function (e, n) {
          var r = t(e, n);
          function i() {
            return r;
          }
          return (i.dependsOnOwnProps = !1), i;
        };
      }
      function H(t) {
        return null !== t.dependsOnOwnProps && void 0 !== t.dependsOnOwnProps
          ? Boolean(t.dependsOnOwnProps)
          : 1 !== t.length;
      }
      function j(t, e) {
        return function (e, n) {
          n.displayName;
          var r = function (t, e) {
            return r.dependsOnOwnProps ? r.mapToProps(t, e) : r.mapToProps(t);
          };
          return (
            (r.dependsOnOwnProps = !0),
            (r.mapToProps = function (e, n) {
              (r.mapToProps = t), (r.dependsOnOwnProps = H(t));
              var i = r(e, n);
              return (
                "function" === typeof i &&
                  ((r.mapToProps = i),
                  (r.dependsOnOwnProps = H(i)),
                  (i = r(e, n))),
                i
              );
            }),
            r
          );
        };
      }
      const Y = [
        function (t) {
          return "function" === typeof t ? j(t) : void 0;
        },
        function (t) {
          return t
            ? void 0
            : F(function (t) {
                return { dispatch: t };
              });
        },
        function (t) {
          return t && "object" === typeof t
            ? F(function (e) {
                return (function (t, e) {
                  var n = {},
                    r = function (r) {
                      var i = t[r];
                      "function" === typeof i &&
                        (n[r] = function () {
                          return e(i.apply(void 0, arguments));
                        });
                    };
                  for (var i in t) r(i);
                  return n;
                })(t, e);
              })
            : void 0;
        },
      ];
      const W = [
        function (t) {
          return "function" === typeof t ? j(t) : void 0;
        },
        function (t) {
          return t
            ? void 0
            : F(function () {
                return {};
              });
        },
      ];
      function U(t, e, n) {
        return (0, a.Z)({}, n, t, e);
      }
      const z = [
        function (t) {
          return "function" === typeof t
            ? (function (t) {
                return function (e, n) {
                  n.displayName;
                  var r,
                    i = n.pure,
                    a = n.areMergedPropsEqual,
                    o = !1;
                  return function (e, n, s) {
                    var l = t(e, n, s);
                    return (
                      o ? (i && a(l, r)) || (r = l) : ((o = !0), (r = l)), r
                    );
                  };
                };
              })(t)
            : void 0;
        },
        function (t) {
          return t
            ? void 0
            : function () {
                return U;
              };
        },
      ];
      var G = [
        "initMapStateToProps",
        "initMapDispatchToProps",
        "initMergeProps",
      ];
      function q(t, e, n, r) {
        return function (i, a) {
          return n(t(i, a), e(r, a), a);
        };
      }
      function X(t, e, n, r, i) {
        var a,
          o,
          s,
          l,
          c,
          u = i.areStatesEqual,
          d = i.areOwnPropsEqual,
          h = i.areStatePropsEqual,
          f = !1;
        function p(i, f) {
          var p = !d(f, o),
            m = !u(i, a, f, o);
          return (
            (a = i),
            (o = f),
            p && m
              ? ((s = t(a, o)),
                e.dependsOnOwnProps && (l = e(r, o)),
                (c = n(s, l, o)))
              : p
              ? (t.dependsOnOwnProps && (s = t(a, o)),
                e.dependsOnOwnProps && (l = e(r, o)),
                (c = n(s, l, o)))
              : m
              ? (function () {
                  var e = t(a, o),
                    r = !h(e, s);
                  return (s = e), r && (c = n(s, l, o)), c;
                })()
              : c
          );
        }
        return function (i, u) {
          return f
            ? p(i, u)
            : ((s = t((a = i), (o = u))),
              (l = e(r, o)),
              (c = n(s, l, o)),
              (f = !0),
              c);
        };
      }
      function Z(t, e) {
        var n = e.initMapStateToProps,
          r = e.initMapDispatchToProps,
          i = e.initMergeProps,
          a = (0, M.Z)(e, G),
          o = n(t, a),
          s = r(t, a),
          l = i(t, a);
        return (a.pure ? X : q)(o, s, l, t, a);
      }
      var K = [
        "pure",
        "areStatesEqual",
        "areOwnPropsEqual",
        "areStatePropsEqual",
        "areMergedPropsEqual",
      ];
      function $(t, e, n) {
        for (var r = e.length - 1; r >= 0; r--) {
          var i = e[r](t);
          if (i) return i;
        }
        return function (e, r) {
          throw new Error(
            "Invalid value of type " +
              typeof t +
              " for " +
              n +
              " argument when connecting component " +
              r.wrappedComponentName +
              "."
          );
        };
      }
      function Q(t, e) {
        return t === e;
      }
      function J(t) {
        var e = void 0 === t ? {} : t,
          n = e.connectHOC,
          r = void 0 === n ? N : n,
          i = e.mapStateToPropsFactories,
          o = void 0 === i ? W : i,
          s = e.mapDispatchToPropsFactories,
          l = void 0 === s ? Y : s,
          c = e.mergePropsFactories,
          u = void 0 === c ? z : c,
          d = e.selectorFactory,
          h = void 0 === d ? Z : d;
        return function (t, e, n, i) {
          void 0 === i && (i = {});
          var s = i,
            c = s.pure,
            d = void 0 === c || c,
            f = s.areStatesEqual,
            p = void 0 === f ? Q : f,
            m = s.areOwnPropsEqual,
            g = void 0 === m ? V : m,
            _ = s.areStatePropsEqual,
            v = void 0 === _ ? V : _,
            b = s.areMergedPropsEqual,
            y = void 0 === b ? V : b,
            x = (0, M.Z)(s, K),
            w = $(t, o, "mapStateToProps"),
            S = $(e, l, "mapDispatchToProps"),
            A = $(n, u, "mergeProps");
          return r(
            h,
            (0, a.Z)(
              {
                methodName: "connect",
                getDisplayName: function (t) {
                  return "Connect(" + t + ")";
                },
                shouldHandleStateChanges: Boolean(t),
                initMapStateToProps: w,
                initMapDispatchToProps: S,
                initMergeProps: A,
                pure: d,
                areStatesEqual: p,
                areOwnPropsEqual: g,
                areStatePropsEqual: v,
                areMergedPropsEqual: y,
              },
              x
            )
          );
        };
      }
      const tt = J();
      var et,
        nt = n(4164);
      function rt(t, e) {
        var n = (0, r.useState)(function () {
            return { inputs: e, result: t() };
          })[0],
          i = (0, r.useRef)(!0),
          a = (0, r.useRef)(n),
          o =
            i.current ||
            Boolean(
              e &&
                a.current.inputs &&
                (function (t, e) {
                  if (t.length !== e.length) return !1;
                  for (var n = 0; n < t.length; n++)
                    if (t[n] !== e[n]) return !1;
                  return !0;
                })(e, a.current.inputs)
            )
              ? a.current
              : { inputs: e, result: t() };
        return (
          (0, r.useEffect)(
            function () {
              (i.current = !1), (a.current = o);
            },
            [o]
          ),
          o.result
        );
      }
      (et = nt.unstable_batchedUpdates), (_ = et);
      var it = rt,
        at = function (t, e) {
          return rt(function () {
            return t;
          }, e);
        },
        ot = n(4554),
        st = function (t) {
          var e = t.top,
            n = t.right,
            r = t.bottom,
            i = t.left;
          return {
            top: e,
            right: n,
            bottom: r,
            left: i,
            width: n - i,
            height: r - e,
            x: i,
            y: e,
            center: { x: (n + i) / 2, y: (r + e) / 2 },
          };
        },
        lt = function (t, e) {
          return {
            top: t.top - e.top,
            left: t.left - e.left,
            bottom: t.bottom + e.bottom,
            right: t.right + e.right,
          };
        },
        ct = function (t, e) {
          return {
            top: t.top + e.top,
            left: t.left + e.left,
            bottom: t.bottom - e.bottom,
            right: t.right - e.right,
          };
        },
        ut = { top: 0, right: 0, bottom: 0, left: 0 },
        dt = function (t) {
          var e = t.borderBox,
            n = t.margin,
            r = void 0 === n ? ut : n,
            i = t.border,
            a = void 0 === i ? ut : i,
            o = t.padding,
            s = void 0 === o ? ut : o,
            l = st(lt(e, r)),
            c = st(ct(e, a)),
            u = st(ct(c, s));
          return {
            marginBox: l,
            borderBox: st(e),
            paddingBox: c,
            contentBox: u,
            margin: r,
            border: a,
            padding: s,
          };
        },
        ht = function (t) {
          var e = t.slice(0, -2);
          if ("px" !== t.slice(-2)) return 0;
          var n = Number(e);
          return isNaN(n) && (0, ot.Z)(!1), n;
        },
        ft = function (t, e) {
          var n,
            r,
            i = t.borderBox,
            a = t.border,
            o = t.margin,
            s = t.padding,
            l =
              ((r = e),
              {
                top: (n = i).top + r.y,
                left: n.left + r.x,
                bottom: n.bottom + r.y,
                right: n.right + r.x,
              });
          return dt({ borderBox: l, border: a, margin: o, padding: s });
        },
        pt = function (t, e) {
          return (
            void 0 === e &&
              (e = { x: window.pageXOffset, y: window.pageYOffset }),
            ft(t, e)
          );
        },
        mt = function (t, e) {
          var n = {
              top: ht(e.marginTop),
              right: ht(e.marginRight),
              bottom: ht(e.marginBottom),
              left: ht(e.marginLeft),
            },
            r = {
              top: ht(e.paddingTop),
              right: ht(e.paddingRight),
              bottom: ht(e.paddingBottom),
              left: ht(e.paddingLeft),
            },
            i = {
              top: ht(e.borderTopWidth),
              right: ht(e.borderRightWidth),
              bottom: ht(e.borderBottomWidth),
              left: ht(e.borderLeftWidth),
            };
          return dt({ borderBox: t, margin: n, padding: r, border: i });
        },
        gt = function (t) {
          var e = t.getBoundingClientRect(),
            n = window.getComputedStyle(t);
          return mt(e, n);
        },
        _t = n(5781);
      const vt = function (t) {
        var e = [],
          n = null,
          r = function () {
            for (var r = arguments.length, i = new Array(r), a = 0; a < r; a++)
              i[a] = arguments[a];
            (e = i),
              n ||
                (n = requestAnimationFrame(function () {
                  (n = null), t.apply(void 0, e);
                }));
          };
        return (
          (r.cancel = function () {
            n && (cancelAnimationFrame(n), (n = null));
          }),
          r
        );
      };
      function bt(t, e) {}
      bt.bind(null, "warn"), bt.bind(null, "error");
      function yt() {}
      function xt(t, e, n) {
        var r = e.map(function (e) {
          var r = (function (t, e) {
            return (0, a.Z)({}, t, {}, e);
          })(n, e.options);
          return (
            t.addEventListener(e.eventName, e.fn, r),
            function () {
              t.removeEventListener(e.eventName, e.fn, r);
            }
          );
        });
        return function () {
          r.forEach(function (t) {
            t();
          });
        };
      }
      var wt = !0,
        Mt = "Invariant failed";
      function St(t) {
        this.message = t;
      }
      function At(t, e) {
        if (!t) throw new St(wt ? Mt : Mt + ": " + (e || ""));
      }
      St.prototype.toString = function () {
        return this.message;
      };
      var Et = (function (t) {
          function e() {
            for (
              var e, n = arguments.length, r = new Array(n), i = 0;
              i < n;
              i++
            )
              r[i] = arguments[i];
            return (
              ((e = t.call.apply(t, [this].concat(r)) || this).callbacks =
                null),
              (e.unbind = yt),
              (e.onWindowError = function (t) {
                var n = e.getCallbacks();
                n.isDragging() && n.tryAbort(),
                  t.error instanceof St && t.preventDefault();
              }),
              (e.getCallbacks = function () {
                if (!e.callbacks)
                  throw new Error(
                    "Unable to find AppCallbacks in <ErrorBoundary/>"
                  );
                return e.callbacks;
              }),
              (e.setCallbacks = function (t) {
                e.callbacks = t;
              }),
              e
            );
          }
          (0, i.Z)(e, t);
          var n = e.prototype;
          return (
            (n.componentDidMount = function () {
              this.unbind = xt(window, [
                { eventName: "error", fn: this.onWindowError },
              ]);
            }),
            (n.componentDidCatch = function (t) {
              if (!(t instanceof St)) throw t;
              this.setState({});
            }),
            (n.componentWillUnmount = function () {
              this.unbind();
            }),
            (n.render = function () {
              return this.props.children(this.setCallbacks);
            }),
            e
          );
        })(r.Component),
        kt = function (t) {
          return t + 1;
        },
        Rt = function (t, e) {
          var n = t.droppableId === e.droppableId,
            r = kt(t.index),
            i = kt(e.index);
          return n
            ? "\n      You have moved the item from position " +
                r +
                "\n      to position " +
                i +
                "\n    "
            : "\n    You have moved the item from position " +
                r +
                "\n    in list " +
                t.droppableId +
                "\n    to list " +
                e.droppableId +
                "\n    in position " +
                i +
                "\n  ";
        },
        Tt = function (t, e, n) {
          return e.droppableId === n.droppableId
            ? "\n      The item " +
                t +
                "\n      has been combined with " +
                n.draggableId
            : "\n      The item " +
                t +
                "\n      in list " +
                e.droppableId +
                "\n      has been combined with " +
                n.draggableId +
                "\n      in list " +
                n.droppableId +
                "\n    ";
        },
        Ot = function (t) {
          return (
            "\n  The item has returned to its starting position\n  of " +
            kt(t.index) +
            "\n"
          );
        },
        Pt = {
          dragHandleUsageInstructions:
            "\n  Press space bar to start a drag.\n  When dragging you can use the arrow keys to move the item around and escape to cancel.\n  Some screen readers may require you to be in focus mode or to use your pass through key\n",
          onDragStart: function (t) {
            return (
              "\n  You have lifted an item in position " +
              kt(t.source.index) +
              "\n"
            );
          },
          onDragUpdate: function (t) {
            var e = t.destination;
            if (e) return Rt(t.source, e);
            var n = t.combine;
            return n
              ? Tt(t.draggableId, t.source, n)
              : "You are over an area that cannot be dropped on";
          },
          onDragEnd: function (t) {
            if ("CANCEL" === t.reason)
              return (
                "\n      Movement cancelled.\n      " + Ot(t.source) + "\n    "
              );
            var e = t.destination,
              n = t.combine;
            return e
              ? "\n      You have dropped the item.\n      " +
                  Rt(t.source, e) +
                  "\n    "
              : n
              ? "\n      You have dropped the item.\n      " +
                Tt(t.draggableId, t.source, n) +
                "\n    "
              : "\n    The item has been dropped while not over a drop area.\n    " +
                Ot(t.source) +
                "\n  ";
          },
        },
        Ct = { x: 0, y: 0 },
        Dt = function (t, e) {
          return { x: t.x + e.x, y: t.y + e.y };
        },
        It = function (t, e) {
          return { x: t.x - e.x, y: t.y - e.y };
        },
        Bt = function (t, e) {
          return t.x === e.x && t.y === e.y;
        },
        Nt = function (t) {
          return { x: 0 !== t.x ? -t.x : 0, y: 0 !== t.y ? -t.y : 0 };
        },
        Lt = function (t, e, n) {
          var r;
          return (
            void 0 === n && (n = 0),
            ((r = {})[t] = e),
            (r["x" === t ? "y" : "x"] = n),
            r
          );
        },
        Vt = function (t, e) {
          return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2));
        },
        Ft = function (t, e) {
          return Math.min.apply(
            Math,
            e.map(function (e) {
              return Vt(t, e);
            })
          );
        },
        Ht = function (t) {
          return function (e) {
            return { x: t(e.x), y: t(e.y) };
          };
        },
        jt = function (t, e) {
          return {
            top: t.top + e.y,
            left: t.left + e.x,
            bottom: t.bottom + e.y,
            right: t.right + e.x,
          };
        },
        Yt = function (t) {
          return [
            { x: t.left, y: t.top },
            { x: t.right, y: t.top },
            { x: t.left, y: t.bottom },
            { x: t.right, y: t.bottom },
          ];
        },
        Wt = function (t, e) {
          return e && e.shouldClipSubject
            ? (function (t, e) {
                var n = st({
                  top: Math.max(e.top, t.top),
                  right: Math.min(e.right, t.right),
                  bottom: Math.min(e.bottom, t.bottom),
                  left: Math.max(e.left, t.left),
                });
                return n.width <= 0 || n.height <= 0 ? null : n;
              })(e.pageMarginBox, t)
            : st(t);
        },
        Ut = function (t) {
          var e = t.page,
            n = t.withPlaceholder,
            r = t.axis,
            i = t.frame,
            o = (function (t, e) {
              return e ? jt(t, e.scroll.diff.displacement) : t;
            })(e.marginBox, i),
            s = (function (t, e, n) {
              var r;
              return n && n.increasedBy
                ? (0, a.Z)(
                    {},
                    t,
                    (((r = {})[e.end] = t[e.end] + n.increasedBy[e.line]), r)
                  )
                : t;
            })(o, r, n);
          return { page: e, withPlaceholder: n, active: Wt(s, i) };
        },
        zt = function (t, e) {
          t.frame || At(!1);
          var n = t.frame,
            r = It(e, n.scroll.initial),
            i = Nt(r),
            o = (0, a.Z)({}, n, {
              scroll: {
                initial: n.scroll.initial,
                current: e,
                diff: { value: r, displacement: i },
                max: n.scroll.max,
              },
            }),
            s = Ut({
              page: t.subject.page,
              withPlaceholder: t.subject.withPlaceholder,
              axis: t.axis,
              frame: o,
            });
          return (0, a.Z)({}, t, { frame: o, subject: s });
        };
      function Gt(t) {
        return Object.values
          ? Object.values(t)
          : Object.keys(t).map(function (e) {
              return t[e];
            });
      }
      function qt(t, e) {
        if (t.findIndex) return t.findIndex(e);
        for (var n = 0; n < t.length; n++) if (e(t[n])) return n;
        return -1;
      }
      function Xt(t, e) {
        if (t.find) return t.find(e);
        var n = qt(t, e);
        return -1 !== n ? t[n] : void 0;
      }
      function Zt(t) {
        return Array.prototype.slice.call(t);
      }
      var Kt = (0, _t.default)(function (t) {
          return t.reduce(function (t, e) {
            return (t[e.descriptor.id] = e), t;
          }, {});
        }),
        $t = (0, _t.default)(function (t) {
          return t.reduce(function (t, e) {
            return (t[e.descriptor.id] = e), t;
          }, {});
        }),
        Qt = (0, _t.default)(function (t) {
          return Gt(t);
        }),
        Jt = (0, _t.default)(function (t) {
          return Gt(t);
        }),
        te = (0, _t.default)(function (t, e) {
          var n = Jt(e)
            .filter(function (e) {
              return t === e.descriptor.droppableId;
            })
            .sort(function (t, e) {
              return t.descriptor.index - e.descriptor.index;
            });
          return n;
        });
      function ee(t) {
        return t.at && "REORDER" === t.at.type ? t.at.destination : null;
      }
      function ne(t) {
        return t.at && "COMBINE" === t.at.type ? t.at.combine : null;
      }
      var re = (0, _t.default)(function (t, e) {
          return e.filter(function (e) {
            return e.descriptor.id !== t.descriptor.id;
          });
        }),
        ie = function (t, e) {
          return t.descriptor.droppableId === e.descriptor.id;
        },
        ae = { point: Ct, value: 0 },
        oe = { invisible: {}, visible: {}, all: [] },
        se = { displaced: oe, displacedBy: ae, at: null },
        le = function (t, e) {
          return function (n) {
            return t <= n && n <= e;
          };
        },
        ce = function (t) {
          var e = le(t.top, t.bottom),
            n = le(t.left, t.right);
          return function (r) {
            if (e(r.top) && e(r.bottom) && n(r.left) && n(r.right)) return !0;
            var i = e(r.top) || e(r.bottom),
              a = n(r.left) || n(r.right);
            if (i && a) return !0;
            var o = r.top < t.top && r.bottom > t.bottom,
              s = r.left < t.left && r.right > t.right;
            return !(!o || !s) || (o && a) || (s && i);
          };
        },
        ue = function (t) {
          var e = le(t.top, t.bottom),
            n = le(t.left, t.right);
          return function (t) {
            return e(t.top) && e(t.bottom) && n(t.left) && n(t.right);
          };
        },
        de = {
          direction: "vertical",
          line: "y",
          crossAxisLine: "x",
          start: "top",
          end: "bottom",
          size: "height",
          crossAxisStart: "left",
          crossAxisEnd: "right",
          crossAxisSize: "width",
        },
        he = {
          direction: "horizontal",
          line: "x",
          crossAxisLine: "y",
          start: "left",
          end: "right",
          size: "width",
          crossAxisStart: "top",
          crossAxisEnd: "bottom",
          crossAxisSize: "height",
        },
        fe = function (t) {
          var e = t.target,
            n = t.destination,
            r = t.viewport,
            i = t.withDroppableDisplacement,
            a = t.isVisibleThroughFrameFn,
            o = i
              ? (function (t, e) {
                  var n = e.frame ? e.frame.scroll.diff.displacement : Ct;
                  return jt(t, n);
                })(e, n)
              : e;
          return (
            (function (t, e, n) {
              return !!e.subject.active && n(e.subject.active)(t);
            })(o, n, a) &&
            (function (t, e, n) {
              return n(e)(t);
            })(o, r, a)
          );
        },
        pe = function (t) {
          return fe((0, a.Z)({}, t, { isVisibleThroughFrameFn: ce }));
        },
        me = function (t) {
          return fe((0, a.Z)({}, t, { isVisibleThroughFrameFn: ue }));
        },
        ge = function (t, e, n) {
          if ("boolean" === typeof n) return n;
          if (!e) return !0;
          var r = e.invisible,
            i = e.visible;
          if (r[t]) return !1;
          var a = i[t];
          return !a || a.shouldAnimate;
        };
      function _e(t) {
        var e = t.afterDragging,
          n = t.destination,
          r = t.displacedBy,
          i = t.viewport,
          a = t.forceShouldAnimate,
          o = t.last;
        return e.reduce(
          function (t, e) {
            var s = (function (t, e) {
                var n = t.page.marginBox,
                  r = { top: e.point.y, right: 0, bottom: 0, left: e.point.x };
                return st(lt(n, r));
              })(e, r),
              l = e.descriptor.id;
            if (
              (t.all.push(l),
              !pe({
                target: s,
                destination: n,
                viewport: i,
                withDroppableDisplacement: !0,
              }))
            )
              return (t.invisible[e.descriptor.id] = !0), t;
            var c = { draggableId: l, shouldAnimate: ge(l, o, a) };
            return (t.visible[l] = c), t;
          },
          { all: [], visible: {}, invisible: {} }
        );
      }
      function ve(t) {
        var e = t.insideDestination,
          n = t.inHomeList,
          r = t.displacedBy,
          i = t.destination,
          a = (function (t, e) {
            if (!t.length) return 0;
            var n = t[t.length - 1].descriptor.index;
            return e.inHomeList ? n : n + 1;
          })(e, { inHomeList: n });
        return {
          displaced: oe,
          displacedBy: r,
          at: {
            type: "REORDER",
            destination: { droppableId: i.descriptor.id, index: a },
          },
        };
      }
      function be(t) {
        var e = t.draggable,
          n = t.insideDestination,
          r = t.destination,
          i = t.viewport,
          a = t.displacedBy,
          o = t.last,
          s = t.index,
          l = t.forceShouldAnimate,
          c = ie(e, r);
        if (null == s)
          return ve({
            insideDestination: n,
            inHomeList: c,
            displacedBy: a,
            destination: r,
          });
        var u = Xt(n, function (t) {
          return t.descriptor.index === s;
        });
        if (!u)
          return ve({
            insideDestination: n,
            inHomeList: c,
            displacedBy: a,
            destination: r,
          });
        var d = re(e, n),
          h = n.indexOf(u);
        return {
          displaced: _e({
            afterDragging: d.slice(h),
            destination: r,
            displacedBy: a,
            last: o,
            viewport: i.frame,
            forceShouldAnimate: l,
          }),
          displacedBy: a,
          at: {
            type: "REORDER",
            destination: { droppableId: r.descriptor.id, index: s },
          },
        };
      }
      function ye(t, e) {
        return Boolean(e.effected[t]);
      }
      var xe = function (t) {
          var e = t.isMovingForward,
            n = t.isInHomeList,
            r = t.draggable,
            i = t.draggables,
            a = t.destination,
            o = t.insideDestination,
            s = t.previousImpact,
            l = t.viewport,
            c = t.afterCritical,
            u = s.at;
          if ((u || At(!1), "REORDER" === u.type)) {
            var d = (function (t) {
              var e = t.isMovingForward,
                n = t.isInHomeList,
                r = t.insideDestination,
                i = t.location;
              if (!r.length) return null;
              var a = i.index,
                o = e ? a + 1 : a - 1,
                s = r[0].descriptor.index,
                l = r[r.length - 1].descriptor.index;
              return o < s || o > (n ? l : l + 1) ? null : o;
            })({
              isMovingForward: e,
              isInHomeList: n,
              location: u.destination,
              insideDestination: o,
            });
            return null == d
              ? null
              : be({
                  draggable: r,
                  insideDestination: o,
                  destination: a,
                  viewport: l,
                  last: s.displaced,
                  displacedBy: s.displacedBy,
                  index: d,
                });
          }
          var h = (function (t) {
            var e = t.isMovingForward,
              n = t.destination,
              r = t.draggables,
              i = t.combine,
              a = t.afterCritical;
            if (!n.isCombineEnabled) return null;
            var o = i.draggableId,
              s = r[o].descriptor.index;
            return ye(o, a) ? (e ? s : s - 1) : e ? s + 1 : s;
          })({
            isMovingForward: e,
            destination: a,
            displaced: s.displaced,
            draggables: i,
            combine: u.combine,
            afterCritical: c,
          });
          return null == h
            ? null
            : be({
                draggable: r,
                insideDestination: o,
                destination: a,
                viewport: l,
                last: s.displaced,
                displacedBy: s.displacedBy,
                index: h,
              });
        },
        we = function (t) {
          var e = t.afterCritical,
            n = t.impact,
            r = t.draggables,
            i = ne(n);
          i || At(!1);
          var a = i.draggableId,
            o = r[a].page.borderBox.center,
            s = (function (t) {
              var e = t.displaced,
                n = t.afterCritical,
                r = t.combineWith,
                i = t.displacedBy,
                a = Boolean(e.visible[r] || e.invisible[r]);
              return ye(r, n) ? (a ? Ct : Nt(i.point)) : a ? i.point : Ct;
            })({
              displaced: n.displaced,
              afterCritical: e,
              combineWith: a,
              displacedBy: n.displacedBy,
            });
          return Dt(o, s);
        },
        Me = function (t, e) {
          return e.margin[t.start] + e.borderBox[t.size] / 2;
        },
        Se = function (t, e, n) {
          return (
            e[t.crossAxisStart] +
            n.margin[t.crossAxisStart] +
            n.borderBox[t.crossAxisSize] / 2
          );
        },
        Ae = function (t) {
          var e = t.axis,
            n = t.moveRelativeTo,
            r = t.isMoving;
          return Lt(
            e.line,
            n.marginBox[e.end] + Me(e, r),
            Se(e, n.marginBox, r)
          );
        },
        Ee = function (t) {
          var e = t.axis,
            n = t.moveRelativeTo,
            r = t.isMoving;
          return Lt(
            e.line,
            n.marginBox[e.start] -
              (function (t, e) {
                return e.margin[t.end] + e.borderBox[t.size] / 2;
              })(e, r),
            Se(e, n.marginBox, r)
          );
        },
        ke = function (t) {
          var e = t.impact,
            n = t.draggable,
            r = t.draggables,
            i = t.droppable,
            a = t.afterCritical,
            o = te(i.descriptor.id, r),
            s = n.page,
            l = i.axis;
          if (!o.length)
            return (function (t) {
              var e = t.axis,
                n = t.moveInto,
                r = t.isMoving;
              return Lt(
                e.line,
                n.contentBox[e.start] + Me(e, r),
                Se(e, n.contentBox, r)
              );
            })({ axis: l, moveInto: i.page, isMoving: s });
          var c = e.displaced,
            u = e.displacedBy,
            d = c.all[0];
          if (d) {
            var h = r[d];
            if (ye(d, a))
              return Ee({ axis: l, moveRelativeTo: h.page, isMoving: s });
            var f = ft(h.page, u.point);
            return Ee({ axis: l, moveRelativeTo: f, isMoving: s });
          }
          var p = o[o.length - 1];
          if (p.descriptor.id === n.descriptor.id) return s.borderBox.center;
          if (ye(p.descriptor.id, a)) {
            var m = ft(p.page, Nt(a.displacedBy.point));
            return Ae({ axis: l, moveRelativeTo: m, isMoving: s });
          }
          return Ae({ axis: l, moveRelativeTo: p.page, isMoving: s });
        },
        Re = function (t, e) {
          var n = t.frame;
          return n ? Dt(e, n.scroll.diff.displacement) : e;
        },
        Te = function (t) {
          var e = (function (t) {
              var e = t.impact,
                n = t.draggable,
                r = t.droppable,
                i = t.draggables,
                a = t.afterCritical,
                o = n.page.borderBox.center,
                s = e.at;
              return r && s
                ? "REORDER" === s.type
                  ? ke({
                      impact: e,
                      draggable: n,
                      draggables: i,
                      droppable: r,
                      afterCritical: a,
                    })
                  : we({ impact: e, draggables: i, afterCritical: a })
                : o;
            })(t),
            n = t.droppable;
          return n ? Re(n, e) : e;
        },
        Oe = function (t, e) {
          var n = It(e, t.scroll.initial),
            r = Nt(n);
          return {
            frame: st({
              top: e.y,
              bottom: e.y + t.frame.height,
              left: e.x,
              right: e.x + t.frame.width,
            }),
            scroll: {
              initial: t.scroll.initial,
              max: t.scroll.max,
              current: e,
              diff: { value: n, displacement: r },
            },
          };
        };
      function Pe(t, e) {
        return t.map(function (t) {
          return e[t];
        });
      }
      var Ce = function (t) {
          var e = t.pageBorderBoxCenter,
            n = t.draggable,
            r = (function (t, e) {
              return Dt(t.scroll.diff.displacement, e);
            })(t.viewport, e),
            i = It(r, n.page.borderBox.center);
          return Dt(n.client.borderBox.center, i);
        },
        De = function (t) {
          var e = t.draggable,
            n = t.destination,
            r = t.newPageBorderBoxCenter,
            i = t.viewport,
            o = t.withDroppableDisplacement,
            s = t.onlyOnMainAxis,
            l = void 0 !== s && s,
            c = It(r, e.page.borderBox.center),
            u = {
              target: jt(e.page.borderBox, c),
              destination: n,
              withDroppableDisplacement: o,
              viewport: i,
            };
          return l
            ? (function (t) {
                return fe(
                  (0, a.Z)({}, t, {
                    isVisibleThroughFrameFn:
                      ((e = t.destination.axis),
                      function (t) {
                        var n = le(t.top, t.bottom),
                          r = le(t.left, t.right);
                        return function (t) {
                          return e === de
                            ? n(t.top) && n(t.bottom)
                            : r(t.left) && r(t.right);
                        };
                      }),
                  })
                );
                var e;
              })(u)
            : me(u);
        },
        Ie = function (t) {
          var e = t.isMovingForward,
            n = t.draggable,
            r = t.destination,
            i = t.draggables,
            o = t.previousImpact,
            s = t.viewport,
            l = t.previousPageBorderBoxCenter,
            c = t.previousClientSelection,
            u = t.afterCritical;
          if (!r.isEnabled) return null;
          var d = te(r.descriptor.id, i),
            h = ie(n, r),
            f =
              (function (t) {
                var e = t.isMovingForward,
                  n = t.draggable,
                  r = t.destination,
                  i = t.insideDestination,
                  o = t.previousImpact;
                if (!r.isCombineEnabled) return null;
                if (!ee(o)) return null;
                function s(t) {
                  var e = {
                    type: "COMBINE",
                    combine: { draggableId: t, droppableId: r.descriptor.id },
                  };
                  return (0, a.Z)({}, o, { at: e });
                }
                var l = o.displaced.all,
                  c = l.length ? l[0] : null;
                if (e) return c ? s(c) : null;
                var u = re(n, i);
                if (!c)
                  return u.length ? s(u[u.length - 1].descriptor.id) : null;
                var d = qt(u, function (t) {
                  return t.descriptor.id === c;
                });
                -1 === d && At(!1);
                var h = d - 1;
                return h < 0 ? null : s(u[h].descriptor.id);
              })({
                isMovingForward: e,
                draggable: n,
                destination: r,
                insideDestination: d,
                previousImpact: o,
              }) ||
              xe({
                isMovingForward: e,
                isInHomeList: h,
                draggable: n,
                draggables: i,
                destination: r,
                insideDestination: d,
                previousImpact: o,
                viewport: s,
                afterCritical: u,
              });
          if (!f) return null;
          var p = Te({
            impact: f,
            draggable: n,
            droppable: r,
            draggables: i,
            afterCritical: u,
          });
          if (
            De({
              draggable: n,
              destination: r,
              newPageBorderBoxCenter: p,
              viewport: s.frame,
              withDroppableDisplacement: !1,
              onlyOnMainAxis: !0,
            })
          )
            return {
              clientSelection: Ce({
                pageBorderBoxCenter: p,
                draggable: n,
                viewport: s,
              }),
              impact: f,
              scrollJumpRequest: null,
            };
          var m = It(p, l),
            g = (function (t) {
              var e = t.impact,
                n = t.viewport,
                r = t.destination,
                i = t.draggables,
                o = t.maxScrollChange,
                s = Oe(n, Dt(n.scroll.current, o)),
                l = r.frame ? zt(r, Dt(r.frame.scroll.current, o)) : r,
                c = e.displaced,
                u = _e({
                  afterDragging: Pe(c.all, i),
                  destination: r,
                  displacedBy: e.displacedBy,
                  viewport: s.frame,
                  last: c,
                  forceShouldAnimate: !1,
                }),
                d = _e({
                  afterDragging: Pe(c.all, i),
                  destination: l,
                  displacedBy: e.displacedBy,
                  viewport: n.frame,
                  last: c,
                  forceShouldAnimate: !1,
                }),
                h = {},
                f = {},
                p = [c, u, d];
              return (
                c.all.forEach(function (t) {
                  var e = (function (t, e) {
                    for (var n = 0; n < e.length; n++) {
                      var r = e[n].visible[t];
                      if (r) return r;
                    }
                    return null;
                  })(t, p);
                  e ? (f[t] = e) : (h[t] = !0);
                }),
                (0, a.Z)({}, e, {
                  displaced: { all: c.all, invisible: h, visible: f },
                })
              );
            })({
              impact: f,
              viewport: s,
              destination: r,
              draggables: i,
              maxScrollChange: m,
            });
          return { clientSelection: c, impact: g, scrollJumpRequest: m };
        },
        Be = function (t) {
          var e = t.subject.active;
          return e || At(!1), e;
        },
        Ne = function (t, e) {
          var n = t.page.borderBox.center;
          return ye(t.descriptor.id, e) ? It(n, e.displacedBy.point) : n;
        },
        Le = function (t, e) {
          var n = t.page.borderBox;
          return ye(t.descriptor.id, e) ? jt(n, Nt(e.displacedBy.point)) : n;
        },
        Ve = (0, _t.default)(function (t, e) {
          var n = e[t.line];
          return { value: n, point: Lt(t.line, n) };
        }),
        Fe = function (t, e) {
          return (0, a.Z)({}, t, {
            scroll: (0, a.Z)({}, t.scroll, { max: e }),
          });
        },
        He = function (t, e, n) {
          var r = t.frame;
          ie(e, t) && At(!1), t.subject.withPlaceholder && At(!1);
          var i = Ve(t.axis, e.displaceBy).point,
            o = (function (t, e, n) {
              var r = t.axis;
              if ("virtual" === t.descriptor.mode) return Lt(r.line, e[r.line]);
              var i = t.subject.page.contentBox[r.size],
                a =
                  te(t.descriptor.id, n).reduce(function (t, e) {
                    return t + e.client.marginBox[r.size];
                  }, 0) +
                  e[r.line] -
                  i;
              return a <= 0 ? null : Lt(r.line, a);
            })(t, i, n),
            s = {
              placeholderSize: i,
              increasedBy: o,
              oldFrameMaxScroll: t.frame ? t.frame.scroll.max : null,
            };
          if (!r) {
            var l = Ut({
              page: t.subject.page,
              withPlaceholder: s,
              axis: t.axis,
              frame: t.frame,
            });
            return (0, a.Z)({}, t, { subject: l });
          }
          var c = o ? Dt(r.scroll.max, o) : r.scroll.max,
            u = Fe(r, c),
            d = Ut({
              page: t.subject.page,
              withPlaceholder: s,
              axis: t.axis,
              frame: u,
            });
          return (0, a.Z)({}, t, { subject: d, frame: u });
        },
        je = function (t) {
          var e = t.isMovingForward,
            n = t.previousPageBorderBoxCenter,
            r = t.draggable,
            i = t.isOver,
            a = t.draggables,
            o = t.droppables,
            s = t.viewport,
            l = t.afterCritical,
            c = (function (t) {
              var e = t.isMovingForward,
                n = t.pageBorderBoxCenter,
                r = t.source,
                i = t.droppables,
                a = t.viewport,
                o = r.subject.active;
              if (!o) return null;
              var s = r.axis,
                l = le(o[s.start], o[s.end]),
                c = Qt(i)
                  .filter(function (t) {
                    return t !== r;
                  })
                  .filter(function (t) {
                    return t.isEnabled;
                  })
                  .filter(function (t) {
                    return Boolean(t.subject.active);
                  })
                  .filter(function (t) {
                    return ce(a.frame)(Be(t));
                  })
                  .filter(function (t) {
                    var n = Be(t);
                    return e
                      ? o[s.crossAxisEnd] < n[s.crossAxisEnd]
                      : n[s.crossAxisStart] < o[s.crossAxisStart];
                  })
                  .filter(function (t) {
                    var e = Be(t),
                      n = le(e[s.start], e[s.end]);
                    return (
                      l(e[s.start]) ||
                      l(e[s.end]) ||
                      n(o[s.start]) ||
                      n(o[s.end])
                    );
                  })
                  .sort(function (t, n) {
                    var r = Be(t)[s.crossAxisStart],
                      i = Be(n)[s.crossAxisStart];
                    return e ? r - i : i - r;
                  })
                  .filter(function (t, e, n) {
                    return (
                      Be(t)[s.crossAxisStart] === Be(n[0])[s.crossAxisStart]
                    );
                  });
              if (!c.length) return null;
              if (1 === c.length) return c[0];
              var u = c.filter(function (t) {
                return le(Be(t)[s.start], Be(t)[s.end])(n[s.line]);
              });
              return 1 === u.length
                ? u[0]
                : u.length > 1
                ? u.sort(function (t, e) {
                    return Be(t)[s.start] - Be(e)[s.start];
                  })[0]
                : c.sort(function (t, e) {
                    var r = Ft(n, Yt(Be(t))),
                      i = Ft(n, Yt(Be(e)));
                    return r !== i ? r - i : Be(t)[s.start] - Be(e)[s.start];
                  })[0];
            })({
              isMovingForward: e,
              pageBorderBoxCenter: n,
              source: i,
              droppables: o,
              viewport: s,
            });
          if (!c) return null;
          var u = te(c.descriptor.id, a),
            d = (function (t) {
              var e = t.pageBorderBoxCenter,
                n = t.viewport,
                r = t.destination,
                i = t.insideDestination,
                a = t.afterCritical,
                o = i
                  .filter(function (t) {
                    return me({
                      target: Le(t, a),
                      destination: r,
                      viewport: n.frame,
                      withDroppableDisplacement: !0,
                    });
                  })
                  .sort(function (t, n) {
                    var i = Vt(e, Re(r, Ne(t, a))),
                      o = Vt(e, Re(r, Ne(n, a)));
                    return i < o
                      ? -1
                      : o < i
                      ? 1
                      : t.descriptor.index - n.descriptor.index;
                  });
              return o[0] || null;
            })({
              pageBorderBoxCenter: n,
              viewport: s,
              destination: c,
              insideDestination: u,
              afterCritical: l,
            }),
            h = (function (t) {
              var e = t.previousPageBorderBoxCenter,
                n = t.moveRelativeTo,
                r = t.insideDestination,
                i = t.draggable,
                a = t.draggables,
                o = t.destination,
                s = t.viewport,
                l = t.afterCritical;
              if (!n) {
                if (r.length) return null;
                var c = {
                    displaced: oe,
                    displacedBy: ae,
                    at: {
                      type: "REORDER",
                      destination: { droppableId: o.descriptor.id, index: 0 },
                    },
                  },
                  u = Te({
                    impact: c,
                    draggable: i,
                    droppable: o,
                    draggables: a,
                    afterCritical: l,
                  }),
                  d = ie(i, o) ? o : He(o, i, a);
                return De({
                  draggable: i,
                  destination: d,
                  newPageBorderBoxCenter: u,
                  viewport: s.frame,
                  withDroppableDisplacement: !1,
                  onlyOnMainAxis: !0,
                })
                  ? c
                  : null;
              }
              var h = Boolean(
                  e[o.axis.line] <= n.page.borderBox.center[o.axis.line]
                ),
                f = (function () {
                  var t = n.descriptor.index;
                  return n.descriptor.id === i.descriptor.id || h ? t : t + 1;
                })(),
                p = Ve(o.axis, i.displaceBy);
              return be({
                draggable: i,
                insideDestination: r,
                destination: o,
                viewport: s,
                displacedBy: p,
                last: oe,
                index: f,
              });
            })({
              previousPageBorderBoxCenter: n,
              destination: c,
              draggable: r,
              draggables: a,
              moveRelativeTo: d,
              insideDestination: u,
              viewport: s,
              afterCritical: l,
            });
          if (!h) return null;
          var f = Te({
            impact: h,
            draggable: r,
            droppable: c,
            draggables: a,
            afterCritical: l,
          });
          return {
            clientSelection: Ce({
              pageBorderBoxCenter: f,
              draggable: r,
              viewport: s,
            }),
            impact: h,
            scrollJumpRequest: null,
          };
        },
        Ye = function (t) {
          var e = t.at;
          return e
            ? "REORDER" === e.type
              ? e.destination.droppableId
              : e.combine.droppableId
            : null;
        },
        We = function (t) {
          var e = t.state,
            n = t.type,
            r = (function (t, e) {
              var n = Ye(t);
              return n ? e[n] : null;
            })(e.impact, e.dimensions.droppables),
            i = Boolean(r),
            a = e.dimensions.droppables[e.critical.droppable.id],
            o = r || a,
            s = o.axis.direction,
            l =
              ("vertical" === s && ("MOVE_UP" === n || "MOVE_DOWN" === n)) ||
              ("horizontal" === s && ("MOVE_LEFT" === n || "MOVE_RIGHT" === n));
          if (l && !i) return null;
          var c = "MOVE_DOWN" === n || "MOVE_RIGHT" === n,
            u = e.dimensions.draggables[e.critical.draggable.id],
            d = e.current.page.borderBoxCenter,
            h = e.dimensions,
            f = h.draggables,
            p = h.droppables;
          return l
            ? Ie({
                isMovingForward: c,
                previousPageBorderBoxCenter: d,
                draggable: u,
                destination: o,
                draggables: f,
                viewport: e.viewport,
                previousClientSelection: e.current.client.selection,
                previousImpact: e.impact,
                afterCritical: e.afterCritical,
              })
            : je({
                isMovingForward: c,
                previousPageBorderBoxCenter: d,
                draggable: u,
                isOver: o,
                draggables: f,
                droppables: p,
                viewport: e.viewport,
                afterCritical: e.afterCritical,
              });
        };
      function Ue(t) {
        return "DRAGGING" === t.phase || "COLLECTING" === t.phase;
      }
      function ze(t) {
        var e = le(t.top, t.bottom),
          n = le(t.left, t.right);
        return function (t) {
          return e(t.y) && n(t.x);
        };
      }
      function Ge(t) {
        var e = t.pageBorderBox,
          n = t.draggable,
          r = t.droppables,
          i = Qt(r).filter(function (t) {
            if (!t.isEnabled) return !1;
            var n,
              r,
              i = t.subject.active;
            if (!i) return !1;
            if (
              ((r = i),
              !(
                (n = e).left < r.right &&
                n.right > r.left &&
                n.top < r.bottom &&
                n.bottom > r.top
              ))
            )
              return !1;
            if (ze(i)(e.center)) return !0;
            var a = t.axis,
              o = i.center[a.crossAxisLine],
              s = e[a.crossAxisStart],
              l = e[a.crossAxisEnd],
              c = le(i[a.crossAxisStart], i[a.crossAxisEnd]),
              u = c(s),
              d = c(l);
            return (!u && !d) || (u ? s < o : l > o);
          });
        return i.length
          ? 1 === i.length
            ? i[0].descriptor.id
            : (function (t) {
                var e = t.pageBorderBox,
                  n = t.draggable,
                  r = t.candidates,
                  i = n.page.borderBox.center,
                  a = r
                    .map(function (t) {
                      var n = t.axis,
                        r = Lt(
                          t.axis.line,
                          e.center[n.line],
                          t.page.borderBox.center[n.crossAxisLine]
                        );
                      return { id: t.descriptor.id, distance: Vt(i, r) };
                    })
                    .sort(function (t, e) {
                      return e.distance - t.distance;
                    });
                return a[0] ? a[0].id : null;
              })({ pageBorderBox: e, draggable: n, candidates: i })
          : null;
      }
      var qe = function (t, e) {
        return st(jt(t, e));
      };
      function Xe(t) {
        var e = t.displaced,
          n = t.id;
        return Boolean(e.visible[n] || e.invisible[n]);
      }
      var Ze = function (t) {
          var e = t.pageOffset,
            n = t.draggable,
            r = t.draggables,
            i = t.droppables,
            a = t.previousImpact,
            o = t.viewport,
            s = t.afterCritical,
            l = qe(n.page.borderBox, e),
            c = Ge({ pageBorderBox: l, draggable: n, droppables: i });
          if (!c) return se;
          var u = i[c],
            d = te(u.descriptor.id, r),
            h = (function (t, e) {
              var n = t.frame;
              return n ? qe(e, n.scroll.diff.value) : e;
            })(u, l);
          return (
            (function (t) {
              var e = t.draggable,
                n = t.pageBorderBoxWithDroppableScroll,
                r = t.previousImpact,
                i = t.destination,
                a = t.insideDestination,
                o = t.afterCritical;
              if (!i.isCombineEnabled) return null;
              var s = i.axis,
                l = Ve(i.axis, e.displaceBy),
                c = l.value,
                u = n[s.start],
                d = n[s.end],
                h = Xt(re(e, a), function (t) {
                  var e = t.descriptor.id,
                    n = t.page.borderBox,
                    i = n[s.size] / 4,
                    a = ye(e, o),
                    l = Xe({ displaced: r.displaced, id: e });
                  return a
                    ? l
                      ? d > n[s.start] + i && d < n[s.end] - i
                      : u > n[s.start] - c + i && u < n[s.end] - c - i
                    : l
                    ? d > n[s.start] + c + i && d < n[s.end] + c - i
                    : u > n[s.start] + i && u < n[s.end] - i;
                });
              return h
                ? {
                    displacedBy: l,
                    displaced: r.displaced,
                    at: {
                      type: "COMBINE",
                      combine: {
                        draggableId: h.descriptor.id,
                        droppableId: i.descriptor.id,
                      },
                    },
                  }
                : null;
            })({
              pageBorderBoxWithDroppableScroll: h,
              draggable: n,
              previousImpact: a,
              destination: u,
              insideDestination: d,
              afterCritical: s,
            }) ||
            (function (t) {
              var e = t.pageBorderBoxWithDroppableScroll,
                n = t.draggable,
                r = t.destination,
                i = t.insideDestination,
                a = t.last,
                o = t.viewport,
                s = t.afterCritical,
                l = r.axis,
                c = Ve(r.axis, n.displaceBy),
                u = c.value,
                d = e[l.start],
                h = e[l.end],
                f = (function (t) {
                  var e = t.draggable,
                    n = t.closest,
                    r = t.inHomeList;
                  return n
                    ? r && n.descriptor.index > e.descriptor.index
                      ? n.descriptor.index - 1
                      : n.descriptor.index
                    : null;
                })({
                  draggable: n,
                  closest: Xt(re(n, i), function (t) {
                    var e = t.descriptor.id,
                      n = t.page.borderBox.center[l.line],
                      r = ye(e, s),
                      i = Xe({ displaced: a, id: e });
                    return r
                      ? i
                        ? h <= n
                        : d < n - u
                      : i
                      ? h <= n + u
                      : d < n;
                  }),
                  inHomeList: ie(n, r),
                });
              return be({
                draggable: n,
                insideDestination: i,
                destination: r,
                viewport: o,
                last: a,
                displacedBy: c,
                index: f,
              });
            })({
              pageBorderBoxWithDroppableScroll: h,
              draggable: n,
              destination: u,
              insideDestination: d,
              last: a.displaced,
              viewport: o,
              afterCritical: s,
            })
          );
        },
        Ke = function (t, e) {
          var n;
          return (0, a.Z)({}, t, (((n = {})[e.descriptor.id] = e), n));
        },
        $e = function (t) {
          var e = t.previousImpact,
            n = t.impact,
            r = t.droppables,
            i = Ye(e),
            o = Ye(n);
          if (!i) return r;
          if (i === o) return r;
          var s = r[i];
          if (!s.subject.withPlaceholder) return r;
          var l = (function (t) {
            var e = t.subject.withPlaceholder;
            e || At(!1);
            var n = t.frame;
            if (!n) {
              var r = Ut({
                page: t.subject.page,
                axis: t.axis,
                frame: null,
                withPlaceholder: null,
              });
              return (0, a.Z)({}, t, { subject: r });
            }
            var i = e.oldFrameMaxScroll;
            i || At(!1);
            var o = Fe(n, i),
              s = Ut({
                page: t.subject.page,
                axis: t.axis,
                frame: o,
                withPlaceholder: null,
              });
            return (0, a.Z)({}, t, { subject: s, frame: o });
          })(s);
          return Ke(r, l);
        },
        Qe = function (t) {
          var e = t.state,
            n = t.clientSelection,
            r = t.dimensions,
            i = t.viewport,
            o = t.impact,
            s = t.scrollJumpRequest,
            l = i || e.viewport,
            c = r || e.dimensions,
            u = n || e.current.client.selection,
            d = It(u, e.initial.client.selection),
            h = {
              offset: d,
              selection: u,
              borderBoxCenter: Dt(e.initial.client.borderBoxCenter, d),
            },
            f = {
              selection: Dt(h.selection, l.scroll.current),
              borderBoxCenter: Dt(h.borderBoxCenter, l.scroll.current),
              offset: Dt(h.offset, l.scroll.diff.value),
            },
            p = { client: h, page: f };
          if ("COLLECTING" === e.phase)
            return (0, a.Z)({ phase: "COLLECTING" }, e, {
              dimensions: c,
              viewport: l,
              current: p,
            });
          var m = c.draggables[e.critical.draggable.id],
            g =
              o ||
              Ze({
                pageOffset: f.offset,
                draggable: m,
                draggables: c.draggables,
                droppables: c.droppables,
                previousImpact: e.impact,
                viewport: l,
                afterCritical: e.afterCritical,
              }),
            _ = (function (t) {
              var e = t.draggable,
                n = t.draggables,
                r = t.droppables,
                i = t.previousImpact,
                a = t.impact,
                o = $e({ previousImpact: i, impact: a, droppables: r }),
                s = Ye(a);
              if (!s) return o;
              var l = r[s];
              if (ie(e, l)) return o;
              if (l.subject.withPlaceholder) return o;
              var c = He(l, e, n);
              return Ke(o, c);
            })({
              draggable: m,
              impact: g,
              previousImpact: e.impact,
              draggables: c.draggables,
              droppables: c.droppables,
            });
          return (0, a.Z)({}, e, {
            current: p,
            dimensions: { draggables: c.draggables, droppables: _ },
            impact: g,
            viewport: l,
            scrollJumpRequest: s || null,
            forceShouldAnimate: !s && null,
          });
        };
      var Je = function (t) {
          var e = t.impact,
            n = t.viewport,
            r = t.draggables,
            i = t.destination,
            o = t.forceShouldAnimate,
            s = e.displaced,
            l = (function (t, e) {
              return t.map(function (t) {
                return e[t];
              });
            })(s.all, r),
            c = _e({
              afterDragging: l,
              destination: i,
              displacedBy: e.displacedBy,
              viewport: n.frame,
              forceShouldAnimate: o,
              last: s,
            });
          return (0, a.Z)({}, e, { displaced: c });
        },
        tn = function (t) {
          var e = t.impact,
            n = t.draggable,
            r = t.droppable,
            i = t.draggables,
            a = t.viewport,
            o = t.afterCritical,
            s = Te({
              impact: e,
              draggable: n,
              draggables: i,
              droppable: r,
              afterCritical: o,
            });
          return Ce({ pageBorderBoxCenter: s, draggable: n, viewport: a });
        },
        en = function (t) {
          var e = t.state,
            n = t.dimensions,
            r = t.viewport;
          "SNAP" !== e.movementMode && At(!1);
          var i = e.impact,
            a = r || e.viewport,
            o = n || e.dimensions,
            s = o.draggables,
            l = o.droppables,
            c = s[e.critical.draggable.id],
            u = Ye(i);
          u || At(!1);
          var d = l[u],
            h = Je({ impact: i, viewport: a, destination: d, draggables: s }),
            f = tn({
              impact: h,
              draggable: c,
              droppable: d,
              draggables: s,
              viewport: a,
              afterCritical: e.afterCritical,
            });
          return Qe({
            impact: h,
            clientSelection: f,
            state: e,
            dimensions: o,
            viewport: a,
          });
        },
        nn = function (t) {
          var e = t.draggable,
            n = t.home,
            r = t.draggables,
            i = t.viewport,
            a = Ve(n.axis, e.displaceBy),
            o = te(n.descriptor.id, r),
            s = o.indexOf(e);
          -1 === s && At(!1);
          var l,
            c = o.slice(s + 1),
            u = c.reduce(function (t, e) {
              return (t[e.descriptor.id] = !0), t;
            }, {}),
            d = {
              inVirtualList: "virtual" === n.descriptor.mode,
              displacedBy: a,
              effected: u,
            };
          return {
            impact: {
              displaced: _e({
                afterDragging: c,
                destination: n,
                displacedBy: a,
                last: null,
                viewport: i.frame,
                forceShouldAnimate: !1,
              }),
              displacedBy: a,
              at: {
                type: "REORDER",
                destination:
                  ((l = e.descriptor),
                  { index: l.index, droppableId: l.droppableId }),
              },
            },
            afterCritical: d,
          };
        },
        rn = function (t) {
          0;
        },
        an = function (t) {
          0;
        },
        on = function (t) {
          var e = t.additions,
            n = t.updatedDroppables,
            r = t.viewport,
            i = r.scroll.diff.value;
          return e.map(function (t) {
            var e = t.descriptor.droppableId,
              o = (function (t) {
                var e = t.frame;
                return e || At(!1), e;
              })(n[e]),
              s = o.scroll.diff.value,
              l = (function (t) {
                var e = t.draggable,
                  n = t.offset,
                  r = t.initialWindowScroll,
                  i = ft(e.client, n),
                  o = pt(i, r);
                return (0, a.Z)({}, e, {
                  placeholder: (0, a.Z)({}, e.placeholder, { client: i }),
                  client: i,
                  page: o,
                });
              })({
                draggable: t,
                offset: Dt(i, s),
                initialWindowScroll: r.scroll.initial,
              });
            return l;
          });
        },
        sn = function (t) {
          return "SNAP" === t.movementMode;
        },
        ln = function (t, e, n) {
          var r = (function (t, e) {
            return {
              draggables: t.draggables,
              droppables: Ke(t.droppables, e),
            };
          })(t.dimensions, e);
          return !sn(t) || n
            ? Qe({ state: t, dimensions: r })
            : en({ state: t, dimensions: r });
        };
      function cn(t) {
        return t.isDragging && "SNAP" === t.movementMode
          ? (0, a.Z)({ phase: "DRAGGING" }, t, { scrollJumpRequest: null })
          : t;
      }
      var un = { phase: "IDLE", completed: null, shouldFlush: !1 },
        dn = function (t, e) {
          if ((void 0 === t && (t = un), "FLUSH" === e.type))
            return (0, a.Z)({}, un, { shouldFlush: !0 });
          if ("INITIAL_PUBLISH" === e.type) {
            "IDLE" !== t.phase && At(!1);
            var n = e.payload,
              r = n.critical,
              i = n.clientSelection,
              o = n.viewport,
              s = n.dimensions,
              l = n.movementMode,
              c = s.draggables[r.draggable.id],
              u = s.droppables[r.droppable.id],
              d = {
                selection: i,
                borderBoxCenter: c.client.borderBox.center,
                offset: Ct,
              },
              h = {
                client: d,
                page: {
                  selection: Dt(d.selection, o.scroll.initial),
                  borderBoxCenter: Dt(d.selection, o.scroll.initial),
                  offset: Dt(d.selection, o.scroll.diff.value),
                },
              },
              f = Qt(s.droppables).every(function (t) {
                return !t.isFixedOnPage;
              }),
              p = nn({
                draggable: c,
                home: u,
                draggables: s.draggables,
                viewport: o,
              }),
              m = p.impact;
            return {
              phase: "DRAGGING",
              isDragging: !0,
              critical: r,
              movementMode: l,
              dimensions: s,
              initial: h,
              current: h,
              isWindowScrollAllowed: f,
              impact: m,
              afterCritical: p.afterCritical,
              onLiftImpact: m,
              viewport: o,
              scrollJumpRequest: null,
              forceShouldAnimate: null,
            };
          }
          if ("COLLECTION_STARTING" === e.type)
            return "COLLECTING" === t.phase || "DROP_PENDING" === t.phase
              ? t
              : ("DRAGGING" !== t.phase && At(!1),
                (0, a.Z)({ phase: "COLLECTING" }, t, { phase: "COLLECTING" }));
          if ("PUBLISH_WHILE_DRAGGING" === e.type)
            return (
              "COLLECTING" !== t.phase && "DROP_PENDING" !== t.phase && At(!1),
              (function (t) {
                var e = t.state,
                  n = t.published;
                rn();
                var r = n.modified.map(function (t) {
                    var n = e.dimensions.droppables[t.droppableId];
                    return zt(n, t.scroll);
                  }),
                  i = (0, a.Z)({}, e.dimensions.droppables, {}, Kt(r)),
                  o = $t(
                    on({
                      additions: n.additions,
                      updatedDroppables: i,
                      viewport: e.viewport,
                    })
                  ),
                  s = (0, a.Z)({}, e.dimensions.draggables, {}, o);
                n.removals.forEach(function (t) {
                  delete s[t];
                });
                var l = { droppables: i, draggables: s },
                  c = Ye(e.impact),
                  u = c ? l.droppables[c] : null,
                  d = l.draggables[e.critical.draggable.id],
                  h = l.droppables[e.critical.droppable.id],
                  f = nn({
                    draggable: d,
                    home: h,
                    draggables: s,
                    viewport: e.viewport,
                  }),
                  p = f.impact,
                  m = f.afterCritical,
                  g = u && u.isCombineEnabled ? e.impact : p,
                  _ = Ze({
                    pageOffset: e.current.page.offset,
                    draggable: l.draggables[e.critical.draggable.id],
                    draggables: l.draggables,
                    droppables: l.droppables,
                    previousImpact: g,
                    viewport: e.viewport,
                    afterCritical: m,
                  });
                an();
                var v = (0, a.Z)({ phase: "DRAGGING" }, e, {
                  phase: "DRAGGING",
                  impact: _,
                  onLiftImpact: p,
                  dimensions: l,
                  afterCritical: m,
                  forceShouldAnimate: !1,
                });
                return "COLLECTING" === e.phase
                  ? v
                  : (0, a.Z)({ phase: "DROP_PENDING" }, v, {
                      phase: "DROP_PENDING",
                      reason: e.reason,
                      isWaiting: !1,
                    });
              })({ state: t, published: e.payload })
            );
          if ("MOVE" === e.type) {
            if ("DROP_PENDING" === t.phase) return t;
            Ue(t) || At(!1);
            var g = e.payload.client;
            return Bt(g, t.current.client.selection)
              ? t
              : Qe({
                  state: t,
                  clientSelection: g,
                  impact: sn(t) ? t.impact : null,
                });
          }
          if ("UPDATE_DROPPABLE_SCROLL" === e.type) {
            if ("DROP_PENDING" === t.phase) return cn(t);
            if ("COLLECTING" === t.phase) return cn(t);
            Ue(t) || At(!1);
            var _ = e.payload,
              v = _.id,
              b = _.newScroll,
              y = t.dimensions.droppables[v];
            if (!y) return t;
            var x = zt(y, b);
            return ln(t, x, !1);
          }
          if ("UPDATE_DROPPABLE_IS_ENABLED" === e.type) {
            if ("DROP_PENDING" === t.phase) return t;
            Ue(t) || At(!1);
            var w = e.payload,
              M = w.id,
              S = w.isEnabled,
              A = t.dimensions.droppables[M];
            A || At(!1), A.isEnabled === S && At(!1);
            var E = (0, a.Z)({}, A, { isEnabled: S });
            return ln(t, E, !0);
          }
          if ("UPDATE_DROPPABLE_IS_COMBINE_ENABLED" === e.type) {
            if ("DROP_PENDING" === t.phase) return t;
            Ue(t) || At(!1);
            var k = e.payload,
              R = k.id,
              T = k.isCombineEnabled,
              O = t.dimensions.droppables[R];
            O || At(!1), O.isCombineEnabled === T && At(!1);
            var P = (0, a.Z)({}, O, { isCombineEnabled: T });
            return ln(t, P, !0);
          }
          if ("MOVE_BY_WINDOW_SCROLL" === e.type) {
            if ("DROP_PENDING" === t.phase || "DROP_ANIMATING" === t.phase)
              return t;
            Ue(t) || At(!1), t.isWindowScrollAllowed || At(!1);
            var C = e.payload.newScroll;
            if (Bt(t.viewport.scroll.current, C)) return cn(t);
            var D = Oe(t.viewport, C);
            return sn(t)
              ? en({ state: t, viewport: D })
              : Qe({ state: t, viewport: D });
          }
          if ("UPDATE_VIEWPORT_MAX_SCROLL" === e.type) {
            if (!Ue(t)) return t;
            var I = e.payload.maxScroll;
            if (Bt(I, t.viewport.scroll.max)) return t;
            var B = (0, a.Z)({}, t.viewport, {
              scroll: (0, a.Z)({}, t.viewport.scroll, { max: I }),
            });
            return (0, a.Z)({ phase: "DRAGGING" }, t, { viewport: B });
          }
          if (
            "MOVE_UP" === e.type ||
            "MOVE_DOWN" === e.type ||
            "MOVE_LEFT" === e.type ||
            "MOVE_RIGHT" === e.type
          ) {
            if ("COLLECTING" === t.phase || "DROP_PENDING" === t.phase)
              return t;
            "DRAGGING" !== t.phase && At(!1);
            var N = We({ state: t, type: e.type });
            return N
              ? Qe({
                  state: t,
                  impact: N.impact,
                  clientSelection: N.clientSelection,
                  scrollJumpRequest: N.scrollJumpRequest,
                })
              : t;
          }
          if ("DROP_PENDING" === e.type) {
            var L = e.payload.reason;
            return (
              "COLLECTING" !== t.phase && At(!1),
              (0, a.Z)({ phase: "DROP_PENDING" }, t, {
                phase: "DROP_PENDING",
                isWaiting: !0,
                reason: L,
              })
            );
          }
          if ("DROP_ANIMATE" === e.type) {
            var V = e.payload,
              F = V.completed,
              H = V.dropDuration,
              j = V.newHomeClientOffset;
            return (
              "DRAGGING" !== t.phase && "DROP_PENDING" !== t.phase && At(!1),
              {
                phase: "DROP_ANIMATING",
                completed: F,
                dropDuration: H,
                newHomeClientOffset: j,
                dimensions: t.dimensions,
              }
            );
          }
          return "DROP_COMPLETE" === e.type
            ? { phase: "IDLE", completed: e.payload.completed, shouldFlush: !1 }
            : t;
        },
        hn = function (t) {
          return { type: "LIFT", payload: t };
        },
        fn = function (t) {
          return { type: "PUBLISH_WHILE_DRAGGING", payload: t };
        },
        pn = function () {
          return { type: "COLLECTION_STARTING", payload: null };
        },
        mn = function (t) {
          return { type: "UPDATE_DROPPABLE_SCROLL", payload: t };
        },
        gn = function (t) {
          return { type: "UPDATE_DROPPABLE_IS_ENABLED", payload: t };
        },
        _n = function (t) {
          return { type: "UPDATE_DROPPABLE_IS_COMBINE_ENABLED", payload: t };
        },
        vn = function (t) {
          return { type: "MOVE", payload: t };
        },
        bn = function () {
          return { type: "MOVE_UP", payload: null };
        },
        yn = function () {
          return { type: "MOVE_DOWN", payload: null };
        },
        xn = function () {
          return { type: "MOVE_RIGHT", payload: null };
        },
        wn = function () {
          return { type: "MOVE_LEFT", payload: null };
        },
        Mn = function () {
          return { type: "FLUSH", payload: null };
        },
        Sn = function (t) {
          return { type: "DROP_COMPLETE", payload: t };
        },
        An = function (t) {
          return { type: "DROP", payload: t };
        },
        En = function () {
          return { type: "DROP_ANIMATION_FINISHED", payload: null };
        };
      var kn = "cubic-bezier(.2,1,.1,1)",
        Rn = { drop: 0, combining: 0.7 },
        Tn = { drop: 0.75 },
        On = 0.2 + "s " + "cubic-bezier(0.2, 0, 0, 1)",
        Pn = {
          fluid: "opacity " + On,
          snap: "transform " + On + ", opacity " + On,
          drop: function (t) {
            var e = t + "s " + kn;
            return "transform " + e + ", opacity " + e;
          },
          outOfTheWay: "transform " + On,
          placeholder: "height " + On + ", width " + On + ", margin " + On,
        },
        Cn = function (t) {
          return Bt(t, Ct) ? null : "translate(" + t.x + "px, " + t.y + "px)";
        },
        Dn = {
          moveTo: Cn,
          drop: function (t, e) {
            var n = Cn(t);
            return n ? (e ? n + " scale(" + Tn.drop + ")" : n) : null;
          },
        },
        In = 0.33,
        Bn = 0.55,
        Nn = Bn - In,
        Ln = function (t) {
          var e = t.getState,
            n = t.dispatch;
          return function (t) {
            return function (r) {
              if ("DROP" === r.type) {
                var i = e(),
                  o = r.payload.reason;
                if ("COLLECTING" !== i.phase) {
                  if ("IDLE" !== i.phase) {
                    "DROP_PENDING" === i.phase && i.isWaiting && At(!1),
                      "DRAGGING" !== i.phase &&
                        "DROP_PENDING" !== i.phase &&
                        At(!1);
                    var s = i.critical,
                      l = i.dimensions,
                      c = l.draggables[i.critical.draggable.id],
                      u = (function (t) {
                        var e = t.draggables,
                          n = t.reason,
                          r = t.lastImpact,
                          i = t.home,
                          o = t.viewport,
                          s = t.onLiftImpact;
                        return r.at && "DROP" === n
                          ? "REORDER" === r.at.type
                            ? { impact: r, didDropInsideDroppable: !0 }
                            : {
                                impact: (0, a.Z)({}, r, { displaced: oe }),
                                didDropInsideDroppable: !0,
                              }
                          : {
                              impact: Je({
                                draggables: e,
                                impact: s,
                                destination: i,
                                viewport: o,
                                forceShouldAnimate: !0,
                              }),
                              didDropInsideDroppable: !1,
                            };
                      })({
                        reason: o,
                        lastImpact: i.impact,
                        afterCritical: i.afterCritical,
                        onLiftImpact: i.onLiftImpact,
                        home: i.dimensions.droppables[i.critical.droppable.id],
                        viewport: i.viewport,
                        draggables: i.dimensions.draggables,
                      }),
                      d = u.impact,
                      h = u.didDropInsideDroppable,
                      f = h ? ee(d) : null,
                      p = h ? ne(d) : null,
                      m = {
                        index: s.draggable.index,
                        droppableId: s.droppable.id,
                      },
                      g = {
                        draggableId: c.descriptor.id,
                        type: c.descriptor.type,
                        source: m,
                        reason: o,
                        mode: i.movementMode,
                        destination: f,
                        combine: p,
                      },
                      _ = (function (t) {
                        var e = t.impact,
                          n = t.draggable,
                          r = t.dimensions,
                          i = t.viewport,
                          a = t.afterCritical,
                          o = r.draggables,
                          s = r.droppables,
                          l = Ye(e),
                          c = l ? s[l] : null,
                          u = s[n.descriptor.droppableId],
                          d = tn({
                            impact: e,
                            draggable: n,
                            draggables: o,
                            afterCritical: a,
                            droppable: c || u,
                            viewport: i,
                          });
                        return It(d, n.client.borderBox.center);
                      })({
                        impact: d,
                        draggable: c,
                        dimensions: l,
                        viewport: i.viewport,
                        afterCritical: i.afterCritical,
                      }),
                      v = {
                        critical: i.critical,
                        afterCritical: i.afterCritical,
                        result: g,
                        impact: d,
                      };
                    if (!Bt(i.current.client.offset, _) || Boolean(g.combine)) {
                      var b = (function (t) {
                        var e = t.current,
                          n = t.destination,
                          r = t.reason,
                          i = Vt(e, n);
                        if (i <= 0) return In;
                        if (i >= 1500) return Bn;
                        var a = In + Nn * (i / 1500);
                        return Number(
                          ("CANCEL" === r ? 0.6 * a : a).toFixed(2)
                        );
                      })({
                        current: i.current.client.offset,
                        destination: _,
                        reason: o,
                      });
                      n(
                        (function (t) {
                          return { type: "DROP_ANIMATE", payload: t };
                        })({
                          newHomeClientOffset: _,
                          dropDuration: b,
                          completed: v,
                        })
                      );
                    } else n(Sn({ completed: v }));
                  }
                } else
                  n(
                    (function (t) {
                      return { type: "DROP_PENDING", payload: t };
                    })({ reason: o })
                  );
              } else t(r);
            };
          };
        },
        Vn = function () {
          return { x: window.pageXOffset, y: window.pageYOffset };
        };
      function Fn(t) {
        var e = t.onWindowScroll;
        var n = vt(function () {
            e(Vn());
          }),
          r = (function (t) {
            return {
              eventName: "scroll",
              options: { passive: !0, capture: !1 },
              fn: function (e) {
                (e.target !== window && e.target !== window.document) || t();
              },
            };
          })(n),
          i = yt;
        function a() {
          return i !== yt;
        }
        return {
          start: function () {
            a() && At(!1), (i = xt(window, [r]));
          },
          stop: function () {
            a() || At(!1), n.cancel(), i(), (i = yt);
          },
          isActive: a,
        };
      }
      var Hn = function (t) {
          var e = Fn({
            onWindowScroll: function (e) {
              t.dispatch({
                type: "MOVE_BY_WINDOW_SCROLL",
                payload: { newScroll: e },
              });
            },
          });
          return function (t) {
            return function (n) {
              e.isActive() || "INITIAL_PUBLISH" !== n.type || e.start(),
                e.isActive() &&
                  (function (t) {
                    return (
                      "DROP_COMPLETE" === t.type ||
                      "DROP_ANIMATE" === t.type ||
                      "FLUSH" === t.type
                    );
                  })(n) &&
                  e.stop(),
                t(n);
            };
          };
        },
        jn = function () {
          var t = [];
          return {
            add: function (e) {
              var n = setTimeout(function () {
                  return (function (e) {
                    var n = qt(t, function (t) {
                      return t.timerId === e;
                    });
                    -1 === n && At(!1), t.splice(n, 1)[0].callback();
                  })(n);
                }),
                r = { timerId: n, callback: e };
              t.push(r);
            },
            flush: function () {
              if (t.length) {
                var e = [].concat(t);
                (t.length = 0),
                  e.forEach(function (t) {
                    clearTimeout(t.timerId), t.callback();
                  });
              }
            },
          };
        },
        Yn = function (t, e) {
          rn(), e(), an();
        },
        Wn = function (t, e) {
          return {
            draggableId: t.draggable.id,
            type: t.droppable.type,
            source: { droppableId: t.droppable.id, index: t.draggable.index },
            mode: e,
          };
        },
        Un = function (t, e, n, r) {
          if (t) {
            var i = (function (t) {
              var e = !1,
                n = !1,
                r = setTimeout(function () {
                  n = !0;
                }),
                i = function (i) {
                  e || n || ((e = !0), t(i), clearTimeout(r));
                };
              return (
                (i.wasCalled = function () {
                  return e;
                }),
                i
              );
            })(n);
            t(e, { announce: i }), i.wasCalled() || n(r(e));
          } else n(r(e));
        },
        zn = function (t, e) {
          var n = (function (t, e) {
            var n = jn(),
              r = null,
              i = function (n) {
                r || At(!1),
                  (r = null),
                  Yn(0, function () {
                    return Un(t().onDragEnd, n, e, Pt.onDragEnd);
                  });
              };
            return {
              beforeCapture: function (e, n) {
                r && At(!1),
                  Yn(0, function () {
                    var r = t().onBeforeCapture;
                    r && r({ draggableId: e, mode: n });
                  });
              },
              beforeStart: function (e, n) {
                r && At(!1),
                  Yn(0, function () {
                    var r = t().onBeforeDragStart;
                    r && r(Wn(e, n));
                  });
              },
              start: function (i, a) {
                r && At(!1);
                var o = Wn(i, a);
                (r = {
                  mode: a,
                  lastCritical: i,
                  lastLocation: o.source,
                  lastCombine: null,
                }),
                  n.add(function () {
                    Yn(0, function () {
                      return Un(t().onDragStart, o, e, Pt.onDragStart);
                    });
                  });
              },
              update: function (i, o) {
                var s = ee(o),
                  l = ne(o);
                r || At(!1);
                var c = !(function (t, e) {
                  if (t === e) return !0;
                  var n =
                      t.draggable.id === e.draggable.id &&
                      t.draggable.droppableId === e.draggable.droppableId &&
                      t.draggable.type === e.draggable.type &&
                      t.draggable.index === e.draggable.index,
                    r =
                      t.droppable.id === e.droppable.id &&
                      t.droppable.type === e.droppable.type;
                  return n && r;
                })(i, r.lastCritical);
                c && (r.lastCritical = i);
                var u,
                  d,
                  h =
                    ((d = s),
                    !(
                      (null == (u = r.lastLocation) && null == d) ||
                      (null != u &&
                        null != d &&
                        u.droppableId === d.droppableId &&
                        u.index === d.index)
                    ));
                h && (r.lastLocation = s);
                var f = !(function (t, e) {
                  return (
                    (null == t && null == e) ||
                    (null != t &&
                      null != e &&
                      t.draggableId === e.draggableId &&
                      t.droppableId === e.droppableId)
                  );
                })(r.lastCombine, l);
                if ((f && (r.lastCombine = l), c || h || f)) {
                  var p = (0, a.Z)({}, Wn(i, r.mode), {
                    combine: l,
                    destination: s,
                  });
                  n.add(function () {
                    Yn(0, function () {
                      return Un(t().onDragUpdate, p, e, Pt.onDragUpdate);
                    });
                  });
                }
              },
              flush: function () {
                r || At(!1), n.flush();
              },
              drop: i,
              abort: function () {
                if (r) {
                  var t = (0, a.Z)({}, Wn(r.lastCritical, r.mode), {
                    combine: null,
                    destination: null,
                    reason: "CANCEL",
                  });
                  i(t);
                }
              },
            };
          })(t, e);
          return function (t) {
            return function (e) {
              return function (r) {
                if ("BEFORE_INITIAL_CAPTURE" !== r.type) {
                  if ("INITIAL_PUBLISH" === r.type) {
                    var i = r.payload.critical;
                    return (
                      n.beforeStart(i, r.payload.movementMode),
                      e(r),
                      void n.start(i, r.payload.movementMode)
                    );
                  }
                  if ("DROP_COMPLETE" === r.type) {
                    var a = r.payload.completed.result;
                    return n.flush(), e(r), void n.drop(a);
                  }
                  if ((e(r), "FLUSH" !== r.type)) {
                    var o = t.getState();
                    "DRAGGING" === o.phase && n.update(o.critical, o.impact);
                  } else n.abort();
                } else
                  n.beforeCapture(
                    r.payload.draggableId,
                    r.payload.movementMode
                  );
              };
            };
          };
        },
        Gn = function (t) {
          return function (e) {
            return function (n) {
              if ("DROP_ANIMATION_FINISHED" === n.type) {
                var r = t.getState();
                "DROP_ANIMATING" !== r.phase && At(!1),
                  t.dispatch(Sn({ completed: r.completed }));
              } else e(n);
            };
          };
        },
        qn = function (t) {
          var e = null,
            n = null;
          return function (r) {
            return function (i) {
              if (
                (("FLUSH" !== i.type &&
                  "DROP_COMPLETE" !== i.type &&
                  "DROP_ANIMATION_FINISHED" !== i.type) ||
                  (n && (cancelAnimationFrame(n), (n = null)),
                  e && (e(), (e = null))),
                r(i),
                "DROP_ANIMATE" === i.type)
              ) {
                var a = {
                  eventName: "scroll",
                  options: { capture: !0, passive: !1, once: !0 },
                  fn: function () {
                    "DROP_ANIMATING" === t.getState().phase &&
                      t.dispatch({
                        type: "DROP_ANIMATION_FINISHED",
                        payload: null,
                      });
                  },
                };
                n = requestAnimationFrame(function () {
                  (n = null), (e = xt(window, [a]));
                });
              }
            };
          };
        },
        Xn = function (t) {
          return function (e) {
            return function (n) {
              if ((e(n), "PUBLISH_WHILE_DRAGGING" === n.type)) {
                var r = t.getState();
                "DROP_PENDING" === r.phase &&
                  (r.isWaiting || t.dispatch(An({ reason: r.reason })));
              }
            };
          };
        },
        Zn = m,
        Kn = function (t) {
          var e,
            n = t.dimensionMarshal,
            r = t.focusMarshal,
            i = t.styleMarshal,
            a = t.getResponders,
            l = t.announce,
            c = t.autoScroller;
          return h(
            dn,
            Zn(
              (function () {
                for (
                  var t = arguments.length, e = new Array(t), n = 0;
                  n < t;
                  n++
                )
                  e[n] = arguments[n];
                return function (t) {
                  return function () {
                    var n = t.apply(void 0, arguments),
                      r = function () {
                        throw new Error(s(15));
                      },
                      i = {
                        getState: n.getState,
                        dispatch: function () {
                          return r.apply(void 0, arguments);
                        },
                      },
                      a = e.map(function (t) {
                        return t(i);
                      });
                    return (
                      (r = m.apply(void 0, a)(n.dispatch)),
                      (0, o.Z)((0, o.Z)({}, n), {}, { dispatch: r })
                    );
                  };
                };
              })(
                ((e = i),
                function () {
                  return function (t) {
                    return function (n) {
                      "INITIAL_PUBLISH" === n.type && e.dragging(),
                        "DROP_ANIMATE" === n.type &&
                          e.dropping(n.payload.completed.result.reason),
                        ("FLUSH" !== n.type && "DROP_COMPLETE" !== n.type) ||
                          e.resting(),
                        t(n);
                    };
                  };
                }),
                (function (t) {
                  return function () {
                    return function (e) {
                      return function (n) {
                        ("DROP_COMPLETE" !== n.type &&
                          "FLUSH" !== n.type &&
                          "DROP_ANIMATE" !== n.type) ||
                          t.stopPublishing(),
                          e(n);
                      };
                    };
                  };
                })(n),
                (function (t) {
                  return function (e) {
                    var n = e.getState,
                      r = e.dispatch;
                    return function (e) {
                      return function (i) {
                        if ("LIFT" === i.type) {
                          var a = i.payload,
                            o = a.id,
                            s = a.clientSelection,
                            l = a.movementMode,
                            c = n();
                          "DROP_ANIMATING" === c.phase &&
                            r(Sn({ completed: c.completed })),
                            "IDLE" !== n().phase && At(!1),
                            r(Mn()),
                            r({
                              type: "BEFORE_INITIAL_CAPTURE",
                              payload: { draggableId: o, movementMode: l },
                            });
                          var u = {
                              draggableId: o,
                              scrollOptions: {
                                shouldPublishImmediately: "SNAP" === l,
                              },
                            },
                            d = t.startPublishing(u),
                            h = d.critical,
                            f = d.dimensions,
                            p = d.viewport;
                          r({
                            type: "INITIAL_PUBLISH",
                            payload: {
                              critical: h,
                              dimensions: f,
                              clientSelection: s,
                              movementMode: l,
                              viewport: p,
                            },
                          });
                        } else e(i);
                      };
                    };
                  };
                })(n),
                Ln,
                Gn,
                qn,
                Xn,
                (function (t) {
                  return function (e) {
                    return function (n) {
                      return function (r) {
                        if (
                          (function (t) {
                            return (
                              "DROP_COMPLETE" === t.type ||
                              "DROP_ANIMATE" === t.type ||
                              "FLUSH" === t.type
                            );
                          })(r)
                        )
                          return t.stop(), void n(r);
                        if ("INITIAL_PUBLISH" === r.type) {
                          n(r);
                          var i = e.getState();
                          return (
                            "DRAGGING" !== i.phase && At(!1), void t.start(i)
                          );
                        }
                        n(r), t.scroll(e.getState());
                      };
                    };
                  };
                })(c),
                Hn,
                (function (t) {
                  var e = !1;
                  return function () {
                    return function (n) {
                      return function (r) {
                        if ("INITIAL_PUBLISH" === r.type)
                          return (
                            (e = !0),
                            t.tryRecordFocus(r.payload.critical.draggable.id),
                            n(r),
                            void t.tryRestoreFocusRecorded()
                          );
                        if ((n(r), e)) {
                          if ("FLUSH" === r.type)
                            return (e = !1), void t.tryRestoreFocusRecorded();
                          if ("DROP_COMPLETE" === r.type) {
                            e = !1;
                            var i = r.payload.completed.result;
                            i.combine &&
                              t.tryShiftRecord(
                                i.draggableId,
                                i.combine.draggableId
                              ),
                              t.tryRestoreFocusRecorded();
                          }
                        }
                      };
                    };
                  };
                })(r),
                zn(a, l)
              )
            )
          );
        };
      var $n = function (t) {
          var e = t.scrollHeight,
            n = t.scrollWidth,
            r = t.height,
            i = t.width,
            a = It({ x: n, y: e }, { x: i, y: r });
          return { x: Math.max(0, a.x), y: Math.max(0, a.y) };
        },
        Qn = function () {
          var t = document.documentElement;
          return t || At(!1), t;
        },
        Jn = function () {
          var t = Qn();
          return $n({
            scrollHeight: t.scrollHeight,
            scrollWidth: t.scrollWidth,
            width: t.clientWidth,
            height: t.clientHeight,
          });
        },
        tr = function (t) {
          var e = t.critical,
            n = t.scrollOptions,
            r = t.registry;
          rn();
          var i = (function () {
              var t = Vn(),
                e = Jn(),
                n = t.y,
                r = t.x,
                i = Qn(),
                a = i.clientWidth,
                o = i.clientHeight;
              return {
                frame: st({ top: n, left: r, right: r + a, bottom: n + o }),
                scroll: {
                  initial: t,
                  current: t,
                  max: e,
                  diff: { value: Ct, displacement: Ct },
                },
              };
            })(),
            a = i.scroll.current,
            o = e.droppable,
            s = r.droppable.getAllByType(o.type).map(function (t) {
              return t.callbacks.getDimensionAndWatchScroll(a, n);
            }),
            l = r.draggable.getAllByType(e.draggable.type).map(function (t) {
              return t.getDimension(a);
            }),
            c = { draggables: $t(l), droppables: Kt(s) };
          return an(), { dimensions: c, critical: e, viewport: i };
        };
      function er(t, e, n) {
        return (
          n.descriptor.id !== e.id &&
          n.descriptor.type === e.type &&
          "virtual" ===
            t.droppable.getById(n.descriptor.droppableId).descriptor.mode
        );
      }
      var nr = function (t, e) {
          var n = null,
            r = (function (t) {
              var e = t.registry,
                n = t.callbacks,
                r = { additions: {}, removals: {}, modified: {} },
                i = null,
                a = function () {
                  i ||
                    (n.collectionStarting(),
                    (i = requestAnimationFrame(function () {
                      (i = null), rn();
                      var t = r,
                        a = t.additions,
                        o = t.removals,
                        s = t.modified,
                        l = Object.keys(a)
                          .map(function (t) {
                            return e.draggable.getById(t).getDimension(Ct);
                          })
                          .sort(function (t, e) {
                            return t.descriptor.index - e.descriptor.index;
                          }),
                        c = Object.keys(s).map(function (t) {
                          return {
                            droppableId: t,
                            scroll: e.droppable
                              .getById(t)
                              .callbacks.getScrollWhileDragging(),
                          };
                        }),
                        u = {
                          additions: l,
                          removals: Object.keys(o),
                          modified: c,
                        };
                      (r = { additions: {}, removals: {}, modified: {} }),
                        an(),
                        n.publish(u);
                    })));
                };
              return {
                add: function (t) {
                  var e = t.descriptor.id;
                  (r.additions[e] = t),
                    (r.modified[t.descriptor.droppableId] = !0),
                    r.removals[e] && delete r.removals[e],
                    a();
                },
                remove: function (t) {
                  var e = t.descriptor;
                  (r.removals[e.id] = !0),
                    (r.modified[e.droppableId] = !0),
                    r.additions[e.id] && delete r.additions[e.id],
                    a();
                },
                stop: function () {
                  i &&
                    (cancelAnimationFrame(i),
                    (i = null),
                    (r = { additions: {}, removals: {}, modified: {} }));
                },
              };
            })({
              callbacks: {
                publish: e.publishWhileDragging,
                collectionStarting: e.collectionStarting,
              },
              registry: t,
            }),
            i = function (e) {
              n || At(!1);
              var i = n.critical.draggable;
              "ADDITION" === e.type && er(t, i, e.value) && r.add(e.value),
                "REMOVAL" === e.type && er(t, i, e.value) && r.remove(e.value);
            },
            a = {
              updateDroppableIsEnabled: function (r, i) {
                t.droppable.exists(r) || At(!1),
                  n && e.updateDroppableIsEnabled({ id: r, isEnabled: i });
              },
              updateDroppableIsCombineEnabled: function (r, i) {
                n &&
                  (t.droppable.exists(r) || At(!1),
                  e.updateDroppableIsCombineEnabled({
                    id: r,
                    isCombineEnabled: i,
                  }));
              },
              scrollDroppable: function (e, r) {
                n && t.droppable.getById(e).callbacks.scroll(r);
              },
              updateDroppableScroll: function (r, i) {
                n &&
                  (t.droppable.exists(r) || At(!1),
                  e.updateDroppableScroll({ id: r, newScroll: i }));
              },
              startPublishing: function (e) {
                n && At(!1);
                var r = t.draggable.getById(e.draggableId),
                  a = t.droppable.getById(r.descriptor.droppableId),
                  o = { draggable: r.descriptor, droppable: a.descriptor },
                  s = t.subscribe(i);
                return (
                  (n = { critical: o, unsubscribe: s }),
                  tr({
                    critical: o,
                    registry: t,
                    scrollOptions: e.scrollOptions,
                  })
                );
              },
              stopPublishing: function () {
                if (n) {
                  r.stop();
                  var e = n.critical.droppable;
                  t.droppable.getAllByType(e.type).forEach(function (t) {
                    return t.callbacks.dragStopped();
                  }),
                    n.unsubscribe(),
                    (n = null);
                }
              },
            };
          return a;
        },
        rr = function (t, e) {
          return (
            "IDLE" === t.phase ||
            ("DROP_ANIMATING" === t.phase &&
              t.completed.result.draggableId !== e &&
              "DROP" === t.completed.result.reason)
          );
        },
        ir = function (t) {
          window.scrollBy(t.x, t.y);
        },
        ar = (0, _t.default)(function (t) {
          return Qt(t).filter(function (t) {
            return !!t.isEnabled && !!t.frame;
          });
        }),
        or = function (t) {
          var e = t.center,
            n = t.destination,
            r = t.droppables;
          if (n) {
            var i = r[n];
            return i.frame ? i : null;
          }
          var a = (function (t, e) {
            var n = Xt(ar(e), function (e) {
              return e.frame || At(!1), ze(e.frame.pageMarginBox)(t);
            });
            return n;
          })(e, r);
          return a;
        },
        sr = 0.25,
        lr = 0.05,
        cr = 28,
        ur = function (t) {
          return Math.pow(t, 2);
        },
        dr = { stopDampeningAt: 1200, accelerateAt: 360 },
        hr = function (t) {
          var e = t.startOfRange,
            n = t.endOfRange,
            r = t.current,
            i = n - e;
          return 0 === i ? 0 : (r - e) / i;
        },
        fr = dr.accelerateAt,
        pr = dr.stopDampeningAt,
        mr = function (t) {
          var e = t.distanceToEdge,
            n = t.thresholds,
            r = t.dragStartTime,
            i = t.shouldUseTimeDampening,
            a = (function (t, e) {
              if (t > e.startScrollingFrom) return 0;
              if (t <= e.maxScrollValueAt) return cr;
              if (t === e.startScrollingFrom) return 1;
              var n = hr({
                  startOfRange: e.maxScrollValueAt,
                  endOfRange: e.startScrollingFrom,
                  current: t,
                }),
                r = cr * ur(1 - n);
              return Math.ceil(r);
            })(e, n);
          return 0 === a
            ? 0
            : i
            ? Math.max(
                (function (t, e) {
                  var n = e,
                    r = pr,
                    i = Date.now() - n;
                  if (i >= pr) return t;
                  if (i < fr) return 1;
                  var a = hr({ startOfRange: fr, endOfRange: r, current: i }),
                    o = t * ur(a);
                  return Math.ceil(o);
                })(a, r),
                1
              )
            : a;
        },
        gr = function (t) {
          var e = t.container,
            n = t.distanceToEdges,
            r = t.dragStartTime,
            i = t.axis,
            a = t.shouldUseTimeDampening,
            o = (function (t, e) {
              return {
                startScrollingFrom: t[e.size] * sr,
                maxScrollValueAt: t[e.size] * lr,
              };
            })(e, i);
          return n[i.end] < n[i.start]
            ? mr({
                distanceToEdge: n[i.end],
                thresholds: o,
                dragStartTime: r,
                shouldUseTimeDampening: a,
              })
            : -1 *
                mr({
                  distanceToEdge: n[i.start],
                  thresholds: o,
                  dragStartTime: r,
                  shouldUseTimeDampening: a,
                });
        },
        _r = Ht(function (t) {
          return 0 === t ? 0 : t;
        }),
        vr = function (t) {
          var e = t.dragStartTime,
            n = t.container,
            r = t.subject,
            i = t.center,
            a = t.shouldUseTimeDampening,
            o = {
              top: i.y - n.top,
              right: n.right - i.x,
              bottom: n.bottom - i.y,
              left: i.x - n.left,
            },
            s = gr({
              container: n,
              distanceToEdges: o,
              dragStartTime: e,
              axis: de,
              shouldUseTimeDampening: a,
            }),
            l = gr({
              container: n,
              distanceToEdges: o,
              dragStartTime: e,
              axis: he,
              shouldUseTimeDampening: a,
            }),
            c = _r({ x: l, y: s });
          if (Bt(c, Ct)) return null;
          var u = (function (t) {
            var e = t.container,
              n = t.subject,
              r = t.proposedScroll,
              i = n.height > e.height,
              a = n.width > e.width;
            return a || i
              ? a && i
                ? null
                : { x: a ? 0 : r.x, y: i ? 0 : r.y }
              : r;
          })({ container: n, subject: r, proposedScroll: c });
          return u ? (Bt(u, Ct) ? null : u) : null;
        },
        br = Ht(function (t) {
          return 0 === t ? 0 : t > 0 ? 1 : -1;
        }),
        yr = (function () {
          var t = function (t, e) {
            return t < 0 ? t : t > e ? t - e : 0;
          };
          return function (e) {
            var n = e.current,
              r = e.max,
              i = e.change,
              a = Dt(n, i),
              o = { x: t(a.x, r.x), y: t(a.y, r.y) };
            return Bt(o, Ct) ? null : o;
          };
        })(),
        xr = function (t) {
          var e = t.max,
            n = t.current,
            r = t.change,
            i = { x: Math.max(n.x, e.x), y: Math.max(n.y, e.y) },
            a = br(r),
            o = yr({ max: i, current: n, change: a });
          return !o || (0 !== a.x && 0 === o.x) || (0 !== a.y && 0 === o.y);
        },
        wr = function (t, e) {
          return xr({
            current: t.scroll.current,
            max: t.scroll.max,
            change: e,
          });
        },
        Mr = function (t, e) {
          var n = t.frame;
          return (
            !!n &&
            xr({ current: n.scroll.current, max: n.scroll.max, change: e })
          );
        },
        Sr = function (t) {
          var e = t.state,
            n = t.dragStartTime,
            r = t.shouldUseTimeDampening,
            i = t.scrollWindow,
            a = t.scrollDroppable,
            o = e.current.page.borderBoxCenter,
            s = e.dimensions.draggables[e.critical.draggable.id].page.marginBox;
          if (e.isWindowScrollAllowed) {
            var l = (function (t) {
              var e = t.viewport,
                n = t.subject,
                r = t.center,
                i = t.dragStartTime,
                a = t.shouldUseTimeDampening,
                o = vr({
                  dragStartTime: i,
                  container: e.frame,
                  subject: n,
                  center: r,
                  shouldUseTimeDampening: a,
                });
              return o && wr(e, o) ? o : null;
            })({
              dragStartTime: n,
              viewport: e.viewport,
              subject: s,
              center: o,
              shouldUseTimeDampening: r,
            });
            if (l) return void i(l);
          }
          var c = or({
            center: o,
            destination: Ye(e.impact),
            droppables: e.dimensions.droppables,
          });
          if (c) {
            var u = (function (t) {
              var e = t.droppable,
                n = t.subject,
                r = t.center,
                i = t.dragStartTime,
                a = t.shouldUseTimeDampening,
                o = e.frame;
              if (!o) return null;
              var s = vr({
                dragStartTime: i,
                container: o.pageMarginBox,
                subject: n,
                center: r,
                shouldUseTimeDampening: a,
              });
              return s && Mr(e, s) ? s : null;
            })({
              dragStartTime: n,
              droppable: c,
              subject: s,
              center: o,
              shouldUseTimeDampening: r,
            });
            u && a(c.descriptor.id, u);
          }
        },
        Ar = function (t) {
          var e = t.move,
            n = t.scrollDroppable,
            r = t.scrollWindow,
            i = function (t, e) {
              if (!Mr(t, e)) return e;
              var r = (function (t, e) {
                var n = t.frame;
                return n && Mr(t, e)
                  ? yr({
                      current: n.scroll.current,
                      max: n.scroll.max,
                      change: e,
                    })
                  : null;
              })(t, e);
              if (!r) return n(t.descriptor.id, e), null;
              var i = It(e, r);
              return n(t.descriptor.id, i), It(e, i);
            },
            a = function (t, e, n) {
              if (!t) return n;
              if (!wr(e, n)) return n;
              var i = (function (t, e) {
                if (!wr(t, e)) return null;
                var n = t.scroll.max,
                  r = t.scroll.current;
                return yr({ current: r, max: n, change: e });
              })(e, n);
              if (!i) return r(n), null;
              var a = It(n, i);
              return r(a), It(n, a);
            };
          return function (t) {
            var n = t.scrollJumpRequest;
            if (n) {
              var r = Ye(t.impact);
              r || At(!1);
              var o = i(t.dimensions.droppables[r], n);
              if (o) {
                var s = t.viewport,
                  l = a(t.isWindowScrollAllowed, s, o);
                l &&
                  (function (t, n) {
                    var r = Dt(t.current.client.selection, n);
                    e({ client: r });
                  })(t, l);
              }
            }
          };
        },
        Er = function (t) {
          var e = t.scrollDroppable,
            n = t.scrollWindow,
            r = t.move,
            i = (function (t) {
              var e = t.scrollWindow,
                n = t.scrollDroppable,
                r = vt(e),
                i = vt(n),
                a = null,
                o = function (t) {
                  a || At(!1);
                  var e = a,
                    n = e.shouldUseTimeDampening,
                    o = e.dragStartTime;
                  Sr({
                    state: t,
                    scrollWindow: r,
                    scrollDroppable: i,
                    dragStartTime: o,
                    shouldUseTimeDampening: n,
                  });
                };
              return {
                start: function (t) {
                  rn(), a && At(!1);
                  var e = Date.now(),
                    n = !1,
                    r = function () {
                      n = !0;
                    };
                  Sr({
                    state: t,
                    dragStartTime: 0,
                    shouldUseTimeDampening: !1,
                    scrollWindow: r,
                    scrollDroppable: r,
                  }),
                    (a = { dragStartTime: e, shouldUseTimeDampening: n }),
                    an(),
                    n && o(t);
                },
                stop: function () {
                  a && (r.cancel(), i.cancel(), (a = null));
                },
                scroll: o,
              };
            })({ scrollWindow: n, scrollDroppable: e }),
            a = Ar({ move: r, scrollWindow: n, scrollDroppable: e });
          return {
            scroll: function (t) {
              "DRAGGING" === t.phase &&
                ("FLUID" !== t.movementMode
                  ? t.scrollJumpRequest && a(t)
                  : i.scroll(t));
            },
            start: i.start,
            stop: i.stop,
          };
        },
        kr = "data-rbd",
        Rr = (function () {
          var t = kr + "-drag-handle";
          return {
            base: t,
            draggableId: t + "-draggable-id",
            contextId: t + "-context-id",
          };
        })(),
        Tr = (function () {
          var t = kr + "-draggable";
          return { base: t, contextId: t + "-context-id", id: t + "-id" };
        })(),
        Or = (function () {
          var t = kr + "-droppable";
          return { base: t, contextId: t + "-context-id", id: t + "-id" };
        })(),
        Pr = { contextId: kr + "-scroll-container-context-id" },
        Cr = function (t, e) {
          return t
            .map(function (t) {
              var n = t.styles[e];
              return n ? t.selector + " { " + n + " }" : "";
            })
            .join(" ");
        },
        Dr = function (t) {
          var e,
            n =
              ((e = t),
              function (t) {
                return "[" + t + '="' + e + '"]';
              }),
            r = (function () {
              var t =
                "\n      cursor: -webkit-grab;\n      cursor: grab;\n    ";
              return {
                selector: n(Rr.contextId),
                styles: {
                  always:
                    "\n          -webkit-touch-callout: none;\n          -webkit-tap-highlight-color: rgba(0,0,0,0);\n          touch-action: manipulation;\n        ",
                  resting: t,
                  dragging: "pointer-events: none;",
                  dropAnimating: t,
                },
              };
            })(),
            i = [
              (function () {
                var t = "\n      transition: " + Pn.outOfTheWay + ";\n    ";
                return {
                  selector: n(Tr.contextId),
                  styles: { dragging: t, dropAnimating: t, userCancel: t },
                };
              })(),
              r,
              {
                selector: n(Or.contextId),
                styles: { always: "overflow-anchor: none;" },
              },
              {
                selector: "body",
                styles: {
                  dragging:
                    "\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n        user-select: none;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        overflow-anchor: none;\n      ",
                },
              },
            ];
          return {
            always: Cr(i, "always"),
            resting: Cr(i, "resting"),
            dragging: Cr(i, "dragging"),
            dropAnimating: Cr(i, "dropAnimating"),
            userCancel: Cr(i, "userCancel"),
          };
        },
        Ir =
          "undefined" !== typeof window &&
          "undefined" !== typeof window.document &&
          "undefined" !== typeof window.document.createElement
            ? r.useLayoutEffect
            : r.useEffect,
        Br = function () {
          var t = document.querySelector("head");
          return t || At(!1), t;
        },
        Nr = function (t) {
          var e = document.createElement("style");
          return t && e.setAttribute("nonce", t), (e.type = "text/css"), e;
        };
      var Lr = function (t) {
        return t && t.ownerDocument ? t.ownerDocument.defaultView : window;
      };
      function Vr(t) {
        return t instanceof Lr(t).HTMLElement;
      }
      function Fr(t, e) {
        var n = "[" + Rr.contextId + '="' + t + '"]',
          r = Zt(document.querySelectorAll(n));
        if (!r.length) return null;
        var i = Xt(r, function (t) {
          return t.getAttribute(Rr.draggableId) === e;
        });
        return i && Vr(i) ? i : null;
      }
      function Hr() {
        var t = { draggables: {}, droppables: {} },
          e = [];
        function n(t) {
          e.length &&
            e.forEach(function (e) {
              return e(t);
            });
        }
        function r(e) {
          return t.draggables[e] || null;
        }
        function i(e) {
          return t.droppables[e] || null;
        }
        return {
          draggable: {
            register: function (e) {
              (t.draggables[e.descriptor.id] = e),
                n({ type: "ADDITION", value: e });
            },
            update: function (e, n) {
              var r = t.draggables[n.descriptor.id];
              r &&
                r.uniqueId === e.uniqueId &&
                (delete t.draggables[n.descriptor.id],
                (t.draggables[e.descriptor.id] = e));
            },
            unregister: function (e) {
              var i = e.descriptor.id,
                a = r(i);
              a &&
                e.uniqueId === a.uniqueId &&
                (delete t.draggables[i], n({ type: "REMOVAL", value: e }));
            },
            getById: function (t) {
              var e = r(t);
              return e || At(!1), e;
            },
            findById: r,
            exists: function (t) {
              return Boolean(r(t));
            },
            getAllByType: function (e) {
              return Gt(t.draggables).filter(function (t) {
                return t.descriptor.type === e;
              });
            },
          },
          droppable: {
            register: function (e) {
              t.droppables[e.descriptor.id] = e;
            },
            unregister: function (e) {
              var n = i(e.descriptor.id);
              n &&
                e.uniqueId === n.uniqueId &&
                delete t.droppables[e.descriptor.id];
            },
            getById: function (t) {
              var e = i(t);
              return e || At(!1), e;
            },
            findById: i,
            exists: function (t) {
              return Boolean(i(t));
            },
            getAllByType: function (e) {
              return Gt(t.droppables).filter(function (t) {
                return t.descriptor.type === e;
              });
            },
          },
          subscribe: function (t) {
            return (
              e.push(t),
              function () {
                var n = e.indexOf(t);
                -1 !== n && e.splice(n, 1);
              }
            );
          },
          clean: function () {
            (t.draggables = {}), (t.droppables = {}), (e.length = 0);
          },
        };
      }
      var jr = r.createContext(null),
        Yr = function () {
          var t = document.body;
          return t || At(!1), t;
        },
        Wr = {
          position: "absolute",
          width: "1px",
          height: "1px",
          margin: "-1px",
          border: "0",
          padding: "0",
          overflow: "hidden",
          clip: "rect(0 0 0 0)",
          "clip-path": "inset(100%)",
        },
        Ur = function (t) {
          return "rbd-announcement-" + t;
        };
      var zr = 0,
        Gr = { separator: "::" };
      function qr(t, e) {
        return (
          void 0 === e && (e = Gr),
          it(
            function () {
              return "" + t + e.separator + zr++;
            },
            [e.separator, t]
          )
        );
      }
      var Xr = r.createContext(null);
      function Zr(t) {
        0;
      }
      function Kr(t, e) {
        Zr();
      }
      function $r(t) {
        var e = (0, r.useRef)(t);
        return (
          (0, r.useEffect)(function () {
            e.current = t;
          }),
          e
        );
      }
      var Qr,
        Jr = 27,
        ti = 32,
        ei = 37,
        ni = 38,
        ri = 39,
        ii = 40,
        ai = (((Qr = {})[13] = !0), (Qr[9] = !0), Qr),
        oi = function (t) {
          ai[t.keyCode] && t.preventDefault();
        },
        si = (function () {
          var t = "visibilitychange";
          return "undefined" === typeof document
            ? t
            : Xt([t, "ms" + t, "webkit" + t, "moz" + t, "o" + t], function (t) {
                return "on" + t in document;
              }) || t;
        })(),
        li = 0,
        ci = 5;
      var ui,
        di = { type: "IDLE" };
      function hi(t) {
        var e = t.cancel,
          n = t.completed,
          r = t.getPhase,
          i = t.setPhase;
        return [
          {
            eventName: "mousemove",
            fn: function (t) {
              var e = t.button,
                n = t.clientX,
                a = t.clientY;
              if (e === li) {
                var o = { x: n, y: a },
                  s = r();
                if ("DRAGGING" === s.type)
                  return t.preventDefault(), void s.actions.move(o);
                "PENDING" !== s.type && At(!1);
                var l = s.point;
                if (
                  ((c = l),
                  (u = o),
                  Math.abs(u.x - c.x) >= ci || Math.abs(u.y - c.y) >= ci)
                ) {
                  var c, u;
                  t.preventDefault();
                  var d = s.actions.fluidLift(o);
                  i({ type: "DRAGGING", actions: d });
                }
              }
            },
          },
          {
            eventName: "mouseup",
            fn: function (t) {
              var i = r();
              "DRAGGING" === i.type
                ? (t.preventDefault(),
                  i.actions.drop({ shouldBlockNextClick: !0 }),
                  n())
                : e();
            },
          },
          {
            eventName: "mousedown",
            fn: function (t) {
              "DRAGGING" === r().type && t.preventDefault(), e();
            },
          },
          {
            eventName: "keydown",
            fn: function (t) {
              if ("PENDING" !== r().type)
                return t.keyCode === Jr
                  ? (t.preventDefault(), void e())
                  : void oi(t);
              e();
            },
          },
          { eventName: "resize", fn: e },
          {
            eventName: "scroll",
            options: { passive: !0, capture: !1 },
            fn: function () {
              "PENDING" === r().type && e();
            },
          },
          {
            eventName: "webkitmouseforcedown",
            fn: function (t) {
              var n = r();
              "IDLE" === n.type && At(!1),
                n.actions.shouldRespectForcePress() ? e() : t.preventDefault();
            },
          },
          { eventName: si, fn: e },
        ];
      }
      function fi() {}
      var pi =
        (((ui = {})[34] = !0), (ui[33] = !0), (ui[36] = !0), (ui[35] = !0), ui);
      function mi(t, e) {
        function n() {
          e(), t.cancel();
        }
        return [
          {
            eventName: "keydown",
            fn: function (r) {
              return r.keyCode === Jr
                ? (r.preventDefault(), void n())
                : r.keyCode === ti
                ? (r.preventDefault(), e(), void t.drop())
                : r.keyCode === ii
                ? (r.preventDefault(), void t.moveDown())
                : r.keyCode === ni
                ? (r.preventDefault(), void t.moveUp())
                : r.keyCode === ri
                ? (r.preventDefault(), void t.moveRight())
                : r.keyCode === ei
                ? (r.preventDefault(), void t.moveLeft())
                : void (pi[r.keyCode] ? r.preventDefault() : oi(r));
            },
          },
          { eventName: "mousedown", fn: n },
          { eventName: "mouseup", fn: n },
          { eventName: "click", fn: n },
          { eventName: "touchstart", fn: n },
          { eventName: "resize", fn: n },
          { eventName: "wheel", fn: n, options: { passive: !0 } },
          { eventName: si, fn: n },
        ];
      }
      var gi = { type: "IDLE" },
        _i = 0.15;
      var vi = {
        input: !0,
        button: !0,
        textarea: !0,
        select: !0,
        option: !0,
        optgroup: !0,
        video: !0,
        audio: !0,
      };
      function bi(t, e) {
        if (null == e) return !1;
        if (Boolean(vi[e.tagName.toLowerCase()])) return !0;
        var n = e.getAttribute("contenteditable");
        return "true" === n || "" === n || (e !== t && bi(t, e.parentElement));
      }
      function yi(t, e) {
        var n = e.target;
        return !!Vr(n) && bi(t, n);
      }
      var xi = function (t) {
        return st(t.getBoundingClientRect()).center;
      };
      var wi = (function () {
        var t = "matches";
        return "undefined" === typeof document
          ? t
          : Xt([t, "msMatchesSelector", "webkitMatchesSelector"], function (t) {
              return t in Element.prototype;
            }) || t;
      })();
      function Mi(t, e) {
        return null == t ? null : t[wi](e) ? t : Mi(t.parentElement, e);
      }
      function Si(t, e) {
        return t.closest ? t.closest(e) : Mi(t, e);
      }
      function Ai(t, e) {
        var n,
          r = e.target;
        if (!((n = r) instanceof Lr(n).Element)) return null;
        var i = (function (t) {
            return "[" + Rr.contextId + '="' + t + '"]';
          })(t),
          a = Si(r, i);
        return a && Vr(a) ? a : null;
      }
      function Ei(t) {
        t.preventDefault();
      }
      function ki(t) {
        var e = t.expected,
          n = t.phase,
          r = t.isLockActive;
        t.shouldWarn;
        return !!r() && e === n;
      }
      function Ri(t) {
        var e = t.lockAPI,
          n = t.store,
          r = t.registry,
          i = t.draggableId;
        if (e.isClaimed()) return !1;
        var a = r.draggable.findById(i);
        return !!a && !!a.options.isEnabled && !!rr(n.getState(), i);
      }
      function Ti(t) {
        var e = t.lockAPI,
          n = t.contextId,
          r = t.store,
          i = t.registry,
          o = t.draggableId,
          s = t.forceSensorStop,
          l = t.sourceEvent;
        if (!Ri({ lockAPI: e, store: r, registry: i, draggableId: o }))
          return null;
        var c = i.draggable.getById(o),
          u = (function (t, e) {
            var n = "[" + Tr.contextId + '="' + t + '"]',
              r = Xt(Zt(document.querySelectorAll(n)), function (t) {
                return t.getAttribute(Tr.id) === e;
              });
            return r && Vr(r) ? r : null;
          })(n, c.descriptor.id);
        if (!u) return null;
        if (l && !c.options.canDragInteractiveElements && yi(u, l)) return null;
        var d = e.claim(s || yt),
          h = "PRE_DRAG";
        function f() {
          return c.options.shouldRespectForcePress;
        }
        function p() {
          return e.isActive(d);
        }
        var m = function (t, e) {
          ki({ expected: t, phase: h, isLockActive: p, shouldWarn: !0 }) &&
            r.dispatch(e());
        }.bind(null, "DRAGGING");
        function g(t) {
          function n() {
            e.release(), (h = "COMPLETED");
          }
          function i(e, i) {
            if (
              (void 0 === i && (i = { shouldBlockNextClick: !1 }),
              t.cleanup(),
              i.shouldBlockNextClick)
            ) {
              var a = xt(window, [
                {
                  eventName: "click",
                  fn: Ei,
                  options: { once: !0, passive: !1, capture: !0 },
                },
              ]);
              setTimeout(a);
            }
            n(), r.dispatch(An({ reason: e }));
          }
          return (
            "PRE_DRAG" !== h && (n(), "PRE_DRAG" !== h && At(!1)),
            r.dispatch(hn(t.liftActionArgs)),
            (h = "DRAGGING"),
            (0, a.Z)(
              {
                isActive: function () {
                  return ki({
                    expected: "DRAGGING",
                    phase: h,
                    isLockActive: p,
                    shouldWarn: !1,
                  });
                },
                shouldRespectForcePress: f,
                drop: function (t) {
                  return i("DROP", t);
                },
                cancel: function (t) {
                  return i("CANCEL", t);
                },
              },
              t.actions
            )
          );
        }
        return {
          isActive: function () {
            return ki({
              expected: "PRE_DRAG",
              phase: h,
              isLockActive: p,
              shouldWarn: !1,
            });
          },
          shouldRespectForcePress: f,
          fluidLift: function (t) {
            var e = vt(function (t) {
                m(function () {
                  return vn({ client: t });
                });
              }),
              n = g({
                liftActionArgs: {
                  id: o,
                  clientSelection: t,
                  movementMode: "FLUID",
                },
                cleanup: function () {
                  return e.cancel();
                },
                actions: { move: e },
              });
            return (0, a.Z)({}, n, { move: e });
          },
          snapLift: function () {
            var t = {
              moveUp: function () {
                return m(bn);
              },
              moveRight: function () {
                return m(xn);
              },
              moveDown: function () {
                return m(yn);
              },
              moveLeft: function () {
                return m(wn);
              },
            };
            return g({
              liftActionArgs: {
                id: o,
                clientSelection: xi(u),
                movementMode: "SNAP",
              },
              cleanup: yt,
              actions: t,
            });
          },
          abort: function () {
            ki({
              expected: "PRE_DRAG",
              phase: h,
              isLockActive: p,
              shouldWarn: !0,
            }) && e.release();
          },
        };
      }
      var Oi = [
        function (t) {
          var e = (0, r.useRef)(di),
            n = (0, r.useRef)(yt),
            i = it(
              function () {
                return {
                  eventName: "mousedown",
                  fn: function (e) {
                    if (
                      !e.defaultPrevented &&
                      e.button === li &&
                      !(e.ctrlKey || e.metaKey || e.shiftKey || e.altKey)
                    ) {
                      var r = t.findClosestDraggableId(e);
                      if (r) {
                        var i = t.tryGetLock(r, s, { sourceEvent: e });
                        if (i) {
                          e.preventDefault();
                          var a = { x: e.clientX, y: e.clientY };
                          n.current(), u(i, a);
                        }
                      }
                    }
                  },
                };
              },
              [t]
            ),
            a = it(
              function () {
                return {
                  eventName: "webkitmouseforcewillbegin",
                  fn: function (e) {
                    if (!e.defaultPrevented) {
                      var n = t.findClosestDraggableId(e);
                      if (n) {
                        var r = t.findOptionsForDraggable(n);
                        r &&
                          (r.shouldRespectForcePress ||
                            (t.canGetLock(n) && e.preventDefault()));
                      }
                    }
                  },
                };
              },
              [t]
            ),
            o = at(
              function () {
                n.current = xt(window, [a, i], { passive: !1, capture: !0 });
              },
              [a, i]
            ),
            s = at(
              function () {
                "IDLE" !== e.current.type &&
                  ((e.current = di), n.current(), o());
              },
              [o]
            ),
            l = at(
              function () {
                var t = e.current;
                s(),
                  "DRAGGING" === t.type &&
                    t.actions.cancel({ shouldBlockNextClick: !0 }),
                  "PENDING" === t.type && t.actions.abort();
              },
              [s]
            ),
            c = at(
              function () {
                var t = hi({
                  cancel: l,
                  completed: s,
                  getPhase: function () {
                    return e.current;
                  },
                  setPhase: function (t) {
                    e.current = t;
                  },
                });
                n.current = xt(window, t, { capture: !0, passive: !1 });
              },
              [l, s]
            ),
            u = at(
              function (t, n) {
                "IDLE" !== e.current.type && At(!1),
                  (e.current = { type: "PENDING", point: n, actions: t }),
                  c();
              },
              [c]
            );
          Ir(
            function () {
              return (
                o(),
                function () {
                  n.current();
                }
              );
            },
            [o]
          );
        },
        function (t) {
          var e = (0, r.useRef)(fi),
            n = it(
              function () {
                return {
                  eventName: "keydown",
                  fn: function (n) {
                    if (!n.defaultPrevented && n.keyCode === ti) {
                      var r = t.findClosestDraggableId(n);
                      if (r) {
                        var a = t.tryGetLock(r, l, { sourceEvent: n });
                        if (a) {
                          n.preventDefault();
                          var o = !0,
                            s = a.snapLift();
                          e.current(),
                            (e.current = xt(window, mi(s, l), {
                              capture: !0,
                              passive: !1,
                            }));
                        }
                      }
                    }
                    function l() {
                      o || At(!1), (o = !1), e.current(), i();
                    }
                  },
                };
              },
              [t]
            ),
            i = at(
              function () {
                e.current = xt(window, [n], { passive: !1, capture: !0 });
              },
              [n]
            );
          Ir(
            function () {
              return (
                i(),
                function () {
                  e.current();
                }
              );
            },
            [i]
          );
        },
        function (t) {
          var e = (0, r.useRef)(gi),
            n = (0, r.useRef)(yt),
            i = at(function () {
              return e.current;
            }, []),
            a = at(function (t) {
              e.current = t;
            }, []),
            o = it(
              function () {
                return {
                  eventName: "touchstart",
                  fn: function (e) {
                    if (!e.defaultPrevented) {
                      var r = t.findClosestDraggableId(e);
                      if (r) {
                        var i = t.tryGetLock(r, l, { sourceEvent: e });
                        if (i) {
                          var a = e.touches[0],
                            o = { x: a.clientX, y: a.clientY };
                          n.current(), h(i, o);
                        }
                      }
                    }
                  },
                };
              },
              [t]
            ),
            s = at(
              function () {
                n.current = xt(window, [o], { capture: !0, passive: !1 });
              },
              [o]
            ),
            l = at(
              function () {
                var t = e.current;
                "IDLE" !== t.type &&
                  ("PENDING" === t.type && clearTimeout(t.longPressTimerId),
                  a(gi),
                  n.current(),
                  s());
              },
              [s, a]
            ),
            c = at(
              function () {
                var t = e.current;
                l(),
                  "DRAGGING" === t.type &&
                    t.actions.cancel({ shouldBlockNextClick: !0 }),
                  "PENDING" === t.type && t.actions.abort();
              },
              [l]
            ),
            u = at(
              function () {
                var t = { capture: !0, passive: !1 },
                  e = { cancel: c, completed: l, getPhase: i },
                  r = xt(
                    window,
                    (function (t) {
                      var e = t.cancel,
                        n = t.completed,
                        r = t.getPhase;
                      return [
                        {
                          eventName: "touchmove",
                          options: { capture: !1 },
                          fn: function (t) {
                            var n = r();
                            if ("DRAGGING" === n.type) {
                              n.hasMoved = !0;
                              var i = t.touches[0],
                                a = { x: i.clientX, y: i.clientY };
                              t.preventDefault(), n.actions.move(a);
                            } else e();
                          },
                        },
                        {
                          eventName: "touchend",
                          fn: function (t) {
                            var i = r();
                            "DRAGGING" === i.type
                              ? (t.preventDefault(),
                                i.actions.drop({ shouldBlockNextClick: !0 }),
                                n())
                              : e();
                          },
                        },
                        {
                          eventName: "touchcancel",
                          fn: function (t) {
                            "DRAGGING" === r().type
                              ? (t.preventDefault(), e())
                              : e();
                          },
                        },
                        {
                          eventName: "touchforcechange",
                          fn: function (t) {
                            var n = r();
                            "IDLE" === n.type && At(!1);
                            var i = t.touches[0];
                            if (i && i.force >= _i) {
                              var a = n.actions.shouldRespectForcePress();
                              if ("PENDING" !== n.type)
                                return a
                                  ? n.hasMoved
                                    ? void t.preventDefault()
                                    : void e()
                                  : void t.preventDefault();
                              a && e();
                            }
                          },
                        },
                        { eventName: si, fn: e },
                      ];
                    })(e),
                    t
                  ),
                  a = xt(
                    window,
                    (function (t) {
                      var e = t.cancel,
                        n = t.getPhase;
                      return [
                        { eventName: "orientationchange", fn: e },
                        { eventName: "resize", fn: e },
                        {
                          eventName: "contextmenu",
                          fn: function (t) {
                            t.preventDefault();
                          },
                        },
                        {
                          eventName: "keydown",
                          fn: function (t) {
                            "DRAGGING" === n().type
                              ? (t.keyCode === Jr && t.preventDefault(), e())
                              : e();
                          },
                        },
                        { eventName: si, fn: e },
                      ];
                    })(e),
                    t
                  );
                n.current = function () {
                  r(), a();
                };
              },
              [c, i, l]
            ),
            d = at(
              function () {
                var t = i();
                "PENDING" !== t.type && At(!1);
                var e = t.actions.fluidLift(t.point);
                a({ type: "DRAGGING", actions: e, hasMoved: !1 });
              },
              [i, a]
            ),
            h = at(
              function (t, e) {
                "IDLE" !== i().type && At(!1);
                var n = setTimeout(d, 120);
                a({
                  type: "PENDING",
                  point: e,
                  actions: t,
                  longPressTimerId: n,
                }),
                  u();
              },
              [u, i, a, d]
            );
          Ir(
            function () {
              return (
                s(),
                function () {
                  n.current();
                  var t = i();
                  "PENDING" === t.type &&
                    (clearTimeout(t.longPressTimerId), a(gi));
                }
              );
            },
            [i, s, a]
          ),
            Ir(function () {
              return xt(window, [
                {
                  eventName: "touchmove",
                  fn: function () {},
                  options: { capture: !1, passive: !1 },
                },
              ]);
            }, []);
        },
      ];
      function Pi(t) {
        var e = t.contextId,
          n = t.store,
          i = t.registry,
          a = t.customSensors,
          o = t.enableDefaultSensors,
          s = [].concat(o ? Oi : [], a || []),
          l = (0, r.useState)(function () {
            return (function () {
              var t = null;
              function e() {
                t || At(!1), (t = null);
              }
              return {
                isClaimed: function () {
                  return Boolean(t);
                },
                isActive: function (e) {
                  return e === t;
                },
                claim: function (e) {
                  t && At(!1);
                  var n = { abandon: e };
                  return (t = n), n;
                },
                release: e,
                tryAbandon: function () {
                  t && (t.abandon(), e());
                },
              };
            })();
          })[0],
          c = at(
            function (t, e) {
              t.isDragging && !e.isDragging && l.tryAbandon();
            },
            [l]
          );
        Ir(
          function () {
            var t = n.getState();
            return n.subscribe(function () {
              var e = n.getState();
              c(t, e), (t = e);
            });
          },
          [l, n, c]
        ),
          Ir(
            function () {
              return l.tryAbandon;
            },
            [l.tryAbandon]
          );
        var u = at(
            function (t) {
              return Ri({ lockAPI: l, registry: i, store: n, draggableId: t });
            },
            [l, i, n]
          ),
          d = at(
            function (t, r, a) {
              return Ti({
                lockAPI: l,
                registry: i,
                contextId: e,
                store: n,
                draggableId: t,
                forceSensorStop: r,
                sourceEvent: a && a.sourceEvent ? a.sourceEvent : null,
              });
            },
            [e, l, i, n]
          ),
          h = at(
            function (t) {
              return (function (t, e) {
                var n = Ai(t, e);
                return n ? n.getAttribute(Rr.draggableId) : null;
              })(e, t);
            },
            [e]
          ),
          f = at(
            function (t) {
              var e = i.draggable.findById(t);
              return e ? e.options : null;
            },
            [i.draggable]
          ),
          p = at(
            function () {
              l.isClaimed() &&
                (l.tryAbandon(),
                "IDLE" !== n.getState().phase && n.dispatch(Mn()));
            },
            [l, n]
          ),
          m = at(l.isClaimed, [l]),
          g = it(
            function () {
              return {
                canGetLock: u,
                tryGetLock: d,
                findClosestDraggableId: h,
                findOptionsForDraggable: f,
                tryReleaseLock: p,
                isLockClaimed: m,
              };
            },
            [u, d, h, f, p, m]
          );
        Zr();
        for (var _ = 0; _ < s.length; _++) s[_](g);
      }
      var Ci = function (t) {
        return {
          onBeforeCapture: t.onBeforeCapture,
          onBeforeDragStart: t.onBeforeDragStart,
          onDragStart: t.onDragStart,
          onDragEnd: t.onDragEnd,
          onDragUpdate: t.onDragUpdate,
        };
      };
      function Di(t) {
        return t.current || At(!1), t.current;
      }
      function Ii(t) {
        var e = t.contextId,
          n = t.setCallbacks,
          i = t.sensors,
          o = t.nonce,
          s = t.dragHandleUsageInstructions,
          l = (0, r.useRef)(null);
        Kr();
        var c = $r(t),
          u = at(
            function () {
              return Ci(c.current);
            },
            [c]
          ),
          d = (function (t) {
            var e = it(
                function () {
                  return Ur(t);
                },
                [t]
              ),
              n = (0, r.useRef)(null);
            return (
              (0, r.useEffect)(
                function () {
                  var t = document.createElement("div");
                  return (
                    (n.current = t),
                    (t.id = e),
                    t.setAttribute("aria-live", "assertive"),
                    t.setAttribute("aria-atomic", "true"),
                    (0, a.Z)(t.style, Wr),
                    Yr().appendChild(t),
                    function () {
                      setTimeout(function () {
                        var e = Yr();
                        e.contains(t) && e.removeChild(t),
                          t === n.current && (n.current = null);
                      });
                    }
                  );
                },
                [e]
              ),
              at(function (t) {
                var e = n.current;
                e && (e.textContent = t);
              }, [])
            );
          })(e),
          h = (function (t) {
            var e = t.contextId,
              n = t.text,
              i = qr("hidden-text", { separator: "-" }),
              a = it(
                function () {
                  return (
                    "rbd-hidden-text-" +
                    (t = { contextId: e, uniqueId: i }).contextId +
                    "-" +
                    t.uniqueId
                  );
                  var t;
                },
                [i, e]
              );
            return (
              (0, r.useEffect)(
                function () {
                  var t = document.createElement("div");
                  return (
                    (t.id = a),
                    (t.textContent = n),
                    (t.style.display = "none"),
                    Yr().appendChild(t),
                    function () {
                      var e = Yr();
                      e.contains(t) && e.removeChild(t);
                    }
                  );
                },
                [a, n]
              ),
              a
            );
          })({ contextId: e, text: s }),
          f = (function (t, e) {
            var n = it(
                function () {
                  return Dr(t);
                },
                [t]
              ),
              i = (0, r.useRef)(null),
              a = (0, r.useRef)(null),
              o = at(
                (0, _t.default)(function (t) {
                  var e = a.current;
                  e || At(!1), (e.textContent = t);
                }),
                []
              ),
              s = at(function (t) {
                var e = i.current;
                e || At(!1), (e.textContent = t);
              }, []);
            Ir(
              function () {
                (i.current || a.current) && At(!1);
                var r = Nr(e),
                  l = Nr(e);
                return (
                  (i.current = r),
                  (a.current = l),
                  r.setAttribute(kr + "-always", t),
                  l.setAttribute(kr + "-dynamic", t),
                  Br().appendChild(r),
                  Br().appendChild(l),
                  s(n.always),
                  o(n.resting),
                  function () {
                    var t = function (t) {
                      var e = t.current;
                      e || At(!1), Br().removeChild(e), (t.current = null);
                    };
                    t(i), t(a);
                  }
                );
              },
              [e, s, o, n.always, n.resting, t]
            );
            var l = at(
                function () {
                  return o(n.dragging);
                },
                [o, n.dragging]
              ),
              c = at(
                function (t) {
                  o("DROP" !== t ? n.userCancel : n.dropAnimating);
                },
                [o, n.dropAnimating, n.userCancel]
              ),
              u = at(
                function () {
                  a.current && o(n.resting);
                },
                [o, n.resting]
              );
            return it(
              function () {
                return { dragging: l, dropping: c, resting: u };
              },
              [l, c, u]
            );
          })(e, o),
          m = at(function (t) {
            Di(l).dispatch(t);
          }, []),
          g = it(
            function () {
              return p(
                {
                  publishWhileDragging: fn,
                  updateDroppableScroll: mn,
                  updateDroppableIsEnabled: gn,
                  updateDroppableIsCombineEnabled: _n,
                  collectionStarting: pn,
                },
                m
              );
            },
            [m]
          ),
          _ = (function () {
            var t = it(Hr, []);
            return (
              (0, r.useEffect)(
                function () {
                  return function () {
                    requestAnimationFrame(t.clean);
                  };
                },
                [t]
              ),
              t
            );
          })(),
          v = it(
            function () {
              return nr(_, g);
            },
            [_, g]
          ),
          b = it(
            function () {
              return Er(
                (0, a.Z)(
                  { scrollWindow: ir, scrollDroppable: v.scrollDroppable },
                  p({ move: vn }, m)
                )
              );
            },
            [v.scrollDroppable, m]
          ),
          y = (function (t) {
            var e = (0, r.useRef)({}),
              n = (0, r.useRef)(null),
              i = (0, r.useRef)(null),
              a = (0, r.useRef)(!1),
              o = at(function (t, n) {
                var r = { id: t, focus: n };
                return (
                  (e.current[t] = r),
                  function () {
                    var n = e.current;
                    n[t] !== r && delete n[t];
                  }
                );
              }, []),
              s = at(
                function (e) {
                  var n = Fr(t, e);
                  n && n !== document.activeElement && n.focus();
                },
                [t]
              ),
              l = at(function (t, e) {
                n.current === t && (n.current = e);
              }, []),
              c = at(
                function () {
                  i.current ||
                    (a.current &&
                      (i.current = requestAnimationFrame(function () {
                        i.current = null;
                        var t = n.current;
                        t && s(t);
                      })));
                },
                [s]
              ),
              u = at(function (t) {
                n.current = null;
                var e = document.activeElement;
                e && e.getAttribute(Rr.draggableId) === t && (n.current = t);
              }, []);
            return (
              Ir(function () {
                return (
                  (a.current = !0),
                  function () {
                    a.current = !1;
                    var t = i.current;
                    t && cancelAnimationFrame(t);
                  }
                );
              }, []),
              it(
                function () {
                  return {
                    register: o,
                    tryRecordFocus: u,
                    tryRestoreFocusRecorded: c,
                    tryShiftRecord: l,
                  };
                },
                [o, u, c, l]
              )
            );
          })(e),
          x = it(
            function () {
              return Kn({
                announce: d,
                autoScroller: b,
                dimensionMarshal: v,
                focusMarshal: y,
                getResponders: u,
                styleMarshal: f,
              });
            },
            [d, b, v, y, u, f]
          );
        l.current = x;
        var M = at(function () {
            var t = Di(l);
            "IDLE" !== t.getState().phase && t.dispatch(Mn());
          }, []),
          S = at(function () {
            var t = Di(l).getState();
            return t.isDragging || "DROP_ANIMATING" === t.phase;
          }, []);
        n(
          it(
            function () {
              return { isDragging: S, tryAbort: M };
            },
            [S, M]
          )
        );
        var A = at(function (t) {
            return rr(Di(l).getState(), t);
          }, []),
          E = at(function () {
            return Ue(Di(l).getState());
          }, []),
          k = it(
            function () {
              return {
                marshal: v,
                focus: y,
                contextId: e,
                canLift: A,
                isMovementAllowed: E,
                dragHandleUsageInstructionsId: h,
                registry: _,
              };
            },
            [e, v, h, y, A, E, _]
          );
        return (
          Pi({
            contextId: e,
            store: x,
            registry: _,
            customSensors: i,
            enableDefaultSensors: !1 !== t.enableDefaultSensors,
          }),
          (0, r.useEffect)(
            function () {
              return M;
            },
            [M]
          ),
          r.createElement(
            Xr.Provider,
            { value: k },
            r.createElement(w, { context: jr, store: x }, t.children)
          )
        );
      }
      var Bi = 0;
      function Ni(t) {
        var e = it(function () {
            return "" + Bi++;
          }, []),
          n = t.dragHandleUsageInstructions || Pt.dragHandleUsageInstructions;
        return r.createElement(Et, null, function (i) {
          return r.createElement(
            Ii,
            {
              nonce: t.nonce,
              contextId: e,
              setCallbacks: i,
              dragHandleUsageInstructions: n,
              enableDefaultSensors: t.enableDefaultSensors,
              sensors: t.sensors,
              onBeforeCapture: t.onBeforeCapture,
              onBeforeDragStart: t.onBeforeDragStart,
              onDragStart: t.onDragStart,
              onDragUpdate: t.onDragUpdate,
              onDragEnd: t.onDragEnd,
            },
            t.children
          );
        });
      }
      var Li = function (t) {
          return function (e) {
            return t === e;
          };
        },
        Vi = Li("scroll"),
        Fi = Li("auto"),
        Hi =
          (Li("visible"),
          function (t, e) {
            return e(t.overflowX) || e(t.overflowY);
          }),
        ji = function (t) {
          var e = window.getComputedStyle(t),
            n = { overflowX: e.overflowX, overflowY: e.overflowY };
          return Hi(n, Vi) || Hi(n, Fi);
        },
        Yi = function t(e) {
          return null == e ||
            e === document.body ||
            e === document.documentElement
            ? null
            : ji(e)
            ? e
            : t(e.parentElement);
        },
        Wi = function (t) {
          return { x: t.scrollLeft, y: t.scrollTop };
        },
        Ui = function t(e) {
          return (
            !!e &&
            ("fixed" === window.getComputedStyle(e).position ||
              t(e.parentElement))
          );
        },
        zi = function (t) {
          return { closestScrollable: Yi(t), isFixedOnPage: Ui(t) };
        },
        Gi = function (t) {
          var e = t.ref,
            n = t.descriptor,
            r = t.env,
            i = t.windowScroll,
            a = t.direction,
            o = t.isDropDisabled,
            s = t.isCombineEnabled,
            l = t.shouldClipSubject,
            c = r.closestScrollable,
            u = (function (t, e) {
              var n = gt(t);
              if (!e) return n;
              if (t !== e) return n;
              var r = n.paddingBox.top - e.scrollTop,
                i = n.paddingBox.left - e.scrollLeft,
                a = r + e.scrollHeight,
                o = i + e.scrollWidth,
                s = lt({ top: r, right: o, bottom: a, left: i }, n.border);
              return dt({
                borderBox: s,
                margin: n.margin,
                border: n.border,
                padding: n.padding,
              });
            })(e, c),
            d = pt(u, i),
            h = (function () {
              if (!c) return null;
              var t = gt(c),
                e = {
                  scrollHeight: c.scrollHeight,
                  scrollWidth: c.scrollWidth,
                };
              return {
                client: t,
                page: pt(t, i),
                scroll: Wi(c),
                scrollSize: e,
                shouldClipSubject: l,
              };
            })(),
            f = (function (t) {
              var e = t.descriptor,
                n = t.isEnabled,
                r = t.isCombineEnabled,
                i = t.isFixedOnPage,
                a = t.direction,
                o = t.client,
                s = t.page,
                l = t.closest,
                c = (function () {
                  if (!l) return null;
                  var t = l.scrollSize,
                    e = l.client,
                    n = $n({
                      scrollHeight: t.scrollHeight,
                      scrollWidth: t.scrollWidth,
                      height: e.paddingBox.height,
                      width: e.paddingBox.width,
                    });
                  return {
                    pageMarginBox: l.page.marginBox,
                    frameClient: e,
                    scrollSize: t,
                    shouldClipSubject: l.shouldClipSubject,
                    scroll: {
                      initial: l.scroll,
                      current: l.scroll,
                      max: n,
                      diff: { value: Ct, displacement: Ct },
                    },
                  };
                })(),
                u = "vertical" === a ? de : he;
              return {
                descriptor: e,
                isCombineEnabled: r,
                isFixedOnPage: i,
                axis: u,
                isEnabled: n,
                client: o,
                page: s,
                frame: c,
                subject: Ut({
                  page: s,
                  withPlaceholder: null,
                  axis: u,
                  frame: c,
                }),
              };
            })({
              descriptor: n,
              isEnabled: !o,
              isCombineEnabled: s,
              isFixedOnPage: r.isFixedOnPage,
              direction: a,
              client: u,
              page: d,
              closest: h,
            });
          return f;
        },
        qi = { passive: !1 },
        Xi = { passive: !0 },
        Zi = function (t) {
          return t.shouldPublishImmediately ? qi : Xi;
        };
      function Ki(t) {
        var e = (0, r.useContext)(t);
        return e || At(!1), e;
      }
      var $i = function (t) {
        return (t && t.env.closestScrollable) || null;
      };
      function Qi() {}
      var Ji = {
          width: 0,
          height: 0,
          margin: { top: 0, right: 0, bottom: 0, left: 0 },
        },
        ta = function (t) {
          var e = t.isAnimatingOpenOnMount,
            n = t.placeholder,
            r = t.animate,
            i = (function (t) {
              var e = t.isAnimatingOpenOnMount,
                n = t.placeholder,
                r = t.animate;
              return e || "close" === r
                ? Ji
                : {
                    height: n.client.borderBox.height,
                    width: n.client.borderBox.width,
                    margin: n.client.margin,
                  };
            })({ isAnimatingOpenOnMount: e, placeholder: n, animate: r });
          return {
            display: n.display,
            boxSizing: "border-box",
            width: i.width,
            height: i.height,
            marginTop: i.margin.top,
            marginRight: i.margin.right,
            marginBottom: i.margin.bottom,
            marginLeft: i.margin.left,
            flexShrink: "0",
            flexGrow: "0",
            pointerEvents: "none",
            transition: "none" !== r ? Pn.placeholder : null,
          };
        };
      var ea = r.memo(function (t) {
          var e = (0, r.useRef)(null),
            n = at(function () {
              e.current && (clearTimeout(e.current), (e.current = null));
            }, []),
            i = t.animate,
            a = t.onTransitionEnd,
            o = t.onClose,
            s = t.contextId,
            l = (0, r.useState)("open" === t.animate),
            c = l[0],
            u = l[1];
          (0, r.useEffect)(
            function () {
              return c
                ? "open" !== i
                  ? (n(), u(!1), Qi)
                  : e.current
                  ? Qi
                  : ((e.current = setTimeout(function () {
                      (e.current = null), u(!1);
                    })),
                    n)
                : Qi;
            },
            [i, c, n]
          );
          var d = at(
              function (t) {
                "height" === t.propertyName && (a(), "close" === i && o());
              },
              [i, o, a]
            ),
            h = ta({
              isAnimatingOpenOnMount: c,
              animate: t.animate,
              placeholder: t.placeholder,
            });
          return r.createElement(t.placeholder.tagName, {
            style: h,
            "data-rbd-placeholder-context-id": s,
            onTransitionEnd: d,
            ref: t.innerRef,
          });
        }),
        na = r.createContext(null);
      var ra = (function (t) {
          function e() {
            for (
              var e, n = arguments.length, r = new Array(n), i = 0;
              i < n;
              i++
            )
              r[i] = arguments[i];
            return (
              ((e = t.call.apply(t, [this].concat(r)) || this).state = {
                isVisible: Boolean(e.props.on),
                data: e.props.on,
                animate: e.props.shouldAnimate && e.props.on ? "open" : "none",
              }),
              (e.onClose = function () {
                "close" === e.state.animate && e.setState({ isVisible: !1 });
              }),
              e
            );
          }
          return (
            (0, i.Z)(e, t),
            (e.getDerivedStateFromProps = function (t, e) {
              return t.shouldAnimate
                ? t.on
                  ? { isVisible: !0, data: t.on, animate: "open" }
                  : e.isVisible
                  ? { isVisible: !0, data: e.data, animate: "close" }
                  : { isVisible: !1, animate: "close", data: null }
                : { isVisible: Boolean(t.on), data: t.on, animate: "none" };
            }),
            (e.prototype.render = function () {
              if (!this.state.isVisible) return null;
              var t = {
                onClose: this.onClose,
                data: this.state.data,
                animate: this.state.animate,
              };
              return this.props.children(t);
            }),
            e
          );
        })(r.PureComponent),
        ia = { dragging: 5e3, dropAnimating: 4500 },
        aa = function (t, e) {
          return e ? Pn.drop(e.duration) : t ? Pn.snap : Pn.fluid;
        },
        oa = function (t, e) {
          return t ? (e ? Rn.drop : Rn.combining) : null;
        },
        sa = function (t) {
          return null != t.forceShouldAnimate
            ? t.forceShouldAnimate
            : "SNAP" === t.mode;
        };
      function la(t) {
        return "DRAGGING" === t.type
          ? (function (t) {
              var e = t.dimension.client,
                n = t.offset,
                r = t.combineWith,
                i = t.dropping,
                a = Boolean(r),
                o = sa(t),
                s = Boolean(i),
                l = s ? Dn.drop(n, a) : Dn.moveTo(n);
              return {
                position: "fixed",
                top: e.marginBox.top,
                left: e.marginBox.left,
                boxSizing: "border-box",
                width: e.borderBox.width,
                height: e.borderBox.height,
                transition: aa(o, i),
                transform: l,
                opacity: oa(a, s),
                zIndex: s ? ia.dropAnimating : ia.dragging,
                pointerEvents: "none",
              };
            })(t)
          : ((e = t),
            {
              transform: Dn.moveTo(e.offset),
              transition: e.shouldAnimateDisplacement ? null : "none",
            });
        var e;
      }
      function ca(t) {
        var e = qr("draggable"),
          n = t.descriptor,
          i = t.registry,
          a = t.getDraggableRef,
          o = t.canDragInteractiveElements,
          s = t.shouldRespectForcePress,
          l = t.isEnabled,
          c = it(
            function () {
              return {
                canDragInteractiveElements: o,
                shouldRespectForcePress: s,
                isEnabled: l,
              };
            },
            [o, l, s]
          ),
          u = at(
            function (t) {
              var e = a();
              return (
                e || At(!1),
                (function (t, e, n) {
                  void 0 === n && (n = Ct);
                  var r = window.getComputedStyle(e),
                    i = e.getBoundingClientRect(),
                    a = mt(i, r),
                    o = pt(a, n);
                  return {
                    descriptor: t,
                    placeholder: {
                      client: a,
                      tagName: e.tagName.toLowerCase(),
                      display: r.display,
                    },
                    displaceBy: { x: a.marginBox.width, y: a.marginBox.height },
                    client: a,
                    page: o,
                  };
                })(n, e, t)
              );
            },
            [n, a]
          ),
          d = it(
            function () {
              return {
                uniqueId: e,
                descriptor: n,
                options: c,
                getDimension: u,
              };
            },
            [n, u, c, e]
          ),
          h = (0, r.useRef)(d),
          f = (0, r.useRef)(!0);
        Ir(
          function () {
            return (
              i.draggable.register(h.current),
              function () {
                return i.draggable.unregister(h.current);
              }
            );
          },
          [i.draggable]
        ),
          Ir(
            function () {
              if (f.current) f.current = !1;
              else {
                var t = h.current;
                (h.current = d), i.draggable.update(d, t);
              }
            },
            [d, i.draggable]
          );
      }
      function ua(t, e, n) {
        Kr();
      }
      function da(t) {
        t.preventDefault();
      }
      var ha = function (t, e) {
          return t === e;
        },
        fa = function (t) {
          var e = t.combine,
            n = t.destination;
          return n ? n.droppableId : e ? e.droppableId : null;
        };
      function pa(t) {
        return {
          isDragging: !1,
          isDropAnimating: !1,
          isClone: !1,
          dropAnimation: null,
          mode: null,
          draggingOver: null,
          combineTargetFor: t,
          combineWith: null,
        };
      }
      var ma = {
        mapped: {
          type: "SECONDARY",
          offset: Ct,
          combineTargetFor: null,
          shouldAnimateDisplacement: !0,
          snapshot: pa(null),
        },
      };
      var ga = tt(
        function () {
          var t = (function () {
              var t = (0, _t.default)(function (t, e) {
                  return { x: t, y: e };
                }),
                e = (0, _t.default)(function (t, e, n, r, i) {
                  return {
                    isDragging: !0,
                    isClone: e,
                    isDropAnimating: Boolean(i),
                    dropAnimation: i,
                    mode: t,
                    draggingOver: n,
                    combineWith: r,
                    combineTargetFor: null,
                  };
                }),
                n = (0, _t.default)(function (t, n, r, i, a, o, s) {
                  return {
                    mapped: {
                      type: "DRAGGING",
                      dropping: null,
                      draggingOver: a,
                      combineWith: o,
                      mode: n,
                      offset: t,
                      dimension: r,
                      forceShouldAnimate: s,
                      snapshot: e(n, i, a, o, null),
                    },
                  };
                });
              return function (r, i) {
                if (r.isDragging) {
                  if (r.critical.draggable.id !== i.draggableId) return null;
                  var a = r.current.client.offset,
                    o = r.dimensions.draggables[i.draggableId],
                    s = Ye(r.impact),
                    l =
                      (u = r.impact).at && "COMBINE" === u.at.type
                        ? u.at.combine.draggableId
                        : null,
                    c = r.forceShouldAnimate;
                  return n(t(a.x, a.y), r.movementMode, o, i.isClone, s, l, c);
                }
                var u;
                if ("DROP_ANIMATING" === r.phase) {
                  var d = r.completed;
                  if (d.result.draggableId !== i.draggableId) return null;
                  var h = i.isClone,
                    f = r.dimensions.draggables[i.draggableId],
                    p = d.result,
                    m = p.mode,
                    g = fa(p),
                    _ = (function (t) {
                      return t.combine ? t.combine.draggableId : null;
                    })(p),
                    v = {
                      duration: r.dropDuration,
                      curve: kn,
                      moveTo: r.newHomeClientOffset,
                      opacity: _ ? Rn.drop : null,
                      scale: _ ? Tn.drop : null,
                    };
                  return {
                    mapped: {
                      type: "DRAGGING",
                      offset: r.newHomeClientOffset,
                      dimension: f,
                      dropping: v,
                      draggingOver: g,
                      combineWith: _,
                      mode: m,
                      forceShouldAnimate: null,
                      snapshot: e(m, h, g, _, v),
                    },
                  };
                }
                return null;
              };
            })(),
            e = (function () {
              var t = (0, _t.default)(function (t, e) {
                  return { x: t, y: e };
                }),
                e = (0, _t.default)(pa),
                n = (0, _t.default)(function (t, n, r) {
                  return (
                    void 0 === n && (n = null),
                    {
                      mapped: {
                        type: "SECONDARY",
                        offset: t,
                        combineTargetFor: n,
                        shouldAnimateDisplacement: r,
                        snapshot: e(n),
                      },
                    }
                  );
                }),
                r = function (t) {
                  return t ? n(Ct, t, !0) : null;
                },
                i = function (e, i, a, o) {
                  var s = a.displaced.visible[e],
                    l = Boolean(o.inVirtualList && o.effected[e]),
                    c = ne(a),
                    u = c && c.draggableId === e ? i : null;
                  if (!s) {
                    if (!l) return r(u);
                    if (a.displaced.invisible[e]) return null;
                    var d = Nt(o.displacedBy.point),
                      h = t(d.x, d.y);
                    return n(h, u, !0);
                  }
                  if (l) return r(u);
                  var f = a.displacedBy.point,
                    p = t(f.x, f.y);
                  return n(p, u, s.shouldAnimate);
                };
              return function (t, e) {
                if (t.isDragging)
                  return t.critical.draggable.id === e.draggableId
                    ? null
                    : i(
                        e.draggableId,
                        t.critical.draggable.id,
                        t.impact,
                        t.afterCritical
                      );
                if ("DROP_ANIMATING" === t.phase) {
                  var n = t.completed;
                  return n.result.draggableId === e.draggableId
                    ? null
                    : i(
                        e.draggableId,
                        n.result.draggableId,
                        n.impact,
                        n.afterCritical
                      );
                }
                return null;
              };
            })();
          return function (n, r) {
            return t(n, r) || e(n, r) || ma;
          };
        },
        { dropAnimationFinished: En },
        null,
        { context: jr, pure: !0, areStatePropsEqual: ha }
      )(function (t) {
        var e = (0, r.useRef)(null),
          n = at(function (t) {
            e.current = t;
          }, []),
          i = at(function () {
            return e.current;
          }, []),
          a = Ki(Xr),
          o = a.contextId,
          s = a.dragHandleUsageInstructionsId,
          l = a.registry,
          c = Ki(na),
          u = c.type,
          d = c.droppableId,
          h = it(
            function () {
              return {
                id: t.draggableId,
                index: t.index,
                type: u,
                droppableId: d,
              };
            },
            [t.draggableId, t.index, u, d]
          ),
          f = t.children,
          p = t.draggableId,
          m = t.isEnabled,
          g = t.shouldRespectForcePress,
          _ = t.canDragInteractiveElements,
          v = t.isClone,
          b = t.mapped,
          y = t.dropAnimationFinished;
        ua(),
          Zr(),
          v ||
            ca(
              it(
                function () {
                  return {
                    descriptor: h,
                    registry: l,
                    getDraggableRef: i,
                    canDragInteractiveElements: _,
                    shouldRespectForcePress: g,
                    isEnabled: m,
                  };
                },
                [h, l, i, _, g, m]
              )
            );
        var x = it(
            function () {
              return m
                ? {
                    tabIndex: 0,
                    role: "button",
                    "aria-describedby": s,
                    "data-rbd-drag-handle-draggable-id": p,
                    "data-rbd-drag-handle-context-id": o,
                    draggable: !1,
                    onDragStart: da,
                  }
                : null;
            },
            [o, s, p, m]
          ),
          w = at(
            function (t) {
              "DRAGGING" === b.type &&
                b.dropping &&
                "transform" === t.propertyName &&
                y();
            },
            [y, b]
          ),
          M = it(
            function () {
              var t = la(b),
                e = "DRAGGING" === b.type && b.dropping ? w : null;
              return {
                innerRef: n,
                draggableProps: {
                  "data-rbd-draggable-context-id": o,
                  "data-rbd-draggable-id": p,
                  style: t,
                  onTransitionEnd: e,
                },
                dragHandleProps: x,
              };
            },
            [o, x, p, b, w, n]
          ),
          S = it(
            function () {
              return {
                draggableId: h.id,
                type: h.type,
                source: { index: h.index, droppableId: h.droppableId },
              };
            },
            [h.droppableId, h.id, h.index, h.type]
          );
        return f(M, b.snapshot, S);
      });
      function _a(t) {
        return Ki(na).isUsingCloneFor !== t.draggableId || t.isClone
          ? r.createElement(ga, t)
          : null;
      }
      function va(t) {
        var e = "boolean" !== typeof t.isDragDisabled || !t.isDragDisabled,
          n = Boolean(t.disableInteractiveElementBlocking),
          i = Boolean(t.shouldRespectForcePress);
        return r.createElement(
          _a,
          (0, a.Z)({}, t, {
            isClone: !1,
            isEnabled: e,
            canDragInteractiveElements: n,
            shouldRespectForcePress: i,
          })
        );
      }
      var ba = function (t, e) {
          return t === e.droppable.type;
        },
        ya = function (t, e) {
          return e.draggables[t.draggable.id];
        };
      var xa = {
          mode: "standard",
          type: "DEFAULT",
          direction: "vertical",
          isDropDisabled: !1,
          isCombineEnabled: !1,
          ignoreContainerClipping: !1,
          renderClone: null,
          getContainerForClone: function () {
            return document.body || At(!1), document.body;
          },
        },
        wa = tt(
          function () {
            var t = {
                placeholder: null,
                shouldAnimatePlaceholder: !0,
                snapshot: {
                  isDraggingOver: !1,
                  draggingOverWith: null,
                  draggingFromThisWith: null,
                  isUsingPlaceholder: !1,
                },
                useClone: null,
              },
              e = (0, a.Z)({}, t, { shouldAnimatePlaceholder: !1 }),
              n = (0, _t.default)(function (t) {
                return {
                  draggableId: t.id,
                  type: t.type,
                  source: { index: t.index, droppableId: t.droppableId },
                };
              }),
              r = (0, _t.default)(function (r, i, a, o, s, l) {
                var c = s.descriptor.id;
                if (s.descriptor.droppableId === r) {
                  var u = l ? { render: l, dragging: n(s.descriptor) } : null,
                    d = {
                      isDraggingOver: a,
                      draggingOverWith: a ? c : null,
                      draggingFromThisWith: c,
                      isUsingPlaceholder: !0,
                    };
                  return {
                    placeholder: s.placeholder,
                    shouldAnimatePlaceholder: !1,
                    snapshot: d,
                    useClone: u,
                  };
                }
                if (!i) return e;
                if (!o) return t;
                var h = {
                  isDraggingOver: a,
                  draggingOverWith: c,
                  draggingFromThisWith: null,
                  isUsingPlaceholder: !0,
                };
                return {
                  placeholder: s.placeholder,
                  shouldAnimatePlaceholder: !0,
                  snapshot: h,
                  useClone: null,
                };
              });
            return function (n, i) {
              var a = i.droppableId,
                o = i.type,
                s = !i.isDropDisabled,
                l = i.renderClone;
              if (n.isDragging) {
                var c = n.critical;
                if (!ba(o, c)) return e;
                var u = ya(c, n.dimensions),
                  d = Ye(n.impact) === a;
                return r(a, s, d, d, u, l);
              }
              if ("DROP_ANIMATING" === n.phase) {
                var h = n.completed;
                if (!ba(o, h.critical)) return e;
                var f = ya(h.critical, n.dimensions);
                return r(a, s, fa(h.result) === a, Ye(h.impact) === a, f, l);
              }
              if ("IDLE" === n.phase && n.completed && !n.shouldFlush) {
                var p = n.completed;
                if (!ba(o, p.critical)) return e;
                var m = Ye(p.impact) === a,
                  g = Boolean(p.impact.at && "COMBINE" === p.impact.at.type),
                  _ = p.critical.droppable.id === a;
                return m ? (g ? t : e) : _ ? t : e;
              }
              return e;
            };
          },
          {
            updateViewportMaxScroll: function (t) {
              return { type: "UPDATE_VIEWPORT_MAX_SCROLL", payload: t };
            },
          },
          null,
          { context: jr, pure: !0, areStatePropsEqual: ha }
        )(function (t) {
          var e = (0, r.useContext)(Xr);
          e || At(!1);
          var n = e.contextId,
            i = e.isMovementAllowed,
            a = (0, r.useRef)(null),
            o = (0, r.useRef)(null),
            s = t.children,
            l = t.droppableId,
            c = t.type,
            u = t.mode,
            d = t.direction,
            h = t.ignoreContainerClipping,
            f = t.isDropDisabled,
            p = t.isCombineEnabled,
            m = t.snapshot,
            g = t.useClone,
            _ = t.updateViewportMaxScroll,
            v = t.getContainerForClone,
            b = at(function () {
              return a.current;
            }, []),
            y = at(function (t) {
              a.current = t;
            }, []),
            x =
              (at(function () {
                return o.current;
              }, []),
              at(function (t) {
                o.current = t;
              }, []));
          Kr();
          var w = at(
            function () {
              i() && _({ maxScroll: Jn() });
            },
            [i, _]
          );
          !(function (t) {
            var e = (0, r.useRef)(null),
              n = Ki(Xr),
              i = qr("droppable"),
              a = n.registry,
              o = n.marshal,
              s = $r(t),
              l = it(
                function () {
                  return { id: t.droppableId, type: t.type, mode: t.mode };
                },
                [t.droppableId, t.mode, t.type]
              ),
              c = (0, r.useRef)(l),
              u = it(
                function () {
                  return (0, _t.default)(function (t, n) {
                    e.current || At(!1);
                    var r = { x: t, y: n };
                    o.updateDroppableScroll(l.id, r);
                  });
                },
                [l.id, o]
              ),
              d = at(function () {
                var t = e.current;
                return t && t.env.closestScrollable
                  ? Wi(t.env.closestScrollable)
                  : Ct;
              }, []),
              h = at(
                function () {
                  var t = d();
                  u(t.x, t.y);
                },
                [d, u]
              ),
              f = it(
                function () {
                  return vt(h);
                },
                [h]
              ),
              p = at(
                function () {
                  var t = e.current,
                    n = $i(t);
                  (t && n) || At(!1),
                    t.scrollOptions.shouldPublishImmediately ? h() : f();
                },
                [f, h]
              ),
              m = at(
                function (t, r) {
                  e.current && At(!1);
                  var i = s.current,
                    a = i.getDroppableRef();
                  a || At(!1);
                  var o = zi(a),
                    c = { ref: a, descriptor: l, env: o, scrollOptions: r };
                  e.current = c;
                  var u = Gi({
                      ref: a,
                      descriptor: l,
                      env: o,
                      windowScroll: t,
                      direction: i.direction,
                      isDropDisabled: i.isDropDisabled,
                      isCombineEnabled: i.isCombineEnabled,
                      shouldClipSubject: !i.ignoreContainerClipping,
                    }),
                    d = o.closestScrollable;
                  return (
                    d &&
                      (d.setAttribute(Pr.contextId, n.contextId),
                      d.addEventListener("scroll", p, Zi(c.scrollOptions))),
                    u
                  );
                },
                [n.contextId, l, p, s]
              ),
              g = at(function () {
                var t = e.current,
                  n = $i(t);
                return (t && n) || At(!1), Wi(n);
              }, []),
              _ = at(
                function () {
                  var t = e.current;
                  t || At(!1);
                  var n = $i(t);
                  (e.current = null),
                    n &&
                      (f.cancel(),
                      n.removeAttribute(Pr.contextId),
                      n.removeEventListener("scroll", p, Zi(t.scrollOptions)));
                },
                [p, f]
              ),
              v = at(function (t) {
                var n = e.current;
                n || At(!1);
                var r = $i(n);
                r || At(!1), (r.scrollTop += t.y), (r.scrollLeft += t.x);
              }, []),
              b = it(
                function () {
                  return {
                    getDimensionAndWatchScroll: m,
                    getScrollWhileDragging: g,
                    dragStopped: _,
                    scroll: v,
                  };
                },
                [_, m, g, v]
              ),
              y = it(
                function () {
                  return { uniqueId: i, descriptor: l, callbacks: b };
                },
                [b, l, i]
              );
            Ir(
              function () {
                return (
                  (c.current = y.descriptor),
                  a.droppable.register(y),
                  function () {
                    e.current && _(), a.droppable.unregister(y);
                  }
                );
              },
              [b, l, _, y, o, a.droppable]
            ),
              Ir(
                function () {
                  e.current &&
                    o.updateDroppableIsEnabled(c.current.id, !t.isDropDisabled);
                },
                [t.isDropDisabled, o]
              ),
              Ir(
                function () {
                  e.current &&
                    o.updateDroppableIsCombineEnabled(
                      c.current.id,
                      t.isCombineEnabled
                    );
                },
                [t.isCombineEnabled, o]
              );
          })({
            droppableId: l,
            type: c,
            mode: u,
            direction: d,
            isDropDisabled: f,
            isCombineEnabled: p,
            ignoreContainerClipping: h,
            getDroppableRef: b,
          });
          var M = r.createElement(
              ra,
              { on: t.placeholder, shouldAnimate: t.shouldAnimatePlaceholder },
              function (t) {
                var e = t.onClose,
                  i = t.data,
                  a = t.animate;
                return r.createElement(ea, {
                  placeholder: i,
                  onClose: e,
                  innerRef: x,
                  animate: a,
                  contextId: n,
                  onTransitionEnd: w,
                });
              }
            ),
            S = it(
              function () {
                return {
                  innerRef: y,
                  placeholder: M,
                  droppableProps: {
                    "data-rbd-droppable-id": l,
                    "data-rbd-droppable-context-id": n,
                  },
                };
              },
              [n, l, M, y]
            ),
            A = g ? g.dragging.draggableId : null,
            E = it(
              function () {
                return { droppableId: l, type: c, isUsingCloneFor: A };
              },
              [l, A, c]
            );
          return r.createElement(
            na.Provider,
            { value: E },
            s(S, m),
            (function () {
              if (!g) return null;
              var t = g.dragging,
                e = g.render,
                n = r.createElement(
                  _a,
                  {
                    draggableId: t.draggableId,
                    index: t.source.index,
                    isClone: !0,
                    isEnabled: !0,
                    shouldRespectForcePress: !1,
                    canDragInteractiveElements: !0,
                  },
                  function (n, r) {
                    return e(n, r, t);
                  }
                );
              return nt.createPortal(n, v());
            })()
          );
        });
      wa.defaultProps = xa;
    },
    2592: (t, e, n) => {
      "use strict";
      n.d(e, { Z: () => d });
      var r = n(1707),
        i = n.n(r),
        a = n(2791),
        o = n(2007),
        s = n.n(o),
        l = n(162),
        c = n(184);
      s().string, s().bool, s().bool, s().bool, s().bool;
      const u = a.forwardRef((t, e) => {
        let {
          bsPrefix: n,
          className: r,
          fluid: a = !1,
          rounded: o = !1,
          roundedCircle: s = !1,
          thumbnail: u = !1,
          ...d
        } = t;
        return (
          (n = (0, l.vE)(n, "img")),
          (0, c.jsx)("img", {
            ref: e,
            ...d,
            className: i()(
              r,
              a && "".concat(n, "-fluid"),
              o && "rounded",
              s && "rounded-circle",
              u && "".concat(n, "-thumbnail")
            ),
          })
        );
      });
      u.displayName = "Image";
      const d = u;
    },
    9683: (t, e, n) => {
      "use strict";
      n.d(e, { $Q: () => f });
      var r = n(2791),
        i = n(6305);
      const a = "label";
      function o(t, e) {
        "function" === typeof t ? t(e) : t && (t.current = e);
      }
      function s(t, e) {
        t.labels = e;
      }
      function l(t, e) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : a;
        const r = [];
        t.datasets = e.map((e) => {
          const i = t.datasets.find((t) => t[n] === e[n]);
          return i && e.data && !r.includes(i)
            ? (r.push(i), Object.assign(i, e), i)
            : { ...e };
        });
      }
      function c(t) {
        let e =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a;
        const n = { labels: [], datasets: [] };
        return s(n, t.labels), l(n, t.datasets, e), n;
      }
      function u(t, e) {
        let {
          height: n = 150,
          width: a = 300,
          redraw: u = !1,
          datasetIdKey: d,
          type: h,
          data: f,
          options: p,
          plugins: m = [],
          fallbackContent: g,
          updateMode: _,
          ...v
        } = t;
        const b = (0, r.useRef)(null),
          y = (0, r.useRef)(),
          x = () => {
            b.current &&
              ((y.current = new i.kL(b.current, {
                type: h,
                data: c(f, d),
                options: p && { ...p },
                plugins: m,
              })),
              o(e, y.current));
          },
          w = () => {
            o(e, null), y.current && (y.current.destroy(), (y.current = null));
          };
        return (
          (0, r.useEffect)(() => {
            var t, e;
            !u &&
              y.current &&
              p &&
              ((t = y.current), (e = p), Object.assign(t.options, e));
          }, [u, p]),
          (0, r.useEffect)(() => {
            !u && y.current && s(y.current.config.data, f.labels);
          }, [u, f.labels]),
          (0, r.useEffect)(() => {
            !u &&
              y.current &&
              f.datasets &&
              l(y.current.config.data, f.datasets, d);
          }, [u, f.datasets]),
          (0, r.useEffect)(() => {
            y.current && (u ? (w(), setTimeout(x)) : y.current.update(_));
          }, [u, p, f.labels, f.datasets, _]),
          (0, r.useEffect)(() => {
            y.current && (w(), setTimeout(x));
          }, [h]),
          (0, r.useEffect)(() => (x(), () => w()), []),
          r.createElement(
            "canvas",
            Object.assign({ ref: b, role: "img", height: n, width: a }, v),
            g
          )
        );
      }
      const d = (0, r.forwardRef)(u);
      function h(t, e) {
        return (
          i.kL.register(e),
          (0, r.forwardRef)((e, n) =>
            r.createElement(d, Object.assign({}, e, { ref: n, type: t }))
          )
        );
      }
      const f = h("bar", i.vn);
    },
    9391: (t, e, n) => {
      "use strict";
      n.d(e, { Ip: () => d, Wo: () => h, y3: () => f });
      var r = n(2791),
        i = function (t, e) {
          return (
            (i =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function (t, e) {
                  t.__proto__ = e;
                }) ||
              function (t, e) {
                for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
              }),
            i(t, e)
          );
        };
      var a = function () {
        return (
          (a =
            Object.assign ||
            function (t) {
              for (var e, n = 1, r = arguments.length; n < r; n++)
                for (var i in (e = arguments[n]))
                  Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
              return t;
            }),
          a.apply(this, arguments)
        );
      };
      var o = 50,
        s = 50;
      function l(t) {
        var e = t.className,
          n = t.counterClockwise,
          i = t.dashRatio,
          a = t.pathRadius,
          o = t.strokeWidth,
          s = t.style;
        return (0, r.createElement)("path", {
          className: e,
          style: Object.assign(
            {},
            s,
            u({ pathRadius: a, dashRatio: i, counterClockwise: n })
          ),
          d: c({ pathRadius: a, counterClockwise: n }),
          strokeWidth: o,
          fillOpacity: 0,
        });
      }
      function c(t) {
        var e = t.pathRadius,
          n = t.counterClockwise ? 1 : 0;
        return (
          "\n      M " +
          o +
          "," +
          s +
          "\n      m 0,-" +
          e +
          "\n      a " +
          e +
          "," +
          e +
          " " +
          n +
          " 1 1 0," +
          2 * e +
          "\n      a " +
          e +
          "," +
          e +
          " " +
          n +
          " 1 1 0,-" +
          2 * e +
          "\n    "
        );
      }
      function u(t) {
        var e = t.counterClockwise,
          n = t.dashRatio,
          r = t.pathRadius,
          i = 2 * Math.PI * r,
          a = (1 - n) * i;
        return {
          strokeDasharray: i + "px " + i + "px",
          strokeDashoffset: (e ? -a : a) + "px",
        };
      }
      var d = (function (t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          (function (t, e) {
            function n() {
              this.constructor = t;
            }
            i(t, e),
              (t.prototype =
                null === e
                  ? Object.create(e)
                  : ((n.prototype = e.prototype), new n()));
          })(e, t),
          (e.prototype.getBackgroundPadding = function () {
            return this.props.background ? this.props.backgroundPadding : 0;
          }),
          (e.prototype.getPathRadius = function () {
            return (
              50 - this.props.strokeWidth / 2 - this.getBackgroundPadding()
            );
          }),
          (e.prototype.getPathRatio = function () {
            var t = this.props,
              e = t.value,
              n = t.minValue,
              r = t.maxValue;
            return (Math.min(Math.max(e, n), r) - n) / (r - n);
          }),
          (e.prototype.render = function () {
            var t = this.props,
              e = t.circleRatio,
              n = t.className,
              i = t.classes,
              a = t.counterClockwise,
              c = t.styles,
              u = t.strokeWidth,
              d = t.text,
              h = this.getPathRadius(),
              f = this.getPathRatio();
            return (0, r.createElement)(
              "svg",
              {
                className: i.root + " " + n,
                style: c.root,
                viewBox: "0 0 100 100",
                "data-test-id": "CircularProgressbar",
              },
              this.props.background
                ? (0, r.createElement)("circle", {
                    className: i.background,
                    style: c.background,
                    cx: o,
                    cy: s,
                    r: 50,
                  })
                : null,
              (0, r.createElement)(l, {
                className: i.trail,
                counterClockwise: a,
                dashRatio: e,
                pathRadius: h,
                strokeWidth: u,
                style: c.trail,
              }),
              (0, r.createElement)(l, {
                className: i.path,
                counterClockwise: a,
                dashRatio: f * e,
                pathRadius: h,
                strokeWidth: u,
                style: c.path,
              }),
              d
                ? (0, r.createElement)(
                    "text",
                    { className: i.text, style: c.text, x: o, y: s },
                    d
                  )
                : null
            );
          }),
          (e.defaultProps = {
            background: !1,
            backgroundPadding: 0,
            circleRatio: 1,
            classes: {
              root: "CircularProgressbar",
              trail: "CircularProgressbar-trail",
              path: "CircularProgressbar-path",
              text: "CircularProgressbar-text",
              background: "CircularProgressbar-background",
            },
            counterClockwise: !1,
            className: "",
            maxValue: 100,
            minValue: 0,
            strokeWidth: 8,
            styles: { root: {}, trail: {}, path: {}, text: {}, background: {} },
            text: "",
          }),
          e
        );
      })(r.Component);
      function h(t) {
        t.children;
        var e = (function (t, e) {
          var n = {};
          for (var r in t)
            Object.prototype.hasOwnProperty.call(t, r) &&
              e.indexOf(r) < 0 &&
              (n[r] = t[r]);
          if (null != t && "function" === typeof Object.getOwnPropertySymbols) {
            var i = 0;
            for (r = Object.getOwnPropertySymbols(t); i < r.length; i++)
              e.indexOf(r[i]) < 0 && (n[r[i]] = t[r[i]]);
          }
          return n;
        })(t, ["children"]);
        return (0, r.createElement)(
          "div",
          { "data-test-id": "CircularProgressbarWithChildren" },
          (0, r.createElement)(
            "div",
            { style: { position: "relative", width: "100%", height: "100%" } },
            (0, r.createElement)(d, a({}, e)),
            t.children
              ? (0, r.createElement)(
                  "div",
                  {
                    "data-test-id": "CircularProgressbarWithChildren__children",
                    style: {
                      position: "absolute",
                      width: "100%",
                      height: "100%",
                      marginTop: "-100%",
                      display: "flex",
                      flexDirection: "column",
                      justifyContent: "center",
                      alignItems: "center",
                    },
                  },
                  t.children
                )
              : null
          )
        );
      }
      function f(t) {
        var e = t.rotation,
          n = t.strokeLinecap,
          r = t.textColor,
          i = t.textSize,
          a = t.pathColor,
          o = t.pathTransition,
          s = t.pathTransitionDuration,
          l = t.trailColor,
          c = t.backgroundColor,
          u = null == e ? void 0 : "rotate(" + e + "turn)",
          d = null == e ? void 0 : "center center";
        return {
          root: {},
          path: p({
            stroke: a,
            strokeLinecap: n,
            transform: u,
            transformOrigin: d,
            transition: o,
            transitionDuration: null == s ? void 0 : s + "s",
          }),
          trail: p({
            stroke: l,
            strokeLinecap: n,
            transform: u,
            transformOrigin: d,
          }),
          text: p({ fill: r, fontSize: i }),
          background: p({ fill: c }),
        };
      }
      function p(t) {
        return (
          Object.keys(t).forEach(function (e) {
            null == t[e] && delete t[e];
          }),
          t
        );
      }
    },
    1372: (t, e) => {
      "use strict";
      var n = 60103,
        r = 60106,
        i = 60107,
        a = 60108,
        o = 60114,
        s = 60109,
        l = 60110,
        c = 60112,
        u = 60113,
        d = 60120,
        h = 60115,
        f = 60116,
        p = 60121,
        m = 60122,
        g = 60117,
        _ = 60129,
        v = 60131;
      if ("function" === typeof Symbol && Symbol.for) {
        var b = Symbol.for;
        (n = b("react.element")),
          (r = b("react.portal")),
          (i = b("react.fragment")),
          (a = b("react.strict_mode")),
          (o = b("react.profiler")),
          (s = b("react.provider")),
          (l = b("react.context")),
          (c = b("react.forward_ref")),
          (u = b("react.suspense")),
          (d = b("react.suspense_list")),
          (h = b("react.memo")),
          (f = b("react.lazy")),
          (p = b("react.block")),
          (m = b("react.server.block")),
          (g = b("react.fundamental")),
          (_ = b("react.debug_trace_mode")),
          (v = b("react.legacy_hidden"));
      }
      function y(t) {
        if ("object" === typeof t && null !== t) {
          var e = t.$$typeof;
          switch (e) {
            case n:
              switch ((t = t.type)) {
                case i:
                case o:
                case a:
                case u:
                case d:
                  return t;
                default:
                  switch ((t = t && t.$$typeof)) {
                    case l:
                    case c:
                    case f:
                    case h:
                    case s:
                      return t;
                    default:
                      return e;
                  }
              }
            case r:
              return e;
          }
        }
      }
      e.isContextConsumer = function (t) {
        return y(t) === l;
      };
    },
    7441: (t, e, n) => {
      "use strict";
      t.exports = n(1372);
    },
    8914: (t, e, n) => {
      n(5113);
    },
    5113: function (t, e, n) {
      "use strict";
      var r =
          (this && this.__awaiter) ||
          function (t, e, n, r) {
            return new (n || (n = Promise))(function (i, a) {
              function o(t) {
                try {
                  l(r.next(t));
                } catch (e) {
                  a(e);
                }
              }
              function s(t) {
                try {
                  l(r.throw(t));
                } catch (e) {
                  a(e);
                }
              }
              function l(t) {
                var e;
                t.done
                  ? i(t.value)
                  : ((e = t.value),
                    e instanceof n
                      ? e
                      : new n(function (t) {
                          t(e);
                        })).then(o, s);
              }
              l((r = r.apply(t, e || [])).next());
            });
          },
        i =
          (this && this.__generator) ||
          function (t, e) {
            var n,
              r,
              i,
              a,
              o = {
                label: 0,
                sent: function () {
                  if (1 & i[0]) throw i[1];
                  return i[1];
                },
                trys: [],
                ops: [],
              };
            return (
              (a = { next: s(0), throw: s(1), return: s(2) }),
              "function" === typeof Symbol &&
                (a[Symbol.iterator] = function () {
                  return this;
                }),
              a
            );
            function s(a) {
              return function (s) {
                return (function (a) {
                  if (n) throw new TypeError("Generator is already executing.");
                  for (; o; )
                    try {
                      if (
                        ((n = 1),
                        r &&
                          (i =
                            2 & a[0]
                              ? r.return
                              : a[0]
                              ? r.throw || ((i = r.return) && i.call(r), 0)
                              : r.next) &&
                          !(i = i.call(r, a[1])).done)
                      )
                        return i;
                      switch (((r = 0), i && (a = [2 & a[0], i.value]), a[0])) {
                        case 0:
                        case 1:
                          i = a;
                          break;
                        case 4:
                          return o.label++, { value: a[1], done: !1 };
                        case 5:
                          o.label++, (r = a[1]), (a = [0]);
                          continue;
                        case 7:
                          (a = o.ops.pop()), o.trys.pop();
                          continue;
                        default:
                          if (
                            !(i = (i = o.trys).length > 0 && i[i.length - 1]) &&
                            (6 === a[0] || 2 === a[0])
                          ) {
                            o = 0;
                            continue;
                          }
                          if (
                            3 === a[0] &&
                            (!i || (a[1] > i[0] && a[1] < i[3]))
                          ) {
                            o.label = a[1];
                            break;
                          }
                          if (6 === a[0] && o.label < i[1]) {
                            (o.label = i[1]), (i = a);
                            break;
                          }
                          if (i && o.label < i[2]) {
                            (o.label = i[2]), o.ops.push(a);
                            break;
                          }
                          i[2] && o.ops.pop(), o.trys.pop();
                          continue;
                      }
                      a = e.call(t, o);
                    } catch (s) {
                      (a = [6, s]), (r = 0);
                    } finally {
                      n = i = 0;
                    }
                  if (5 & a[0]) throw a[1];
                  return { value: a[0] ? a[1] : void 0, done: !0 };
                })([a, s]);
              };
            }
          };
      Object.defineProperty(e, "__esModule", { value: !0 }),
        (e.ReactMediaRecorder =
          e.useReactMediaRecorder =
          e.RecorderErrors =
            void 0);
      var a,
        o = n(1320),
        s = n(2791),
        l = n(8616);
      function c(t) {
        var e = this,
          n = t.audio,
          c = void 0 === n || n,
          u = t.video,
          d = void 0 !== u && u,
          h = t.onStop,
          f =
            void 0 === h
              ? function () {
                  return null;
                }
              : h,
          p = t.onStart,
          m =
            void 0 === p
              ? function () {
                  return null;
                }
              : p,
          g = t.blobPropertyBag,
          _ = t.screen,
          v = void 0 !== _ && _,
          b = t.mediaRecorderOptions,
          y = void 0 === b ? void 0 : b,
          x = t.customMediaStream,
          w = void 0 === x ? null : x,
          M = t.stopStreamsOnStop,
          S = void 0 === M || M,
          A = t.askPermissionOnMount,
          E = void 0 !== A && A,
          k = (0, s.useRef)(null),
          R = (0, s.useRef)([]),
          T = (0, s.useRef)(null),
          O = (0, s.useState)("idle"),
          P = O[0],
          C = O[1],
          D = (0, s.useState)(!1),
          I = D[0],
          B = D[1],
          N = (0, s.useState)(void 0),
          L = N[0],
          V = N[1],
          F = (0, s.useState)("NONE"),
          H = F[0],
          j = F[1];
        (0, s.useEffect)(function () {
          r(e, void 0, void 0, function () {
            var t;
            return i(this, function (e) {
              switch (e.label) {
                case 0:
                  return (t = o.register), [4, (0, l.connect)()];
                case 1:
                  return [4, t.apply(void 0, [e.sent()])];
                case 2:
                  return e.sent(), [2];
              }
            });
          });
        }, []);
        var Y = (0, s.useCallback)(
          function () {
            return r(e, void 0, void 0, function () {
              var t, e, n, r;
              return i(this, function (i) {
                switch (i.label) {
                  case 0:
                    C("acquiring_media"),
                      (t = {
                        audio: "boolean" === typeof c ? !!c : c,
                        video: "boolean" === typeof d ? !!d : d,
                      }),
                      (i.label = 1);
                  case 1:
                    return (
                      i.trys.push([1, 9, , 10]),
                      w ? ((T.current = w), [3, 8]) : [3, 2]
                    );
                  case 2:
                    return v
                      ? [
                          4,
                          window.navigator.mediaDevices.getDisplayMedia({
                            video: d || !0,
                          }),
                        ]
                      : [3, 6];
                  case 3:
                    return (
                      (e = i.sent())
                        .getVideoTracks()[0]
                        .addEventListener("ended", function () {
                          q();
                        }),
                      c
                        ? [
                            4,
                            window.navigator.mediaDevices.getUserMedia({
                              audio: c,
                            }),
                          ]
                        : [3, 5]
                    );
                  case 4:
                    i
                      .sent()
                      .getAudioTracks()
                      .forEach(function (t) {
                        return e.addTrack(t);
                      }),
                      (i.label = 5);
                  case 5:
                    return (T.current = e), [3, 8];
                  case 6:
                    return [4, window.navigator.mediaDevices.getUserMedia(t)];
                  case 7:
                    (n = i.sent()), (T.current = n), (i.label = 8);
                  case 8:
                    return C("idle"), [3, 10];
                  case 9:
                    return (r = i.sent()), j(r.name), C("idle"), [3, 10];
                  case 10:
                    return [2];
                }
              });
            });
          },
          [c, d, v]
        );
        (0, s.useEffect)(
          function () {
            if (!window.MediaRecorder) throw new Error("Unsupported Browser");
            if (v && !window.navigator.mediaDevices.getDisplayMedia)
              throw new Error("This browser doesn't support screen capturing");
            var t = function (t) {
              var e = navigator.mediaDevices.getSupportedConstraints(),
                n = Object.keys(t).filter(function (t) {
                  return !e[t];
                });
              n.length > 0 &&
                console.error(
                  "The constraints ".concat(
                    n.join(","),
                    " doesn't support on this browser. Please check your ReactMediaRecorder component."
                  )
                );
            };
            return (
              "object" === typeof c && t(c),
              "object" === typeof d && t(d),
              y &&
                y.mimeType &&
                (MediaRecorder.isTypeSupported(y.mimeType) ||
                  console.error(
                    "The specified MIME type you supplied for MediaRecorder doesn't support this browser"
                  )),
              !T.current && E && Y(),
              function () {
                T.current &&
                  T.current.getTracks().forEach(function (t) {
                    return t.clone().stop();
                  });
              }
            );
          },
          [c, v, d, Y, y, E]
        );
        var W = function (t) {
            var e = t.data;
            R.current.push(e);
          },
          U = function () {
            m();
          },
          z = function () {
            var t = R.current[0],
              e = Object.assign(
                { type: t.type },
                g || (d ? { type: "video/mp4" } : { type: "audio/wav" })
              ),
              n = new Blob(R.current, e),
              r = URL.createObjectURL(n);
            C("stopped"), V(r), f(r, n);
          },
          G = function (t) {
            B(t),
              T.current &&
                T.current.getAudioTracks().forEach(function (e) {
                  return (e.enabled = !t);
                });
          },
          q = function () {
            k.current &&
              "inactive" !== k.current.state &&
              (C("stopping"),
              k.current.stop(),
              S &&
                T.current &&
                T.current.getTracks().forEach(function (t) {
                  return t.stop();
                }),
              (R.current = []));
          };
        return {
          error: a[H],
          muteAudio: function () {
            return G(!0);
          },
          unMuteAudio: function () {
            return G(!1);
          },
          startRecording: function () {
            return r(e, void 0, void 0, function () {
              return i(this, function (t) {
                switch (t.label) {
                  case 0:
                    return j("NONE"), T.current ? [3, 2] : [4, Y()];
                  case 1:
                    t.sent(), (t.label = 2);
                  case 2:
                    return T.current
                      ? T.current.getTracks().some(function (t) {
                          return "ended" === t.readyState;
                        })
                        ? [4, Y()]
                        : [3, 4]
                      : [3, 5];
                  case 3:
                    t.sent(), (t.label = 4);
                  case 4:
                    if (!T.current.active) return [2];
                    (k.current = new o.MediaRecorder(T.current, y || void 0)),
                      (k.current.ondataavailable = W),
                      (k.current.onstop = z),
                      (k.current.onstart = U),
                      (k.current.onerror = function () {
                        j("NO_RECORDER"), C("idle");
                      }),
                      k.current.start(),
                      C("recording"),
                      (t.label = 5);
                  case 5:
                    return [2];
                }
              });
            });
          },
          pauseRecording: function () {
            k.current &&
              "recording" === k.current.state &&
              (C("paused"), k.current.pause());
          },
          resumeRecording: function () {
            k.current &&
              "paused" === k.current.state &&
              (C("recording"), k.current.resume());
          },
          stopRecording: q,
          mediaBlobUrl: L,
          status: P,
          isAudioMuted: I,
          previewStream: T.current
            ? new MediaStream(T.current.getVideoTracks())
            : null,
          previewAudioStream: T.current
            ? new MediaStream(T.current.getAudioTracks())
            : null,
          clearBlobUrl: function () {
            L && URL.revokeObjectURL(L), V(void 0), C("idle");
          },
        };
      }
      !(function (t) {
        (t.AbortError = "media_aborted"),
          (t.NotAllowedError = "permission_denied"),
          (t.NotFoundError = "no_specified_media_found"),
          (t.NotReadableError = "media_in_use"),
          (t.OverconstrainedError = "invalid_media_constraints"),
          (t.TypeError = "no_constraints"),
          (t.NONE = ""),
          (t.NO_RECORDER = "recorder_error");
      })((a = e.RecorderErrors || (e.RecorderErrors = {}))),
        (e.useReactMediaRecorder = c);
      e.ReactMediaRecorder = function (t) {
        return t.render(c(t));
      };
    },
    9434: (t, e, n) => {
      var r,
        i = Object.create,
        a = Object.defineProperty,
        o = Object.getOwnPropertyDescriptor,
        s = Object.getOwnPropertyNames,
        l = Object.getPrototypeOf,
        c = Object.prototype.hasOwnProperty,
        u = (t, e, n, r) => {
          if ((e && "object" === typeof e) || "function" === typeof e)
            for (let i of s(e))
              c.call(t, i) ||
                i === n ||
                a(t, i, {
                  get: () => e[i],
                  enumerable: !(r = o(e, i)) || r.enumerable,
                });
          return t;
        },
        d = (t, e, n) => (
          (n = null != t ? i(l(t)) : {}),
          u(
            !e && t && t.__esModule
              ? n
              : a(n, "default", { value: t, enumerable: !0 }),
            t
          )
        ),
        h = (t, e, n) => (
          ((t, e, n) => {
            e in t
              ? a(t, e, {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                  value: n,
                })
              : (t[e] = n);
          })(t, "symbol" !== typeof e ? e + "" : e, n),
          n
        ),
        f = {};
      ((t, e) => {
        for (var n in e) a(t, n, { get: e[n], enumerable: !0 });
      })(f, { default: () => v }),
        (t.exports = ((r = f), u(a({}, "__esModule", { value: !0 }), r)));
      var p = d(n(2791)),
        m = d(n(77)),
        g = n(9174),
        _ = n(135);
      class v extends p.Component {
        constructor() {
          var t;
          super(...arguments),
            (t = this),
            h(this, "mounted", !1),
            h(this, "isReady", !1),
            h(this, "isPlaying", !1),
            h(this, "isLoading", !0),
            h(this, "loadOnReady", null),
            h(this, "startOnPlay", !0),
            h(this, "seekOnPlay", null),
            h(this, "onDurationCalled", !1),
            h(this, "handlePlayerMount", (t) => {
              this.player ||
                ((this.player = t), this.player.load(this.props.url)),
                this.progress();
            }),
            h(this, "getInternalPlayer", (t) =>
              this.player ? this.player[t] : null
            ),
            h(this, "progress", () => {
              if (this.props.url && this.player && this.isReady) {
                const t = this.getCurrentTime() || 0,
                  e = this.getSecondsLoaded(),
                  n = this.getDuration();
                if (n) {
                  const r = { playedSeconds: t, played: t / n };
                  null !== e && ((r.loadedSeconds = e), (r.loaded = e / n)),
                    (r.playedSeconds === this.prevPlayed &&
                      r.loadedSeconds === this.prevLoaded) ||
                      this.props.onProgress(r),
                    (this.prevPlayed = r.playedSeconds),
                    (this.prevLoaded = r.loadedSeconds);
                }
              }
              this.progressTimeout = setTimeout(
                this.progress,
                this.props.progressFrequency || this.props.progressInterval
              );
            }),
            h(this, "handleReady", () => {
              if (!this.mounted) return;
              (this.isReady = !0), (this.isLoading = !1);
              const {
                onReady: t,
                playing: e,
                volume: n,
                muted: r,
              } = this.props;
              t(),
                r || null === n || this.player.setVolume(n),
                this.loadOnReady
                  ? (this.player.load(this.loadOnReady, !0),
                    (this.loadOnReady = null))
                  : e && this.player.play(),
                this.handleDurationCheck();
            }),
            h(this, "handlePlay", () => {
              (this.isPlaying = !0), (this.isLoading = !1);
              const { onStart: t, onPlay: e, playbackRate: n } = this.props;
              this.startOnPlay &&
                (this.player.setPlaybackRate &&
                  1 !== n &&
                  this.player.setPlaybackRate(n),
                t(),
                (this.startOnPlay = !1)),
                e(),
                this.seekOnPlay &&
                  (this.seekTo(this.seekOnPlay), (this.seekOnPlay = null)),
                this.handleDurationCheck();
            }),
            h(this, "handlePause", (t) => {
              (this.isPlaying = !1), this.isLoading || this.props.onPause(t);
            }),
            h(this, "handleEnded", () => {
              const { activePlayer: t, loop: e, onEnded: n } = this.props;
              t.loopOnEnded && e && this.seekTo(0),
                e || ((this.isPlaying = !1), n());
            }),
            h(this, "handleError", function () {
              (t.isLoading = !1), t.props.onError(...arguments);
            }),
            h(this, "handleDurationCheck", () => {
              clearTimeout(this.durationCheckTimeout);
              const t = this.getDuration();
              t
                ? this.onDurationCalled ||
                  (this.props.onDuration(t), (this.onDurationCalled = !0))
                : (this.durationCheckTimeout = setTimeout(
                    this.handleDurationCheck,
                    100
                  ));
            }),
            h(this, "handleLoaded", () => {
              this.isLoading = !1;
            });
        }
        componentDidMount() {
          this.mounted = !0;
        }
        componentWillUnmount() {
          clearTimeout(this.progressTimeout),
            clearTimeout(this.durationCheckTimeout),
            this.isReady &&
              this.props.stopOnUnmount &&
              (this.player.stop(),
              this.player.disablePIP && this.player.disablePIP()),
            (this.mounted = !1);
        }
        componentDidUpdate(t) {
          if (!this.player) return;
          const {
            url: e,
            playing: n,
            volume: r,
            muted: i,
            playbackRate: a,
            pip: o,
            loop: s,
            activePlayer: l,
            disableDeferredLoading: c,
          } = this.props;
          if (!(0, m.default)(t.url, e)) {
            if (
              this.isLoading &&
              !l.forceLoad &&
              !c &&
              !(0, _.isMediaStream)(e)
            )
              return (
                console.warn(
                  "ReactPlayer: the attempt to load ".concat(
                    e,
                    " is being deferred until the player has loaded"
                  )
                ),
                void (this.loadOnReady = e)
              );
            (this.isLoading = !0),
              (this.startOnPlay = !0),
              (this.onDurationCalled = !1),
              this.player.load(e, this.isReady);
          }
          t.playing || !n || this.isPlaying || this.player.play(),
            t.playing && !n && this.isPlaying && this.player.pause(),
            !t.pip && o && this.player.enablePIP && this.player.enablePIP(),
            t.pip && !o && this.player.disablePIP && this.player.disablePIP(),
            t.volume !== r && null !== r && this.player.setVolume(r),
            t.muted !== i &&
              (i
                ? this.player.mute()
                : (this.player.unmute(),
                  null !== r && setTimeout(() => this.player.setVolume(r)))),
            t.playbackRate !== a &&
              this.player.setPlaybackRate &&
              this.player.setPlaybackRate(a),
            t.loop !== s && this.player.setLoop && this.player.setLoop(s);
        }
        getDuration() {
          return this.isReady ? this.player.getDuration() : null;
        }
        getCurrentTime() {
          return this.isReady ? this.player.getCurrentTime() : null;
        }
        getSecondsLoaded() {
          return this.isReady ? this.player.getSecondsLoaded() : null;
        }
        seekTo(t, e, n) {
          if (!this.isReady)
            return void (
              0 !== t &&
              ((this.seekOnPlay = t),
              setTimeout(() => {
                this.seekOnPlay = null;
              }, 5e3))
            );
          if (e ? "fraction" === e : t > 0 && t < 1) {
            const e = this.player.getDuration();
            return e
              ? void this.player.seekTo(e * t, n)
              : void console.warn(
                  "ReactPlayer: could not seek using fraction \u2013\xa0duration not yet available"
                );
          }
          this.player.seekTo(t, n);
        }
        render() {
          const t = this.props.activePlayer;
          return t
            ? p.default.createElement(t, {
                ...this.props,
                onMount: this.handlePlayerMount,
                onReady: this.handleReady,
                onPlay: this.handlePlay,
                onPause: this.handlePause,
                onEnded: this.handleEnded,
                onLoaded: this.handleLoaded,
                onError: this.handleError,
              })
            : null;
        }
      }
      h(v, "displayName", "Player"),
        h(v, "propTypes", g.propTypes),
        h(v, "defaultProps", g.defaultProps);
    },
    2646: (t, e, n) => {
      var r,
        i = Object.create,
        a = Object.defineProperty,
        o = Object.getOwnPropertyDescriptor,
        s = Object.getOwnPropertyNames,
        l = Object.getPrototypeOf,
        c = Object.prototype.hasOwnProperty,
        u = (t, e, n, r) => {
          if ((e && "object" === typeof e) || "function" === typeof e)
            for (let i of s(e))
              c.call(t, i) ||
                i === n ||
                a(t, i, {
                  get: () => e[i],
                  enumerable: !(r = o(e, i)) || r.enumerable,
                });
          return t;
        },
        d = (t, e, n) => (
          (n = null != t ? i(l(t)) : {}),
          u(
            !e && t && t.__esModule
              ? n
              : a(n, "default", { value: t, enumerable: !0 }),
            t
          )
        ),
        h = (t, e, n) => (
          ((t, e, n) => {
            e in t
              ? a(t, e, {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                  value: n,
                })
              : (t[e] = n);
          })(t, "symbol" !== typeof e ? e + "" : e, n),
          n
        ),
        f = {};
      ((t, e) => {
        for (var n in e) a(t, n, { get: e[n], enumerable: !0 });
      })(f, { createReactPlayer: () => k }),
        (t.exports = ((r = f), u(a({}, "__esModule", { value: !0 }), r)));
      var p = d(n(2791)),
        m = d(n(9948)),
        g = d(n(5781)),
        _ = d(n(77)),
        v = n(9174),
        b = n(135),
        y = d(n(9434));
      const x = (0, b.lazy)(() => n.e(664).then(n.t.bind(n, 8275, 23))),
        w = "undefined" !== typeof window && window.document,
        M = "undefined" !== typeof n.g && n.g.window && n.g.window.document,
        S = Object.keys(v.propTypes),
        A = w || M ? p.Suspense : () => null,
        E = [],
        k = (t, e) => {
          var n;
          return (
            (n = class extends p.Component {
              constructor() {
                var n;
                super(...arguments),
                  (n = this),
                  h(this, "state", { showPreview: !!this.props.light }),
                  h(this, "references", {
                    wrapper: (t) => {
                      this.wrapper = t;
                    },
                    player: (t) => {
                      this.player = t;
                    },
                  }),
                  h(this, "handleClickPreview", (t) => {
                    this.setState({ showPreview: !1 }),
                      this.props.onClickPreview(t);
                  }),
                  h(this, "showPreview", () => {
                    this.setState({ showPreview: !0 });
                  }),
                  h(this, "getDuration", () =>
                    this.player ? this.player.getDuration() : null
                  ),
                  h(this, "getCurrentTime", () =>
                    this.player ? this.player.getCurrentTime() : null
                  ),
                  h(this, "getSecondsLoaded", () =>
                    this.player ? this.player.getSecondsLoaded() : null
                  ),
                  h(this, "getInternalPlayer", function () {
                    let t =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : "player";
                    return n.player ? n.player.getInternalPlayer(t) : null;
                  }),
                  h(this, "seekTo", (t, e, n) => {
                    if (!this.player) return null;
                    this.player.seekTo(t, e, n);
                  }),
                  h(this, "handleReady", () => {
                    this.props.onReady(this);
                  }),
                  h(
                    this,
                    "getActivePlayer",
                    (0, g.default)((n) => {
                      for (const e of [...E, ...t]) if (e.canPlay(n)) return e;
                      return e || null;
                    })
                  ),
                  h(
                    this,
                    "getConfig",
                    (0, g.default)((t, e) => {
                      const { config: n } = this.props;
                      return m.default.all([
                        v.defaultProps.config,
                        v.defaultProps.config[e] || {},
                        n,
                        n[e] || {},
                      ]);
                    })
                  ),
                  h(
                    this,
                    "getAttributes",
                    (0, g.default)((t) => (0, b.omit)(this.props, S))
                  ),
                  h(this, "renderActivePlayer", (t) => {
                    if (!t) return null;
                    const e = this.getActivePlayer(t);
                    if (!e) return null;
                    const n = this.getConfig(t, e.key);
                    return p.default.createElement(y.default, {
                      ...this.props,
                      key: e.key,
                      ref: this.references.player,
                      config: n,
                      activePlayer: e.lazyPlayer || e,
                      onReady: this.handleReady,
                    });
                  });
              }
              shouldComponentUpdate(t, e) {
                return (
                  !(0, _.default)(this.props, t) ||
                  !(0, _.default)(this.state, e)
                );
              }
              componentDidUpdate(t) {
                const { light: e } = this.props;
                !t.light && e && this.setState({ showPreview: !0 }),
                  t.light && !e && this.setState({ showPreview: !1 });
              }
              renderPreview(t) {
                if (!t) return null;
                const {
                  light: e,
                  playIcon: n,
                  previewTabIndex: r,
                  oEmbedUrl: i,
                } = this.props;
                return p.default.createElement(x, {
                  url: t,
                  light: e,
                  playIcon: n,
                  previewTabIndex: r,
                  oEmbedUrl: i,
                  onClick: this.handleClickPreview,
                });
              }
              render() {
                const {
                    url: t,
                    style: e,
                    width: n,
                    height: r,
                    fallback: i,
                    wrapper: a,
                  } = this.props,
                  { showPreview: o } = this.state,
                  s = this.getAttributes(t),
                  l = "string" === typeof a ? this.references.wrapper : void 0;
                return p.default.createElement(
                  a,
                  { ref: l, style: { ...e, width: n, height: r }, ...s },
                  p.default.createElement(
                    A,
                    { fallback: i },
                    o ? this.renderPreview(t) : this.renderActivePlayer(t)
                  )
                );
              }
            }),
            h(n, "displayName", "ReactPlayer"),
            h(n, "propTypes", v.propTypes),
            h(n, "defaultProps", v.defaultProps),
            h(n, "addCustomPlayer", (t) => {
              E.push(t);
            }),
            h(n, "removeCustomPlayers", () => {
              E.length = 0;
            }),
            h(n, "canPlay", (e) => {
              for (const n of [...E, ...t]) if (n.canPlay(e)) return !0;
              return !1;
            }),
            h(n, "canEnablePIP", (e) => {
              for (const n of [...E, ...t])
                if (n.canEnablePIP && n.canEnablePIP(e)) return !0;
              return !1;
            }),
            n
          );
        };
    },
    6710: (t, e, n) => {
      var r,
        i = Object.create,
        a = Object.defineProperty,
        o = Object.getOwnPropertyDescriptor,
        s = Object.getOwnPropertyNames,
        l = Object.getPrototypeOf,
        c = Object.prototype.hasOwnProperty,
        u = (t, e, n, r) => {
          if ((e && "object" === typeof e) || "function" === typeof e)
            for (let i of s(e))
              c.call(t, i) ||
                i === n ||
                a(t, i, {
                  get: () => e[i],
                  enumerable: !(r = o(e, i)) || r.enumerable,
                });
          return t;
        },
        d = {};
      ((t, e) => {
        for (var n in e) a(t, n, { get: e[n], enumerable: !0 });
      })(d, { default: () => m }),
        (t.exports = ((r = d), u(a({}, "__esModule", { value: !0 }), r)));
      var h = ((t, e, n) => (
          (n = null != t ? i(l(t)) : {}),
          u(
            !e && t && t.__esModule
              ? n
              : a(n, "default", { value: t, enumerable: !0 }),
            t
          )
        ))(n(7517)),
        f = n(2646);
      const p = h.default[h.default.length - 1];
      var m = (0, f.createReactPlayer)(h.default, p);
    },
    365: (t, e, n) => {
      var r,
        i = Object.defineProperty,
        a = Object.getOwnPropertyDescriptor,
        o = Object.getOwnPropertyNames,
        s = Object.prototype.hasOwnProperty,
        l = {};
      ((t, e) => {
        for (var n in e) i(t, n, { get: e[n], enumerable: !0 });
      })(l, {
        AUDIO_EXTENSIONS: () => M,
        DASH_EXTENSIONS: () => E,
        FLV_EXTENSIONS: () => k,
        HLS_EXTENSIONS: () => A,
        MATCH_URL_DAILYMOTION: () => b,
        MATCH_URL_FACEBOOK: () => f,
        MATCH_URL_FACEBOOK_WATCH: () => p,
        MATCH_URL_KALTURA: () => w,
        MATCH_URL_MIXCLOUD: () => y,
        MATCH_URL_SOUNDCLOUD: () => d,
        MATCH_URL_STREAMABLE: () => m,
        MATCH_URL_TWITCH_CHANNEL: () => v,
        MATCH_URL_TWITCH_VIDEO: () => _,
        MATCH_URL_VIDYARD: () => x,
        MATCH_URL_VIMEO: () => h,
        MATCH_URL_WISTIA: () => g,
        MATCH_URL_YOUTUBE: () => u,
        VIDEO_EXTENSIONS: () => S,
        canPlay: () => T,
      }),
        (t.exports =
          ((r = l),
          ((t, e, n, r) => {
            if ((e && "object" === typeof e) || "function" === typeof e)
              for (let l of o(e))
                s.call(t, l) ||
                  l === n ||
                  i(t, l, {
                    get: () => e[l],
                    enumerable: !(r = a(e, l)) || r.enumerable,
                  });
            return t;
          })(i({}, "__esModule", { value: !0 }), r)));
      var c = n(135);
      const u =
          /(?:youtu\.be\/|youtube(?:-nocookie|education)?\.com\/(?:embed\/|v\/|watch\/|watch\?v=|watch\?.+&v=|shorts\/|live\/))((\w|-){11})|youtube\.com\/playlist\?list=|youtube\.com\/user\//,
        d = /(?:soundcloud\.com|snd\.sc)\/[^.]+$/,
        h = /vimeo\.com\/(?!progressive_redirect).+/,
        f =
          /^https?:\/\/(www\.)?facebook\.com.*\/(video(s)?|watch|story)(\.php?|\/).+$/,
        p = /^https?:\/\/fb\.watch\/.+$/,
        m = /streamable\.com\/([a-z0-9]+)$/,
        g =
          /(?:wistia\.(?:com|net)|wi\.st)\/(?:medias|embed)\/(?:iframe\/)?([^?]+)/,
        _ = /(?:www\.|go\.)?twitch\.tv\/videos\/(\d+)($|\?)/,
        v = /(?:www\.|go\.)?twitch\.tv\/([a-zA-Z0-9_]+)($|\?)/,
        b =
          /^(?:(?:https?):)?(?:\/\/)?(?:www\.)?(?:(?:dailymotion\.com(?:\/embed)?\/video)|dai\.ly)\/([a-zA-Z0-9]+)(?:_[\w_-]+)?(?:[\w.#_-]+)?/,
        y = /mixcloud\.com\/([^/]+\/[^/]+)/,
        x = /vidyard.com\/(?:watch\/)?([a-zA-Z0-9-_]+)/,
        w =
          /^https?:\/\/[a-zA-Z]+\.kaltura.(com|org)\/p\/([0-9]+)\/sp\/([0-9]+)00\/embedIframeJs\/uiconf_id\/([0-9]+)\/partner_id\/([0-9]+)(.*)entry_id.([a-zA-Z0-9-_].*)$/,
        M =
          /\.(m4a|m4b|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\?)/i,
        S = /\.(mp4|og[gv]|webm|mov|m4v)(#t=[,\d+]+)?($|\?)/i,
        A = /\.(m3u8)($|\?)/i,
        E = /\.(mpd)($|\?)/i,
        k = /\.(flv)($|\?)/i,
        R = (t) => {
          if (t instanceof Array) {
            for (const e of t) {
              if ("string" === typeof e && R(e)) return !0;
              if (R(e.src)) return !0;
            }
            return !1;
          }
          return (
            !(!(0, c.isMediaStream)(t) && !(0, c.isBlobUrl)(t)) ||
            M.test(t) ||
            S.test(t) ||
            A.test(t) ||
            E.test(t) ||
            k.test(t)
          );
        },
        T = {
          youtube: (t) =>
            t instanceof Array ? t.every((t) => u.test(t)) : u.test(t),
          soundcloud: (t) => d.test(t) && !M.test(t),
          vimeo: (t) => h.test(t) && !S.test(t) && !A.test(t),
          facebook: (t) => f.test(t) || p.test(t),
          streamable: (t) => m.test(t),
          wistia: (t) => g.test(t),
          twitch: (t) => _.test(t) || v.test(t),
          dailymotion: (t) => b.test(t),
          mixcloud: (t) => y.test(t),
          vidyard: (t) => x.test(t),
          kaltura: (t) => w.test(t),
          file: R,
        };
    },
    7517: (t, e, n) => {
      Object.create;
      var r,
        i = Object.defineProperty,
        a = Object.getOwnPropertyDescriptor,
        o = Object.getOwnPropertyNames,
        s = (Object.getPrototypeOf, Object.prototype.hasOwnProperty),
        l = (t, e, n, r) => {
          if ((e && "object" === typeof e) || "function" === typeof e)
            for (let l of o(e))
              s.call(t, l) ||
                l === n ||
                i(t, l, {
                  get: () => e[l],
                  enumerable: !(r = a(e, l)) || r.enumerable,
                });
          return t;
        },
        c = {};
      ((t, e) => {
        for (var n in e) i(t, n, { get: e[n], enumerable: !0 });
      })(c, { default: () => h }),
        (t.exports = ((r = c), l(i({}, "__esModule", { value: !0 }), r)));
      var u = n(135),
        d = n(365),
        h = [
          {
            key: "youtube",
            name: "YouTube",
            canPlay: d.canPlay.youtube,
            lazyPlayer: (0, u.lazy)(() => n.e(439).then(n.t.bind(n, 8322, 23))),
          },
          {
            key: "soundcloud",
            name: "SoundCloud",
            canPlay: d.canPlay.soundcloud,
            lazyPlayer: (0, u.lazy)(() => n.e(125).then(n.t.bind(n, 1801, 23))),
          },
          {
            key: "vimeo",
            name: "Vimeo",
            canPlay: d.canPlay.vimeo,
            lazyPlayer: (0, u.lazy)(() => n.e(743).then(n.t.bind(n, 7600, 23))),
          },
          {
            key: "facebook",
            name: "Facebook",
            canPlay: d.canPlay.facebook,
            lazyPlayer: (0, u.lazy)(() => n.e(121).then(n.t.bind(n, 4793, 23))),
          },
          {
            key: "streamable",
            name: "Streamable",
            canPlay: d.canPlay.streamable,
            lazyPlayer: (0, u.lazy)(() => n.e(546).then(n.t.bind(n, 1286, 23))),
          },
          {
            key: "wistia",
            name: "Wistia",
            canPlay: d.canPlay.wistia,
            lazyPlayer: (0, u.lazy)(() => n.e(55).then(n.t.bind(n, 5793, 23))),
          },
          {
            key: "twitch",
            name: "Twitch",
            canPlay: d.canPlay.twitch,
            lazyPlayer: (0, u.lazy)(() => n.e(216).then(n.t.bind(n, 6741, 23))),
          },
          {
            key: "dailymotion",
            name: "DailyMotion",
            canPlay: d.canPlay.dailymotion,
            lazyPlayer: (0, u.lazy)(() => n.e(596).then(n.t.bind(n, 4303, 23))),
          },
          {
            key: "mixcloud",
            name: "Mixcloud",
            canPlay: d.canPlay.mixcloud,
            lazyPlayer: (0, u.lazy)(() => n.e(667).then(n.t.bind(n, 2732, 23))),
          },
          {
            key: "vidyard",
            name: "Vidyard",
            canPlay: d.canPlay.vidyard,
            lazyPlayer: (0, u.lazy)(() => n.e(888).then(n.t.bind(n, 5561, 23))),
          },
          {
            key: "kaltura",
            name: "Kaltura",
            canPlay: d.canPlay.kaltura,
            lazyPlayer: (0, u.lazy)(() => n.e(261).then(n.t.bind(n, 9332, 23))),
          },
          {
            key: "file",
            name: "FilePlayer",
            canPlay: d.canPlay.file,
            canEnablePIP: (t) =>
              d.canPlay.file(t) &&
              (document.pictureInPictureEnabled ||
                (0, u.supportsWebKitPresentationMode)()) &&
              !d.AUDIO_EXTENSIONS.test(t),
            lazyPlayer: (0, u.lazy)(() => n.e(11).then(n.t.bind(n, 8997, 23))),
          },
        ];
    },
    9174: (t, e, n) => {
      var r,
        i = Object.create,
        a = Object.defineProperty,
        o = Object.getOwnPropertyDescriptor,
        s = Object.getOwnPropertyNames,
        l = Object.getPrototypeOf,
        c = Object.prototype.hasOwnProperty,
        u = (t, e, n, r) => {
          if ((e && "object" === typeof e) || "function" === typeof e)
            for (let i of s(e))
              c.call(t, i) ||
                i === n ||
                a(t, i, {
                  get: () => e[i],
                  enumerable: !(r = o(e, i)) || r.enumerable,
                });
          return t;
        },
        d = {};
      ((t, e) => {
        for (var n in e) a(t, n, { get: e[n], enumerable: !0 });
      })(d, { defaultProps: () => S, propTypes: () => w }),
        (t.exports = ((r = d), u(a({}, "__esModule", { value: !0 }), r)));
      var h = ((t, e, n) => (
        (n = null != t ? i(l(t)) : {}),
        u(
          !e && t && t.__esModule
            ? n
            : a(n, "default", { value: t, enumerable: !0 }),
          t
        )
      ))(n(2007));
      const {
          string: f,
          bool: p,
          number: m,
          array: g,
          oneOfType: _,
          shape: v,
          object: b,
          func: y,
          node: x,
        } = h.default,
        w = {
          url: _([f, g, b]),
          playing: p,
          loop: p,
          controls: p,
          volume: m,
          muted: p,
          playbackRate: m,
          width: _([f, m]),
          height: _([f, m]),
          style: b,
          progressInterval: m,
          playsinline: p,
          pip: p,
          stopOnUnmount: p,
          light: _([p, f, b]),
          playIcon: x,
          previewTabIndex: m,
          fallback: x,
          oEmbedUrl: f,
          wrapper: _([f, y, v({ render: y.isRequired })]),
          config: v({
            soundcloud: v({ options: b }),
            youtube: v({ playerVars: b, embedOptions: b, onUnstarted: y }),
            facebook: v({ appId: f, version: f, playerId: f, attributes: b }),
            dailymotion: v({ params: b }),
            vimeo: v({ playerOptions: b, title: f }),
            file: v({
              attributes: b,
              tracks: g,
              forceVideo: p,
              forceAudio: p,
              forceHLS: p,
              forceSafariHLS: p,
              forceDisableHls: p,
              forceDASH: p,
              forceFLV: p,
              hlsOptions: b,
              hlsVersion: f,
              dashVersion: f,
              flvVersion: f,
            }),
            wistia: v({ options: b, playerId: f, customControls: g }),
            mixcloud: v({ options: b }),
            twitch: v({ options: b, playerId: f }),
            vidyard: v({ options: b }),
          }),
          onReady: y,
          onStart: y,
          onPlay: y,
          onPause: y,
          onBuffer: y,
          onBufferEnd: y,
          onEnded: y,
          onError: y,
          onDuration: y,
          onSeek: y,
          onPlaybackRateChange: y,
          onPlaybackQualityChange: y,
          onProgress: y,
          onClickPreview: y,
          onEnablePIP: y,
          onDisablePIP: y,
        },
        M = () => {},
        S = {
          playing: !1,
          loop: !1,
          controls: !1,
          volume: null,
          muted: !1,
          playbackRate: 1,
          width: "640px",
          height: "360px",
          style: {},
          progressInterval: 1e3,
          playsinline: !1,
          pip: !1,
          stopOnUnmount: !0,
          light: !1,
          fallback: null,
          wrapper: "div",
          previewTabIndex: 0,
          oEmbedUrl: "https://noembed.com/embed?url={url}",
          config: {
            soundcloud: {
              options: {
                visual: !0,
                buying: !1,
                liking: !1,
                download: !1,
                sharing: !1,
                show_comments: !1,
                show_playcount: !1,
              },
            },
            youtube: {
              playerVars: {
                playsinline: 1,
                showinfo: 0,
                rel: 0,
                iv_load_policy: 3,
                modestbranding: 1,
              },
              embedOptions: {},
              onUnstarted: M,
            },
            facebook: {
              appId: "1309697205772819",
              version: "v3.3",
              playerId: null,
              attributes: {},
            },
            dailymotion: { params: { api: 1, "endscreen-enable": !1 } },
            vimeo: {
              playerOptions: {
                autopause: !1,
                byline: !1,
                portrait: !1,
                title: !1,
              },
              title: null,
            },
            file: {
              attributes: {},
              tracks: [],
              forceVideo: !1,
              forceAudio: !1,
              forceHLS: !1,
              forceDASH: !1,
              forceFLV: !1,
              hlsOptions: {},
              hlsVersion: "1.1.4",
              dashVersion: "3.1.3",
              flvVersion: "1.5.0",
              forceDisableHls: !1,
            },
            wistia: { options: {}, playerId: null, customControls: null },
            mixcloud: { options: { hide_cover: 1 } },
            twitch: { options: {}, playerId: null },
            vidyard: { options: {} },
          },
          onReady: M,
          onStart: M,
          onPlay: M,
          onPause: M,
          onBuffer: M,
          onBufferEnd: M,
          onEnded: M,
          onError: M,
          onDuration: M,
          onSeek: M,
          onPlaybackRateChange: M,
          onPlaybackQualityChange: M,
          onProgress: M,
          onClickPreview: M,
          onEnablePIP: M,
          onDisablePIP: M,
        };
    },
    135: (t, e, n) => {
      var r,
        i = Object.create,
        a = Object.defineProperty,
        o = Object.getOwnPropertyDescriptor,
        s = Object.getOwnPropertyNames,
        l = Object.getPrototypeOf,
        c = Object.prototype.hasOwnProperty,
        u = (t, e, n, r) => {
          if ((e && "object" === typeof e) || "function" === typeof e)
            for (let i of s(e))
              c.call(t, i) ||
                i === n ||
                a(t, i, {
                  get: () => e[i],
                  enumerable: !(r = o(e, i)) || r.enumerable,
                });
          return t;
        },
        d = (t, e, n) => (
          (n = null != t ? i(l(t)) : {}),
          u(
            !e && t && t.__esModule
              ? n
              : a(n, "default", { value: t, enumerable: !0 }),
            t
          )
        ),
        h = {};
      ((t, e) => {
        for (var n in e) a(t, n, { get: e[n], enumerable: !0 });
      })(h, {
        callPlayer: () => P,
        getConfig: () => T,
        getSDK: () => R,
        isBlobUrl: () => D,
        isMediaStream: () => C,
        lazy: () => g,
        omit: () => O,
        parseEndTime: () => M,
        parseStartTime: () => w,
        queryString: () => A,
        randomString: () => S,
        supportsWebKitPresentationMode: () => I,
      }),
        (t.exports = ((r = h), u(a({}, "__esModule", { value: !0 }), r)));
      var f = d(n(2791)),
        p = d(n(5102)),
        m = d(n(9948));
      const g = (t) =>
          f.default.lazy(async () => {
            const e = await t();
            return "function" === typeof e.default ? e : e.default;
          }),
        _ = /[?&#](?:start|t)=([0-9hms]+)/,
        v = /[?&#]end=([0-9hms]+)/,
        b = /(\d+)(h|m|s)/g,
        y = /^\d+$/;
      function x(t, e) {
        if (t instanceof Array) return;
        const n = t.match(e);
        if (n) {
          const t = n[1];
          if (t.match(b))
            return (function (t) {
              let e = 0,
                n = b.exec(t);
              for (; null !== n; ) {
                const [, r, i] = n;
                "h" === i && (e += 60 * parseInt(r, 10) * 60),
                  "m" === i && (e += 60 * parseInt(r, 10)),
                  "s" === i && (e += parseInt(r, 10)),
                  (n = b.exec(t));
              }
              return e;
            })(t);
          if (y.test(t)) return parseInt(t);
        }
      }
      function w(t) {
        return x(t, _);
      }
      function M(t) {
        return x(t, v);
      }
      function S() {
        return Math.random().toString(36).substr(2, 5);
      }
      function A(t) {
        return Object.keys(t)
          .map((e) => "".concat(e, "=").concat(t[e]))
          .join("&");
      }
      function E(t) {
        return window[t]
          ? window[t]
          : window.exports && window.exports[t]
          ? window.exports[t]
          : window.module && window.module.exports && window.module.exports[t]
          ? window.module.exports[t]
          : null;
      }
      const k = {},
        R = (function (t) {
          0;
          return t;
        })(function (t, e) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : null,
            r =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : () => !0,
            i =
              arguments.length > 4 && void 0 !== arguments[4]
                ? arguments[4]
                : p.default;
          const a = E(e);
          return a && r(a)
            ? Promise.resolve(a)
            : new Promise((r, a) => {
                if (k[t]) return void k[t].push({ resolve: r, reject: a });
                k[t] = [{ resolve: r, reject: a }];
                const o = (e) => {
                  k[t].forEach((t) => t.resolve(e));
                };
                if (n) {
                  const t = window[n];
                  window[n] = function () {
                    t && t(), o(E(e));
                  };
                }
                i(t, (r) => {
                  r
                    ? (k[t].forEach((t) => t.reject(r)), (k[t] = null))
                    : n || o(E(e));
                });
              });
        });
      function T(t, e) {
        return (0, m.default)(e.config, t.config);
      }
      function O(t) {
        for (
          var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
          r < e;
          r++
        )
          n[r - 1] = arguments[r];
        const i = [].concat(...n),
          a = {},
          o = Object.keys(t);
        for (const s of o) -1 === i.indexOf(s) && (a[s] = t[s]);
        return a;
      }
      function P(t) {
        if (!this.player || !this.player[t]) {
          let e = "ReactPlayer: "
            .concat(this.constructor.displayName, " player could not call %c")
            .concat(t, "%c \u2013 ");
          return (
            this.player
              ? this.player[t] || (e += "The method was not available")
              : (e += "The player was not available"),
            console.warn(e, "font-weight: bold", ""),
            null
          );
        }
        for (
          var e = arguments.length, n = new Array(e > 1 ? e - 1 : 0), r = 1;
          r < e;
          r++
        )
          n[r - 1] = arguments[r];
        return this.player[t](...n);
      }
      function C(t) {
        return (
          "undefined" !== typeof window &&
          "undefined" !== typeof window.MediaStream &&
          t instanceof window.MediaStream
        );
      }
      function D(t) {
        return /^blob:/.test(t);
      }
      function I() {
        let t =
          arguments.length > 0 && void 0 !== arguments[0]
            ? arguments[0]
            : document.createElement("video");
        const e = !1 === /iPhone|iPod/.test(navigator.userAgent);
        return (
          t.webkitSupportsPresentationMode &&
          "function" === typeof t.webkitSetPresentationMode &&
          e
        );
      }
    },
    9667: function (t, e, n) {
      !(function (t, e, n, r) {
        "use strict";
        var i = function (t, e) {
            return void 0 === e
              ? t
              : e.reduce(function (t, e) {
                  if ("capitalize" === e) {
                    var i = t.charAt(0).toUpperCase(),
                      a = t.slice(1);
                    return "".concat(i).concat(a);
                  }
                  return "dashify" === e
                    ? n(t)
                    : "prependIndefiniteArticle" === e
                    ? "".concat(r(t), " ").concat(t)
                    : t;
                }, t);
          },
          a = function (t) {
            var e =
              t.name +
              t.modifiers
                .map(function (t) {
                  return "\\.".concat(t, "\\(\\)");
                })
                .join("");
            return new RegExp("\\$\\{".concat(e, "}"), "g");
          },
          o = function (t, n) {
            for (
              var r = /\${([^.}]+)((\.[^(]+\(\))*)}/g, o = [], s = r.exec(t);
              null !== s;

            ) {
              var l = { modifiers: [], name: s[1] };
              if (void 0 !== s[3])
                for (var c = /\.[^(]+\(\)/g, u = c.exec(s[2]); null !== u; )
                  l.modifiers.push(u[0].slice(1, -2)), (u = c.exec(s[2]));
              o.push(l), (s = r.exec(t));
            }
            var d = o.reduce(
              function (t, r) {
                return t
                  .map(function (t) {
                    return "string" === typeof t
                      ? t.split(a(r)).reduce(function (t, a, o) {
                          return 0 === o
                            ? [a]
                            : r.name in n
                            ? [].concat(e(t), [i(n[r.name], r.modifiers), a])
                            : [].concat(e(t), [
                                function (t) {
                                  return i(t[r.name], r.modifiers);
                                },
                                a,
                              ]);
                        }, [])
                      : [t];
                  })
                  .reduce(function (t, n) {
                    return [].concat(e(t), e(n));
                  }, []);
              },
              [t]
            );
            return function (t) {
              return d
                .reduce(function (n, r) {
                  return [].concat(e(n), "string" === typeof r ? [r] : [r(t)]);
                }, [])
                .join("");
            };
          },
          s = function (t) {
            var e =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {},
              n = void 0 === t.code ? void 0 : o(t.code, e),
              r = void 0 === t.message ? void 0 : o(t.message, e);
            function i() {
              var e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                i = arguments.length > 1 ? arguments[1] : void 0,
                a =
                  void 0 === i &&
                  (e instanceof Error ||
                    (void 0 !== e.code && "Exception" === e.code.slice(-9)))
                    ? { cause: e, missingParameters: {} }
                    : { cause: i, missingParameters: e },
                o = a.cause,
                s = a.missingParameters,
                l = void 0 === r ? new Error() : new Error(r(s));
              return (
                null !== o && (l.cause = o),
                void 0 !== n && (l.code = n(s)),
                void 0 !== t.status && (l.status = t.status),
                l
              );
            }
            return i;
          };
        t.compile = s;
      })(e, n(861), n(16), n(5483));
    },
    2826: function (t, e) {
      !(function (t) {
        "use strict";
        var e = function (t) {
            return function (e) {
              var n = t(e);
              return e.add(n), n;
            };
          },
          n = function (t) {
            return function (e, n) {
              return t.set(e, n), n;
            };
          },
          r =
            void 0 === Number.MAX_SAFE_INTEGER
              ? 9007199254740991
              : Number.MAX_SAFE_INTEGER,
          i = 536870912,
          a = 2 * i,
          o = function (t, e) {
            return function (n) {
              var o = e.get(n),
                s = void 0 === o ? n.size : o < a ? o + 1 : 0;
              if (!n.has(s)) return t(n, s);
              if (n.size < i) {
                for (; n.has(s); ) s = Math.floor(Math.random() * a);
                return t(n, s);
              }
              if (n.size > r)
                throw new Error(
                  "Congratulations, you created a collection of unique numbers which uses all available integers!"
                );
              for (; n.has(s); ) s = Math.floor(Math.random() * r);
              return t(n, s);
            };
          },
          s = new WeakMap(),
          l = n(s),
          c = o(l, s),
          u = e(c);
        (t.addUniqueNumber = u), (t.generateUniqueNumber = c);
      })(e);
    },
    3897: (t) => {
      (t.exports = function (t, e) {
        (null == e || e > t.length) && (e = t.length);
        for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
        return r;
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    5372: (t) => {
      (t.exports = function (t) {
        if (Array.isArray(t)) return t;
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    3405: (t, e, n) => {
      var r = n(3897);
      (t.exports = function (t) {
        if (Array.isArray(t)) return r(t);
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    6690: (t) => {
      (t.exports = function (t, e) {
        if (!(t instanceof e))
          throw new TypeError("Cannot call a class as a function");
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    9728: (t, e, n) => {
      var r = n(4062);
      function i(t, e) {
        for (var n = 0; n < e.length; n++) {
          var i = e[n];
          (i.enumerable = i.enumerable || !1),
            (i.configurable = !0),
            "value" in i && (i.writable = !0),
            Object.defineProperty(t, r(i.key), i);
        }
      }
      (t.exports = function (t, e, n) {
        return (
          e && i(t.prototype, e),
          n && i(t, n),
          Object.defineProperty(t, "prototype", { writable: !1 }),
          t
        );
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    9498: (t) => {
      (t.exports = function (t) {
        if (
          ("undefined" !== typeof Symbol && null != t[Symbol.iterator]) ||
          null != t["@@iterator"]
        )
          return Array.from(t);
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    8872: (t) => {
      (t.exports = function (t, e) {
        var n =
          null == t
            ? null
            : ("undefined" != typeof Symbol && t[Symbol.iterator]) ||
              t["@@iterator"];
        if (null != n) {
          var r,
            i,
            a,
            o,
            s = [],
            l = !0,
            c = !1;
          try {
            if (((a = (n = n.call(t)).next), 0 === e)) {
              if (Object(n) !== n) return;
              l = !1;
            } else
              for (
                ;
                !(l = (r = a.call(n)).done) &&
                (s.push(r.value), s.length !== e);
                l = !0
              );
          } catch (t) {
            (c = !0), (i = t);
          } finally {
            try {
              if (!l && null != n.return && ((o = n.return()), Object(o) !== o))
                return;
            } finally {
              if (c) throw i;
            }
          }
          return s;
        }
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    2218: (t) => {
      (t.exports = function () {
        throw new TypeError(
          "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
        );
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    2281: (t) => {
      (t.exports = function () {
        throw new TypeError(
          "Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
        );
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    7424: (t, e, n) => {
      var r = n(5372),
        i = n(8872),
        a = n(6116),
        o = n(2218);
      (t.exports = function (t, e) {
        return r(t) || i(t, e) || a(t, e) || o();
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    861: (t, e, n) => {
      var r = n(3405),
        i = n(9498),
        a = n(6116),
        o = n(2281);
      (t.exports = function (t) {
        return r(t) || i(t) || a(t) || o();
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    5036: (t, e, n) => {
      var r = n(8698).default;
      (t.exports = function (t, e) {
        if ("object" != r(t) || !t) return t;
        var n = t[Symbol.toPrimitive];
        if (void 0 !== n) {
          var i = n.call(t, e || "default");
          if ("object" != r(i)) return i;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === e ? String : Number)(t);
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    4062: (t, e, n) => {
      var r = n(8698).default,
        i = n(5036);
      (t.exports = function (t) {
        var e = i(t, "string");
        return "symbol" == r(e) ? e : String(e);
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    8698: (t) => {
      function e(n) {
        return (
          (t.exports = e =
            "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
              ? function (t) {
                  return typeof t;
                }
              : function (t) {
                  return t &&
                    "function" == typeof Symbol &&
                    t.constructor === Symbol &&
                    t !== Symbol.prototype
                    ? "symbol"
                    : typeof t;
                }),
          (t.exports.__esModule = !0),
          (t.exports.default = t.exports),
          e(n)
        );
      }
      (t.exports = e),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    6116: (t, e, n) => {
      var r = n(3897);
      (t.exports = function (t, e) {
        if (t) {
          if ("string" === typeof t) return r(t, e);
          var n = Object.prototype.toString.call(t).slice(8, -1);
          return (
            "Object" === n && t.constructor && (n = t.constructor.name),
            "Map" === n || "Set" === n
              ? Array.from(t)
              : "Arguments" === n ||
                /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
              ? r(t, e)
              : void 0
          );
        }
      }),
        (t.exports.__esModule = !0),
        (t.exports.default = t.exports);
    },
    444: (t, e, n) => {
      "use strict";
      var r = n(6305);
      r.kL.register(...r.zX);
    },
    6305: (t, e, n) => {
      "use strict";
      function r() {}
      n.d(e, { vn: () => Xn, kL: () => Ei, zX: () => mo });
      const i = (function () {
        let t = 0;
        return function () {
          return t++;
        };
      })();
      function a(t) {
        return null === t || "undefined" === typeof t;
      }
      function o(t) {
        if (Array.isArray && Array.isArray(t)) return !0;
        const e = Object.prototype.toString.call(t);
        return "[object" === e.slice(0, 7) && "Array]" === e.slice(-6);
      }
      function s(t) {
        return (
          null !== t && "[object Object]" === Object.prototype.toString.call(t)
        );
      }
      const l = (t) =>
        ("number" === typeof t || t instanceof Number) && isFinite(+t);
      function c(t, e) {
        return l(t) ? t : e;
      }
      function u(t, e) {
        return "undefined" === typeof t ? e : t;
      }
      const d = (t, e) =>
        "string" === typeof t && t.endsWith("%")
          ? (parseFloat(t) / 100) * e
          : +t;
      function h(t, e, n) {
        if (t && "function" === typeof t.call) return t.apply(n, e);
      }
      function f(t, e, n, r) {
        let i, a, l;
        if (o(t))
          if (((a = t.length), r))
            for (i = a - 1; i >= 0; i--) e.call(n, t[i], i);
          else for (i = 0; i < a; i++) e.call(n, t[i], i);
        else if (s(t))
          for (l = Object.keys(t), a = l.length, i = 0; i < a; i++)
            e.call(n, t[l[i]], l[i]);
      }
      function p(t, e) {
        let n, r, i, a;
        if (!t || !e || t.length !== e.length) return !1;
        for (n = 0, r = t.length; n < r; ++n)
          if (
            ((i = t[n]),
            (a = e[n]),
            i.datasetIndex !== a.datasetIndex || i.index !== a.index)
          )
            return !1;
        return !0;
      }
      function m(t) {
        if (o(t)) return t.map(m);
        if (s(t)) {
          const e = Object.create(null),
            n = Object.keys(t),
            r = n.length;
          let i = 0;
          for (; i < r; ++i) e[n[i]] = m(t[n[i]]);
          return e;
        }
        return t;
      }
      function g(t) {
        return -1 === ["__proto__", "prototype", "constructor"].indexOf(t);
      }
      function _(t, e, n, r) {
        if (!g(t)) return;
        const i = e[t],
          a = n[t];
        s(i) && s(a) ? v(i, a, r) : (e[t] = m(a));
      }
      function v(t, e, n) {
        const r = o(e) ? e : [e],
          i = r.length;
        if (!s(t)) return t;
        const a = (n = n || {}).merger || _;
        for (let o = 0; o < i; ++o) {
          if (!s((e = r[o]))) continue;
          const i = Object.keys(e);
          for (let r = 0, o = i.length; r < o; ++r) a(i[r], t, e, n);
        }
        return t;
      }
      function b(t, e) {
        return v(t, e, { merger: y });
      }
      function y(t, e, n) {
        if (!g(t)) return;
        const r = e[t],
          i = n[t];
        s(r) && s(i)
          ? b(r, i)
          : Object.prototype.hasOwnProperty.call(e, t) || (e[t] = m(i));
      }
      const x = { "": (t) => t, x: (t) => t.x, y: (t) => t.y };
      function w(t, e) {
        const n =
          x[e] ||
          (x[e] = (function (t) {
            const e = (function (t) {
              const e = t.split("."),
                n = [];
              let r = "";
              for (const i of e)
                (r += i),
                  r.endsWith("\\")
                    ? (r = r.slice(0, -1) + ".")
                    : (n.push(r), (r = ""));
              return n;
            })(t);
            return (t) => {
              for (const n of e) {
                if ("" === n) break;
                t = t && t[n];
              }
              return t;
            };
          })(e));
        return n(t);
      }
      function M(t) {
        return t.charAt(0).toUpperCase() + t.slice(1);
      }
      const S = (t) => "undefined" !== typeof t,
        A = (t) => "function" === typeof t,
        E = (t, e) => {
          if (t.size !== e.size) return !1;
          for (const n of t) if (!e.has(n)) return !1;
          return !0;
        };
      const k = Math.PI,
        R = 2 * k,
        T = R + k,
        O = Number.POSITIVE_INFINITY,
        P = k / 180,
        C = k / 2,
        D = k / 4,
        I = (2 * k) / 3,
        B = Math.log10,
        N = Math.sign;
      function L(t) {
        const e = Math.round(t);
        t = F(t, e, t / 1e3) ? e : t;
        const n = Math.pow(10, Math.floor(B(t))),
          r = t / n;
        return (r <= 1 ? 1 : r <= 2 ? 2 : r <= 5 ? 5 : 10) * n;
      }
      function V(t) {
        return !isNaN(parseFloat(t)) && isFinite(t);
      }
      function F(t, e, n) {
        return Math.abs(t - e) < n;
      }
      function H(t, e, n) {
        let r, i, a;
        for (r = 0, i = t.length; r < i; r++)
          (a = t[r][n]),
            isNaN(a) ||
              ((e.min = Math.min(e.min, a)), (e.max = Math.max(e.max, a)));
      }
      function j(t) {
        return t * (k / 180);
      }
      function Y(t) {
        return t * (180 / k);
      }
      function W(t) {
        if (!l(t)) return;
        let e = 1,
          n = 0;
        for (; Math.round(t * e) / e !== t; ) (e *= 10), n++;
        return n;
      }
      function U(t, e) {
        const n = e.x - t.x,
          r = e.y - t.y,
          i = Math.sqrt(n * n + r * r);
        let a = Math.atan2(r, n);
        return a < -0.5 * k && (a += R), { angle: a, distance: i };
      }
      function z(t, e) {
        return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2));
      }
      function G(t, e) {
        return ((t - e + T) % R) - k;
      }
      function q(t) {
        return ((t % R) + R) % R;
      }
      function X(t, e, n, r) {
        const i = q(t),
          a = q(e),
          o = q(n),
          s = q(a - i),
          l = q(o - i),
          c = q(i - a),
          u = q(i - o);
        return i === a || i === o || (r && a === o) || (s > l && c < u);
      }
      function Z(t, e, n) {
        return Math.max(e, Math.min(n, t));
      }
      function K(t, e, n) {
        let r =
          arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1e-6;
        return t >= Math.min(e, n) - r && t <= Math.max(e, n) + r;
      }
      function $(t, e, n) {
        n = n || ((n) => t[n] < e);
        let r,
          i = t.length - 1,
          a = 0;
        for (; i - a > 1; ) (r = (a + i) >> 1), n(r) ? (a = r) : (i = r);
        return { lo: a, hi: i };
      }
      const Q = (t, e, n, r) =>
          $(t, n, r ? (r) => t[r][e] <= n : (r) => t[r][e] < n),
        J = (t, e, n) => $(t, n, (r) => t[r][e] >= n);
      const tt = ["push", "pop", "shift", "splice", "unshift"];
      function et(t, e) {
        const n = t._chartjs;
        if (!n) return;
        const r = n.listeners,
          i = r.indexOf(e);
        -1 !== i && r.splice(i, 1),
          r.length > 0 ||
            (tt.forEach((e) => {
              delete t[e];
            }),
            delete t._chartjs);
      }
      function nt(t) {
        const e = new Set();
        let n, r;
        for (n = 0, r = t.length; n < r; ++n) e.add(t[n]);
        return e.size === r ? t : Array.from(e);
      }
      const rt =
        "undefined" === typeof window
          ? function (t) {
              return t();
            }
          : window.requestAnimationFrame;
      function it(t, e, n) {
        const r = n || ((t) => Array.prototype.slice.call(t));
        let i = !1,
          a = [];
        return function () {
          for (var n = arguments.length, o = new Array(n), s = 0; s < n; s++)
            o[s] = arguments[s];
          (a = r(o)),
            i ||
              ((i = !0),
              rt.call(window, () => {
                (i = !1), t.apply(e, a);
              }));
        };
      }
      const at = (t) =>
          "start" === t ? "left" : "end" === t ? "right" : "center",
        ot = (t, e, n) => ("start" === t ? e : "end" === t ? n : (e + n) / 2);
      function st(t, e, n) {
        const r = e.length;
        let i = 0,
          a = r;
        if (t._sorted) {
          const { iScale: o, _parsed: s } = t,
            l = o.axis,
            {
              min: c,
              max: u,
              minDefined: d,
              maxDefined: h,
            } = o.getUserBounds();
          d &&
            (i = Z(
              Math.min(
                Q(s, o.axis, c).lo,
                n ? r : Q(e, l, o.getPixelForValue(c)).lo
              ),
              0,
              r - 1
            )),
            (a = h
              ? Z(
                  Math.max(
                    Q(s, o.axis, u, !0).hi + 1,
                    n ? 0 : Q(e, l, o.getPixelForValue(u), !0).hi + 1
                  ),
                  i,
                  r
                ) - i
              : r - i);
        }
        return { start: i, count: a };
      }
      function lt(t) {
        const { xScale: e, yScale: n, _scaleRanges: r } = t,
          i = { xmin: e.min, xmax: e.max, ymin: n.min, ymax: n.max };
        if (!r) return (t._scaleRanges = i), !0;
        const a =
          r.xmin !== e.min ||
          r.xmax !== e.max ||
          r.ymin !== n.min ||
          r.ymax !== n.max;
        return Object.assign(r, i), a;
      }
      const ct = (t) => 0 === t || 1 === t,
        ut = (t, e, n) =>
          -Math.pow(2, 10 * (t -= 1)) * Math.sin(((t - e) * R) / n),
        dt = (t, e, n) =>
          Math.pow(2, -10 * t) * Math.sin(((t - e) * R) / n) + 1,
        ht = {
          linear: (t) => t,
          easeInQuad: (t) => t * t,
          easeOutQuad: (t) => -t * (t - 2),
          easeInOutQuad: (t) =>
            (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),
          easeInCubic: (t) => t * t * t,
          easeOutCubic: (t) => (t -= 1) * t * t + 1,
          easeInOutCubic: (t) =>
            (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),
          easeInQuart: (t) => t * t * t * t,
          easeOutQuart: (t) => -((t -= 1) * t * t * t - 1),
          easeInOutQuart: (t) =>
            (t /= 0.5) < 1
              ? 0.5 * t * t * t * t
              : -0.5 * ((t -= 2) * t * t * t - 2),
          easeInQuint: (t) => t * t * t * t * t,
          easeOutQuint: (t) => (t -= 1) * t * t * t * t + 1,
          easeInOutQuint: (t) =>
            (t /= 0.5) < 1
              ? 0.5 * t * t * t * t * t
              : 0.5 * ((t -= 2) * t * t * t * t + 2),
          easeInSine: (t) => 1 - Math.cos(t * C),
          easeOutSine: (t) => Math.sin(t * C),
          easeInOutSine: (t) => -0.5 * (Math.cos(k * t) - 1),
          easeInExpo: (t) => (0 === t ? 0 : Math.pow(2, 10 * (t - 1))),
          easeOutExpo: (t) => (1 === t ? 1 : 1 - Math.pow(2, -10 * t)),
          easeInOutExpo: (t) =>
            ct(t)
              ? t
              : t < 0.5
              ? 0.5 * Math.pow(2, 10 * (2 * t - 1))
              : 0.5 * (2 - Math.pow(2, -10 * (2 * t - 1))),
          easeInCirc: (t) => (t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1)),
          easeOutCirc: (t) => Math.sqrt(1 - (t -= 1) * t),
          easeInOutCirc: (t) =>
            (t /= 0.5) < 1
              ? -0.5 * (Math.sqrt(1 - t * t) - 1)
              : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),
          easeInElastic: (t) => (ct(t) ? t : ut(t, 0.075, 0.3)),
          easeOutElastic: (t) => (ct(t) ? t : dt(t, 0.075, 0.3)),
          easeInOutElastic(t) {
            const e = 0.1125;
            return ct(t)
              ? t
              : t < 0.5
              ? 0.5 * ut(2 * t, e, 0.45)
              : 0.5 + 0.5 * dt(2 * t - 1, e, 0.45);
          },
          easeInBack(t) {
            const e = 1.70158;
            return t * t * ((e + 1) * t - e);
          },
          easeOutBack(t) {
            const e = 1.70158;
            return (t -= 1) * t * ((e + 1) * t + e) + 1;
          },
          easeInOutBack(t) {
            let e = 1.70158;
            return (t /= 0.5) < 1
              ? t * t * ((1 + (e *= 1.525)) * t - e) * 0.5
              : 0.5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2);
          },
          easeInBounce: (t) => 1 - ht.easeOutBounce(1 - t),
          easeOutBounce(t) {
            const e = 7.5625,
              n = 2.75;
            return t < 1 / n
              ? e * t * t
              : t < 2 / n
              ? e * (t -= 1.5 / n) * t + 0.75
              : t < 2.5 / n
              ? e * (t -= 2.25 / n) * t + 0.9375
              : e * (t -= 2.625 / n) * t + 0.984375;
          },
          easeInOutBounce: (t) =>
            t < 0.5
              ? 0.5 * ht.easeInBounce(2 * t)
              : 0.5 * ht.easeOutBounce(2 * t - 1) + 0.5,
        };
      function ft(t) {
        return (t + 0.5) | 0;
      }
      const pt = (t, e, n) => Math.max(Math.min(t, n), e);
      function mt(t) {
        return pt(ft(2.55 * t), 0, 255);
      }
      function gt(t) {
        return pt(ft(255 * t), 0, 255);
      }
      function _t(t) {
        return pt(ft(t / 2.55) / 100, 0, 1);
      }
      function vt(t) {
        return pt(ft(100 * t), 0, 100);
      }
      const bt = {
          0: 0,
          1: 1,
          2: 2,
          3: 3,
          4: 4,
          5: 5,
          6: 6,
          7: 7,
          8: 8,
          9: 9,
          A: 10,
          B: 11,
          C: 12,
          D: 13,
          E: 14,
          F: 15,
          a: 10,
          b: 11,
          c: 12,
          d: 13,
          e: 14,
          f: 15,
        },
        yt = [..."0123456789ABCDEF"],
        xt = (t) => yt[15 & t],
        wt = (t) => yt[(240 & t) >> 4] + yt[15 & t],
        Mt = (t) => (240 & t) >> 4 === (15 & t);
      function St(t) {
        var e = ((t) => Mt(t.r) && Mt(t.g) && Mt(t.b) && Mt(t.a))(t) ? xt : wt;
        return t
          ? "#" +
              e(t.r) +
              e(t.g) +
              e(t.b) +
              ((t, e) => (t < 255 ? e(t) : ""))(t.a, e)
          : void 0;
      }
      const At =
        /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
      function Et(t, e, n) {
        const r = e * Math.min(n, 1 - n),
          i = function (e) {
            let i =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : (e + t / 30) % 12;
            return n - r * Math.max(Math.min(i - 3, 9 - i, 1), -1);
          };
        return [i(0), i(8), i(4)];
      }
      function kt(t, e, n) {
        const r = function (r) {
          let i =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : (r + t / 60) % 6;
          return n - n * e * Math.max(Math.min(i, 4 - i, 1), 0);
        };
        return [r(5), r(3), r(1)];
      }
      function Rt(t, e, n) {
        const r = Et(t, 1, 0.5);
        let i;
        for (
          e + n > 1 && ((i = 1 / (e + n)), (e *= i), (n *= i)), i = 0;
          i < 3;
          i++
        )
          (r[i] *= 1 - e - n), (r[i] += e);
        return r;
      }
      function Tt(t) {
        const e = t.r / 255,
          n = t.g / 255,
          r = t.b / 255,
          i = Math.max(e, n, r),
          a = Math.min(e, n, r),
          o = (i + a) / 2;
        let s, l, c;
        return (
          i !== a &&
            ((c = i - a),
            (l = o > 0.5 ? c / (2 - i - a) : c / (i + a)),
            (s = (function (t, e, n, r, i) {
              return t === i
                ? (e - n) / r + (e < n ? 6 : 0)
                : e === i
                ? (n - t) / r + 2
                : (t - e) / r + 4;
            })(e, n, r, c, i)),
            (s = 60 * s + 0.5)),
          [0 | s, l || 0, o]
        );
      }
      function Ot(t, e, n, r) {
        return (Array.isArray(e) ? t(e[0], e[1], e[2]) : t(e, n, r)).map(gt);
      }
      function Pt(t, e, n) {
        return Ot(Et, t, e, n);
      }
      function Ct(t) {
        return ((t % 360) + 360) % 360;
      }
      function Dt(t) {
        const e = At.exec(t);
        let n,
          r = 255;
        if (!e) return;
        e[5] !== n && (r = e[6] ? mt(+e[5]) : gt(+e[5]));
        const i = Ct(+e[2]),
          a = +e[3] / 100,
          o = +e[4] / 100;
        return (
          (n =
            "hwb" === e[1]
              ? (function (t, e, n) {
                  return Ot(Rt, t, e, n);
                })(i, a, o)
              : "hsv" === e[1]
              ? (function (t, e, n) {
                  return Ot(kt, t, e, n);
                })(i, a, o)
              : Pt(i, a, o)),
          { r: n[0], g: n[1], b: n[2], a: r }
        );
      }
      const It = {
          x: "dark",
          Z: "light",
          Y: "re",
          X: "blu",
          W: "gr",
          V: "medium",
          U: "slate",
          A: "ee",
          T: "ol",
          S: "or",
          B: "ra",
          C: "lateg",
          D: "ights",
          R: "in",
          Q: "turquois",
          E: "hi",
          P: "ro",
          O: "al",
          N: "le",
          M: "de",
          L: "yello",
          F: "en",
          K: "ch",
          G: "arks",
          H: "ea",
          I: "ightg",
          J: "wh",
        },
        Bt = {
          OiceXe: "f0f8ff",
          antiquewEte: "faebd7",
          aqua: "ffff",
          aquamarRe: "7fffd4",
          azuY: "f0ffff",
          beige: "f5f5dc",
          bisque: "ffe4c4",
          black: "0",
          blanKedOmond: "ffebcd",
          Xe: "ff",
          XeviTet: "8a2be2",
          bPwn: "a52a2a",
          burlywood: "deb887",
          caMtXe: "5f9ea0",
          KartYuse: "7fff00",
          KocTate: "d2691e",
          cSO: "ff7f50",
          cSnflowerXe: "6495ed",
          cSnsilk: "fff8dc",
          crimson: "dc143c",
          cyan: "ffff",
          xXe: "8b",
          xcyan: "8b8b",
          xgTMnPd: "b8860b",
          xWay: "a9a9a9",
          xgYF: "6400",
          xgYy: "a9a9a9",
          xkhaki: "bdb76b",
          xmagFta: "8b008b",
          xTivegYF: "556b2f",
          xSange: "ff8c00",
          xScEd: "9932cc",
          xYd: "8b0000",
          xsOmon: "e9967a",
          xsHgYF: "8fbc8f",
          xUXe: "483d8b",
          xUWay: "2f4f4f",
          xUgYy: "2f4f4f",
          xQe: "ced1",
          xviTet: "9400d3",
          dAppRk: "ff1493",
          dApskyXe: "bfff",
          dimWay: "696969",
          dimgYy: "696969",
          dodgerXe: "1e90ff",
          fiYbrick: "b22222",
          flSOwEte: "fffaf0",
          foYstWAn: "228b22",
          fuKsia: "ff00ff",
          gaRsbSo: "dcdcdc",
          ghostwEte: "f8f8ff",
          gTd: "ffd700",
          gTMnPd: "daa520",
          Way: "808080",
          gYF: "8000",
          gYFLw: "adff2f",
          gYy: "808080",
          honeyMw: "f0fff0",
          hotpRk: "ff69b4",
          RdianYd: "cd5c5c",
          Rdigo: "4b0082",
          ivSy: "fffff0",
          khaki: "f0e68c",
          lavFMr: "e6e6fa",
          lavFMrXsh: "fff0f5",
          lawngYF: "7cfc00",
          NmoncEffon: "fffacd",
          ZXe: "add8e6",
          ZcSO: "f08080",
          Zcyan: "e0ffff",
          ZgTMnPdLw: "fafad2",
          ZWay: "d3d3d3",
          ZgYF: "90ee90",
          ZgYy: "d3d3d3",
          ZpRk: "ffb6c1",
          ZsOmon: "ffa07a",
          ZsHgYF: "20b2aa",
          ZskyXe: "87cefa",
          ZUWay: "778899",
          ZUgYy: "778899",
          ZstAlXe: "b0c4de",
          ZLw: "ffffe0",
          lime: "ff00",
          limegYF: "32cd32",
          lRF: "faf0e6",
          magFta: "ff00ff",
          maPon: "800000",
          VaquamarRe: "66cdaa",
          VXe: "cd",
          VScEd: "ba55d3",
          VpurpN: "9370db",
          VsHgYF: "3cb371",
          VUXe: "7b68ee",
          VsprRggYF: "fa9a",
          VQe: "48d1cc",
          VviTetYd: "c71585",
          midnightXe: "191970",
          mRtcYam: "f5fffa",
          mistyPse: "ffe4e1",
          moccasR: "ffe4b5",
          navajowEte: "ffdead",
          navy: "80",
          Tdlace: "fdf5e6",
          Tive: "808000",
          TivedBb: "6b8e23",
          Sange: "ffa500",
          SangeYd: "ff4500",
          ScEd: "da70d6",
          pOegTMnPd: "eee8aa",
          pOegYF: "98fb98",
          pOeQe: "afeeee",
          pOeviTetYd: "db7093",
          papayawEp: "ffefd5",
          pHKpuff: "ffdab9",
          peru: "cd853f",
          pRk: "ffc0cb",
          plum: "dda0dd",
          powMrXe: "b0e0e6",
          purpN: "800080",
          YbeccapurpN: "663399",
          Yd: "ff0000",
          Psybrown: "bc8f8f",
          PyOXe: "4169e1",
          saddNbPwn: "8b4513",
          sOmon: "fa8072",
          sandybPwn: "f4a460",
          sHgYF: "2e8b57",
          sHshell: "fff5ee",
          siFna: "a0522d",
          silver: "c0c0c0",
          skyXe: "87ceeb",
          UXe: "6a5acd",
          UWay: "708090",
          UgYy: "708090",
          snow: "fffafa",
          sprRggYF: "ff7f",
          stAlXe: "4682b4",
          tan: "d2b48c",
          teO: "8080",
          tEstN: "d8bfd8",
          tomato: "ff6347",
          Qe: "40e0d0",
          viTet: "ee82ee",
          JHt: "f5deb3",
          wEte: "ffffff",
          wEtesmoke: "f5f5f5",
          Lw: "ffff00",
          LwgYF: "9acd32",
        };
      let Nt;
      function Lt(t) {
        Nt ||
          ((Nt = (function () {
            const t = {},
              e = Object.keys(Bt),
              n = Object.keys(It);
            let r, i, a, o, s;
            for (r = 0; r < e.length; r++) {
              for (o = s = e[r], i = 0; i < n.length; i++)
                (a = n[i]), (s = s.replace(a, It[a]));
              (a = parseInt(Bt[o], 16)),
                (t[s] = [(a >> 16) & 255, (a >> 8) & 255, 255 & a]);
            }
            return t;
          })()),
          (Nt.transparent = [0, 0, 0, 0]));
        const e = Nt[t.toLowerCase()];
        return (
          e && { r: e[0], g: e[1], b: e[2], a: 4 === e.length ? e[3] : 255 }
        );
      }
      const Vt =
        /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/;
      const Ft = (t) =>
          t <= 0.0031308 ? 12.92 * t : 1.055 * Math.pow(t, 1 / 2.4) - 0.055,
        Ht = (t) =>
          t <= 0.04045 ? t / 12.92 : Math.pow((t + 0.055) / 1.055, 2.4);
      function jt(t, e, n) {
        if (t) {
          let r = Tt(t);
          (r[e] = Math.max(0, Math.min(r[e] + r[e] * n, 0 === e ? 360 : 1))),
            (r = Pt(r)),
            (t.r = r[0]),
            (t.g = r[1]),
            (t.b = r[2]);
        }
      }
      function Yt(t, e) {
        return t ? Object.assign(e || {}, t) : t;
      }
      function Wt(t) {
        var e = { r: 0, g: 0, b: 0, a: 255 };
        return (
          Array.isArray(t)
            ? t.length >= 3 &&
              ((e = { r: t[0], g: t[1], b: t[2], a: 255 }),
              t.length > 3 && (e.a = gt(t[3])))
            : ((e = Yt(t, { r: 0, g: 0, b: 0, a: 1 })).a = gt(e.a)),
          e
        );
      }
      function Ut(t) {
        return "r" === t.charAt(0)
          ? (function (t) {
              const e = Vt.exec(t);
              let n,
                r,
                i,
                a = 255;
              if (e) {
                if (e[7] !== n) {
                  const t = +e[7];
                  a = e[8] ? mt(t) : pt(255 * t, 0, 255);
                }
                return (
                  (n = +e[1]),
                  (r = +e[3]),
                  (i = +e[5]),
                  (n = 255 & (e[2] ? mt(n) : pt(n, 0, 255))),
                  (r = 255 & (e[4] ? mt(r) : pt(r, 0, 255))),
                  (i = 255 & (e[6] ? mt(i) : pt(i, 0, 255))),
                  { r: n, g: r, b: i, a: a }
                );
              }
            })(t)
          : Dt(t);
      }
      class zt {
        constructor(t) {
          if (t instanceof zt) return t;
          const e = typeof t;
          let n;
          "object" === e
            ? (n = Wt(t))
            : "string" === e &&
              (n =
                (function (t) {
                  var e,
                    n = t.length;
                  return (
                    "#" === t[0] &&
                      (4 === n || 5 === n
                        ? (e = {
                            r: 255 & (17 * bt[t[1]]),
                            g: 255 & (17 * bt[t[2]]),
                            b: 255 & (17 * bt[t[3]]),
                            a: 5 === n ? 17 * bt[t[4]] : 255,
                          })
                        : (7 !== n && 9 !== n) ||
                          (e = {
                            r: (bt[t[1]] << 4) | bt[t[2]],
                            g: (bt[t[3]] << 4) | bt[t[4]],
                            b: (bt[t[5]] << 4) | bt[t[6]],
                            a: 9 === n ? (bt[t[7]] << 4) | bt[t[8]] : 255,
                          })),
                    e
                  );
                })(t) ||
                Lt(t) ||
                Ut(t)),
            (this._rgb = n),
            (this._valid = !!n);
        }
        get valid() {
          return this._valid;
        }
        get rgb() {
          var t = Yt(this._rgb);
          return t && (t.a = _t(t.a)), t;
        }
        set rgb(t) {
          this._rgb = Wt(t);
        }
        rgbString() {
          return this._valid
            ? (t = this._rgb) &&
                (t.a < 255
                  ? "rgba("
                      .concat(t.r, ", ")
                      .concat(t.g, ", ")
                      .concat(t.b, ", ")
                      .concat(_t(t.a), ")")
                  : "rgb(".concat(t.r, ", ").concat(t.g, ", ").concat(t.b, ")"))
            : void 0;
          var t;
        }
        hexString() {
          return this._valid ? St(this._rgb) : void 0;
        }
        hslString() {
          return this._valid
            ? (function (t) {
                if (!t) return;
                const e = Tt(t),
                  n = e[0],
                  r = vt(e[1]),
                  i = vt(e[2]);
                return t.a < 255
                  ? "hsla("
                      .concat(n, ", ")
                      .concat(r, "%, ")
                      .concat(i, "%, ")
                      .concat(_t(t.a), ")")
                  : "hsl(".concat(n, ", ").concat(r, "%, ").concat(i, "%)");
              })(this._rgb)
            : void 0;
        }
        mix(t, e) {
          if (t) {
            const n = this.rgb,
              r = t.rgb;
            let i;
            const a = e === i ? 0.5 : e,
              o = 2 * a - 1,
              s = n.a - r.a,
              l = ((o * s === -1 ? o : (o + s) / (1 + o * s)) + 1) / 2;
            (i = 1 - l),
              (n.r = 255 & (l * n.r + i * r.r + 0.5)),
              (n.g = 255 & (l * n.g + i * r.g + 0.5)),
              (n.b = 255 & (l * n.b + i * r.b + 0.5)),
              (n.a = a * n.a + (1 - a) * r.a),
              (this.rgb = n);
          }
          return this;
        }
        interpolate(t, e) {
          return (
            t &&
              (this._rgb = (function (t, e, n) {
                const r = Ht(_t(t.r)),
                  i = Ht(_t(t.g)),
                  a = Ht(_t(t.b));
                return {
                  r: gt(Ft(r + n * (Ht(_t(e.r)) - r))),
                  g: gt(Ft(i + n * (Ht(_t(e.g)) - i))),
                  b: gt(Ft(a + n * (Ht(_t(e.b)) - a))),
                  a: t.a + n * (e.a - t.a),
                };
              })(this._rgb, t._rgb, e)),
            this
          );
        }
        clone() {
          return new zt(this.rgb);
        }
        alpha(t) {
          return (this._rgb.a = gt(t)), this;
        }
        clearer(t) {
          return (this._rgb.a *= 1 - t), this;
        }
        greyscale() {
          const t = this._rgb,
            e = ft(0.3 * t.r + 0.59 * t.g + 0.11 * t.b);
          return (t.r = t.g = t.b = e), this;
        }
        opaquer(t) {
          return (this._rgb.a *= 1 + t), this;
        }
        negate() {
          const t = this._rgb;
          return (t.r = 255 - t.r), (t.g = 255 - t.g), (t.b = 255 - t.b), this;
        }
        lighten(t) {
          return jt(this._rgb, 2, t), this;
        }
        darken(t) {
          return jt(this._rgb, 2, -t), this;
        }
        saturate(t) {
          return jt(this._rgb, 1, t), this;
        }
        desaturate(t) {
          return jt(this._rgb, 1, -t), this;
        }
        rotate(t) {
          return (
            (function (t, e) {
              var n = Tt(t);
              (n[0] = Ct(n[0] + e)),
                (n = Pt(n)),
                (t.r = n[0]),
                (t.g = n[1]),
                (t.b = n[2]);
            })(this._rgb, t),
            this
          );
        }
      }
      function Gt(t) {
        return new zt(t);
      }
      function qt(t) {
        if (t && "object" === typeof t) {
          const e = t.toString();
          return (
            "[object CanvasPattern]" === e || "[object CanvasGradient]" === e
          );
        }
        return !1;
      }
      function Xt(t) {
        return qt(t) ? t : Gt(t);
      }
      function Zt(t) {
        return qt(t) ? t : Gt(t).saturate(0.5).darken(0.1).hexString();
      }
      const Kt = Object.create(null),
        $t = Object.create(null);
      function Qt(t, e) {
        if (!e) return t;
        const n = e.split(".");
        for (let r = 0, i = n.length; r < i; ++r) {
          const e = n[r];
          t = t[e] || (t[e] = Object.create(null));
        }
        return t;
      }
      function Jt(t, e, n) {
        return "string" === typeof e ? v(Qt(t, e), n) : v(Qt(t, ""), e);
      }
      var te = new (class {
        constructor(t) {
          (this.animation = void 0),
            (this.backgroundColor = "rgba(0,0,0,0.1)"),
            (this.borderColor = "rgba(0,0,0,0.1)"),
            (this.color = "#666"),
            (this.datasets = {}),
            (this.devicePixelRatio = (t) =>
              t.chart.platform.getDevicePixelRatio()),
            (this.elements = {}),
            (this.events = [
              "mousemove",
              "mouseout",
              "click",
              "touchstart",
              "touchmove",
            ]),
            (this.font = {
              family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
              size: 12,
              style: "normal",
              lineHeight: 1.2,
              weight: null,
            }),
            (this.hover = {}),
            (this.hoverBackgroundColor = (t, e) => Zt(e.backgroundColor)),
            (this.hoverBorderColor = (t, e) => Zt(e.borderColor)),
            (this.hoverColor = (t, e) => Zt(e.color)),
            (this.indexAxis = "x"),
            (this.interaction = {
              mode: "nearest",
              intersect: !0,
              includeInvisible: !1,
            }),
            (this.maintainAspectRatio = !0),
            (this.onHover = null),
            (this.onClick = null),
            (this.parsing = !0),
            (this.plugins = {}),
            (this.responsive = !0),
            (this.scale = void 0),
            (this.scales = {}),
            (this.showLine = !0),
            (this.drawActiveElementsOnTop = !0),
            this.describe(t);
        }
        set(t, e) {
          return Jt(this, t, e);
        }
        get(t) {
          return Qt(this, t);
        }
        describe(t, e) {
          return Jt($t, t, e);
        }
        override(t, e) {
          return Jt(Kt, t, e);
        }
        route(t, e, n, r) {
          const i = Qt(this, t),
            a = Qt(this, n),
            o = "_" + e;
          Object.defineProperties(i, {
            [o]: { value: i[e], writable: !0 },
            [e]: {
              enumerable: !0,
              get() {
                const t = this[o],
                  e = a[r];
                return s(t) ? Object.assign({}, e, t) : u(t, e);
              },
              set(t) {
                this[o] = t;
              },
            },
          });
        }
      })({
        _scriptable: (t) => !t.startsWith("on"),
        _indexable: (t) => "events" !== t,
        hover: { _fallback: "interaction" },
        interaction: { _scriptable: !1, _indexable: !1 },
      });
      function ee(t, e, n, r, i) {
        let a = e[i];
        return (
          a || ((a = e[i] = t.measureText(i).width), n.push(i)),
          a > r && (r = a),
          r
        );
      }
      function ne(t, e, n, r) {
        let i = ((r = r || {}).data = r.data || {}),
          a = (r.garbageCollect = r.garbageCollect || []);
        r.font !== e &&
          ((i = r.data = {}), (a = r.garbageCollect = []), (r.font = e)),
          t.save(),
          (t.font = e);
        let s = 0;
        const l = n.length;
        let c, u, d, h, f;
        for (c = 0; c < l; c++)
          if (((h = n[c]), void 0 !== h && null !== h && !0 !== o(h)))
            s = ee(t, i, a, s, h);
          else if (o(h))
            for (u = 0, d = h.length; u < d; u++)
              (f = h[u]),
                void 0 === f || null === f || o(f) || (s = ee(t, i, a, s, f));
        t.restore();
        const p = a.length / 2;
        if (p > n.length) {
          for (c = 0; c < p; c++) delete i[a[c]];
          a.splice(0, p);
        }
        return s;
      }
      function re(t, e, n) {
        const r = t.currentDevicePixelRatio,
          i = 0 !== n ? Math.max(n / 2, 0.5) : 0;
        return Math.round((e - i) * r) / r + i;
      }
      function ie(t, e) {
        (e = e || t.getContext("2d")).save(),
          e.resetTransform(),
          e.clearRect(0, 0, t.width, t.height),
          e.restore();
      }
      function ae(t, e, n, r) {
        oe(t, e, n, r, null);
      }
      function oe(t, e, n, r, i) {
        let a, o, s, l, c, u;
        const d = e.pointStyle,
          h = e.rotation,
          f = e.radius;
        let p = (h || 0) * P;
        if (
          d &&
          "object" === typeof d &&
          ((a = d.toString()),
          "[object HTMLImageElement]" === a ||
            "[object HTMLCanvasElement]" === a)
        )
          return (
            t.save(),
            t.translate(n, r),
            t.rotate(p),
            t.drawImage(d, -d.width / 2, -d.height / 2, d.width, d.height),
            void t.restore()
          );
        if (!(isNaN(f) || f <= 0)) {
          switch ((t.beginPath(), d)) {
            default:
              i ? t.ellipse(n, r, i / 2, f, 0, 0, R) : t.arc(n, r, f, 0, R),
                t.closePath();
              break;
            case "triangle":
              t.moveTo(n + Math.sin(p) * f, r - Math.cos(p) * f),
                (p += I),
                t.lineTo(n + Math.sin(p) * f, r - Math.cos(p) * f),
                (p += I),
                t.lineTo(n + Math.sin(p) * f, r - Math.cos(p) * f),
                t.closePath();
              break;
            case "rectRounded":
              (c = 0.516 * f),
                (l = f - c),
                (o = Math.cos(p + D) * l),
                (s = Math.sin(p + D) * l),
                t.arc(n - o, r - s, c, p - k, p - C),
                t.arc(n + s, r - o, c, p - C, p),
                t.arc(n + o, r + s, c, p, p + C),
                t.arc(n - s, r + o, c, p + C, p + k),
                t.closePath();
              break;
            case "rect":
              if (!h) {
                (l = Math.SQRT1_2 * f),
                  (u = i ? i / 2 : l),
                  t.rect(n - u, r - l, 2 * u, 2 * l);
                break;
              }
              p += D;
            case "rectRot":
              (o = Math.cos(p) * f),
                (s = Math.sin(p) * f),
                t.moveTo(n - o, r - s),
                t.lineTo(n + s, r - o),
                t.lineTo(n + o, r + s),
                t.lineTo(n - s, r + o),
                t.closePath();
              break;
            case "crossRot":
              p += D;
            case "cross":
              (o = Math.cos(p) * f),
                (s = Math.sin(p) * f),
                t.moveTo(n - o, r - s),
                t.lineTo(n + o, r + s),
                t.moveTo(n + s, r - o),
                t.lineTo(n - s, r + o);
              break;
            case "star":
              (o = Math.cos(p) * f),
                (s = Math.sin(p) * f),
                t.moveTo(n - o, r - s),
                t.lineTo(n + o, r + s),
                t.moveTo(n + s, r - o),
                t.lineTo(n - s, r + o),
                (p += D),
                (o = Math.cos(p) * f),
                (s = Math.sin(p) * f),
                t.moveTo(n - o, r - s),
                t.lineTo(n + o, r + s),
                t.moveTo(n + s, r - o),
                t.lineTo(n - s, r + o);
              break;
            case "line":
              (o = i ? i / 2 : Math.cos(p) * f),
                (s = Math.sin(p) * f),
                t.moveTo(n - o, r - s),
                t.lineTo(n + o, r + s);
              break;
            case "dash":
              t.moveTo(n, r),
                t.lineTo(n + Math.cos(p) * f, r + Math.sin(p) * f);
          }
          t.fill(), e.borderWidth > 0 && t.stroke();
        }
      }
      function se(t, e, n) {
        return (
          (n = n || 0.5),
          !e ||
            (t &&
              t.x > e.left - n &&
              t.x < e.right + n &&
              t.y > e.top - n &&
              t.y < e.bottom + n)
        );
      }
      function le(t, e) {
        t.save(),
          t.beginPath(),
          t.rect(e.left, e.top, e.right - e.left, e.bottom - e.top),
          t.clip();
      }
      function ce(t) {
        t.restore();
      }
      function ue(t, e, n, r, i) {
        if (!e) return t.lineTo(n.x, n.y);
        if ("middle" === i) {
          const r = (e.x + n.x) / 2;
          t.lineTo(r, e.y), t.lineTo(r, n.y);
        } else
          ("after" === i) !== !!r ? t.lineTo(e.x, n.y) : t.lineTo(n.x, e.y);
        t.lineTo(n.x, n.y);
      }
      function de(t, e, n, r) {
        if (!e) return t.lineTo(n.x, n.y);
        t.bezierCurveTo(
          r ? e.cp1x : e.cp2x,
          r ? e.cp1y : e.cp2y,
          r ? n.cp2x : n.cp1x,
          r ? n.cp2y : n.cp1y,
          n.x,
          n.y
        );
      }
      function he(t, e, n, r, i) {
        let s =
          arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {};
        const l = o(e) ? e : [e],
          c = s.strokeWidth > 0 && "" !== s.strokeColor;
        let u, d;
        for (
          t.save(),
            t.font = i.string,
            (function (t, e) {
              e.translation && t.translate(e.translation[0], e.translation[1]);
              a(e.rotation) || t.rotate(e.rotation);
              e.color && (t.fillStyle = e.color);
              e.textAlign && (t.textAlign = e.textAlign);
              e.textBaseline && (t.textBaseline = e.textBaseline);
            })(t, s),
            u = 0;
          u < l.length;
          ++u
        )
          (d = l[u]),
            c &&
              (s.strokeColor && (t.strokeStyle = s.strokeColor),
              a(s.strokeWidth) || (t.lineWidth = s.strokeWidth),
              t.strokeText(d, n, r, s.maxWidth)),
            t.fillText(d, n, r, s.maxWidth),
            fe(t, n, r, d, s),
            (r += i.lineHeight);
        t.restore();
      }
      function fe(t, e, n, r, i) {
        if (i.strikethrough || i.underline) {
          const a = t.measureText(r),
            o = e - a.actualBoundingBoxLeft,
            s = e + a.actualBoundingBoxRight,
            l = n - a.actualBoundingBoxAscent,
            c = n + a.actualBoundingBoxDescent,
            u = i.strikethrough ? (l + c) / 2 : c;
          (t.strokeStyle = t.fillStyle),
            t.beginPath(),
            (t.lineWidth = i.decorationWidth || 2),
            t.moveTo(o, u),
            t.lineTo(s, u),
            t.stroke();
        }
      }
      function pe(t, e) {
        const { x: n, y: r, w: i, h: a, radius: o } = e;
        t.arc(n + o.topLeft, r + o.topLeft, o.topLeft, -C, k, !0),
          t.lineTo(n, r + a - o.bottomLeft),
          t.arc(n + o.bottomLeft, r + a - o.bottomLeft, o.bottomLeft, k, C, !0),
          t.lineTo(n + i - o.bottomRight, r + a),
          t.arc(
            n + i - o.bottomRight,
            r + a - o.bottomRight,
            o.bottomRight,
            C,
            0,
            !0
          ),
          t.lineTo(n + i, r + o.topRight),
          t.arc(n + i - o.topRight, r + o.topRight, o.topRight, 0, -C, !0),
          t.lineTo(n + o.topLeft, r);
      }
      const me = new RegExp(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/),
        ge = new RegExp(
          /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/
        );
      function _e(t, e) {
        const n = ("" + t).match(me);
        if (!n || "normal" === n[1]) return 1.2 * e;
        switch (((t = +n[2]), n[3])) {
          case "px":
            return t;
          case "%":
            t /= 100;
        }
        return e * t;
      }
      const ve = (t) => +t || 0;
      function be(t, e) {
        const n = {},
          r = s(e),
          i = r ? Object.keys(e) : e,
          a = s(t) ? (r ? (n) => u(t[n], t[e[n]]) : (e) => t[e]) : () => t;
        for (const o of i) n[o] = ve(a(o));
        return n;
      }
      function ye(t) {
        return be(t, { top: "y", right: "x", bottom: "y", left: "x" });
      }
      function xe(t) {
        return be(t, ["topLeft", "topRight", "bottomLeft", "bottomRight"]);
      }
      function we(t) {
        const e = ye(t);
        return (e.width = e.left + e.right), (e.height = e.top + e.bottom), e;
      }
      function Me(t, e) {
        (t = t || {}), (e = e || te.font);
        let n = u(t.size, e.size);
        "string" === typeof n && (n = parseInt(n, 10));
        let r = u(t.style, e.style);
        r &&
          !("" + r).match(ge) &&
          (console.warn('Invalid font style specified: "' + r + '"'), (r = ""));
        const i = {
          family: u(t.family, e.family),
          lineHeight: _e(u(t.lineHeight, e.lineHeight), n),
          size: n,
          style: r,
          weight: u(t.weight, e.weight),
          string: "",
        };
        return (
          (i.string = (function (t) {
            return !t || a(t.size) || a(t.family)
              ? null
              : (t.style ? t.style + " " : "") +
                  (t.weight ? t.weight + " " : "") +
                  t.size +
                  "px " +
                  t.family;
          })(i)),
          i
        );
      }
      function Se(t, e, n, r) {
        let i,
          a,
          s,
          l = !0;
        for (i = 0, a = t.length; i < a; ++i)
          if (
            ((s = t[i]),
            void 0 !== s &&
              (void 0 !== e &&
                "function" === typeof s &&
                ((s = s(e)), (l = !1)),
              void 0 !== n && o(s) && ((s = s[n % s.length]), (l = !1)),
              void 0 !== s))
          )
            return r && !l && (r.cacheable = !1), s;
      }
      function Ae(t, e) {
        return Object.assign(Object.create(t), e);
      }
      function Ee(t) {
        let e =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : [""],
          n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : t,
          r = arguments.length > 3 ? arguments[3] : void 0,
          i =
            arguments.length > 4 && void 0 !== arguments[4]
              ? arguments[4]
              : () => t[0];
        S(r) || (r = Le("_fallback", t));
        const a = {
          [Symbol.toStringTag]: "Object",
          _cacheable: !0,
          _scopes: t,
          _rootScopes: n,
          _fallback: r,
          _getTarget: i,
          override: (i) => Ee([i, ...t], e, n, r),
        };
        return new Proxy(a, {
          deleteProperty: (e, n) => (
            delete e[n], delete e._keys, delete t[0][n], !0
          ),
          get: (n, r) =>
            Pe(n, r, () =>
              (function (t, e, n, r) {
                let i;
                for (const a of e)
                  if (((i = Le(Te(a, t), n)), S(i)))
                    return Oe(t, i) ? Be(n, r, t, i) : i;
              })(r, e, t, n)
            ),
          getOwnPropertyDescriptor: (t, e) =>
            Reflect.getOwnPropertyDescriptor(t._scopes[0], e),
          getPrototypeOf: () => Reflect.getPrototypeOf(t[0]),
          has: (t, e) => Ve(t).includes(e),
          ownKeys: (t) => Ve(t),
          set(t, e, n) {
            const r = t._storage || (t._storage = i());
            return (t[e] = r[e] = n), delete t._keys, !0;
          },
        });
      }
      function ke(t, e, n, r) {
        const i = {
          _cacheable: !1,
          _proxy: t,
          _context: e,
          _subProxy: n,
          _stack: new Set(),
          _descriptors: Re(t, r),
          setContext: (e) => ke(t, e, n, r),
          override: (i) => ke(t.override(i), e, n, r),
        };
        return new Proxy(i, {
          deleteProperty: (e, n) => (delete e[n], delete t[n], !0),
          get: (t, e, n) =>
            Pe(t, e, () =>
              (function (t, e, n) {
                const {
                  _proxy: r,
                  _context: i,
                  _subProxy: a,
                  _descriptors: l,
                } = t;
                let c = r[e];
                A(c) &&
                  l.isScriptable(e) &&
                  (c = (function (t, e, n, r) {
                    const {
                      _proxy: i,
                      _context: a,
                      _subProxy: o,
                      _stack: s,
                    } = n;
                    if (s.has(t))
                      throw new Error(
                        "Recursion detected: " +
                          Array.from(s).join("->") +
                          "->" +
                          t
                      );
                    s.add(t),
                      (e = e(a, o || r)),
                      s.delete(t),
                      Oe(t, e) && (e = Be(i._scopes, i, t, e));
                    return e;
                  })(e, c, t, n));
                o(c) &&
                  c.length &&
                  (c = (function (t, e, n, r) {
                    const {
                      _proxy: i,
                      _context: a,
                      _subProxy: o,
                      _descriptors: l,
                    } = n;
                    if (S(a.index) && r(t)) e = e[a.index % e.length];
                    else if (s(e[0])) {
                      const n = e,
                        r = i._scopes.filter((t) => t !== n);
                      e = [];
                      for (const s of n) {
                        const n = Be(r, i, t, s);
                        e.push(ke(n, a, o && o[t], l));
                      }
                    }
                    return e;
                  })(e, c, t, l.isIndexable));
                Oe(e, c) && (c = ke(c, i, a && a[e], l));
                return c;
              })(t, e, n)
            ),
          getOwnPropertyDescriptor: (e, n) =>
            e._descriptors.allKeys
              ? Reflect.has(t, n)
                ? { enumerable: !0, configurable: !0 }
                : void 0
              : Reflect.getOwnPropertyDescriptor(t, n),
          getPrototypeOf: () => Reflect.getPrototypeOf(t),
          has: (e, n) => Reflect.has(t, n),
          ownKeys: () => Reflect.ownKeys(t),
          set: (e, n, r) => ((t[n] = r), delete e[n], !0),
        });
      }
      function Re(t) {
        let e =
          arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : { scriptable: !0, indexable: !0 };
        const {
          _scriptable: n = e.scriptable,
          _indexable: r = e.indexable,
          _allKeys: i = e.allKeys,
        } = t;
        return {
          allKeys: i,
          scriptable: n,
          indexable: r,
          isScriptable: A(n) ? n : () => n,
          isIndexable: A(r) ? r : () => r,
        };
      }
      const Te = (t, e) => (t ? t + M(e) : e),
        Oe = (t, e) =>
          s(e) &&
          "adapters" !== t &&
          (null === Object.getPrototypeOf(e) || e.constructor === Object);
      function Pe(t, e, n) {
        if (Object.prototype.hasOwnProperty.call(t, e)) return t[e];
        const r = n();
        return (t[e] = r), r;
      }
      function Ce(t, e, n) {
        return A(t) ? t(e, n) : t;
      }
      const De = (t, e) =>
        !0 === t ? e : "string" === typeof t ? w(e, t) : void 0;
      function Ie(t, e, n, r, i) {
        for (const a of e) {
          const e = De(n, a);
          if (e) {
            t.add(e);
            const a = Ce(e._fallback, n, i);
            if (S(a) && a !== n && a !== r) return a;
          } else if (!1 === e && S(r) && n !== r) return null;
        }
        return !1;
      }
      function Be(t, e, n, r) {
        const i = e._rootScopes,
          a = Ce(e._fallback, n, r),
          l = [...t, ...i],
          c = new Set();
        c.add(r);
        let u = Ne(c, l, n, a || n, r);
        return (
          null !== u &&
          (!S(a) || a === n || ((u = Ne(c, l, a, u, r)), null !== u)) &&
          Ee(Array.from(c), [""], i, a, () =>
            (function (t, e, n) {
              const r = t._getTarget();
              e in r || (r[e] = {});
              const i = r[e];
              if (o(i) && s(n)) return n;
              return i;
            })(e, n, r)
          )
        );
      }
      function Ne(t, e, n, r, i) {
        for (; n; ) n = Ie(t, e, n, r, i);
        return n;
      }
      function Le(t, e) {
        for (const n of e) {
          if (!n) continue;
          const e = n[t];
          if (S(e)) return e;
        }
      }
      function Ve(t) {
        let e = t._keys;
        return (
          e ||
            (e = t._keys =
              (function (t) {
                const e = new Set();
                for (const n of t)
                  for (const t of Object.keys(n).filter(
                    (t) => !t.startsWith("_")
                  ))
                    e.add(t);
                return Array.from(e);
              })(t._scopes)),
          e
        );
      }
      function Fe(t, e, n, r) {
        const { iScale: i } = t,
          { key: a = "r" } = this._parsing,
          o = new Array(r);
        let s, l, c, u;
        for (s = 0, l = r; s < l; ++s)
          (c = s + n), (u = e[c]), (o[s] = { r: i.parse(w(u, a), c) });
        return o;
      }
      const He = Number.EPSILON || 1e-14,
        je = (t, e) => e < t.length && !t[e].skip && t[e],
        Ye = (t) => ("x" === t ? "y" : "x");
      function We(t, e, n, r) {
        const i = t.skip ? e : t,
          a = e,
          o = n.skip ? e : n,
          s = z(a, i),
          l = z(o, a);
        let c = s / (s + l),
          u = l / (s + l);
        (c = isNaN(c) ? 0 : c), (u = isNaN(u) ? 0 : u);
        const d = r * c,
          h = r * u;
        return {
          previous: { x: a.x - d * (o.x - i.x), y: a.y - d * (o.y - i.y) },
          next: { x: a.x + h * (o.x - i.x), y: a.y + h * (o.y - i.y) },
        };
      }
      function Ue(t) {
        let e =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x";
        const n = Ye(e),
          r = t.length,
          i = Array(r).fill(0),
          a = Array(r);
        let o,
          s,
          l,
          c = je(t, 0);
        for (o = 0; o < r; ++o)
          if (((s = l), (l = c), (c = je(t, o + 1)), l)) {
            if (c) {
              const t = c[e] - l[e];
              i[o] = 0 !== t ? (c[n] - l[n]) / t : 0;
            }
            a[o] = s
              ? c
                ? N(i[o - 1]) !== N(i[o])
                  ? 0
                  : (i[o - 1] + i[o]) / 2
                : i[o - 1]
              : i[o];
          }
        !(function (t, e, n) {
          const r = t.length;
          let i,
            a,
            o,
            s,
            l,
            c = je(t, 0);
          for (let u = 0; u < r - 1; ++u)
            (l = c),
              (c = je(t, u + 1)),
              l &&
                c &&
                (F(e[u], 0, He)
                  ? (n[u] = n[u + 1] = 0)
                  : ((i = n[u] / e[u]),
                    (a = n[u + 1] / e[u]),
                    (s = Math.pow(i, 2) + Math.pow(a, 2)),
                    s <= 9 ||
                      ((o = 3 / Math.sqrt(s)),
                      (n[u] = i * o * e[u]),
                      (n[u + 1] = a * o * e[u]))));
        })(t, i, a),
          (function (t, e) {
            let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : "x";
            const r = Ye(n),
              i = t.length;
            let a,
              o,
              s,
              l = je(t, 0);
            for (let c = 0; c < i; ++c) {
              if (((o = s), (s = l), (l = je(t, c + 1)), !s)) continue;
              const i = s[n],
                u = s[r];
              o &&
                ((a = (i - o[n]) / 3),
                (s["cp1".concat(n)] = i - a),
                (s["cp1".concat(r)] = u - a * e[c])),
                l &&
                  ((a = (l[n] - i) / 3),
                  (s["cp2".concat(n)] = i + a),
                  (s["cp2".concat(r)] = u + a * e[c]));
            }
          })(t, a, e);
      }
      function ze(t, e, n) {
        return Math.max(Math.min(t, n), e);
      }
      function Ge(t, e, n, r, i) {
        let a, o, s, l;
        if (
          (e.spanGaps && (t = t.filter((t) => !t.skip)),
          "monotone" === e.cubicInterpolationMode)
        )
          Ue(t, i);
        else {
          let n = r ? t[t.length - 1] : t[0];
          for (a = 0, o = t.length; a < o; ++a)
            (s = t[a]),
              (l = We(
                n,
                s,
                t[Math.min(a + 1, o - (r ? 0 : 1)) % o],
                e.tension
              )),
              (s.cp1x = l.previous.x),
              (s.cp1y = l.previous.y),
              (s.cp2x = l.next.x),
              (s.cp2y = l.next.y),
              (n = s);
        }
        e.capBezierPoints &&
          (function (t, e) {
            let n,
              r,
              i,
              a,
              o,
              s = se(t[0], e);
            for (n = 0, r = t.length; n < r; ++n)
              (o = a),
                (a = s),
                (s = n < r - 1 && se(t[n + 1], e)),
                a &&
                  ((i = t[n]),
                  o &&
                    ((i.cp1x = ze(i.cp1x, e.left, e.right)),
                    (i.cp1y = ze(i.cp1y, e.top, e.bottom))),
                  s &&
                    ((i.cp2x = ze(i.cp2x, e.left, e.right)),
                    (i.cp2y = ze(i.cp2y, e.top, e.bottom))));
          })(t, n);
      }
      function qe() {
        return "undefined" !== typeof window && "undefined" !== typeof document;
      }
      function Xe(t) {
        let e = t.parentNode;
        return e && "[object ShadowRoot]" === e.toString() && (e = e.host), e;
      }
      function Ze(t, e, n) {
        let r;
        return (
          "string" === typeof t
            ? ((r = parseInt(t, 10)),
              -1 !== t.indexOf("%") && (r = (r / 100) * e.parentNode[n]))
            : (r = t),
          r
        );
      }
      const Ke = (t) => window.getComputedStyle(t, null);
      const $e = ["top", "right", "bottom", "left"];
      function Qe(t, e, n) {
        const r = {};
        n = n ? "-" + n : "";
        for (let i = 0; i < 4; i++) {
          const a = $e[i];
          r[a] = parseFloat(t[e + "-" + a + n]) || 0;
        }
        return (r.width = r.left + r.right), (r.height = r.top + r.bottom), r;
      }
      const Je = (t, e, n) => (t > 0 || e > 0) && (!n || !n.shadowRoot);
      function tn(t, e) {
        if ("native" in t) return t;
        const { canvas: n, currentDevicePixelRatio: r } = e,
          i = Ke(n),
          a = "border-box" === i.boxSizing,
          o = Qe(i, "padding"),
          s = Qe(i, "border", "width"),
          {
            x: l,
            y: c,
            box: u,
          } = (function (t, e) {
            const n = t.touches,
              r = n && n.length ? n[0] : t,
              { offsetX: i, offsetY: a } = r;
            let o,
              s,
              l = !1;
            if (Je(i, a, t.target)) (o = i), (s = a);
            else {
              const t = e.getBoundingClientRect();
              (o = r.clientX - t.left), (s = r.clientY - t.top), (l = !0);
            }
            return { x: o, y: s, box: l };
          })(t, n),
          d = o.left + (u && s.left),
          h = o.top + (u && s.top);
        let { width: f, height: p } = e;
        return (
          a && ((f -= o.width + s.width), (p -= o.height + s.height)),
          {
            x: Math.round((((l - d) / f) * n.width) / r),
            y: Math.round((((c - h) / p) * n.height) / r),
          }
        );
      }
      const en = (t) => Math.round(10 * t) / 10;
      function nn(t, e, n, r) {
        const i = Ke(t),
          a = Qe(i, "margin"),
          o = Ze(i.maxWidth, t, "clientWidth") || O,
          s = Ze(i.maxHeight, t, "clientHeight") || O,
          l = (function (t, e, n) {
            let r, i;
            if (void 0 === e || void 0 === n) {
              const a = Xe(t);
              if (a) {
                const t = a.getBoundingClientRect(),
                  o = Ke(a),
                  s = Qe(o, "border", "width"),
                  l = Qe(o, "padding");
                (e = t.width - l.width - s.width),
                  (n = t.height - l.height - s.height),
                  (r = Ze(o.maxWidth, a, "clientWidth")),
                  (i = Ze(o.maxHeight, a, "clientHeight"));
              } else (e = t.clientWidth), (n = t.clientHeight);
            }
            return { width: e, height: n, maxWidth: r || O, maxHeight: i || O };
          })(t, e, n);
        let { width: c, height: u } = l;
        if ("content-box" === i.boxSizing) {
          const t = Qe(i, "border", "width"),
            e = Qe(i, "padding");
          (c -= e.width + t.width), (u -= e.height + t.height);
        }
        return (
          (c = Math.max(0, c - a.width)),
          (u = Math.max(0, r ? Math.floor(c / r) : u - a.height)),
          (c = en(Math.min(c, o, l.maxWidth))),
          (u = en(Math.min(u, s, l.maxHeight))),
          c && !u && (u = en(c / 2)),
          { width: c, height: u }
        );
      }
      function rn(t, e, n) {
        const r = e || 1,
          i = Math.floor(t.height * r),
          a = Math.floor(t.width * r);
        (t.height = i / r), (t.width = a / r);
        const o = t.canvas;
        return (
          o.style &&
            (n || (!o.style.height && !o.style.width)) &&
            ((o.style.height = "".concat(t.height, "px")),
            (o.style.width = "".concat(t.width, "px"))),
          (t.currentDevicePixelRatio !== r ||
            o.height !== i ||
            o.width !== a) &&
            ((t.currentDevicePixelRatio = r),
            (o.height = i),
            (o.width = a),
            t.ctx.setTransform(r, 0, 0, r, 0, 0),
            !0)
        );
      }
      const an = (function () {
        let t = !1;
        try {
          const e = {
            get passive() {
              return (t = !0), !1;
            },
          };
          window.addEventListener("test", null, e),
            window.removeEventListener("test", null, e);
        } catch (e) {}
        return t;
      })();
      function on(t, e) {
        const n = (function (t, e) {
            return Ke(t).getPropertyValue(e);
          })(t, e),
          r = n && n.match(/^(\d+)(\.\d+)?px$/);
        return r ? +r[1] : void 0;
      }
      function sn(t, e, n, r) {
        return { x: t.x + n * (e.x - t.x), y: t.y + n * (e.y - t.y) };
      }
      function ln(t, e, n, r) {
        return {
          x: t.x + n * (e.x - t.x),
          y:
            "middle" === r
              ? n < 0.5
                ? t.y
                : e.y
              : "after" === r
              ? n < 1
                ? t.y
                : e.y
              : n > 0
              ? e.y
              : t.y,
        };
      }
      function cn(t, e, n, r) {
        const i = { x: t.cp2x, y: t.cp2y },
          a = { x: e.cp1x, y: e.cp1y },
          o = sn(t, i, n),
          s = sn(i, a, n),
          l = sn(a, e, n),
          c = sn(o, s, n),
          u = sn(s, l, n);
        return sn(c, u, n);
      }
      const un = new Map();
      function dn(t, e, n) {
        return (function (t, e) {
          e = e || {};
          const n = t + JSON.stringify(e);
          let r = un.get(n);
          return r || ((r = new Intl.NumberFormat(t, e)), un.set(n, r)), r;
        })(e, n).format(t);
      }
      function hn(t, e, n) {
        return t
          ? (function (t, e) {
              return {
                x: (n) => t + t + e - n,
                setWidth(t) {
                  e = t;
                },
                textAlign: (t) =>
                  "center" === t ? t : "right" === t ? "left" : "right",
                xPlus: (t, e) => t - e,
                leftForLtr: (t, e) => t - e,
              };
            })(e, n)
          : {
              x: (t) => t,
              setWidth(t) {},
              textAlign: (t) => t,
              xPlus: (t, e) => t + e,
              leftForLtr: (t, e) => t,
            };
      }
      function fn(t, e) {
        let n, r;
        ("ltr" !== e && "rtl" !== e) ||
          ((n = t.canvas.style),
          (r = [
            n.getPropertyValue("direction"),
            n.getPropertyPriority("direction"),
          ]),
          n.setProperty("direction", e, "important"),
          (t.prevTextDirection = r));
      }
      function pn(t, e) {
        void 0 !== e &&
          (delete t.prevTextDirection,
          t.canvas.style.setProperty("direction", e[0], e[1]));
      }
      function mn(t) {
        return "angle" === t
          ? { between: X, compare: G, normalize: q }
          : { between: K, compare: (t, e) => t - e, normalize: (t) => t };
      }
      function gn(t) {
        let { start: e, end: n, count: r, loop: i, style: a } = t;
        return {
          start: e % r,
          end: n % r,
          loop: i && (n - e + 1) % r === 0,
          style: a,
        };
      }
      function _n(t, e, n) {
        if (!n) return [t];
        const { property: r, start: i, end: a } = n,
          o = e.length,
          { compare: s, between: l, normalize: c } = mn(r),
          {
            start: u,
            end: d,
            loop: h,
            style: f,
          } = (function (t, e, n) {
            const { property: r, start: i, end: a } = n,
              { between: o, normalize: s } = mn(r),
              l = e.length;
            let c,
              u,
              { start: d, end: h, loop: f } = t;
            if (f) {
              for (
                d += l, h += l, c = 0, u = l;
                c < u && o(s(e[d % l][r]), i, a);
                ++c
              )
                d--, h--;
              (d %= l), (h %= l);
            }
            return (
              h < d && (h += l), { start: d, end: h, loop: f, style: t.style }
            );
          })(t, e, n),
          p = [];
        let m,
          g,
          _,
          v = !1,
          b = null;
        const y = () => v || (l(i, _, m) && 0 !== s(i, _)),
          x = () => !v || 0 === s(a, m) || l(a, _, m);
        for (let w = u, M = u; w <= d; ++w)
          (g = e[w % o]),
            g.skip ||
              ((m = c(g[r])),
              m !== _ &&
                ((v = l(m, i, a)),
                null === b && y() && (b = 0 === s(m, i) ? w : M),
                null !== b &&
                  x() &&
                  (p.push(
                    gn({ start: b, end: w, loop: h, count: o, style: f })
                  ),
                  (b = null)),
                (M = w),
                (_ = m)));
        return (
          null !== b &&
            p.push(gn({ start: b, end: d, loop: h, count: o, style: f })),
          p
        );
      }
      function vn(t, e) {
        const n = [],
          r = t.segments;
        for (let i = 0; i < r.length; i++) {
          const a = _n(r[i], t.points, e);
          a.length && n.push(...a);
        }
        return n;
      }
      function bn(t, e, n, r) {
        return r && r.setContext && n
          ? (function (t, e, n, r) {
              const i = t._chart.getContext(),
                a = yn(t.options),
                {
                  _datasetIndex: o,
                  options: { spanGaps: s },
                } = t,
                l = n.length,
                c = [];
              let u = a,
                d = e[0].start,
                h = d;
              function f(t, e, r, i) {
                const a = s ? -1 : 1;
                if (t !== e) {
                  for (t += l; n[t % l].skip; ) t -= a;
                  for (; n[e % l].skip; ) e += a;
                  t % l !== e % l &&
                    (c.push({ start: t % l, end: e % l, loop: r, style: i }),
                    (u = i),
                    (d = e % l));
                }
              }
              for (const p of e) {
                d = s ? d : p.start;
                let t,
                  e = n[d % l];
                for (h = d + 1; h <= p.end; h++) {
                  const a = n[h % l];
                  (t = yn(
                    r.setContext(
                      Ae(i, {
                        type: "segment",
                        p0: e,
                        p1: a,
                        p0DataIndex: (h - 1) % l,
                        p1DataIndex: h % l,
                        datasetIndex: o,
                      })
                    )
                  )),
                    xn(t, u) && f(d, h - 1, p.loop, u),
                    (e = a),
                    (u = t);
                }
                d < h - 1 && f(d, h - 1, p.loop, u);
              }
              return c;
            })(t, e, n, r)
          : e;
      }
      function yn(t) {
        return {
          backgroundColor: t.backgroundColor,
          borderCapStyle: t.borderCapStyle,
          borderDash: t.borderDash,
          borderDashOffset: t.borderDashOffset,
          borderJoinStyle: t.borderJoinStyle,
          borderWidth: t.borderWidth,
          borderColor: t.borderColor,
        };
      }
      function xn(t, e) {
        return e && JSON.stringify(t) !== JSON.stringify(e);
      }
      var wn = new (class {
        constructor() {
          (this._request = null),
            (this._charts = new Map()),
            (this._running = !1),
            (this._lastDate = void 0);
        }
        _notify(t, e, n, r) {
          const i = e.listeners[r],
            a = e.duration;
          i.forEach((r) =>
            r({
              chart: t,
              initial: e.initial,
              numSteps: a,
              currentStep: Math.min(n - e.start, a),
            })
          );
        }
        _refresh() {
          this._request ||
            ((this._running = !0),
            (this._request = rt.call(window, () => {
              this._update(),
                (this._request = null),
                this._running && this._refresh();
            })));
        }
        _update() {
          let t =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : Date.now(),
            e = 0;
          this._charts.forEach((n, r) => {
            if (!n.running || !n.items.length) return;
            const i = n.items;
            let a,
              o = i.length - 1,
              s = !1;
            for (; o >= 0; --o)
              (a = i[o]),
                a._active
                  ? (a._total > n.duration && (n.duration = a._total),
                    a.tick(t),
                    (s = !0))
                  : ((i[o] = i[i.length - 1]), i.pop());
            s && (r.draw(), this._notify(r, n, t, "progress")),
              i.length ||
                ((n.running = !1),
                this._notify(r, n, t, "complete"),
                (n.initial = !1)),
              (e += i.length);
          }),
            (this._lastDate = t),
            0 === e && (this._running = !1);
        }
        _getAnims(t) {
          const e = this._charts;
          let n = e.get(t);
          return (
            n ||
              ((n = {
                running: !1,
                initial: !0,
                items: [],
                listeners: { complete: [], progress: [] },
              }),
              e.set(t, n)),
            n
          );
        }
        listen(t, e, n) {
          this._getAnims(t).listeners[e].push(n);
        }
        add(t, e) {
          e && e.length && this._getAnims(t).items.push(...e);
        }
        has(t) {
          return this._getAnims(t).items.length > 0;
        }
        start(t) {
          const e = this._charts.get(t);
          e &&
            ((e.running = !0),
            (e.start = Date.now()),
            (e.duration = e.items.reduce(
              (t, e) => Math.max(t, e._duration),
              0
            )),
            this._refresh());
        }
        running(t) {
          if (!this._running) return !1;
          const e = this._charts.get(t);
          return !!(e && e.running && e.items.length);
        }
        stop(t) {
          const e = this._charts.get(t);
          if (!e || !e.items.length) return;
          const n = e.items;
          let r = n.length - 1;
          for (; r >= 0; --r) n[r].cancel();
          (e.items = []), this._notify(t, e, Date.now(), "complete");
        }
        remove(t) {
          return this._charts.delete(t);
        }
      })();
      const Mn = "transparent",
        Sn = {
          boolean: (t, e, n) => (n > 0.5 ? e : t),
          color(t, e, n) {
            const r = Xt(t || Mn),
              i = r.valid && Xt(e || Mn);
            return i && i.valid ? i.mix(r, n).hexString() : e;
          },
          number: (t, e, n) => t + (e - t) * n,
        };
      class An {
        constructor(t, e, n, r) {
          const i = e[n];
          r = Se([t.to, r, i, t.from]);
          const a = Se([t.from, i, r]);
          (this._active = !0),
            (this._fn = t.fn || Sn[t.type || typeof a]),
            (this._easing = ht[t.easing] || ht.linear),
            (this._start = Math.floor(Date.now() + (t.delay || 0))),
            (this._duration = this._total = Math.floor(t.duration)),
            (this._loop = !!t.loop),
            (this._target = e),
            (this._prop = n),
            (this._from = a),
            (this._to = r),
            (this._promises = void 0);
        }
        active() {
          return this._active;
        }
        update(t, e, n) {
          if (this._active) {
            this._notify(!1);
            const r = this._target[this._prop],
              i = n - this._start,
              a = this._duration - i;
            (this._start = n),
              (this._duration = Math.floor(Math.max(a, t.duration))),
              (this._total += i),
              (this._loop = !!t.loop),
              (this._to = Se([t.to, e, r, t.from])),
              (this._from = Se([t.from, r, e]));
          }
        }
        cancel() {
          this._active &&
            (this.tick(Date.now()), (this._active = !1), this._notify(!1));
        }
        tick(t) {
          const e = t - this._start,
            n = this._duration,
            r = this._prop,
            i = this._from,
            a = this._loop,
            o = this._to;
          let s;
          if (((this._active = i !== o && (a || e < n)), !this._active))
            return (this._target[r] = o), void this._notify(!0);
          e < 0
            ? (this._target[r] = i)
            : ((s = (e / n) % 2),
              (s = a && s > 1 ? 2 - s : s),
              (s = this._easing(Math.min(1, Math.max(0, s)))),
              (this._target[r] = this._fn(i, o, s)));
        }
        wait() {
          const t = this._promises || (this._promises = []);
          return new Promise((e, n) => {
            t.push({ res: e, rej: n });
          });
        }
        _notify(t) {
          const e = t ? "res" : "rej",
            n = this._promises || [];
          for (let r = 0; r < n.length; r++) n[r][e]();
        }
      }
      te.set("animation", {
        delay: void 0,
        duration: 1e3,
        easing: "easeOutQuart",
        fn: void 0,
        from: void 0,
        loop: void 0,
        to: void 0,
        type: void 0,
      });
      const En = Object.keys(te.animation);
      te.describe("animation", {
        _fallback: !1,
        _indexable: !1,
        _scriptable: (t) =>
          "onProgress" !== t && "onComplete" !== t && "fn" !== t,
      }),
        te.set("animations", {
          colors: {
            type: "color",
            properties: ["color", "borderColor", "backgroundColor"],
          },
          numbers: {
            type: "number",
            properties: ["x", "y", "borderWidth", "radius", "tension"],
          },
        }),
        te.describe("animations", { _fallback: "animation" }),
        te.set("transitions", {
          active: { animation: { duration: 400 } },
          resize: { animation: { duration: 0 } },
          show: {
            animations: {
              colors: { from: "transparent" },
              visible: { type: "boolean", duration: 0 },
            },
          },
          hide: {
            animations: {
              colors: { to: "transparent" },
              visible: { type: "boolean", easing: "linear", fn: (t) => 0 | t },
            },
          },
        });
      class kn {
        constructor(t, e) {
          (this._chart = t), (this._properties = new Map()), this.configure(e);
        }
        configure(t) {
          if (!s(t)) return;
          const e = this._properties;
          Object.getOwnPropertyNames(t).forEach((n) => {
            const r = t[n];
            if (!s(r)) return;
            const i = {};
            for (const t of En) i[t] = r[t];
            ((o(r.properties) && r.properties) || [n]).forEach((t) => {
              (t !== n && e.has(t)) || e.set(t, i);
            });
          });
        }
        _animateOptions(t, e) {
          const n = e.options,
            r = (function (t, e) {
              if (!e) return;
              let n = t.options;
              if (!n) return void (t.options = e);
              n.$shared &&
                (t.options = n =
                  Object.assign({}, n, { $shared: !1, $animations: {} }));
              return n;
            })(t, n);
          if (!r) return [];
          const i = this._createAnimations(r, n);
          return (
            n.$shared &&
              (function (t, e) {
                const n = [],
                  r = Object.keys(e);
                for (let i = 0; i < r.length; i++) {
                  const e = t[r[i]];
                  e && e.active() && n.push(e.wait());
                }
                return Promise.all(n);
              })(t.options.$animations, n).then(
                () => {
                  t.options = n;
                },
                () => {}
              ),
            i
          );
        }
        _createAnimations(t, e) {
          const n = this._properties,
            r = [],
            i = t.$animations || (t.$animations = {}),
            a = Object.keys(e),
            o = Date.now();
          let s;
          for (s = a.length - 1; s >= 0; --s) {
            const l = a[s];
            if ("$" === l.charAt(0)) continue;
            if ("options" === l) {
              r.push(...this._animateOptions(t, e));
              continue;
            }
            const c = e[l];
            let u = i[l];
            const d = n.get(l);
            if (u) {
              if (d && u.active()) {
                u.update(d, c, o);
                continue;
              }
              u.cancel();
            }
            d && d.duration
              ? ((i[l] = u = new An(d, t, l, c)), r.push(u))
              : (t[l] = c);
          }
          return r;
        }
        update(t, e) {
          if (0 === this._properties.size) return void Object.assign(t, e);
          const n = this._createAnimations(t, e);
          return n.length ? (wn.add(this._chart, n), !0) : void 0;
        }
      }
      function Rn(t, e) {
        const n = (t && t.options) || {},
          r = n.reverse,
          i = void 0 === n.min ? e : 0,
          a = void 0 === n.max ? e : 0;
        return { start: r ? a : i, end: r ? i : a };
      }
      function Tn(t, e) {
        const n = [],
          r = t._getSortedDatasetMetas(e);
        let i, a;
        for (i = 0, a = r.length; i < a; ++i) n.push(r[i].index);
        return n;
      }
      function On(t, e, n) {
        let r =
          arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
        const i = t.keys,
          a = "single" === r.mode;
        let o, s, c, u;
        if (null !== e) {
          for (o = 0, s = i.length; o < s; ++o) {
            if (((c = +i[o]), c === n)) {
              if (r.all) continue;
              break;
            }
            (u = t.values[c]),
              l(u) && (a || 0 === e || N(e) === N(u)) && (e += u);
          }
          return e;
        }
      }
      function Pn(t, e) {
        const n = t && t.options.stacked;
        return n || (void 0 === n && void 0 !== e.stack);
      }
      function Cn(t, e, n) {
        const r = t[e] || (t[e] = {});
        return r[n] || (r[n] = {});
      }
      function Dn(t, e, n, r) {
        for (const i of e.getMatchingVisibleMetas(r).reverse()) {
          const e = t[i.index];
          if ((n && e > 0) || (!n && e < 0)) return i.index;
        }
        return null;
      }
      function In(t, e) {
        const { chart: n, _cachedMeta: r } = t,
          i = n._stacks || (n._stacks = {}),
          { iScale: a, vScale: o, index: s } = r,
          l = a.axis,
          c = o.axis,
          u = (function (t, e, n) {
            return ""
              .concat(t.id, ".")
              .concat(e.id, ".")
              .concat(n.stack || n.type);
          })(a, o, r),
          d = e.length;
        let h;
        for (let f = 0; f < d; ++f) {
          const t = e[f],
            { [l]: n, [c]: a } = t;
          (h = (t._stacks || (t._stacks = {}))[c] = Cn(i, u, n)),
            (h[s] = a),
            (h._top = Dn(h, o, !0, r.type)),
            (h._bottom = Dn(h, o, !1, r.type));
        }
      }
      function Bn(t, e) {
        const n = t.scales;
        return Object.keys(n)
          .filter((t) => n[t].axis === e)
          .shift();
      }
      function Nn(t, e) {
        const n = t.controller.index,
          r = t.vScale && t.vScale.axis;
        if (r) {
          e = e || t._parsed;
          for (const t of e) {
            const e = t._stacks;
            if (!e || void 0 === e[r] || void 0 === e[r][n]) return;
            delete e[r][n];
          }
        }
      }
      const Ln = (t) => "reset" === t || "none" === t,
        Vn = (t, e) => (e ? t : Object.assign({}, t));
      class Fn {
        constructor(t, e) {
          (this.chart = t),
            (this._ctx = t.ctx),
            (this.index = e),
            (this._cachedDataOpts = {}),
            (this._cachedMeta = this.getMeta()),
            (this._type = this._cachedMeta.type),
            (this.options = void 0),
            (this._parsing = !1),
            (this._data = void 0),
            (this._objectData = void 0),
            (this._sharedOptions = void 0),
            (this._drawStart = void 0),
            (this._drawCount = void 0),
            (this.enableOptionSharing = !1),
            (this.supportsDecimation = !1),
            (this.$context = void 0),
            (this._syncList = []),
            this.initialize();
        }
        initialize() {
          const t = this._cachedMeta;
          this.configure(),
            this.linkScales(),
            (t._stacked = Pn(t.vScale, t)),
            this.addElements();
        }
        updateIndex(t) {
          this.index !== t && Nn(this._cachedMeta), (this.index = t);
        }
        linkScales() {
          const t = this.chart,
            e = this._cachedMeta,
            n = this.getDataset(),
            r = (t, e, n, r) => ("x" === t ? e : "r" === t ? r : n),
            i = (e.xAxisID = u(n.xAxisID, Bn(t, "x"))),
            a = (e.yAxisID = u(n.yAxisID, Bn(t, "y"))),
            o = (e.rAxisID = u(n.rAxisID, Bn(t, "r"))),
            s = e.indexAxis,
            l = (e.iAxisID = r(s, i, a, o)),
            c = (e.vAxisID = r(s, a, i, o));
          (e.xScale = this.getScaleForId(i)),
            (e.yScale = this.getScaleForId(a)),
            (e.rScale = this.getScaleForId(o)),
            (e.iScale = this.getScaleForId(l)),
            (e.vScale = this.getScaleForId(c));
        }
        getDataset() {
          return this.chart.data.datasets[this.index];
        }
        getMeta() {
          return this.chart.getDatasetMeta(this.index);
        }
        getScaleForId(t) {
          return this.chart.scales[t];
        }
        _getOtherScale(t) {
          const e = this._cachedMeta;
          return t === e.iScale ? e.vScale : e.iScale;
        }
        reset() {
          this._update("reset");
        }
        _destroy() {
          const t = this._cachedMeta;
          this._data && et(this._data, this), t._stacked && Nn(t);
        }
        _dataCheck() {
          const t = this.getDataset(),
            e = t.data || (t.data = []),
            n = this._data;
          if (s(e))
            this._data = (function (t) {
              const e = Object.keys(t),
                n = new Array(e.length);
              let r, i, a;
              for (r = 0, i = e.length; r < i; ++r)
                (a = e[r]), (n[r] = { x: a, y: t[a] });
              return n;
            })(e);
          else if (n !== e) {
            if (n) {
              et(n, this);
              const t = this._cachedMeta;
              Nn(t), (t._parsed = []);
            }
            e &&
              Object.isExtensible(e) &&
              ((i = this),
              (r = e)._chartjs
                ? r._chartjs.listeners.push(i)
                : (Object.defineProperty(r, "_chartjs", {
                    configurable: !0,
                    enumerable: !1,
                    value: { listeners: [i] },
                  }),
                  tt.forEach((t) => {
                    const e = "_onData" + M(t),
                      n = r[t];
                    Object.defineProperty(r, t, {
                      configurable: !0,
                      enumerable: !1,
                      value() {
                        for (
                          var t = arguments.length, i = new Array(t), a = 0;
                          a < t;
                          a++
                        )
                          i[a] = arguments[a];
                        const o = n.apply(this, i);
                        return (
                          r._chartjs.listeners.forEach((t) => {
                            "function" === typeof t[e] && t[e](...i);
                          }),
                          o
                        );
                      },
                    });
                  }))),
              (this._syncList = []),
              (this._data = e);
          }
          var r, i;
        }
        addElements() {
          const t = this._cachedMeta;
          this._dataCheck(),
            this.datasetElementType &&
              (t.dataset = new this.datasetElementType());
        }
        buildOrUpdateElements(t) {
          const e = this._cachedMeta,
            n = this.getDataset();
          let r = !1;
          this._dataCheck();
          const i = e._stacked;
          (e._stacked = Pn(e.vScale, e)),
            e.stack !== n.stack && ((r = !0), Nn(e), (e.stack = n.stack)),
            this._resyncElements(t),
            (r || i !== e._stacked) && In(this, e._parsed);
        }
        configure() {
          const t = this.chart.config,
            e = t.datasetScopeKeys(this._type),
            n = t.getOptionScopes(this.getDataset(), e, !0);
          (this.options = t.createResolver(n, this.getContext())),
            (this._parsing = this.options.parsing),
            (this._cachedDataOpts = {});
        }
        parse(t, e) {
          const { _cachedMeta: n, _data: r } = this,
            { iScale: i, _stacked: a } = n,
            l = i.axis;
          let c,
            u,
            d,
            h = (0 === t && e === r.length) || n._sorted,
            f = t > 0 && n._parsed[t - 1];
          if (!1 === this._parsing) (n._parsed = r), (n._sorted = !0), (d = r);
          else {
            d = o(r[t])
              ? this.parseArrayData(n, r, t, e)
              : s(r[t])
              ? this.parseObjectData(n, r, t, e)
              : this.parsePrimitiveData(n, r, t, e);
            const i = () => null === u[l] || (f && u[l] < f[l]);
            for (c = 0; c < e; ++c)
              (n._parsed[c + t] = u = d[c]), h && (i() && (h = !1), (f = u));
            n._sorted = h;
          }
          a && In(this, d);
        }
        parsePrimitiveData(t, e, n, r) {
          const { iScale: i, vScale: a } = t,
            o = i.axis,
            s = a.axis,
            l = i.getLabels(),
            c = i === a,
            u = new Array(r);
          let d, h, f;
          for (d = 0, h = r; d < h; ++d)
            (f = d + n),
              (u[d] = { [o]: c || i.parse(l[f], f), [s]: a.parse(e[f], f) });
          return u;
        }
        parseArrayData(t, e, n, r) {
          const { xScale: i, yScale: a } = t,
            o = new Array(r);
          let s, l, c, u;
          for (s = 0, l = r; s < l; ++s)
            (c = s + n),
              (u = e[c]),
              (o[s] = { x: i.parse(u[0], c), y: a.parse(u[1], c) });
          return o;
        }
        parseObjectData(t, e, n, r) {
          const { xScale: i, yScale: a } = t,
            { xAxisKey: o = "x", yAxisKey: s = "y" } = this._parsing,
            l = new Array(r);
          let c, u, d, h;
          for (c = 0, u = r; c < u; ++c)
            (d = c + n),
              (h = e[d]),
              (l[c] = { x: i.parse(w(h, o), d), y: a.parse(w(h, s), d) });
          return l;
        }
        getParsed(t) {
          return this._cachedMeta._parsed[t];
        }
        getDataElement(t) {
          return this._cachedMeta.data[t];
        }
        applyStack(t, e, n) {
          const r = this.chart,
            i = this._cachedMeta,
            a = e[t.axis];
          return On(
            { keys: Tn(r, !0), values: e._stacks[t.axis] },
            a,
            i.index,
            { mode: n }
          );
        }
        updateRangeFromParsed(t, e, n, r) {
          const i = n[e.axis];
          let a = null === i ? NaN : i;
          const o = r && n._stacks[e.axis];
          r && o && ((r.values = o), (a = On(r, i, this._cachedMeta.index))),
            (t.min = Math.min(t.min, a)),
            (t.max = Math.max(t.max, a));
        }
        getMinMax(t, e) {
          const n = this._cachedMeta,
            r = n._parsed,
            i = n._sorted && t === n.iScale,
            a = r.length,
            o = this._getOtherScale(t),
            s = ((t, e, n) =>
              t &&
              !e.hidden &&
              e._stacked && { keys: Tn(n, !0), values: null })(
              e,
              n,
              this.chart
            ),
            c = {
              min: Number.POSITIVE_INFINITY,
              max: Number.NEGATIVE_INFINITY,
            },
            { min: u, max: d } = (function (t) {
              const {
                min: e,
                max: n,
                minDefined: r,
                maxDefined: i,
              } = t.getUserBounds();
              return {
                min: r ? e : Number.NEGATIVE_INFINITY,
                max: i ? n : Number.POSITIVE_INFINITY,
              };
            })(o);
          let h, f;
          function p() {
            f = r[h];
            const e = f[o.axis];
            return !l(f[t.axis]) || u > e || d < e;
          }
          for (
            h = 0;
            h < a && (p() || (this.updateRangeFromParsed(c, t, f, s), !i));
            ++h
          );
          if (i)
            for (h = a - 1; h >= 0; --h)
              if (!p()) {
                this.updateRangeFromParsed(c, t, f, s);
                break;
              }
          return c;
        }
        getAllParsedValues(t) {
          const e = this._cachedMeta._parsed,
            n = [];
          let r, i, a;
          for (r = 0, i = e.length; r < i; ++r)
            (a = e[r][t.axis]), l(a) && n.push(a);
          return n;
        }
        getMaxOverflow() {
          return !1;
        }
        getLabelAndValue(t) {
          const e = this._cachedMeta,
            n = e.iScale,
            r = e.vScale,
            i = this.getParsed(t);
          return {
            label: n ? "" + n.getLabelForValue(i[n.axis]) : "",
            value: r ? "" + r.getLabelForValue(i[r.axis]) : "",
          };
        }
        _update(t) {
          const e = this._cachedMeta;
          this.update(t || "default"),
            (e._clip = (function (t) {
              let e, n, r, i;
              return (
                s(t)
                  ? ((e = t.top), (n = t.right), (r = t.bottom), (i = t.left))
                  : (e = n = r = i = t),
                { top: e, right: n, bottom: r, left: i, disabled: !1 === t }
              );
            })(
              u(
                this.options.clip,
                (function (t, e, n) {
                  if (!1 === n) return !1;
                  const r = Rn(t, n),
                    i = Rn(e, n);
                  return {
                    top: i.end,
                    right: r.end,
                    bottom: i.start,
                    left: r.start,
                  };
                })(e.xScale, e.yScale, this.getMaxOverflow())
              )
            ));
        }
        update(t) {}
        draw() {
          const t = this._ctx,
            e = this.chart,
            n = this._cachedMeta,
            r = n.data || [],
            i = e.chartArea,
            a = [],
            o = this._drawStart || 0,
            s = this._drawCount || r.length - o,
            l = this.options.drawActiveElementsOnTop;
          let c;
          for (n.dataset && n.dataset.draw(t, i, o, s), c = o; c < o + s; ++c) {
            const e = r[c];
            e.hidden || (e.active && l ? a.push(e) : e.draw(t, i));
          }
          for (c = 0; c < a.length; ++c) a[c].draw(t, i);
        }
        getStyle(t, e) {
          const n = e ? "active" : "default";
          return void 0 === t && this._cachedMeta.dataset
            ? this.resolveDatasetElementOptions(n)
            : this.resolveDataElementOptions(t || 0, n);
        }
        getContext(t, e, n) {
          const r = this.getDataset();
          let i;
          if (t >= 0 && t < this._cachedMeta.data.length) {
            const e = this._cachedMeta.data[t];
            (i =
              e.$context ||
              (e.$context = (function (t, e, n) {
                return Ae(t, {
                  active: !1,
                  dataIndex: e,
                  parsed: void 0,
                  raw: void 0,
                  element: n,
                  index: e,
                  mode: "default",
                  type: "data",
                });
              })(this.getContext(), t, e))),
              (i.parsed = this.getParsed(t)),
              (i.raw = r.data[t]),
              (i.index = i.dataIndex = t);
          } else
            (i =
              this.$context ||
              (this.$context = (function (t, e) {
                return Ae(t, {
                  active: !1,
                  dataset: void 0,
                  datasetIndex: e,
                  index: e,
                  mode: "default",
                  type: "dataset",
                });
              })(this.chart.getContext(), this.index))),
              (i.dataset = r),
              (i.index = i.datasetIndex = this.index);
          return (i.active = !!e), (i.mode = n), i;
        }
        resolveDatasetElementOptions(t) {
          return this._resolveElementOptions(this.datasetElementType.id, t);
        }
        resolveDataElementOptions(t, e) {
          return this._resolveElementOptions(this.dataElementType.id, e, t);
        }
        _resolveElementOptions(t) {
          let e =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "default",
            n = arguments.length > 2 ? arguments[2] : void 0;
          const r = "active" === e,
            i = this._cachedDataOpts,
            a = t + "-" + e,
            o = i[a],
            s = this.enableOptionSharing && S(n);
          if (o) return Vn(o, s);
          const l = this.chart.config,
            c = l.datasetElementScopeKeys(this._type, t),
            u = r ? ["".concat(t, "Hover"), "hover", t, ""] : [t, ""],
            d = l.getOptionScopes(this.getDataset(), c),
            h = Object.keys(te.elements[t]),
            f = l.resolveNamedOptions(d, h, () => this.getContext(n, r), u);
          return (
            f.$shared && ((f.$shared = s), (i[a] = Object.freeze(Vn(f, s)))), f
          );
        }
        _resolveAnimations(t, e, n) {
          const r = this.chart,
            i = this._cachedDataOpts,
            a = "animation-".concat(e),
            o = i[a];
          if (o) return o;
          let s;
          if (!1 !== r.options.animation) {
            const r = this.chart.config,
              i = r.datasetAnimationScopeKeys(this._type, e),
              a = r.getOptionScopes(this.getDataset(), i);
            s = r.createResolver(a, this.getContext(t, n, e));
          }
          const l = new kn(r, s && s.animations);
          return s && s._cacheable && (i[a] = Object.freeze(l)), l;
        }
        getSharedOptions(t) {
          if (t.$shared)
            return (
              this._sharedOptions ||
              (this._sharedOptions = Object.assign({}, t))
            );
        }
        includeOptions(t, e) {
          return !e || Ln(t) || this.chart._animationsDisabled;
        }
        _getSharedOptions(t, e) {
          const n = this.resolveDataElementOptions(t, e),
            r = this._sharedOptions,
            i = this.getSharedOptions(n),
            a = this.includeOptions(e, i) || i !== r;
          return (
            this.updateSharedOptions(i, e, n),
            { sharedOptions: i, includeOptions: a }
          );
        }
        updateElement(t, e, n, r) {
          Ln(r)
            ? Object.assign(t, n)
            : this._resolveAnimations(e, r).update(t, n);
        }
        updateSharedOptions(t, e, n) {
          t && !Ln(e) && this._resolveAnimations(void 0, e).update(t, n);
        }
        _setStyle(t, e, n, r) {
          t.active = r;
          const i = this.getStyle(e, r);
          this._resolveAnimations(e, n, r).update(t, {
            options: (!r && this.getSharedOptions(i)) || i,
          });
        }
        removeHoverStyle(t, e, n) {
          this._setStyle(t, n, "active", !1);
        }
        setHoverStyle(t, e, n) {
          this._setStyle(t, n, "active", !0);
        }
        _removeDatasetHoverStyle() {
          const t = this._cachedMeta.dataset;
          t && this._setStyle(t, void 0, "active", !1);
        }
        _setDatasetHoverStyle() {
          const t = this._cachedMeta.dataset;
          t && this._setStyle(t, void 0, "active", !0);
        }
        _resyncElements(t) {
          const e = this._data,
            n = this._cachedMeta.data;
          for (const [o, s, l] of this._syncList) this[o](s, l);
          this._syncList = [];
          const r = n.length,
            i = e.length,
            a = Math.min(i, r);
          a && this.parse(0, a),
            i > r
              ? this._insertElements(r, i - r, t)
              : i < r && this._removeElements(i, r - i);
        }
        _insertElements(t, e) {
          let n =
            !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          const r = this._cachedMeta,
            i = r.data,
            a = t + e;
          let o;
          const s = (t) => {
            for (t.length += e, o = t.length - 1; o >= a; o--) t[o] = t[o - e];
          };
          for (s(i), o = t; o < a; ++o) i[o] = new this.dataElementType();
          this._parsing && s(r._parsed),
            this.parse(t, e),
            n && this.updateElements(i, t, e, "reset");
        }
        updateElements(t, e, n, r) {}
        _removeElements(t, e) {
          const n = this._cachedMeta;
          if (this._parsing) {
            const r = n._parsed.splice(t, e);
            n._stacked && Nn(n, r);
          }
          n.data.splice(t, e);
        }
        _sync(t) {
          if (this._parsing) this._syncList.push(t);
          else {
            const [e, n, r] = t;
            this[e](n, r);
          }
          this.chart._dataChanges.push([this.index, ...t]);
        }
        _onDataPush() {
          const t = arguments.length;
          this._sync(["_insertElements", this.getDataset().data.length - t, t]);
        }
        _onDataPop() {
          this._sync(["_removeElements", this._cachedMeta.data.length - 1, 1]);
        }
        _onDataShift() {
          this._sync(["_removeElements", 0, 1]);
        }
        _onDataSplice(t, e) {
          e && this._sync(["_removeElements", t, e]);
          const n = arguments.length - 2;
          n && this._sync(["_insertElements", t, n]);
        }
        _onDataUnshift() {
          this._sync(["_insertElements", 0, arguments.length]);
        }
      }
      function Hn(t) {
        const e = t.iScale,
          n = (function (t, e) {
            if (!t._cache.$bar) {
              const n = t.getMatchingVisibleMetas(e);
              let r = [];
              for (let e = 0, i = n.length; e < i; e++)
                r = r.concat(n[e].controller.getAllParsedValues(t));
              t._cache.$bar = nt(r.sort((t, e) => t - e));
            }
            return t._cache.$bar;
          })(e, t.type);
        let r,
          i,
          a,
          o,
          s = e._length;
        const l = () => {
          32767 !== a &&
            -32768 !== a &&
            (S(o) && (s = Math.min(s, Math.abs(a - o) || s)), (o = a));
        };
        for (r = 0, i = n.length; r < i; ++r)
          (a = e.getPixelForValue(n[r])), l();
        for (o = void 0, r = 0, i = e.ticks.length; r < i; ++r)
          (a = e.getPixelForTick(r)), l();
        return s;
      }
      function jn(t, e, n, r) {
        return (
          o(t)
            ? (function (t, e, n, r) {
                const i = n.parse(t[0], r),
                  a = n.parse(t[1], r),
                  o = Math.min(i, a),
                  s = Math.max(i, a);
                let l = o,
                  c = s;
                Math.abs(o) > Math.abs(s) && ((l = s), (c = o)),
                  (e[n.axis] = c),
                  (e._custom = {
                    barStart: l,
                    barEnd: c,
                    start: i,
                    end: a,
                    min: o,
                    max: s,
                  });
              })(t, e, n, r)
            : (e[n.axis] = n.parse(t, r)),
          e
        );
      }
      function Yn(t, e, n, r) {
        const i = t.iScale,
          a = t.vScale,
          o = i.getLabels(),
          s = i === a,
          l = [];
        let c, u, d, h;
        for (c = n, u = n + r; c < u; ++c)
          (h = e[c]),
            (d = {}),
            (d[i.axis] = s || i.parse(o[c], c)),
            l.push(jn(h, d, a, c));
        return l;
      }
      function Wn(t) {
        return t && void 0 !== t.barStart && void 0 !== t.barEnd;
      }
      function Un(t, e, n, r) {
        let i = e.borderSkipped;
        const a = {};
        if (!i) return void (t.borderSkipped = a);
        if (!0 === i)
          return void (t.borderSkipped = {
            top: !0,
            right: !0,
            bottom: !0,
            left: !0,
          });
        const {
          start: o,
          end: s,
          reverse: l,
          top: c,
          bottom: u,
        } = (function (t) {
          let e, n, r, i, a;
          return (
            t.horizontal
              ? ((e = t.base > t.x), (n = "left"), (r = "right"))
              : ((e = t.base < t.y), (n = "bottom"), (r = "top")),
            e ? ((i = "end"), (a = "start")) : ((i = "start"), (a = "end")),
            { start: n, end: r, reverse: e, top: i, bottom: a }
          );
        })(t);
        "middle" === i &&
          n &&
          ((t.enableBorderRadius = !0),
          (n._top || 0) === r
            ? (i = c)
            : (n._bottom || 0) === r
            ? (i = u)
            : ((a[zn(u, o, s, l)] = !0), (i = c))),
          (a[zn(i, o, s, l)] = !0),
          (t.borderSkipped = a);
      }
      function zn(t, e, n, r) {
        var i, a, o;
        return (
          r
            ? ((o = n),
              (t = Gn((t = (i = t) === (a = e) ? o : i === o ? a : i), n, e)))
            : (t = Gn(t, e, n)),
          t
        );
      }
      function Gn(t, e, n) {
        return "start" === t ? e : "end" === t ? n : t;
      }
      function qn(t, e, n) {
        let { inflateAmount: r } = e;
        t.inflateAmount = "auto" === r ? (1 === n ? 0.33 : 0) : r;
      }
      (Fn.defaults = {}),
        (Fn.prototype.datasetElementType = null),
        (Fn.prototype.dataElementType = null);
      class Xn extends Fn {
        parsePrimitiveData(t, e, n, r) {
          return Yn(t, e, n, r);
        }
        parseArrayData(t, e, n, r) {
          return Yn(t, e, n, r);
        }
        parseObjectData(t, e, n, r) {
          const { iScale: i, vScale: a } = t,
            { xAxisKey: o = "x", yAxisKey: s = "y" } = this._parsing,
            l = "x" === i.axis ? o : s,
            c = "x" === a.axis ? o : s,
            u = [];
          let d, h, f, p;
          for (d = n, h = n + r; d < h; ++d)
            (p = e[d]),
              (f = {}),
              (f[i.axis] = i.parse(w(p, l), d)),
              u.push(jn(w(p, c), f, a, d));
          return u;
        }
        updateRangeFromParsed(t, e, n, r) {
          super.updateRangeFromParsed(t, e, n, r);
          const i = n._custom;
          i &&
            e === this._cachedMeta.vScale &&
            ((t.min = Math.min(t.min, i.min)),
            (t.max = Math.max(t.max, i.max)));
        }
        getMaxOverflow() {
          return 0;
        }
        getLabelAndValue(t) {
          const e = this._cachedMeta,
            { iScale: n, vScale: r } = e,
            i = this.getParsed(t),
            a = i._custom,
            o = Wn(a)
              ? "[" + a.start + ", " + a.end + "]"
              : "" + r.getLabelForValue(i[r.axis]);
          return { label: "" + n.getLabelForValue(i[n.axis]), value: o };
        }
        initialize() {
          (this.enableOptionSharing = !0), super.initialize();
          this._cachedMeta.stack = this.getDataset().stack;
        }
        update(t) {
          const e = this._cachedMeta;
          this.updateElements(e.data, 0, e.data.length, t);
        }
        updateElements(t, e, n, r) {
          const i = "reset" === r,
            {
              index: o,
              _cachedMeta: { vScale: s },
            } = this,
            l = s.getBasePixel(),
            c = s.isHorizontal(),
            u = this._getRuler(),
            { sharedOptions: d, includeOptions: h } = this._getSharedOptions(
              e,
              r
            );
          for (let f = e; f < e + n; f++) {
            const e = this.getParsed(f),
              n =
                i || a(e[s.axis])
                  ? { base: l, head: l }
                  : this._calculateBarValuePixels(f),
              p = this._calculateBarIndexPixels(f, u),
              m = (e._stacks || {})[s.axis],
              g = {
                horizontal: c,
                base: n.base,
                enableBorderRadius:
                  !m || Wn(e._custom) || o === m._top || o === m._bottom,
                x: c ? n.head : p.center,
                y: c ? p.center : n.head,
                height: c ? p.size : Math.abs(n.size),
                width: c ? Math.abs(n.size) : p.size,
              };
            h &&
              (g.options =
                d ||
                this.resolveDataElementOptions(f, t[f].active ? "active" : r));
            const _ = g.options || t[f].options;
            Un(g, _, m, o),
              qn(g, _, u.ratio),
              this.updateElement(t[f], f, g, r);
          }
        }
        _getStacks(t, e) {
          const { iScale: n } = this._cachedMeta,
            r = n
              .getMatchingVisibleMetas(this._type)
              .filter((t) => t.controller.options.grouped),
            i = n.options.stacked,
            o = [],
            s = (t) => {
              const n = t.controller.getParsed(e),
                r = n && n[t.vScale.axis];
              if (a(r) || isNaN(r)) return !0;
            };
          for (const a of r)
            if (
              (void 0 === e || !s(a)) &&
              ((!1 === i ||
                -1 === o.indexOf(a.stack) ||
                (void 0 === i && void 0 === a.stack)) &&
                o.push(a.stack),
              a.index === t)
            )
              break;
          return o.length || o.push(void 0), o;
        }
        _getStackCount(t) {
          return this._getStacks(void 0, t).length;
        }
        _getStackIndex(t, e, n) {
          const r = this._getStacks(t, n),
            i = void 0 !== e ? r.indexOf(e) : -1;
          return -1 === i ? r.length - 1 : i;
        }
        _getRuler() {
          const t = this.options,
            e = this._cachedMeta,
            n = e.iScale,
            r = [];
          let i, a;
          for (i = 0, a = e.data.length; i < a; ++i)
            r.push(n.getPixelForValue(this.getParsed(i)[n.axis], i));
          const o = t.barThickness;
          return {
            min: o || Hn(e),
            pixels: r,
            start: n._startPixel,
            end: n._endPixel,
            stackCount: this._getStackCount(),
            scale: n,
            grouped: t.grouped,
            ratio: o ? 1 : t.categoryPercentage * t.barPercentage,
          };
        }
        _calculateBarValuePixels(t) {
          const {
              _cachedMeta: { vScale: e, _stacked: n },
              options: { base: r, minBarLength: i },
            } = this,
            o = r || 0,
            s = this.getParsed(t),
            l = s._custom,
            c = Wn(l);
          let u,
            d,
            h = s[e.axis],
            f = 0,
            p = n ? this.applyStack(e, s, n) : h;
          p !== h && ((f = p - h), (p = h)),
            c &&
              ((h = l.barStart),
              (p = l.barEnd - l.barStart),
              0 !== h && N(h) !== N(l.barEnd) && (f = 0),
              (f += h));
          const m = a(r) || c ? f : r;
          let g = e.getPixelForValue(m);
          if (
            ((u = this.chart.getDataVisibility(t)
              ? e.getPixelForValue(f + p)
              : g),
            (d = u - g),
            Math.abs(d) < i)
          ) {
            (d =
              (function (t, e, n) {
                return 0 !== t
                  ? N(t)
                  : (e.isHorizontal() ? 1 : -1) * (e.min >= n ? 1 : -1);
              })(d, e, o) * i),
              h === o && (g -= d / 2);
            const t = e.getPixelForDecimal(0),
              n = e.getPixelForDecimal(1),
              r = Math.min(t, n),
              a = Math.max(t, n);
            (g = Math.max(Math.min(g, a), r)), (u = g + d);
          }
          if (g === e.getPixelForValue(o)) {
            const t = (N(d) * e.getLineWidthForValue(o)) / 2;
            (g += t), (d -= t);
          }
          return { size: d, base: g, head: u, center: u + d / 2 };
        }
        _calculateBarIndexPixels(t, e) {
          const n = e.scale,
            r = this.options,
            i = r.skipNull,
            o = u(r.maxBarThickness, 1 / 0);
          let s, l;
          if (e.grouped) {
            const n = i ? this._getStackCount(t) : e.stackCount,
              c =
                "flex" === r.barThickness
                  ? (function (t, e, n, r) {
                      const i = e.pixels,
                        a = i[t];
                      let o = t > 0 ? i[t - 1] : null,
                        s = t < i.length - 1 ? i[t + 1] : null;
                      const l = n.categoryPercentage;
                      null === o &&
                        (o = a - (null === s ? e.end - e.start : s - a)),
                        null === s && (s = a + a - o);
                      const c = a - ((a - Math.min(o, s)) / 2) * l;
                      return {
                        chunk: ((Math.abs(s - o) / 2) * l) / r,
                        ratio: n.barPercentage,
                        start: c,
                      };
                    })(t, e, r, n)
                  : (function (t, e, n, r) {
                      const i = n.barThickness;
                      let o, s;
                      return (
                        a(i)
                          ? ((o = e.min * n.categoryPercentage),
                            (s = n.barPercentage))
                          : ((o = i * r), (s = 1)),
                        { chunk: o / r, ratio: s, start: e.pixels[t] - o / 2 }
                      );
                    })(t, e, r, n),
              u = this._getStackIndex(
                this.index,
                this._cachedMeta.stack,
                i ? t : void 0
              );
            (s = c.start + c.chunk * u + c.chunk / 2),
              (l = Math.min(o, c.chunk * c.ratio));
          } else
            (s = n.getPixelForValue(this.getParsed(t)[n.axis], t)),
              (l = Math.min(o, e.min * e.ratio));
          return { base: s - l / 2, head: s + l / 2, center: s, size: l };
        }
        draw() {
          const t = this._cachedMeta,
            e = t.vScale,
            n = t.data,
            r = n.length;
          let i = 0;
          for (; i < r; ++i)
            null !== this.getParsed(i)[e.axis] && n[i].draw(this._ctx);
        }
      }
      (Xn.id = "bar"),
        (Xn.defaults = {
          datasetElementType: !1,
          dataElementType: "bar",
          categoryPercentage: 0.8,
          barPercentage: 0.9,
          grouped: !0,
          animations: {
            numbers: {
              type: "number",
              properties: ["x", "y", "base", "width", "height"],
            },
          },
        }),
        (Xn.overrides = {
          scales: {
            _index_: { type: "category", offset: !0, grid: { offset: !0 } },
            _value_: { type: "linear", beginAtZero: !0 },
          },
        });
      class Zn extends Fn {
        initialize() {
          (this.enableOptionSharing = !0), super.initialize();
        }
        parsePrimitiveData(t, e, n, r) {
          const i = super.parsePrimitiveData(t, e, n, r);
          for (let a = 0; a < i.length; a++)
            i[a]._custom = this.resolveDataElementOptions(a + n).radius;
          return i;
        }
        parseArrayData(t, e, n, r) {
          const i = super.parseArrayData(t, e, n, r);
          for (let a = 0; a < i.length; a++) {
            const t = e[n + a];
            i[a]._custom = u(
              t[2],
              this.resolveDataElementOptions(a + n).radius
            );
          }
          return i;
        }
        parseObjectData(t, e, n, r) {
          const i = super.parseObjectData(t, e, n, r);
          for (let a = 0; a < i.length; a++) {
            const t = e[n + a];
            i[a]._custom = u(
              t && t.r && +t.r,
              this.resolveDataElementOptions(a + n).radius
            );
          }
          return i;
        }
        getMaxOverflow() {
          const t = this._cachedMeta.data;
          let e = 0;
          for (let n = t.length - 1; n >= 0; --n)
            e = Math.max(e, t[n].size(this.resolveDataElementOptions(n)) / 2);
          return e > 0 && e;
        }
        getLabelAndValue(t) {
          const e = this._cachedMeta,
            { xScale: n, yScale: r } = e,
            i = this.getParsed(t),
            a = n.getLabelForValue(i.x),
            o = r.getLabelForValue(i.y),
            s = i._custom;
          return {
            label: e.label,
            value: "(" + a + ", " + o + (s ? ", " + s : "") + ")",
          };
        }
        update(t) {
          const e = this._cachedMeta.data;
          this.updateElements(e, 0, e.length, t);
        }
        updateElements(t, e, n, r) {
          const i = "reset" === r,
            { iScale: a, vScale: o } = this._cachedMeta,
            { sharedOptions: s, includeOptions: l } = this._getSharedOptions(
              e,
              r
            ),
            c = a.axis,
            u = o.axis;
          for (let d = e; d < e + n; d++) {
            const e = t[d],
              n = !i && this.getParsed(d),
              h = {},
              f = (h[c] = i
                ? a.getPixelForDecimal(0.5)
                : a.getPixelForValue(n[c])),
              p = (h[u] = i ? o.getBasePixel() : o.getPixelForValue(n[u]));
            (h.skip = isNaN(f) || isNaN(p)),
              l &&
                ((h.options =
                  s ||
                  this.resolveDataElementOptions(d, e.active ? "active" : r)),
                i && (h.options.radius = 0)),
              this.updateElement(e, d, h, r);
          }
        }
        resolveDataElementOptions(t, e) {
          const n = this.getParsed(t);
          let r = super.resolveDataElementOptions(t, e);
          r.$shared && (r = Object.assign({}, r, { $shared: !1 }));
          const i = r.radius;
          return (
            "active" !== e && (r.radius = 0),
            (r.radius += u(n && n._custom, i)),
            r
          );
        }
      }
      (Zn.id = "bubble"),
        (Zn.defaults = {
          datasetElementType: !1,
          dataElementType: "point",
          animations: {
            numbers: {
              type: "number",
              properties: ["x", "y", "borderWidth", "radius"],
            },
          },
        }),
        (Zn.overrides = {
          scales: { x: { type: "linear" }, y: { type: "linear" } },
          plugins: { tooltip: { callbacks: { title: () => "" } } },
        });
      class Kn extends Fn {
        constructor(t, e) {
          super(t, e),
            (this.enableOptionSharing = !0),
            (this.innerRadius = void 0),
            (this.outerRadius = void 0),
            (this.offsetX = void 0),
            (this.offsetY = void 0);
        }
        linkScales() {}
        parse(t, e) {
          const n = this.getDataset().data,
            r = this._cachedMeta;
          if (!1 === this._parsing) r._parsed = n;
          else {
            let i,
              a,
              o = (t) => +n[t];
            if (s(n[t])) {
              const { key: t = "value" } = this._parsing;
              o = (e) => +w(n[e], t);
            }
            for (i = t, a = t + e; i < a; ++i) r._parsed[i] = o(i);
          }
        }
        _getRotation() {
          return j(this.options.rotation - 90);
        }
        _getCircumference() {
          return j(this.options.circumference);
        }
        _getRotationExtents() {
          let t = R,
            e = -R;
          for (let n = 0; n < this.chart.data.datasets.length; ++n)
            if (this.chart.isDatasetVisible(n)) {
              const r = this.chart.getDatasetMeta(n).controller,
                i = r._getRotation(),
                a = r._getCircumference();
              (t = Math.min(t, i)), (e = Math.max(e, i + a));
            }
          return { rotation: t, circumference: e - t };
        }
        update(t) {
          const e = this.chart,
            { chartArea: n } = e,
            r = this._cachedMeta,
            i = r.data,
            a =
              this.getMaxBorderWidth() +
              this.getMaxOffset(i) +
              this.options.spacing,
            o = Math.max((Math.min(n.width, n.height) - a) / 2, 0),
            s = Math.min(
              ((l = this.options.cutout),
              (c = o),
              "string" === typeof l && l.endsWith("%")
                ? parseFloat(l) / 100
                : l / c),
              1
            );
          var l, c;
          const u = this._getRingWeight(this.index),
            { circumference: h, rotation: f } = this._getRotationExtents(),
            {
              ratioX: p,
              ratioY: m,
              offsetX: g,
              offsetY: _,
            } = (function (t, e, n) {
              let r = 1,
                i = 1,
                a = 0,
                o = 0;
              if (e < R) {
                const s = t,
                  l = s + e,
                  c = Math.cos(s),
                  u = Math.sin(s),
                  d = Math.cos(l),
                  h = Math.sin(l),
                  f = (t, e, r) =>
                    X(t, s, l, !0) ? 1 : Math.max(e, e * n, r, r * n),
                  p = (t, e, r) =>
                    X(t, s, l, !0) ? -1 : Math.min(e, e * n, r, r * n),
                  m = f(0, c, d),
                  g = f(C, u, h),
                  _ = p(k, c, d),
                  v = p(k + C, u, h);
                (r = (m - _) / 2),
                  (i = (g - v) / 2),
                  (a = -(m + _) / 2),
                  (o = -(g + v) / 2);
              }
              return { ratioX: r, ratioY: i, offsetX: a, offsetY: o };
            })(f, h, s),
            v = (n.width - a) / p,
            b = (n.height - a) / m,
            y = Math.max(Math.min(v, b) / 2, 0),
            x = d(this.options.radius, y),
            w = (x - Math.max(x * s, 0)) / this._getVisibleDatasetWeightTotal();
          (this.offsetX = g * x),
            (this.offsetY = _ * x),
            (r.total = this.calculateTotal()),
            (this.outerRadius = x - w * this._getRingWeightOffset(this.index)),
            (this.innerRadius = Math.max(this.outerRadius - w * u, 0)),
            this.updateElements(i, 0, i.length, t);
        }
        _circumference(t, e) {
          const n = this.options,
            r = this._cachedMeta,
            i = this._getCircumference();
          return (e && n.animation.animateRotate) ||
            !this.chart.getDataVisibility(t) ||
            null === r._parsed[t] ||
            r.data[t].hidden
            ? 0
            : this.calculateCircumference((r._parsed[t] * i) / R);
        }
        updateElements(t, e, n, r) {
          const i = "reset" === r,
            a = this.chart,
            o = a.chartArea,
            s = a.options.animation,
            l = (o.left + o.right) / 2,
            c = (o.top + o.bottom) / 2,
            u = i && s.animateScale,
            d = u ? 0 : this.innerRadius,
            h = u ? 0 : this.outerRadius,
            { sharedOptions: f, includeOptions: p } = this._getSharedOptions(
              e,
              r
            );
          let m,
            g = this._getRotation();
          for (m = 0; m < e; ++m) g += this._circumference(m, i);
          for (m = e; m < e + n; ++m) {
            const e = this._circumference(m, i),
              n = t[m],
              a = {
                x: l + this.offsetX,
                y: c + this.offsetY,
                startAngle: g,
                endAngle: g + e,
                circumference: e,
                outerRadius: h,
                innerRadius: d,
              };
            p &&
              (a.options =
                f ||
                this.resolveDataElementOptions(m, n.active ? "active" : r)),
              (g += e),
              this.updateElement(n, m, a, r);
          }
        }
        calculateTotal() {
          const t = this._cachedMeta,
            e = t.data;
          let n,
            r = 0;
          for (n = 0; n < e.length; n++) {
            const i = t._parsed[n];
            null === i ||
              isNaN(i) ||
              !this.chart.getDataVisibility(n) ||
              e[n].hidden ||
              (r += Math.abs(i));
          }
          return r;
        }
        calculateCircumference(t) {
          const e = this._cachedMeta.total;
          return e > 0 && !isNaN(t) ? R * (Math.abs(t) / e) : 0;
        }
        getLabelAndValue(t) {
          const e = this._cachedMeta,
            n = this.chart,
            r = n.data.labels || [],
            i = dn(e._parsed[t], n.options.locale);
          return { label: r[t] || "", value: i };
        }
        getMaxBorderWidth(t) {
          let e = 0;
          const n = this.chart;
          let r, i, a, o, s;
          if (!t)
            for (r = 0, i = n.data.datasets.length; r < i; ++r)
              if (n.isDatasetVisible(r)) {
                (a = n.getDatasetMeta(r)), (t = a.data), (o = a.controller);
                break;
              }
          if (!t) return 0;
          for (r = 0, i = t.length; r < i; ++r)
            (s = o.resolveDataElementOptions(r)),
              "inner" !== s.borderAlign &&
                (e = Math.max(e, s.borderWidth || 0, s.hoverBorderWidth || 0));
          return e;
        }
        getMaxOffset(t) {
          let e = 0;
          for (let n = 0, r = t.length; n < r; ++n) {
            const t = this.resolveDataElementOptions(n);
            e = Math.max(e, t.offset || 0, t.hoverOffset || 0);
          }
          return e;
        }
        _getRingWeightOffset(t) {
          let e = 0;
          for (let n = 0; n < t; ++n)
            this.chart.isDatasetVisible(n) && (e += this._getRingWeight(n));
          return e;
        }
        _getRingWeight(t) {
          return Math.max(u(this.chart.data.datasets[t].weight, 1), 0);
        }
        _getVisibleDatasetWeightTotal() {
          return (
            this._getRingWeightOffset(this.chart.data.datasets.length) || 1
          );
        }
      }
      (Kn.id = "doughnut"),
        (Kn.defaults = {
          datasetElementType: !1,
          dataElementType: "arc",
          animation: { animateRotate: !0, animateScale: !1 },
          animations: {
            numbers: {
              type: "number",
              properties: [
                "circumference",
                "endAngle",
                "innerRadius",
                "outerRadius",
                "startAngle",
                "x",
                "y",
                "offset",
                "borderWidth",
                "spacing",
              ],
            },
          },
          cutout: "50%",
          rotation: 0,
          circumference: 360,
          radius: "100%",
          spacing: 0,
          indexAxis: "r",
        }),
        (Kn.descriptors = {
          _scriptable: (t) => "spacing" !== t,
          _indexable: (t) => "spacing" !== t,
        }),
        (Kn.overrides = {
          aspectRatio: 1,
          plugins: {
            legend: {
              labels: {
                generateLabels(t) {
                  const e = t.data;
                  if (e.labels.length && e.datasets.length) {
                    const {
                      labels: { pointStyle: n },
                    } = t.legend.options;
                    return e.labels.map((e, r) => {
                      const i = t.getDatasetMeta(0).controller.getStyle(r);
                      return {
                        text: e,
                        fillStyle: i.backgroundColor,
                        strokeStyle: i.borderColor,
                        lineWidth: i.borderWidth,
                        pointStyle: n,
                        hidden: !t.getDataVisibility(r),
                        index: r,
                      };
                    });
                  }
                  return [];
                },
              },
              onClick(t, e, n) {
                n.chart.toggleDataVisibility(e.index), n.chart.update();
              },
            },
            tooltip: {
              callbacks: {
                title: () => "",
                label(t) {
                  let e = t.label;
                  const n = ": " + t.formattedValue;
                  return o(e) ? ((e = e.slice()), (e[0] += n)) : (e += n), e;
                },
              },
            },
          },
        });
      class $n extends Fn {
        initialize() {
          (this.enableOptionSharing = !0),
            (this.supportsDecimation = !0),
            super.initialize();
        }
        update(t) {
          const e = this._cachedMeta,
            { dataset: n, data: r = [], _dataset: i } = e,
            a = this.chart._animationsDisabled;
          let { start: o, count: s } = st(e, r, a);
          (this._drawStart = o),
            (this._drawCount = s),
            lt(e) && ((o = 0), (s = r.length)),
            (n._chart = this.chart),
            (n._datasetIndex = this.index),
            (n._decimated = !!i._decimated),
            (n.points = r);
          const l = this.resolveDatasetElementOptions(t);
          this.options.showLine || (l.borderWidth = 0),
            (l.segment = this.options.segment),
            this.updateElement(n, void 0, { animated: !a, options: l }, t),
            this.updateElements(r, o, s, t);
        }
        updateElements(t, e, n, r) {
          const i = "reset" === r,
            {
              iScale: o,
              vScale: s,
              _stacked: l,
              _dataset: c,
            } = this._cachedMeta,
            { sharedOptions: u, includeOptions: d } = this._getSharedOptions(
              e,
              r
            ),
            h = o.axis,
            f = s.axis,
            { spanGaps: p, segment: m } = this.options,
            g = V(p) ? p : Number.POSITIVE_INFINITY,
            _ = this.chart._animationsDisabled || i || "none" === r;
          let v = e > 0 && this.getParsed(e - 1);
          for (let b = e; b < e + n; ++b) {
            const e = t[b],
              n = this.getParsed(b),
              p = _ ? e : {},
              y = a(n[f]),
              x = (p[h] = o.getPixelForValue(n[h], b)),
              w = (p[f] =
                i || y
                  ? s.getBasePixel()
                  : s.getPixelForValue(l ? this.applyStack(s, n, l) : n[f], b));
            (p.skip = isNaN(x) || isNaN(w) || y),
              (p.stop = b > 0 && Math.abs(n[h] - v[h]) > g),
              m && ((p.parsed = n), (p.raw = c.data[b])),
              d &&
                (p.options =
                  u ||
                  this.resolveDataElementOptions(b, e.active ? "active" : r)),
              _ || this.updateElement(e, b, p, r),
              (v = n);
          }
        }
        getMaxOverflow() {
          const t = this._cachedMeta,
            e = t.dataset,
            n = (e.options && e.options.borderWidth) || 0,
            r = t.data || [];
          if (!r.length) return n;
          const i = r[0].size(this.resolveDataElementOptions(0)),
            a = r[r.length - 1].size(
              this.resolveDataElementOptions(r.length - 1)
            );
          return Math.max(n, i, a) / 2;
        }
        draw() {
          const t = this._cachedMeta;
          t.dataset.updateControlPoints(this.chart.chartArea, t.iScale.axis),
            super.draw();
        }
      }
      ($n.id = "line"),
        ($n.defaults = {
          datasetElementType: "line",
          dataElementType: "point",
          showLine: !0,
          spanGaps: !1,
        }),
        ($n.overrides = {
          scales: {
            _index_: { type: "category" },
            _value_: { type: "linear" },
          },
        });
      class Qn extends Fn {
        constructor(t, e) {
          super(t, e), (this.innerRadius = void 0), (this.outerRadius = void 0);
        }
        getLabelAndValue(t) {
          const e = this._cachedMeta,
            n = this.chart,
            r = n.data.labels || [],
            i = dn(e._parsed[t].r, n.options.locale);
          return { label: r[t] || "", value: i };
        }
        parseObjectData(t, e, n, r) {
          return Fe.bind(this)(t, e, n, r);
        }
        update(t) {
          const e = this._cachedMeta.data;
          this._updateRadius(), this.updateElements(e, 0, e.length, t);
        }
        getMinMax() {
          const t = this._cachedMeta,
            e = {
              min: Number.POSITIVE_INFINITY,
              max: Number.NEGATIVE_INFINITY,
            };
          return (
            t.data.forEach((t, n) => {
              const r = this.getParsed(n).r;
              !isNaN(r) &&
                this.chart.getDataVisibility(n) &&
                (r < e.min && (e.min = r), r > e.max && (e.max = r));
            }),
            e
          );
        }
        _updateRadius() {
          const t = this.chart,
            e = t.chartArea,
            n = t.options,
            r = Math.min(e.right - e.left, e.bottom - e.top),
            i = Math.max(r / 2, 0),
            a =
              (i -
                Math.max(
                  n.cutoutPercentage ? (i / 100) * n.cutoutPercentage : 1,
                  0
                )) /
              t.getVisibleDatasetCount();
          (this.outerRadius = i - a * this.index),
            (this.innerRadius = this.outerRadius - a);
        }
        updateElements(t, e, n, r) {
          const i = "reset" === r,
            a = this.chart,
            o = a.options.animation,
            s = this._cachedMeta.rScale,
            l = s.xCenter,
            c = s.yCenter,
            u = s.getIndexAngle(0) - 0.5 * k;
          let d,
            h = u;
          const f = 360 / this.countVisibleElements();
          for (d = 0; d < e; ++d) h += this._computeAngle(d, r, f);
          for (d = e; d < e + n; d++) {
            const e = t[d];
            let n = h,
              p = h + this._computeAngle(d, r, f),
              m = a.getDataVisibility(d)
                ? s.getDistanceFromCenterForValue(this.getParsed(d).r)
                : 0;
            (h = p),
              i && (o.animateScale && (m = 0), o.animateRotate && (n = p = u));
            const g = {
              x: l,
              y: c,
              innerRadius: 0,
              outerRadius: m,
              startAngle: n,
              endAngle: p,
              options: this.resolveDataElementOptions(
                d,
                e.active ? "active" : r
              ),
            };
            this.updateElement(e, d, g, r);
          }
        }
        countVisibleElements() {
          const t = this._cachedMeta;
          let e = 0;
          return (
            t.data.forEach((t, n) => {
              !isNaN(this.getParsed(n).r) &&
                this.chart.getDataVisibility(n) &&
                e++;
            }),
            e
          );
        }
        _computeAngle(t, e, n) {
          return this.chart.getDataVisibility(t)
            ? j(this.resolveDataElementOptions(t, e).angle || n)
            : 0;
        }
      }
      (Qn.id = "polarArea"),
        (Qn.defaults = {
          dataElementType: "arc",
          animation: { animateRotate: !0, animateScale: !0 },
          animations: {
            numbers: {
              type: "number",
              properties: [
                "x",
                "y",
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
              ],
            },
          },
          indexAxis: "r",
          startAngle: 0,
        }),
        (Qn.overrides = {
          aspectRatio: 1,
          plugins: {
            legend: {
              labels: {
                generateLabels(t) {
                  const e = t.data;
                  if (e.labels.length && e.datasets.length) {
                    const {
                      labels: { pointStyle: n },
                    } = t.legend.options;
                    return e.labels.map((e, r) => {
                      const i = t.getDatasetMeta(0).controller.getStyle(r);
                      return {
                        text: e,
                        fillStyle: i.backgroundColor,
                        strokeStyle: i.borderColor,
                        lineWidth: i.borderWidth,
                        pointStyle: n,
                        hidden: !t.getDataVisibility(r),
                        index: r,
                      };
                    });
                  }
                  return [];
                },
              },
              onClick(t, e, n) {
                n.chart.toggleDataVisibility(e.index), n.chart.update();
              },
            },
            tooltip: {
              callbacks: {
                title: () => "",
                label: (t) =>
                  t.chart.data.labels[t.dataIndex] + ": " + t.formattedValue,
              },
            },
          },
          scales: {
            r: {
              type: "radialLinear",
              angleLines: { display: !1 },
              beginAtZero: !0,
              grid: { circular: !0 },
              pointLabels: { display: !1 },
              startAngle: 0,
            },
          },
        });
      class Jn extends Kn {}
      (Jn.id = "pie"),
        (Jn.defaults = {
          cutout: 0,
          rotation: 0,
          circumference: 360,
          radius: "100%",
        });
      class tr extends Fn {
        getLabelAndValue(t) {
          const e = this._cachedMeta.vScale,
            n = this.getParsed(t);
          return {
            label: e.getLabels()[t],
            value: "" + e.getLabelForValue(n[e.axis]),
          };
        }
        parseObjectData(t, e, n, r) {
          return Fe.bind(this)(t, e, n, r);
        }
        update(t) {
          const e = this._cachedMeta,
            n = e.dataset,
            r = e.data || [],
            i = e.iScale.getLabels();
          if (((n.points = r), "resize" !== t)) {
            const e = this.resolveDatasetElementOptions(t);
            this.options.showLine || (e.borderWidth = 0);
            const a = {
              _loop: !0,
              _fullLoop: i.length === r.length,
              options: e,
            };
            this.updateElement(n, void 0, a, t);
          }
          this.updateElements(r, 0, r.length, t);
        }
        updateElements(t, e, n, r) {
          const i = this._cachedMeta.rScale,
            a = "reset" === r;
          for (let o = e; o < e + n; o++) {
            const e = t[o],
              n = this.resolveDataElementOptions(o, e.active ? "active" : r),
              s = i.getPointPositionForValue(o, this.getParsed(o).r),
              l = a ? i.xCenter : s.x,
              c = a ? i.yCenter : s.y,
              u = {
                x: l,
                y: c,
                angle: s.angle,
                skip: isNaN(l) || isNaN(c),
                options: n,
              };
            this.updateElement(e, o, u, r);
          }
        }
      }
      (tr.id = "radar"),
        (tr.defaults = {
          datasetElementType: "line",
          dataElementType: "point",
          indexAxis: "r",
          showLine: !0,
          elements: { line: { fill: "start" } },
        }),
        (tr.overrides = {
          aspectRatio: 1,
          scales: { r: { type: "radialLinear" } },
        });
      class er {
        constructor() {
          (this.x = void 0),
            (this.y = void 0),
            (this.active = !1),
            (this.options = void 0),
            (this.$animations = void 0);
        }
        tooltipPosition(t) {
          const { x: e, y: n } = this.getProps(["x", "y"], t);
          return { x: e, y: n };
        }
        hasValue() {
          return V(this.x) && V(this.y);
        }
        getProps(t, e) {
          const n = this.$animations;
          if (!e || !n) return this;
          const r = {};
          return (
            t.forEach((t) => {
              r[t] = n[t] && n[t].active() ? n[t]._to : this[t];
            }),
            r
          );
        }
      }
      (er.defaults = {}), (er.defaultRoutes = void 0);
      const nr = {
        values: (t) => (o(t) ? t : "" + t),
        numeric(t, e, n) {
          if (0 === t) return "0";
          const r = this.chart.options.locale;
          let i,
            a = t;
          if (n.length > 1) {
            const e = Math.max(
              Math.abs(n[0].value),
              Math.abs(n[n.length - 1].value)
            );
            (e < 1e-4 || e > 1e15) && (i = "scientific"),
              (a = (function (t, e) {
                let n =
                  e.length > 3
                    ? e[2].value - e[1].value
                    : e[1].value - e[0].value;
                Math.abs(n) >= 1 &&
                  t !== Math.floor(t) &&
                  (n = t - Math.floor(t));
                return n;
              })(t, n));
          }
          const o = B(Math.abs(a)),
            s = Math.max(Math.min(-1 * Math.floor(o), 20), 0),
            l = {
              notation: i,
              minimumFractionDigits: s,
              maximumFractionDigits: s,
            };
          return Object.assign(l, this.options.ticks.format), dn(t, r, l);
        },
        logarithmic(t, e, n) {
          if (0 === t) return "0";
          const r = t / Math.pow(10, Math.floor(B(t)));
          return 1 === r || 2 === r || 5 === r
            ? nr.numeric.call(this, t, e, n)
            : "";
        },
      };
      var rr = { formatters: nr };
      function ir(t, e) {
        const n = t.options.ticks,
          r =
            n.maxTicksLimit ||
            (function (t) {
              const e = t.options.offset,
                n = t._tickSize(),
                r = t._length / n + (e ? 0 : 1),
                i = t._maxLength / n;
              return Math.floor(Math.min(r, i));
            })(t),
          i = n.major.enabled
            ? (function (t) {
                const e = [];
                let n, r;
                for (n = 0, r = t.length; n < r; n++) t[n].major && e.push(n);
                return e;
              })(e)
            : [],
          o = i.length,
          s = i[0],
          l = i[o - 1],
          c = [];
        if (o > r)
          return (
            (function (t, e, n, r) {
              let i,
                a = 0,
                o = n[0];
              for (r = Math.ceil(r), i = 0; i < t.length; i++)
                i === o && (e.push(t[i]), a++, (o = n[a * r]));
            })(e, c, i, o / r),
            c
          );
        const u = (function (t, e, n) {
          const r = (function (t) {
              const e = t.length;
              let n, r;
              if (e < 2) return !1;
              for (r = t[0], n = 1; n < e; ++n)
                if (t[n] - t[n - 1] !== r) return !1;
              return r;
            })(t),
            i = e.length / n;
          if (!r) return Math.max(i, 1);
          const a = (function (t) {
            const e = [],
              n = Math.sqrt(t);
            let r;
            for (r = 1; r < n; r++) t % r === 0 && (e.push(r), e.push(t / r));
            return n === (0 | n) && e.push(n), e.sort((t, e) => t - e).pop(), e;
          })(r);
          for (let o = 0, s = a.length - 1; o < s; o++) {
            const t = a[o];
            if (t > i) return t;
          }
          return Math.max(i, 1);
        })(i, e, r);
        if (o > 0) {
          let t, n;
          const r = o > 1 ? Math.round((l - s) / (o - 1)) : null;
          for (ar(e, c, u, a(r) ? 0 : s - r, s), t = 0, n = o - 1; t < n; t++)
            ar(e, c, u, i[t], i[t + 1]);
          return ar(e, c, u, l, a(r) ? e.length : l + r), c;
        }
        return ar(e, c, u), c;
      }
      function ar(t, e, n, r, i) {
        const a = u(r, 0),
          o = Math.min(u(i, t.length), t.length);
        let s,
          l,
          c,
          d = 0;
        for (
          n = Math.ceil(n),
            i && ((s = i - r), (n = s / Math.floor(s / n))),
            c = a;
          c < 0;

        )
          d++, (c = Math.round(a + d * n));
        for (l = Math.max(a, 0); l < o; l++)
          l === c && (e.push(t[l]), d++, (c = Math.round(a + d * n)));
      }
      te.set("scale", {
        display: !0,
        offset: !1,
        reverse: !1,
        beginAtZero: !1,
        bounds: "ticks",
        grace: 0,
        grid: {
          display: !0,
          lineWidth: 1,
          drawBorder: !0,
          drawOnChartArea: !0,
          drawTicks: !0,
          tickLength: 8,
          tickWidth: (t, e) => e.lineWidth,
          tickColor: (t, e) => e.color,
          offset: !1,
          borderDash: [],
          borderDashOffset: 0,
          borderWidth: 1,
        },
        title: { display: !1, text: "", padding: { top: 4, bottom: 4 } },
        ticks: {
          minRotation: 0,
          maxRotation: 50,
          mirror: !1,
          textStrokeWidth: 0,
          textStrokeColor: "",
          padding: 3,
          display: !0,
          autoSkip: !0,
          autoSkipPadding: 3,
          labelOffset: 0,
          callback: rr.formatters.values,
          minor: {},
          major: {},
          align: "center",
          crossAlign: "near",
          showLabelBackdrop: !1,
          backdropColor: "rgba(255, 255, 255, 0.75)",
          backdropPadding: 2,
        },
      }),
        te.route("scale.ticks", "color", "", "color"),
        te.route("scale.grid", "color", "", "borderColor"),
        te.route("scale.grid", "borderColor", "", "borderColor"),
        te.route("scale.title", "color", "", "color"),
        te.describe("scale", {
          _fallback: !1,
          _scriptable: (t) =>
            !t.startsWith("before") &&
            !t.startsWith("after") &&
            "callback" !== t &&
            "parser" !== t,
          _indexable: (t) => "borderDash" !== t && "tickBorderDash" !== t,
        }),
        te.describe("scales", { _fallback: "scale" }),
        te.describe("scale.ticks", {
          _scriptable: (t) => "backdropPadding" !== t && "callback" !== t,
          _indexable: (t) => "backdropPadding" !== t,
        });
      const or = (t, e, n) =>
        "top" === e || "left" === e ? t[e] + n : t[e] - n;
      function sr(t, e) {
        const n = [],
          r = t.length / e,
          i = t.length;
        let a = 0;
        for (; a < i; a += r) n.push(t[Math.floor(a)]);
        return n;
      }
      function lr(t, e, n) {
        const r = t.ticks.length,
          i = Math.min(e, r - 1),
          a = t._startPixel,
          o = t._endPixel,
          s = 1e-6;
        let l,
          c = t.getPixelForTick(i);
        if (
          !(
            n &&
            ((l =
              1 === r
                ? Math.max(c - a, o - c)
                : 0 === e
                ? (t.getPixelForTick(1) - c) / 2
                : (c - t.getPixelForTick(i - 1)) / 2),
            (c += i < e ? l : -l),
            c < a - s || c > o + s)
          )
        )
          return c;
      }
      function cr(t) {
        return t.drawTicks ? t.tickLength : 0;
      }
      function ur(t, e) {
        if (!t.display) return 0;
        const n = Me(t.font, e),
          r = we(t.padding);
        return (o(t.text) ? t.text.length : 1) * n.lineHeight + r.height;
      }
      function dr(t, e, n) {
        let r = at(t);
        return (
          ((n && "right" !== e) || (!n && "right" === e)) &&
            (r = ((t) => ("left" === t ? "right" : "right" === t ? "left" : t))(
              r
            )),
          r
        );
      }
      class hr extends er {
        constructor(t) {
          super(),
            (this.id = t.id),
            (this.type = t.type),
            (this.options = void 0),
            (this.ctx = t.ctx),
            (this.chart = t.chart),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
            (this.maxWidth = void 0),
            (this.maxHeight = void 0),
            (this.paddingTop = void 0),
            (this.paddingBottom = void 0),
            (this.paddingLeft = void 0),
            (this.paddingRight = void 0),
            (this.axis = void 0),
            (this.labelRotation = void 0),
            (this.min = void 0),
            (this.max = void 0),
            (this._range = void 0),
            (this.ticks = []),
            (this._gridLineItems = null),
            (this._labelItems = null),
            (this._labelSizes = null),
            (this._length = 0),
            (this._maxLength = 0),
            (this._longestTextCache = {}),
            (this._startPixel = void 0),
            (this._endPixel = void 0),
            (this._reversePixels = !1),
            (this._userMax = void 0),
            (this._userMin = void 0),
            (this._suggestedMax = void 0),
            (this._suggestedMin = void 0),
            (this._ticksLength = 0),
            (this._borderValue = 0),
            (this._cache = {}),
            (this._dataLimitsCached = !1),
            (this.$context = void 0);
        }
        init(t) {
          (this.options = t.setContext(this.getContext())),
            (this.axis = t.axis),
            (this._userMin = this.parse(t.min)),
            (this._userMax = this.parse(t.max)),
            (this._suggestedMin = this.parse(t.suggestedMin)),
            (this._suggestedMax = this.parse(t.suggestedMax));
        }
        parse(t, e) {
          return t;
        }
        getUserBounds() {
          let {
            _userMin: t,
            _userMax: e,
            _suggestedMin: n,
            _suggestedMax: r,
          } = this;
          return (
            (t = c(t, Number.POSITIVE_INFINITY)),
            (e = c(e, Number.NEGATIVE_INFINITY)),
            (n = c(n, Number.POSITIVE_INFINITY)),
            (r = c(r, Number.NEGATIVE_INFINITY)),
            { min: c(t, n), max: c(e, r), minDefined: l(t), maxDefined: l(e) }
          );
        }
        getMinMax(t) {
          let e,
            {
              min: n,
              max: r,
              minDefined: i,
              maxDefined: a,
            } = this.getUserBounds();
          if (i && a) return { min: n, max: r };
          const o = this.getMatchingVisibleMetas();
          for (let s = 0, l = o.length; s < l; ++s)
            (e = o[s].controller.getMinMax(this, t)),
              i || (n = Math.min(n, e.min)),
              a || (r = Math.max(r, e.max));
          return (
            (n = a && n > r ? r : n),
            (r = i && n > r ? n : r),
            { min: c(n, c(r, n)), max: c(r, c(n, r)) }
          );
        }
        getPadding() {
          return {
            left: this.paddingLeft || 0,
            top: this.paddingTop || 0,
            right: this.paddingRight || 0,
            bottom: this.paddingBottom || 0,
          };
        }
        getTicks() {
          return this.ticks;
        }
        getLabels() {
          const t = this.chart.data;
          return (
            this.options.labels ||
            (this.isHorizontal() ? t.xLabels : t.yLabels) ||
            t.labels ||
            []
          );
        }
        beforeLayout() {
          (this._cache = {}), (this._dataLimitsCached = !1);
        }
        beforeUpdate() {
          h(this.options.beforeUpdate, [this]);
        }
        update(t, e, n) {
          const { beginAtZero: r, grace: i, ticks: a } = this.options,
            o = a.sampleSize;
          this.beforeUpdate(),
            (this.maxWidth = t),
            (this.maxHeight = e),
            (this._margins = n =
              Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, n)),
            (this.ticks = null),
            (this._labelSizes = null),
            (this._gridLineItems = null),
            (this._labelItems = null),
            this.beforeSetDimensions(),
            this.setDimensions(),
            this.afterSetDimensions(),
            (this._maxLength = this.isHorizontal()
              ? this.width + n.left + n.right
              : this.height + n.top + n.bottom),
            this._dataLimitsCached ||
              (this.beforeDataLimits(),
              this.determineDataLimits(),
              this.afterDataLimits(),
              (this._range = (function (t, e, n) {
                const { min: r, max: i } = t,
                  a = d(e, (i - r) / 2),
                  o = (t, e) => (n && 0 === t ? 0 : t + e);
                return { min: o(r, -Math.abs(a)), max: o(i, a) };
              })(this, i, r)),
              (this._dataLimitsCached = !0)),
            this.beforeBuildTicks(),
            (this.ticks = this.buildTicks() || []),
            this.afterBuildTicks();
          const s = o < this.ticks.length;
          this._convertTicksToLabels(s ? sr(this.ticks, o) : this.ticks),
            this.configure(),
            this.beforeCalculateLabelRotation(),
            this.calculateLabelRotation(),
            this.afterCalculateLabelRotation(),
            a.display &&
              (a.autoSkip || "auto" === a.source) &&
              ((this.ticks = ir(this, this.ticks)),
              (this._labelSizes = null),
              this.afterAutoSkip()),
            s && this._convertTicksToLabels(this.ticks),
            this.beforeFit(),
            this.fit(),
            this.afterFit(),
            this.afterUpdate();
        }
        configure() {
          let t,
            e,
            n = this.options.reverse;
          this.isHorizontal()
            ? ((t = this.left), (e = this.right))
            : ((t = this.top), (e = this.bottom), (n = !n)),
            (this._startPixel = t),
            (this._endPixel = e),
            (this._reversePixels = n),
            (this._length = e - t),
            (this._alignToPixels = this.options.alignToPixels);
        }
        afterUpdate() {
          h(this.options.afterUpdate, [this]);
        }
        beforeSetDimensions() {
          h(this.options.beforeSetDimensions, [this]);
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = 0),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = 0),
              (this.bottom = this.height)),
            (this.paddingLeft = 0),
            (this.paddingTop = 0),
            (this.paddingRight = 0),
            (this.paddingBottom = 0);
        }
        afterSetDimensions() {
          h(this.options.afterSetDimensions, [this]);
        }
        _callHooks(t) {
          this.chart.notifyPlugins(t, this.getContext()),
            h(this.options[t], [this]);
        }
        beforeDataLimits() {
          this._callHooks("beforeDataLimits");
        }
        determineDataLimits() {}
        afterDataLimits() {
          this._callHooks("afterDataLimits");
        }
        beforeBuildTicks() {
          this._callHooks("beforeBuildTicks");
        }
        buildTicks() {
          return [];
        }
        afterBuildTicks() {
          this._callHooks("afterBuildTicks");
        }
        beforeTickToLabelConversion() {
          h(this.options.beforeTickToLabelConversion, [this]);
        }
        generateTickLabels(t) {
          const e = this.options.ticks;
          let n, r, i;
          for (n = 0, r = t.length; n < r; n++)
            (i = t[n]), (i.label = h(e.callback, [i.value, n, t], this));
        }
        afterTickToLabelConversion() {
          h(this.options.afterTickToLabelConversion, [this]);
        }
        beforeCalculateLabelRotation() {
          h(this.options.beforeCalculateLabelRotation, [this]);
        }
        calculateLabelRotation() {
          const t = this.options,
            e = t.ticks,
            n = this.ticks.length,
            r = e.minRotation || 0,
            i = e.maxRotation;
          let a,
            o,
            s,
            l = r;
          if (
            !this._isVisible() ||
            !e.display ||
            r >= i ||
            n <= 1 ||
            !this.isHorizontal()
          )
            return void (this.labelRotation = r);
          const c = this._getLabelSizes(),
            u = c.widest.width,
            d = c.highest.height,
            h = Z(this.chart.width - u, 0, this.maxWidth);
          (a = t.offset ? this.maxWidth / n : h / (n - 1)),
            u + 6 > a &&
              ((a = h / (n - (t.offset ? 0.5 : 1))),
              (o =
                this.maxHeight -
                cr(t.grid) -
                e.padding -
                ur(t.title, this.chart.options.font)),
              (s = Math.sqrt(u * u + d * d)),
              (l = Y(
                Math.min(
                  Math.asin(Z((c.highest.height + 6) / a, -1, 1)),
                  Math.asin(Z(o / s, -1, 1)) - Math.asin(Z(d / s, -1, 1))
                )
              )),
              (l = Math.max(r, Math.min(i, l)))),
            (this.labelRotation = l);
        }
        afterCalculateLabelRotation() {
          h(this.options.afterCalculateLabelRotation, [this]);
        }
        afterAutoSkip() {}
        beforeFit() {
          h(this.options.beforeFit, [this]);
        }
        fit() {
          const t = { width: 0, height: 0 },
            {
              chart: e,
              options: { ticks: n, title: r, grid: i },
            } = this,
            a = this._isVisible(),
            o = this.isHorizontal();
          if (a) {
            const a = ur(r, e.options.font);
            if (
              (o
                ? ((t.width = this.maxWidth), (t.height = cr(i) + a))
                : ((t.height = this.maxHeight), (t.width = cr(i) + a)),
              n.display && this.ticks.length)
            ) {
              const {
                  first: e,
                  last: r,
                  widest: i,
                  highest: a,
                } = this._getLabelSizes(),
                s = 2 * n.padding,
                l = j(this.labelRotation),
                c = Math.cos(l),
                u = Math.sin(l);
              if (o) {
                const e = n.mirror ? 0 : u * i.width + c * a.height;
                t.height = Math.min(this.maxHeight, t.height + e + s);
              } else {
                const e = n.mirror ? 0 : c * i.width + u * a.height;
                t.width = Math.min(this.maxWidth, t.width + e + s);
              }
              this._calculatePadding(e, r, u, c);
            }
          }
          this._handleMargins(),
            o
              ? ((this.width = this._length =
                  e.width - this._margins.left - this._margins.right),
                (this.height = t.height))
              : ((this.width = t.width),
                (this.height = this._length =
                  e.height - this._margins.top - this._margins.bottom));
        }
        _calculatePadding(t, e, n, r) {
          const {
              ticks: { align: i, padding: a },
              position: o,
            } = this.options,
            s = 0 !== this.labelRotation,
            l = "top" !== o && "x" === this.axis;
          if (this.isHorizontal()) {
            const o = this.getPixelForTick(0) - this.left,
              c = this.right - this.getPixelForTick(this.ticks.length - 1);
            let u = 0,
              d = 0;
            s
              ? l
                ? ((u = r * t.width), (d = n * e.height))
                : ((u = n * t.height), (d = r * e.width))
              : "start" === i
              ? (d = e.width)
              : "end" === i
              ? (u = t.width)
              : "inner" !== i && ((u = t.width / 2), (d = e.width / 2)),
              (this.paddingLeft = Math.max(
                ((u - o + a) * this.width) / (this.width - o),
                0
              )),
              (this.paddingRight = Math.max(
                ((d - c + a) * this.width) / (this.width - c),
                0
              ));
          } else {
            let n = e.height / 2,
              r = t.height / 2;
            "start" === i
              ? ((n = 0), (r = t.height))
              : "end" === i && ((n = e.height), (r = 0)),
              (this.paddingTop = n + a),
              (this.paddingBottom = r + a);
          }
        }
        _handleMargins() {
          this._margins &&
            ((this._margins.left = Math.max(
              this.paddingLeft,
              this._margins.left
            )),
            (this._margins.top = Math.max(this.paddingTop, this._margins.top)),
            (this._margins.right = Math.max(
              this.paddingRight,
              this._margins.right
            )),
            (this._margins.bottom = Math.max(
              this.paddingBottom,
              this._margins.bottom
            )));
        }
        afterFit() {
          h(this.options.afterFit, [this]);
        }
        isHorizontal() {
          const { axis: t, position: e } = this.options;
          return "top" === e || "bottom" === e || "x" === t;
        }
        isFullSize() {
          return this.options.fullSize;
        }
        _convertTicksToLabels(t) {
          let e, n;
          for (
            this.beforeTickToLabelConversion(),
              this.generateTickLabels(t),
              e = 0,
              n = t.length;
            e < n;
            e++
          )
            a(t[e].label) && (t.splice(e, 1), n--, e--);
          this.afterTickToLabelConversion();
        }
        _getLabelSizes() {
          let t = this._labelSizes;
          if (!t) {
            const e = this.options.ticks.sampleSize;
            let n = this.ticks;
            e < n.length && (n = sr(n, e)),
              (this._labelSizes = t = this._computeLabelSizes(n, n.length));
          }
          return t;
        }
        _computeLabelSizes(t, e) {
          const { ctx: n, _longestTextCache: r } = this,
            i = [],
            s = [];
          let l,
            c,
            u,
            d,
            h,
            p,
            m,
            g,
            _,
            v,
            b,
            y = 0,
            x = 0;
          for (l = 0; l < e; ++l) {
            if (
              ((d = t[l].label),
              (h = this._resolveTickFontOptions(l)),
              (n.font = p = h.string),
              (m = r[p] = r[p] || { data: {}, gc: [] }),
              (g = h.lineHeight),
              (_ = v = 0),
              a(d) || o(d))
            ) {
              if (o(d))
                for (c = 0, u = d.length; c < u; ++c)
                  (b = d[c]),
                    a(b) || o(b) || ((_ = ee(n, m.data, m.gc, _, b)), (v += g));
            } else (_ = ee(n, m.data, m.gc, _, d)), (v = g);
            i.push(_), s.push(v), (y = Math.max(_, y)), (x = Math.max(v, x));
          }
          !(function (t, e) {
            f(t, (t) => {
              const n = t.gc,
                r = n.length / 2;
              let i;
              if (r > e) {
                for (i = 0; i < r; ++i) delete t.data[n[i]];
                n.splice(0, r);
              }
            });
          })(r, e);
          const w = i.indexOf(y),
            M = s.indexOf(x),
            S = (t) => ({ width: i[t] || 0, height: s[t] || 0 });
          return {
            first: S(0),
            last: S(e - 1),
            widest: S(w),
            highest: S(M),
            widths: i,
            heights: s,
          };
        }
        getLabelForValue(t) {
          return t;
        }
        getPixelForValue(t, e) {
          return NaN;
        }
        getValueForPixel(t) {}
        getPixelForTick(t) {
          const e = this.ticks;
          return t < 0 || t > e.length - 1
            ? null
            : this.getPixelForValue(e[t].value);
        }
        getPixelForDecimal(t) {
          this._reversePixels && (t = 1 - t);
          const e = this._startPixel + t * this._length;
          return Z(
            this._alignToPixels ? re(this.chart, e, 0) : e,
            -32768,
            32767
          );
        }
        getDecimalForPixel(t) {
          const e = (t - this._startPixel) / this._length;
          return this._reversePixels ? 1 - e : e;
        }
        getBasePixel() {
          return this.getPixelForValue(this.getBaseValue());
        }
        getBaseValue() {
          const { min: t, max: e } = this;
          return t < 0 && e < 0 ? e : t > 0 && e > 0 ? t : 0;
        }
        getContext(t) {
          const e = this.ticks || [];
          if (t >= 0 && t < e.length) {
            const n = e[t];
            return (
              n.$context ||
              (n.$context = (function (t, e, n) {
                return Ae(t, { tick: n, index: e, type: "tick" });
              })(this.getContext(), t, n))
            );
          }
          return (
            this.$context ||
            (this.$context = Ae(this.chart.getContext(), {
              scale: this,
              type: "scale",
            }))
          );
        }
        _tickSize() {
          const t = this.options.ticks,
            e = j(this.labelRotation),
            n = Math.abs(Math.cos(e)),
            r = Math.abs(Math.sin(e)),
            i = this._getLabelSizes(),
            a = t.autoSkipPadding || 0,
            o = i ? i.widest.width + a : 0,
            s = i ? i.highest.height + a : 0;
          return this.isHorizontal()
            ? s * n > o * r
              ? o / n
              : s / r
            : s * r < o * n
            ? s / n
            : o / r;
        }
        _isVisible() {
          const t = this.options.display;
          return "auto" !== t ? !!t : this.getMatchingVisibleMetas().length > 0;
        }
        _computeGridLineItems(t) {
          const e = this.axis,
            n = this.chart,
            r = this.options,
            { grid: i, position: a } = r,
            o = i.offset,
            l = this.isHorizontal(),
            c = this.ticks.length + (o ? 1 : 0),
            d = cr(i),
            h = [],
            f = i.setContext(this.getContext()),
            p = f.drawBorder ? f.borderWidth : 0,
            m = p / 2,
            g = function (t) {
              return re(n, t, p);
            };
          let _, v, b, y, x, w, M, S, A, E, k, R;
          if ("top" === a)
            (_ = g(this.bottom)),
              (w = this.bottom - d),
              (S = _ - m),
              (E = g(t.top) + m),
              (R = t.bottom);
          else if ("bottom" === a)
            (_ = g(this.top)),
              (E = t.top),
              (R = g(t.bottom) - m),
              (w = _ + m),
              (S = this.top + d);
          else if ("left" === a)
            (_ = g(this.right)),
              (x = this.right - d),
              (M = _ - m),
              (A = g(t.left) + m),
              (k = t.right);
          else if ("right" === a)
            (_ = g(this.left)),
              (A = t.left),
              (k = g(t.right) - m),
              (x = _ + m),
              (M = this.left + d);
          else if ("x" === e) {
            if ("center" === a) _ = g((t.top + t.bottom) / 2 + 0.5);
            else if (s(a)) {
              const t = Object.keys(a)[0],
                e = a[t];
              _ = g(this.chart.scales[t].getPixelForValue(e));
            }
            (E = t.top), (R = t.bottom), (w = _ + m), (S = w + d);
          } else if ("y" === e) {
            if ("center" === a) _ = g((t.left + t.right) / 2);
            else if (s(a)) {
              const t = Object.keys(a)[0],
                e = a[t];
              _ = g(this.chart.scales[t].getPixelForValue(e));
            }
            (x = _ - m), (M = x - d), (A = t.left), (k = t.right);
          }
          const T = u(r.ticks.maxTicksLimit, c),
            O = Math.max(1, Math.ceil(c / T));
          for (v = 0; v < c; v += O) {
            const t = i.setContext(this.getContext(v)),
              e = t.lineWidth,
              r = t.color,
              a = t.borderDash || [],
              s = t.borderDashOffset,
              c = t.tickWidth,
              u = t.tickColor,
              d = t.tickBorderDash || [],
              f = t.tickBorderDashOffset;
            (b = lr(this, v, o)),
              void 0 !== b &&
                ((y = re(n, b, e)),
                l ? (x = M = A = k = y) : (w = S = E = R = y),
                h.push({
                  tx1: x,
                  ty1: w,
                  tx2: M,
                  ty2: S,
                  x1: A,
                  y1: E,
                  x2: k,
                  y2: R,
                  width: e,
                  color: r,
                  borderDash: a,
                  borderDashOffset: s,
                  tickWidth: c,
                  tickColor: u,
                  tickBorderDash: d,
                  tickBorderDashOffset: f,
                }));
          }
          return (this._ticksLength = c), (this._borderValue = _), h;
        }
        _computeLabelItems(t) {
          const e = this.axis,
            n = this.options,
            { position: r, ticks: i } = n,
            a = this.isHorizontal(),
            l = this.ticks,
            { align: c, crossAlign: u, padding: d, mirror: h } = i,
            f = cr(n.grid),
            p = f + d,
            m = h ? -d : p,
            g = -j(this.labelRotation),
            _ = [];
          let v,
            b,
            y,
            x,
            w,
            M,
            S,
            A,
            E,
            k,
            R,
            T,
            O = "middle";
          if ("top" === r)
            (M = this.bottom - m), (S = this._getXAxisLabelAlignment());
          else if ("bottom" === r)
            (M = this.top + m), (S = this._getXAxisLabelAlignment());
          else if ("left" === r) {
            const t = this._getYAxisLabelAlignment(f);
            (S = t.textAlign), (w = t.x);
          } else if ("right" === r) {
            const t = this._getYAxisLabelAlignment(f);
            (S = t.textAlign), (w = t.x);
          } else if ("x" === e) {
            if ("center" === r) M = (t.top + t.bottom) / 2 + p;
            else if (s(r)) {
              const t = Object.keys(r)[0],
                e = r[t];
              M = this.chart.scales[t].getPixelForValue(e) + p;
            }
            S = this._getXAxisLabelAlignment();
          } else if ("y" === e) {
            if ("center" === r) w = (t.left + t.right) / 2 - p;
            else if (s(r)) {
              const t = Object.keys(r)[0],
                e = r[t];
              w = this.chart.scales[t].getPixelForValue(e);
            }
            S = this._getYAxisLabelAlignment(f).textAlign;
          }
          "y" === e &&
            ("start" === c ? (O = "top") : "end" === c && (O = "bottom"));
          const P = this._getLabelSizes();
          for (v = 0, b = l.length; v < b; ++v) {
            (y = l[v]), (x = y.label);
            const t = i.setContext(this.getContext(v));
            (A = this.getPixelForTick(v) + i.labelOffset),
              (E = this._resolveTickFontOptions(v)),
              (k = E.lineHeight),
              (R = o(x) ? x.length : 1);
            const e = R / 2,
              n = t.color,
              s = t.textStrokeColor,
              c = t.textStrokeWidth;
            let d,
              f = S;
            if (
              (a
                ? ((w = A),
                  "inner" === S &&
                    (f =
                      v === b - 1
                        ? this.options.reverse
                          ? "left"
                          : "right"
                        : 0 === v
                        ? this.options.reverse
                          ? "right"
                          : "left"
                        : "center"),
                  (T =
                    "top" === r
                      ? "near" === u || 0 !== g
                        ? -R * k + k / 2
                        : "center" === u
                        ? -P.highest.height / 2 - e * k + k
                        : -P.highest.height + k / 2
                      : "near" === u || 0 !== g
                      ? k / 2
                      : "center" === u
                      ? P.highest.height / 2 - e * k
                      : P.highest.height - R * k),
                  h && (T *= -1))
                : ((M = A), (T = ((1 - R) * k) / 2)),
              t.showLabelBackdrop)
            ) {
              const e = we(t.backdropPadding),
                n = P.heights[v],
                r = P.widths[v];
              let i = M + T - e.top,
                a = w - e.left;
              switch (O) {
                case "middle":
                  i -= n / 2;
                  break;
                case "bottom":
                  i -= n;
              }
              switch (S) {
                case "center":
                  a -= r / 2;
                  break;
                case "right":
                  a -= r;
              }
              d = {
                left: a,
                top: i,
                width: r + e.width,
                height: n + e.height,
                color: t.backdropColor,
              };
            }
            _.push({
              rotation: g,
              label: x,
              font: E,
              color: n,
              strokeColor: s,
              strokeWidth: c,
              textOffset: T,
              textAlign: f,
              textBaseline: O,
              translation: [w, M],
              backdrop: d,
            });
          }
          return _;
        }
        _getXAxisLabelAlignment() {
          const { position: t, ticks: e } = this.options;
          if (-j(this.labelRotation)) return "top" === t ? "left" : "right";
          let n = "center";
          return (
            "start" === e.align
              ? (n = "left")
              : "end" === e.align
              ? (n = "right")
              : "inner" === e.align && (n = "inner"),
            n
          );
        }
        _getYAxisLabelAlignment(t) {
          const {
              position: e,
              ticks: { crossAlign: n, mirror: r, padding: i },
            } = this.options,
            a = t + i,
            o = this._getLabelSizes().widest.width;
          let s, l;
          return (
            "left" === e
              ? r
                ? ((l = this.right + i),
                  "near" === n
                    ? (s = "left")
                    : "center" === n
                    ? ((s = "center"), (l += o / 2))
                    : ((s = "right"), (l += o)))
                : ((l = this.right - a),
                  "near" === n
                    ? (s = "right")
                    : "center" === n
                    ? ((s = "center"), (l -= o / 2))
                    : ((s = "left"), (l = this.left)))
              : "right" === e
              ? r
                ? ((l = this.left + i),
                  "near" === n
                    ? (s = "right")
                    : "center" === n
                    ? ((s = "center"), (l -= o / 2))
                    : ((s = "left"), (l -= o)))
                : ((l = this.left + a),
                  "near" === n
                    ? (s = "left")
                    : "center" === n
                    ? ((s = "center"), (l += o / 2))
                    : ((s = "right"), (l = this.right)))
              : (s = "right"),
            { textAlign: s, x: l }
          );
        }
        _computeLabelArea() {
          if (this.options.ticks.mirror) return;
          const t = this.chart,
            e = this.options.position;
          return "left" === e || "right" === e
            ? { top: 0, left: this.left, bottom: t.height, right: this.right }
            : "top" === e || "bottom" === e
            ? { top: this.top, left: 0, bottom: this.bottom, right: t.width }
            : void 0;
        }
        drawBackground() {
          const {
            ctx: t,
            options: { backgroundColor: e },
            left: n,
            top: r,
            width: i,
            height: a,
          } = this;
          e &&
            (t.save(), (t.fillStyle = e), t.fillRect(n, r, i, a), t.restore());
        }
        getLineWidthForValue(t) {
          const e = this.options.grid;
          if (!this._isVisible() || !e.display) return 0;
          const n = this.ticks.findIndex((e) => e.value === t);
          if (n >= 0) {
            return e.setContext(this.getContext(n)).lineWidth;
          }
          return 0;
        }
        drawGrid(t) {
          const e = this.options.grid,
            n = this.ctx,
            r =
              this._gridLineItems ||
              (this._gridLineItems = this._computeGridLineItems(t));
          let i, a;
          const o = (t, e, r) => {
            r.width &&
              r.color &&
              (n.save(),
              (n.lineWidth = r.width),
              (n.strokeStyle = r.color),
              n.setLineDash(r.borderDash || []),
              (n.lineDashOffset = r.borderDashOffset),
              n.beginPath(),
              n.moveTo(t.x, t.y),
              n.lineTo(e.x, e.y),
              n.stroke(),
              n.restore());
          };
          if (e.display)
            for (i = 0, a = r.length; i < a; ++i) {
              const t = r[i];
              e.drawOnChartArea &&
                o({ x: t.x1, y: t.y1 }, { x: t.x2, y: t.y2 }, t),
                e.drawTicks &&
                  o(
                    { x: t.tx1, y: t.ty1 },
                    { x: t.tx2, y: t.ty2 },
                    {
                      color: t.tickColor,
                      width: t.tickWidth,
                      borderDash: t.tickBorderDash,
                      borderDashOffset: t.tickBorderDashOffset,
                    }
                  );
            }
        }
        drawBorder() {
          const {
              chart: t,
              ctx: e,
              options: { grid: n },
            } = this,
            r = n.setContext(this.getContext()),
            i = n.drawBorder ? r.borderWidth : 0;
          if (!i) return;
          const a = n.setContext(this.getContext(0)).lineWidth,
            o = this._borderValue;
          let s, l, c, u;
          this.isHorizontal()
            ? ((s = re(t, this.left, i) - i / 2),
              (l = re(t, this.right, a) + a / 2),
              (c = u = o))
            : ((c = re(t, this.top, i) - i / 2),
              (u = re(t, this.bottom, a) + a / 2),
              (s = l = o)),
            e.save(),
            (e.lineWidth = r.borderWidth),
            (e.strokeStyle = r.borderColor),
            e.beginPath(),
            e.moveTo(s, c),
            e.lineTo(l, u),
            e.stroke(),
            e.restore();
        }
        drawLabels(t) {
          if (!this.options.ticks.display) return;
          const e = this.ctx,
            n = this._computeLabelArea();
          n && le(e, n);
          const r =
            this._labelItems || (this._labelItems = this._computeLabelItems(t));
          let i, a;
          for (i = 0, a = r.length; i < a; ++i) {
            const t = r[i],
              n = t.font,
              a = t.label;
            t.backdrop &&
              ((e.fillStyle = t.backdrop.color),
              e.fillRect(
                t.backdrop.left,
                t.backdrop.top,
                t.backdrop.width,
                t.backdrop.height
              )),
              he(e, a, 0, t.textOffset, n, t);
          }
          n && ce(e);
        }
        drawTitle() {
          const {
            ctx: t,
            options: { position: e, title: n, reverse: r },
          } = this;
          if (!n.display) return;
          const i = Me(n.font),
            a = we(n.padding),
            l = n.align;
          let c = i.lineHeight / 2;
          "bottom" === e || "center" === e || s(e)
            ? ((c += a.bottom),
              o(n.text) && (c += i.lineHeight * (n.text.length - 1)))
            : (c += a.top);
          const {
            titleX: u,
            titleY: d,
            maxWidth: h,
            rotation: f,
          } = (function (t, e, n, r) {
            const { top: i, left: a, bottom: o, right: l, chart: c } = t,
              { chartArea: u, scales: d } = c;
            let h,
              f,
              p,
              m = 0;
            const g = o - i,
              _ = l - a;
            if (t.isHorizontal()) {
              if (((f = ot(r, a, l)), s(n))) {
                const t = Object.keys(n)[0],
                  r = n[t];
                p = d[t].getPixelForValue(r) + g - e;
              } else
                p =
                  "center" === n ? (u.bottom + u.top) / 2 + g - e : or(t, n, e);
              h = l - a;
            } else {
              if (s(n)) {
                const t = Object.keys(n)[0],
                  r = n[t];
                f = d[t].getPixelForValue(r) - _ + e;
              } else
                f =
                  "center" === n ? (u.left + u.right) / 2 - _ + e : or(t, n, e);
              (p = ot(r, o, i)), (m = "left" === n ? -C : C);
            }
            return { titleX: f, titleY: p, maxWidth: h, rotation: m };
          })(this, c, e, l);
          he(t, n.text, 0, 0, i, {
            color: n.color,
            maxWidth: h,
            rotation: f,
            textAlign: dr(l, e, r),
            textBaseline: "middle",
            translation: [u, d],
          });
        }
        draw(t) {
          this._isVisible() &&
            (this.drawBackground(),
            this.drawGrid(t),
            this.drawBorder(),
            this.drawTitle(),
            this.drawLabels(t));
        }
        _layers() {
          const t = this.options,
            e = (t.ticks && t.ticks.z) || 0,
            n = u(t.grid && t.grid.z, -1);
          return this._isVisible() && this.draw === hr.prototype.draw
            ? [
                {
                  z: n,
                  draw: (t) => {
                    this.drawBackground(), this.drawGrid(t), this.drawTitle();
                  },
                },
                {
                  z: n + 1,
                  draw: () => {
                    this.drawBorder();
                  },
                },
                {
                  z: e,
                  draw: (t) => {
                    this.drawLabels(t);
                  },
                },
              ]
            : [
                {
                  z: e,
                  draw: (t) => {
                    this.draw(t);
                  },
                },
              ];
        }
        getMatchingVisibleMetas(t) {
          const e = this.chart.getSortedVisibleDatasetMetas(),
            n = this.axis + "AxisID",
            r = [];
          let i, a;
          for (i = 0, a = e.length; i < a; ++i) {
            const a = e[i];
            a[n] !== this.id || (t && a.type !== t) || r.push(a);
          }
          return r;
        }
        _resolveTickFontOptions(t) {
          return Me(this.options.ticks.setContext(this.getContext(t)).font);
        }
        _maxDigits() {
          const t = this._resolveTickFontOptions(0).lineHeight;
          return (this.isHorizontal() ? this.width : this.height) / t;
        }
      }
      class fr {
        constructor(t, e, n) {
          (this.type = t),
            (this.scope = e),
            (this.override = n),
            (this.items = Object.create(null));
        }
        isForType(t) {
          return Object.prototype.isPrototypeOf.call(
            this.type.prototype,
            t.prototype
          );
        }
        register(t) {
          const e = Object.getPrototypeOf(t);
          let n;
          (function (t) {
            return "id" in t && "defaults" in t;
          })(e) && (n = this.register(e));
          const r = this.items,
            i = t.id,
            a = this.scope + "." + i;
          if (!i) throw new Error("class does not have id: " + t);
          return (
            i in r ||
              ((r[i] = t),
              (function (t, e, n) {
                const r = v(Object.create(null), [
                  n ? te.get(n) : {},
                  te.get(e),
                  t.defaults,
                ]);
                te.set(e, r),
                  t.defaultRoutes &&
                    (function (t, e) {
                      Object.keys(e).forEach((n) => {
                        const r = n.split("."),
                          i = r.pop(),
                          a = [t].concat(r).join("."),
                          o = e[n].split("."),
                          s = o.pop(),
                          l = o.join(".");
                        te.route(a, i, l, s);
                      });
                    })(e, t.defaultRoutes);
                t.descriptors && te.describe(e, t.descriptors);
              })(t, a, n),
              this.override && te.override(t.id, t.overrides)),
            a
          );
        }
        get(t) {
          return this.items[t];
        }
        unregister(t) {
          const e = this.items,
            n = t.id,
            r = this.scope;
          n in e && delete e[n],
            r && n in te[r] && (delete te[r][n], this.override && delete Kt[n]);
        }
      }
      var pr = new (class {
        constructor() {
          (this.controllers = new fr(Fn, "datasets", !0)),
            (this.elements = new fr(er, "elements")),
            (this.plugins = new fr(Object, "plugins")),
            (this.scales = new fr(hr, "scales")),
            (this._typedRegistries = [
              this.controllers,
              this.scales,
              this.elements,
            ]);
        }
        add() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("register", e);
        }
        remove() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("unregister", e);
        }
        addControllers() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("register", e, this.controllers);
        }
        addElements() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("register", e, this.elements);
        }
        addPlugins() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("register", e, this.plugins);
        }
        addScales() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("register", e, this.scales);
        }
        getController(t) {
          return this._get(t, this.controllers, "controller");
        }
        getElement(t) {
          return this._get(t, this.elements, "element");
        }
        getPlugin(t) {
          return this._get(t, this.plugins, "plugin");
        }
        getScale(t) {
          return this._get(t, this.scales, "scale");
        }
        removeControllers() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("unregister", e, this.controllers);
        }
        removeElements() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("unregister", e, this.elements);
        }
        removePlugins() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("unregister", e, this.plugins);
        }
        removeScales() {
          for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
            e[n] = arguments[n];
          this._each("unregister", e, this.scales);
        }
        _each(t, e, n) {
          [...e].forEach((e) => {
            const r = n || this._getRegistryForType(e);
            n || r.isForType(e) || (r === this.plugins && e.id)
              ? this._exec(t, r, e)
              : f(e, (e) => {
                  const r = n || this._getRegistryForType(e);
                  this._exec(t, r, e);
                });
          });
        }
        _exec(t, e, n) {
          const r = M(t);
          h(n["before" + r], [], n), e[t](n), h(n["after" + r], [], n);
        }
        _getRegistryForType(t) {
          for (let e = 0; e < this._typedRegistries.length; e++) {
            const n = this._typedRegistries[e];
            if (n.isForType(t)) return n;
          }
          return this.plugins;
        }
        _get(t, e, n) {
          const r = e.get(t);
          if (void 0 === r)
            throw new Error('"' + t + '" is not a registered ' + n + ".");
          return r;
        }
      })();
      class mr extends Fn {
        update(t) {
          const e = this._cachedMeta,
            { data: n = [] } = e,
            r = this.chart._animationsDisabled;
          let { start: i, count: a } = st(e, n, r);
          if (
            ((this._drawStart = i),
            (this._drawCount = a),
            lt(e) && ((i = 0), (a = n.length)),
            this.options.showLine)
          ) {
            const { dataset: i, _dataset: a } = e;
            (i._chart = this.chart),
              (i._datasetIndex = this.index),
              (i._decimated = !!a._decimated),
              (i.points = n);
            const o = this.resolveDatasetElementOptions(t);
            (o.segment = this.options.segment),
              this.updateElement(i, void 0, { animated: !r, options: o }, t);
          }
          this.updateElements(n, i, a, t);
        }
        addElements() {
          const { showLine: t } = this.options;
          !this.datasetElementType &&
            t &&
            (this.datasetElementType = pr.getElement("line")),
            super.addElements();
        }
        updateElements(t, e, n, r) {
          const i = "reset" === r,
            {
              iScale: o,
              vScale: s,
              _stacked: l,
              _dataset: c,
            } = this._cachedMeta,
            u = this.resolveDataElementOptions(e, r),
            d = this.getSharedOptions(u),
            h = this.includeOptions(r, d),
            f = o.axis,
            p = s.axis,
            { spanGaps: m, segment: g } = this.options,
            _ = V(m) ? m : Number.POSITIVE_INFINITY,
            v = this.chart._animationsDisabled || i || "none" === r;
          let b = e > 0 && this.getParsed(e - 1);
          for (let y = e; y < e + n; ++y) {
            const e = t[y],
              n = this.getParsed(y),
              u = v ? e : {},
              m = a(n[p]),
              x = (u[f] = o.getPixelForValue(n[f], y)),
              w = (u[p] =
                i || m
                  ? s.getBasePixel()
                  : s.getPixelForValue(l ? this.applyStack(s, n, l) : n[p], y));
            (u.skip = isNaN(x) || isNaN(w) || m),
              (u.stop = y > 0 && Math.abs(n[f] - b[f]) > _),
              g && ((u.parsed = n), (u.raw = c.data[y])),
              h &&
                (u.options =
                  d ||
                  this.resolveDataElementOptions(y, e.active ? "active" : r)),
              v || this.updateElement(e, y, u, r),
              (b = n);
          }
          this.updateSharedOptions(d, r, u);
        }
        getMaxOverflow() {
          const t = this._cachedMeta,
            e = t.data || [];
          if (!this.options.showLine) {
            let t = 0;
            for (let n = e.length - 1; n >= 0; --n)
              t = Math.max(t, e[n].size(this.resolveDataElementOptions(n)) / 2);
            return t > 0 && t;
          }
          const n = t.dataset,
            r = (n.options && n.options.borderWidth) || 0;
          if (!e.length) return r;
          const i = e[0].size(this.resolveDataElementOptions(0)),
            a = e[e.length - 1].size(
              this.resolveDataElementOptions(e.length - 1)
            );
          return Math.max(r, i, a) / 2;
        }
      }
      (mr.id = "scatter"),
        (mr.defaults = {
          datasetElementType: !1,
          dataElementType: "point",
          showLine: !1,
          fill: !1,
        }),
        (mr.overrides = {
          interaction: { mode: "point" },
          plugins: {
            tooltip: {
              callbacks: {
                title: () => "",
                label: (t) => "(" + t.label + ", " + t.formattedValue + ")",
              },
            },
          },
          scales: { x: { type: "linear" }, y: { type: "linear" } },
        });
      var gr = Object.freeze({
        __proto__: null,
        BarController: Xn,
        BubbleController: Zn,
        DoughnutController: Kn,
        LineController: $n,
        PolarAreaController: Qn,
        PieController: Jn,
        RadarController: tr,
        ScatterController: mr,
      });
      function _r() {
        throw new Error(
          "This method is not implemented: Check that a complete date adapter is provided."
        );
      }
      class vr {
        constructor(t) {
          this.options = t || {};
        }
        init(t) {}
        formats() {
          return _r();
        }
        parse(t, e) {
          return _r();
        }
        format(t, e) {
          return _r();
        }
        add(t, e, n) {
          return _r();
        }
        diff(t, e, n) {
          return _r();
        }
        startOf(t, e, n) {
          return _r();
        }
        endOf(t, e) {
          return _r();
        }
      }
      vr.override = function (t) {
        Object.assign(vr.prototype, t);
      };
      var br = { _date: vr };
      function yr(t, e, n, r) {
        const { controller: i, data: a, _sorted: o } = t,
          s = i._cachedMeta.iScale;
        if (s && e === s.axis && "r" !== e && o && a.length) {
          const t = s._reversePixels ? J : Q;
          if (!r) return t(a, e, n);
          if (i._sharedOptions) {
            const r = a[0],
              i = "function" === typeof r.getRange && r.getRange(e);
            if (i) {
              const r = t(a, e, n - i),
                o = t(a, e, n + i);
              return { lo: r.lo, hi: o.hi };
            }
          }
        }
        return { lo: 0, hi: a.length - 1 };
      }
      function xr(t, e, n, r, i) {
        const a = t.getSortedVisibleDatasetMetas(),
          o = n[e];
        for (let s = 0, l = a.length; s < l; ++s) {
          const { index: t, data: n } = a[s],
            { lo: l, hi: c } = yr(a[s], e, o, i);
          for (let e = l; e <= c; ++e) {
            const i = n[e];
            i.skip || r(i, t, e);
          }
        }
      }
      function wr(t, e, n, r, i) {
        const a = [];
        if (!i && !t.isPointInArea(e)) return a;
        return (
          xr(
            t,
            n,
            e,
            function (n, o, s) {
              (i || se(n, t.chartArea, 0)) &&
                n.inRange(e.x, e.y, r) &&
                a.push({ element: n, datasetIndex: o, index: s });
            },
            !0
          ),
          a
        );
      }
      function Mr(t, e, n, r, i, a) {
        let o = [];
        const s = (function (t) {
          const e = -1 !== t.indexOf("x"),
            n = -1 !== t.indexOf("y");
          return function (t, r) {
            const i = e ? Math.abs(t.x - r.x) : 0,
              a = n ? Math.abs(t.y - r.y) : 0;
            return Math.sqrt(Math.pow(i, 2) + Math.pow(a, 2));
          };
        })(n);
        let l = Number.POSITIVE_INFINITY;
        return (
          xr(t, n, e, function (n, c, u) {
            const d = n.inRange(e.x, e.y, i);
            if (r && !d) return;
            const h = n.getCenterPoint(i);
            if (!(!!a || t.isPointInArea(h)) && !d) return;
            const f = s(e, h);
            f < l
              ? ((o = [{ element: n, datasetIndex: c, index: u }]), (l = f))
              : f === l && o.push({ element: n, datasetIndex: c, index: u });
          }),
          o
        );
      }
      function Sr(t, e, n, r, i, a) {
        return a || t.isPointInArea(e)
          ? "r" !== n || r
            ? Mr(t, e, n, r, i, a)
            : (function (t, e, n, r) {
                let i = [];
                return (
                  xr(t, n, e, function (t, n, a) {
                    const { startAngle: o, endAngle: s } = t.getProps(
                        ["startAngle", "endAngle"],
                        r
                      ),
                      { angle: l } = U(t, { x: e.x, y: e.y });
                    X(l, o, s) &&
                      i.push({ element: t, datasetIndex: n, index: a });
                  }),
                  i
                );
              })(t, e, n, i)
          : [];
      }
      function Ar(t, e, n, r, i) {
        const a = [],
          o = "x" === n ? "inXRange" : "inYRange";
        let s = !1;
        return (
          xr(t, n, e, (t, r, l) => {
            t[o](e[n], i) &&
              (a.push({ element: t, datasetIndex: r, index: l }),
              (s = s || t.inRange(e.x, e.y, i)));
          }),
          r && !s ? [] : a
        );
      }
      var Er = {
        evaluateInteractionItems: xr,
        modes: {
          index(t, e, n, r) {
            const i = tn(e, t),
              a = n.axis || "x",
              o = n.includeInvisible || !1,
              s = n.intersect ? wr(t, i, a, r, o) : Sr(t, i, a, !1, r, o),
              l = [];
            return s.length
              ? (t.getSortedVisibleDatasetMetas().forEach((t) => {
                  const e = s[0].index,
                    n = t.data[e];
                  n &&
                    !n.skip &&
                    l.push({ element: n, datasetIndex: t.index, index: e });
                }),
                l)
              : [];
          },
          dataset(t, e, n, r) {
            const i = tn(e, t),
              a = n.axis || "xy",
              o = n.includeInvisible || !1;
            let s = n.intersect ? wr(t, i, a, r, o) : Sr(t, i, a, !1, r, o);
            if (s.length > 0) {
              const e = s[0].datasetIndex,
                n = t.getDatasetMeta(e).data;
              s = [];
              for (let t = 0; t < n.length; ++t)
                s.push({ element: n[t], datasetIndex: e, index: t });
            }
            return s;
          },
          point: (t, e, n, r) =>
            wr(t, tn(e, t), n.axis || "xy", r, n.includeInvisible || !1),
          nearest(t, e, n, r) {
            const i = tn(e, t),
              a = n.axis || "xy",
              o = n.includeInvisible || !1;
            return Sr(t, i, a, n.intersect, r, o);
          },
          x: (t, e, n, r) => Ar(t, tn(e, t), "x", n.intersect, r),
          y: (t, e, n, r) => Ar(t, tn(e, t), "y", n.intersect, r),
        },
      };
      const kr = ["left", "top", "right", "bottom"];
      function Rr(t, e) {
        return t.filter((t) => t.pos === e);
      }
      function Tr(t, e) {
        return t.filter((t) => -1 === kr.indexOf(t.pos) && t.box.axis === e);
      }
      function Or(t, e) {
        return t.sort((t, n) => {
          const r = e ? n : t,
            i = e ? t : n;
          return r.weight === i.weight
            ? r.index - i.index
            : r.weight - i.weight;
        });
      }
      function Pr(t, e) {
        const n = (function (t) {
            const e = {};
            for (const n of t) {
              const { stack: t, pos: r, stackWeight: i } = n;
              if (!t || !kr.includes(r)) continue;
              const a =
                e[t] || (e[t] = { count: 0, placed: 0, weight: 0, size: 0 });
              a.count++, (a.weight += i);
            }
            return e;
          })(t),
          { vBoxMaxWidth: r, hBoxMaxHeight: i } = e;
        let a, o, s;
        for (a = 0, o = t.length; a < o; ++a) {
          s = t[a];
          const { fullSize: o } = s.box,
            l = n[s.stack],
            c = l && s.stackWeight / l.weight;
          s.horizontal
            ? ((s.width = c ? c * r : o && e.availableWidth), (s.height = i))
            : ((s.width = r), (s.height = c ? c * i : o && e.availableHeight));
        }
        return n;
      }
      function Cr(t, e, n, r) {
        return Math.max(t[n], e[n]) + Math.max(t[r], e[r]);
      }
      function Dr(t, e) {
        (t.top = Math.max(t.top, e.top)),
          (t.left = Math.max(t.left, e.left)),
          (t.bottom = Math.max(t.bottom, e.bottom)),
          (t.right = Math.max(t.right, e.right));
      }
      function Ir(t, e, n, r) {
        const { pos: i, box: a } = n,
          o = t.maxPadding;
        if (!s(i)) {
          n.size && (t[i] -= n.size);
          const e = r[n.stack] || { size: 0, count: 1 };
          (e.size = Math.max(e.size, n.horizontal ? a.height : a.width)),
            (n.size = e.size / e.count),
            (t[i] += n.size);
        }
        a.getPadding && Dr(o, a.getPadding());
        const l = Math.max(0, e.outerWidth - Cr(o, t, "left", "right")),
          c = Math.max(0, e.outerHeight - Cr(o, t, "top", "bottom")),
          u = l !== t.w,
          d = c !== t.h;
        return (
          (t.w = l),
          (t.h = c),
          n.horizontal ? { same: u, other: d } : { same: d, other: u }
        );
      }
      function Br(t, e) {
        const n = e.maxPadding;
        function r(t) {
          const r = { left: 0, top: 0, right: 0, bottom: 0 };
          return (
            t.forEach((t) => {
              r[t] = Math.max(e[t], n[t]);
            }),
            r
          );
        }
        return r(t ? ["left", "right"] : ["top", "bottom"]);
      }
      function Nr(t, e, n, r) {
        const i = [];
        let a, o, s, l, c, u;
        for (a = 0, o = t.length, c = 0; a < o; ++a) {
          (s = t[a]),
            (l = s.box),
            l.update(s.width || e.w, s.height || e.h, Br(s.horizontal, e));
          const { same: o, other: d } = Ir(e, n, s, r);
          (c |= o && i.length), (u = u || d), l.fullSize || i.push(s);
        }
        return (c && Nr(i, e, n, r)) || u;
      }
      function Lr(t, e, n, r, i) {
        (t.top = n),
          (t.left = e),
          (t.right = e + r),
          (t.bottom = n + i),
          (t.width = r),
          (t.height = i);
      }
      function Vr(t, e, n, r) {
        const i = n.padding;
        let { x: a, y: o } = e;
        for (const s of t) {
          const t = s.box,
            l = r[s.stack] || { count: 1, placed: 0, weight: 1 },
            c = s.stackWeight / l.weight || 1;
          if (s.horizontal) {
            const r = e.w * c,
              a = l.size || t.height;
            S(l.start) && (o = l.start),
              t.fullSize
                ? Lr(t, i.left, o, n.outerWidth - i.right - i.left, a)
                : Lr(t, e.left + l.placed, o, r, a),
              (l.start = o),
              (l.placed += r),
              (o = t.bottom);
          } else {
            const r = e.h * c,
              o = l.size || t.width;
            S(l.start) && (a = l.start),
              t.fullSize
                ? Lr(t, a, i.top, o, n.outerHeight - i.bottom - i.top)
                : Lr(t, a, e.top + l.placed, o, r),
              (l.start = a),
              (l.placed += r),
              (a = t.right);
          }
        }
        (e.x = a), (e.y = o);
      }
      te.set("layout", {
        autoPadding: !0,
        padding: { top: 0, right: 0, bottom: 0, left: 0 },
      });
      var Fr = {
        addBox(t, e) {
          t.boxes || (t.boxes = []),
            (e.fullSize = e.fullSize || !1),
            (e.position = e.position || "top"),
            (e.weight = e.weight || 0),
            (e._layers =
              e._layers ||
              function () {
                return [
                  {
                    z: 0,
                    draw(t) {
                      e.draw(t);
                    },
                  },
                ];
              }),
            t.boxes.push(e);
        },
        removeBox(t, e) {
          const n = t.boxes ? t.boxes.indexOf(e) : -1;
          -1 !== n && t.boxes.splice(n, 1);
        },
        configure(t, e, n) {
          (e.fullSize = n.fullSize),
            (e.position = n.position),
            (e.weight = n.weight);
        },
        update(t, e, n, r) {
          if (!t) return;
          const i = we(t.options.layout.padding),
            a = Math.max(e - i.width, 0),
            o = Math.max(n - i.height, 0),
            s = (function (t) {
              const e = (function (t) {
                  const e = [];
                  let n, r, i, a, o, s;
                  for (n = 0, r = (t || []).length; n < r; ++n)
                    (i = t[n]),
                      ({
                        position: a,
                        options: { stack: o, stackWeight: s = 1 },
                      } = i),
                      e.push({
                        index: n,
                        box: i,
                        pos: a,
                        horizontal: i.isHorizontal(),
                        weight: i.weight,
                        stack: o && a + o,
                        stackWeight: s,
                      });
                  return e;
                })(t),
                n = Or(
                  e.filter((t) => t.box.fullSize),
                  !0
                ),
                r = Or(Rr(e, "left"), !0),
                i = Or(Rr(e, "right")),
                a = Or(Rr(e, "top"), !0),
                o = Or(Rr(e, "bottom")),
                s = Tr(e, "x"),
                l = Tr(e, "y");
              return {
                fullSize: n,
                leftAndTop: r.concat(a),
                rightAndBottom: i.concat(l).concat(o).concat(s),
                chartArea: Rr(e, "chartArea"),
                vertical: r.concat(i).concat(l),
                horizontal: a.concat(o).concat(s),
              };
            })(t.boxes),
            l = s.vertical,
            c = s.horizontal;
          f(t.boxes, (t) => {
            "function" === typeof t.beforeLayout && t.beforeLayout();
          });
          const u =
              l.reduce(
                (t, e) =>
                  e.box.options && !1 === e.box.options.display ? t : t + 1,
                0
              ) || 1,
            d = Object.freeze({
              outerWidth: e,
              outerHeight: n,
              padding: i,
              availableWidth: a,
              availableHeight: o,
              vBoxMaxWidth: a / 2 / u,
              hBoxMaxHeight: o / 2,
            }),
            h = Object.assign({}, i);
          Dr(h, we(r));
          const p = Object.assign(
              { maxPadding: h, w: a, h: o, x: i.left, y: i.top },
              i
            ),
            m = Pr(l.concat(c), d);
          Nr(s.fullSize, p, d, m),
            Nr(l, p, d, m),
            Nr(c, p, d, m) && Nr(l, p, d, m),
            (function (t) {
              const e = t.maxPadding;
              function n(n) {
                const r = Math.max(e[n] - t[n], 0);
                return (t[n] += r), r;
              }
              (t.y += n("top")), (t.x += n("left")), n("right"), n("bottom");
            })(p),
            Vr(s.leftAndTop, p, d, m),
            (p.x += p.w),
            (p.y += p.h),
            Vr(s.rightAndBottom, p, d, m),
            (t.chartArea = {
              left: p.left,
              top: p.top,
              right: p.left + p.w,
              bottom: p.top + p.h,
              height: p.h,
              width: p.w,
            }),
            f(s.chartArea, (e) => {
              const n = e.box;
              Object.assign(n, t.chartArea),
                n.update(p.w, p.h, { left: 0, top: 0, right: 0, bottom: 0 });
            });
        },
      };
      class Hr {
        acquireContext(t, e) {}
        releaseContext(t) {
          return !1;
        }
        addEventListener(t, e, n) {}
        removeEventListener(t, e, n) {}
        getDevicePixelRatio() {
          return 1;
        }
        getMaximumSize(t, e, n, r) {
          return (
            (e = Math.max(0, e || t.width)),
            (n = n || t.height),
            { width: e, height: Math.max(0, r ? Math.floor(e / r) : n) }
          );
        }
        isAttached(t) {
          return !0;
        }
        updateConfig(t) {}
      }
      class jr extends Hr {
        acquireContext(t) {
          return (t && t.getContext && t.getContext("2d")) || null;
        }
        updateConfig(t) {
          t.options.animation = !1;
        }
      }
      const Yr = "$chartjs",
        Wr = {
          touchstart: "mousedown",
          touchmove: "mousemove",
          touchend: "mouseup",
          pointerenter: "mouseenter",
          pointerdown: "mousedown",
          pointermove: "mousemove",
          pointerup: "mouseup",
          pointerleave: "mouseout",
          pointerout: "mouseout",
        },
        Ur = (t) => null === t || "" === t;
      const zr = !!an && { passive: !0 };
      function Gr(t, e, n) {
        t.canvas.removeEventListener(e, n, zr);
      }
      function qr(t, e) {
        for (const n of t) if (n === e || n.contains(e)) return !0;
      }
      function Xr(t, e, n) {
        const r = t.canvas,
          i = new MutationObserver((t) => {
            let e = !1;
            for (const n of t)
              (e = e || qr(n.addedNodes, r)), (e = e && !qr(n.removedNodes, r));
            e && n();
          });
        return i.observe(document, { childList: !0, subtree: !0 }), i;
      }
      function Zr(t, e, n) {
        const r = t.canvas,
          i = new MutationObserver((t) => {
            let e = !1;
            for (const n of t)
              (e = e || qr(n.removedNodes, r)), (e = e && !qr(n.addedNodes, r));
            e && n();
          });
        return i.observe(document, { childList: !0, subtree: !0 }), i;
      }
      const Kr = new Map();
      let $r = 0;
      function Qr() {
        const t = window.devicePixelRatio;
        t !== $r &&
          (($r = t),
          Kr.forEach((e, n) => {
            n.currentDevicePixelRatio !== t && e();
          }));
      }
      function Jr(t, e, n) {
        const r = t.canvas,
          i = r && Xe(r);
        if (!i) return;
        const a = it((t, e) => {
            const r = i.clientWidth;
            n(t, e), r < i.clientWidth && n();
          }, window),
          o = new ResizeObserver((t) => {
            const e = t[0],
              n = e.contentRect.width,
              r = e.contentRect.height;
            (0 === n && 0 === r) || a(n, r);
          });
        return (
          o.observe(i),
          (function (t, e) {
            Kr.size || window.addEventListener("resize", Qr), Kr.set(t, e);
          })(t, a),
          o
        );
      }
      function ti(t, e, n) {
        n && n.disconnect(),
          "resize" === e &&
            (function (t) {
              Kr.delete(t), Kr.size || window.removeEventListener("resize", Qr);
            })(t);
      }
      function ei(t, e, n) {
        const r = t.canvas,
          i = it(
            (e) => {
              null !== t.ctx &&
                n(
                  (function (t, e) {
                    const n = Wr[t.type] || t.type,
                      { x: r, y: i } = tn(t, e);
                    return {
                      type: n,
                      chart: e,
                      native: t,
                      x: void 0 !== r ? r : null,
                      y: void 0 !== i ? i : null,
                    };
                  })(e, t)
                );
            },
            t,
            (t) => {
              const e = t[0];
              return [e, e.offsetX, e.offsetY];
            }
          );
        return (
          (function (t, e, n) {
            t.addEventListener(e, n, zr);
          })(r, e, i),
          i
        );
      }
      class ni extends Hr {
        acquireContext(t, e) {
          const n = t && t.getContext && t.getContext("2d");
          return n && n.canvas === t
            ? ((function (t, e) {
                const n = t.style,
                  r = t.getAttribute("height"),
                  i = t.getAttribute("width");
                if (
                  ((t[Yr] = {
                    initial: {
                      height: r,
                      width: i,
                      style: {
                        display: n.display,
                        height: n.height,
                        width: n.width,
                      },
                    },
                  }),
                  (n.display = n.display || "block"),
                  (n.boxSizing = n.boxSizing || "border-box"),
                  Ur(i))
                ) {
                  const e = on(t, "width");
                  void 0 !== e && (t.width = e);
                }
                if (Ur(r))
                  if ("" === t.style.height) t.height = t.width / (e || 2);
                  else {
                    const e = on(t, "height");
                    void 0 !== e && (t.height = e);
                  }
              })(t, e),
              n)
            : null;
        }
        releaseContext(t) {
          const e = t.canvas;
          if (!e[Yr]) return !1;
          const n = e[Yr].initial;
          ["height", "width"].forEach((t) => {
            const r = n[t];
            a(r) ? e.removeAttribute(t) : e.setAttribute(t, r);
          });
          const r = n.style || {};
          return (
            Object.keys(r).forEach((t) => {
              e.style[t] = r[t];
            }),
            (e.width = e.width),
            delete e[Yr],
            !0
          );
        }
        addEventListener(t, e, n) {
          this.removeEventListener(t, e);
          const r = t.$proxies || (t.$proxies = {}),
            i = { attach: Xr, detach: Zr, resize: Jr }[e] || ei;
          r[e] = i(t, e, n);
        }
        removeEventListener(t, e) {
          const n = t.$proxies || (t.$proxies = {}),
            r = n[e];
          if (!r) return;
          (({ attach: ti, detach: ti, resize: ti })[e] || Gr)(t, e, r),
            (n[e] = void 0);
        }
        getDevicePixelRatio() {
          return window.devicePixelRatio;
        }
        getMaximumSize(t, e, n, r) {
          return nn(t, e, n, r);
        }
        isAttached(t) {
          const e = Xe(t);
          return !(!e || !e.isConnected);
        }
      }
      class ri {
        constructor() {
          this._init = [];
        }
        notify(t, e, n, r) {
          "beforeInit" === e &&
            ((this._init = this._createDescriptors(t, !0)),
            this._notify(this._init, t, "install"));
          const i = r ? this._descriptors(t).filter(r) : this._descriptors(t),
            a = this._notify(i, t, e, n);
          return (
            "afterDestroy" === e &&
              (this._notify(i, t, "stop"),
              this._notify(this._init, t, "uninstall")),
            a
          );
        }
        _notify(t, e, n, r) {
          r = r || {};
          for (const i of t) {
            const t = i.plugin;
            if (!1 === h(t[n], [e, r, i.options], t) && r.cancelable) return !1;
          }
          return !0;
        }
        invalidate() {
          a(this._cache) ||
            ((this._oldCache = this._cache), (this._cache = void 0));
        }
        _descriptors(t) {
          if (this._cache) return this._cache;
          const e = (this._cache = this._createDescriptors(t));
          return this._notifyStateChanges(t), e;
        }
        _createDescriptors(t, e) {
          const n = t && t.config,
            r = u(n.options && n.options.plugins, {}),
            i = (function (t) {
              const e = {},
                n = [],
                r = Object.keys(pr.plugins.items);
              for (let a = 0; a < r.length; a++) n.push(pr.getPlugin(r[a]));
              const i = t.plugins || [];
              for (let a = 0; a < i.length; a++) {
                const t = i[a];
                -1 === n.indexOf(t) && (n.push(t), (e[t.id] = !0));
              }
              return { plugins: n, localIds: e };
            })(n);
          return !1 !== r || e
            ? (function (t, e, n, r) {
                let { plugins: i, localIds: a } = e;
                const o = [],
                  s = t.getContext();
                for (const l of i) {
                  const e = l.id,
                    i = ii(n[e], r);
                  null !== i &&
                    o.push({
                      plugin: l,
                      options: ai(t.config, { plugin: l, local: a[e] }, i, s),
                    });
                }
                return o;
              })(t, i, r, e)
            : [];
        }
        _notifyStateChanges(t) {
          const e = this._oldCache || [],
            n = this._cache,
            r = (t, e) =>
              t.filter((t) => !e.some((e) => t.plugin.id === e.plugin.id));
          this._notify(r(e, n), t, "stop"), this._notify(r(n, e), t, "start");
        }
      }
      function ii(t, e) {
        return e || !1 !== t ? (!0 === t ? {} : t) : null;
      }
      function ai(t, e, n, r) {
        let { plugin: i, local: a } = e;
        const o = t.pluginScopeKeys(i),
          s = t.getOptionScopes(n, o);
        return (
          a && i.defaults && s.push(i.defaults),
          t.createResolver(s, r, [""], {
            scriptable: !1,
            indexable: !1,
            allKeys: !0,
          })
        );
      }
      function oi(t, e) {
        const n = te.datasets[t] || {};
        return (
          ((e.datasets || {})[t] || {}).indexAxis ||
          e.indexAxis ||
          n.indexAxis ||
          "x"
        );
      }
      function si(t, e) {
        return "x" === t || "y" === t
          ? t
          : e.axis ||
              ("top" === (n = e.position) || "bottom" === n
                ? "x"
                : "left" === n || "right" === n
                ? "y"
                : void 0) ||
              t.charAt(0).toLowerCase();
        var n;
      }
      function li(t) {
        const e = t.options || (t.options = {});
        (e.plugins = u(e.plugins, {})),
          (e.scales = (function (t, e) {
            const n = Kt[t.type] || { scales: {} },
              r = e.scales || {},
              i = oi(t.type, e),
              a = Object.create(null),
              o = Object.create(null);
            return (
              Object.keys(r).forEach((t) => {
                const e = r[t];
                if (!s(e))
                  return console.error(
                    "Invalid scale configuration for scale: ".concat(t)
                  );
                if (e._proxy)
                  return console.warn(
                    "Ignoring resolver passed as options for scale: ".concat(t)
                  );
                const l = si(t, e),
                  c = (function (t, e) {
                    return t === e ? "_index_" : "_value_";
                  })(l, i),
                  u = n.scales || {};
                (a[l] = a[l] || t),
                  (o[t] = b(Object.create(null), [{ axis: l }, e, u[l], u[c]]));
              }),
              t.data.datasets.forEach((n) => {
                const i = n.type || t.type,
                  s = n.indexAxis || oi(i, e),
                  l = (Kt[i] || {}).scales || {};
                Object.keys(l).forEach((t) => {
                  const e = (function (t, e) {
                      let n = t;
                      return (
                        "_index_" === t
                          ? (n = e)
                          : "_value_" === t && (n = "x" === e ? "y" : "x"),
                        n
                      );
                    })(t, s),
                    i = n[e + "AxisID"] || a[e] || e;
                  (o[i] = o[i] || Object.create(null)),
                    b(o[i], [{ axis: e }, r[i], l[t]]);
                });
              }),
              Object.keys(o).forEach((t) => {
                const e = o[t];
                b(e, [te.scales[e.type], te.scale]);
              }),
              o
            );
          })(t, e));
      }
      function ci(t) {
        return (
          ((t = t || {}).datasets = t.datasets || []),
          (t.labels = t.labels || []),
          t
        );
      }
      const ui = new Map(),
        di = new Set();
      function hi(t, e) {
        let n = ui.get(t);
        return n || ((n = e()), ui.set(t, n), di.add(n)), n;
      }
      const fi = (t, e, n) => {
        const r = w(e, n);
        void 0 !== r && t.add(r);
      };
      class pi {
        constructor(t) {
          (this._config = (function (t) {
            return ((t = t || {}).data = ci(t.data)), li(t), t;
          })(t)),
            (this._scopeCache = new Map()),
            (this._resolverCache = new Map());
        }
        get platform() {
          return this._config.platform;
        }
        get type() {
          return this._config.type;
        }
        set type(t) {
          this._config.type = t;
        }
        get data() {
          return this._config.data;
        }
        set data(t) {
          this._config.data = ci(t);
        }
        get options() {
          return this._config.options;
        }
        set options(t) {
          this._config.options = t;
        }
        get plugins() {
          return this._config.plugins;
        }
        update() {
          const t = this._config;
          this.clearCache(), li(t);
        }
        clearCache() {
          this._scopeCache.clear(), this._resolverCache.clear();
        }
        datasetScopeKeys(t) {
          return hi(t, () => [["datasets.".concat(t), ""]]);
        }
        datasetAnimationScopeKeys(t, e) {
          return hi("".concat(t, ".transition.").concat(e), () => [
            [
              "datasets.".concat(t, ".transitions.").concat(e),
              "transitions.".concat(e),
            ],
            ["datasets.".concat(t), ""],
          ]);
        }
        datasetElementScopeKeys(t, e) {
          return hi("".concat(t, "-").concat(e), () => [
            [
              "datasets.".concat(t, ".elements.").concat(e),
              "datasets.".concat(t),
              "elements.".concat(e),
              "",
            ],
          ]);
        }
        pluginScopeKeys(t) {
          const e = t.id,
            n = this.type;
          return hi("".concat(n, "-plugin-").concat(e), () => [
            ["plugins.".concat(e), ...(t.additionalOptionScopes || [])],
          ]);
        }
        _cachedScopes(t, e) {
          const n = this._scopeCache;
          let r = n.get(t);
          return (r && !e) || ((r = new Map()), n.set(t, r)), r;
        }
        getOptionScopes(t, e, n) {
          const { options: r, type: i } = this,
            a = this._cachedScopes(t, n),
            o = a.get(e);
          if (o) return o;
          const s = new Set();
          e.forEach((e) => {
            t && (s.add(t), e.forEach((e) => fi(s, t, e))),
              e.forEach((t) => fi(s, r, t)),
              e.forEach((t) => fi(s, Kt[i] || {}, t)),
              e.forEach((t) => fi(s, te, t)),
              e.forEach((t) => fi(s, $t, t));
          });
          const l = Array.from(s);
          return (
            0 === l.length && l.push(Object.create(null)),
            di.has(e) && a.set(e, l),
            l
          );
        }
        chartOptionScopes() {
          const { options: t, type: e } = this;
          return [t, Kt[e] || {}, te.datasets[e] || {}, { type: e }, te, $t];
        }
        resolveNamedOptions(t, e, n) {
          let r =
            arguments.length > 3 && void 0 !== arguments[3]
              ? arguments[3]
              : [""];
          const i = { $shared: !0 },
            { resolver: a, subPrefixes: s } = mi(this._resolverCache, t, r);
          let l = a;
          if (
            (function (t, e) {
              const { isScriptable: n, isIndexable: r } = Re(t);
              for (const i of e) {
                const e = n(i),
                  a = r(i),
                  s = (a || e) && t[i];
                if ((e && (A(s) || gi(s))) || (a && o(s))) return !0;
              }
              return !1;
            })(a, e)
          ) {
            i.$shared = !1;
            l = ke(a, (n = A(n) ? n() : n), this.createResolver(t, n, s));
          }
          for (const o of e) i[o] = l[o];
          return i;
        }
        createResolver(t, e) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : [""],
            r = arguments.length > 3 ? arguments[3] : void 0;
          const { resolver: i } = mi(this._resolverCache, t, n);
          return s(e) ? ke(i, e, void 0, r) : i;
        }
      }
      function mi(t, e, n) {
        let r = t.get(e);
        r || ((r = new Map()), t.set(e, r));
        const i = n.join();
        let a = r.get(i);
        if (!a) {
          (a = {
            resolver: Ee(e, n),
            subPrefixes: n.filter((t) => !t.toLowerCase().includes("hover")),
          }),
            r.set(i, a);
        }
        return a;
      }
      const gi = (t) =>
        s(t) &&
        Object.getOwnPropertyNames(t).reduce((e, n) => e || A(t[n]), !1);
      const _i = ["top", "bottom", "left", "right", "chartArea"];
      function vi(t, e) {
        return (
          "top" === t || "bottom" === t || (-1 === _i.indexOf(t) && "x" === e)
        );
      }
      function bi(t, e) {
        return function (n, r) {
          return n[t] === r[t] ? n[e] - r[e] : n[t] - r[t];
        };
      }
      function yi(t) {
        const e = t.chart,
          n = e.options.animation;
        e.notifyPlugins("afterRender"), h(n && n.onComplete, [t], e);
      }
      function xi(t) {
        const e = t.chart,
          n = e.options.animation;
        h(n && n.onProgress, [t], e);
      }
      function wi(t) {
        return (
          qe() && "string" === typeof t
            ? (t = document.getElementById(t))
            : t && t.length && (t = t[0]),
          t && t.canvas && (t = t.canvas),
          t
        );
      }
      const Mi = {},
        Si = (t) => {
          const e = wi(t);
          return Object.values(Mi)
            .filter((t) => t.canvas === e)
            .pop();
        };
      function Ai(t, e, n) {
        const r = Object.keys(t);
        for (const i of r) {
          const r = +i;
          if (r >= e) {
            const a = t[i];
            delete t[i], (n > 0 || r > e) && (t[r + n] = a);
          }
        }
      }
      class Ei {
        constructor(t, e) {
          const n = (this.config = new pi(e)),
            r = wi(t),
            a = Si(r);
          if (a)
            throw new Error(
              "Canvas is already in use. Chart with ID '" +
                a.id +
                "' must be destroyed before the canvas with ID '" +
                a.canvas.id +
                "' can be reused."
            );
          const o = n.createResolver(n.chartOptionScopes(), this.getContext());
          (this.platform = new (n.platform ||
            (function (t) {
              return !qe() ||
                ("undefined" !== typeof OffscreenCanvas &&
                  t instanceof OffscreenCanvas)
                ? jr
                : ni;
            })(r))()),
            this.platform.updateConfig(n);
          const s = this.platform.acquireContext(r, o.aspectRatio),
            l = s && s.canvas,
            c = l && l.height,
            u = l && l.width;
          (this.id = i()),
            (this.ctx = s),
            (this.canvas = l),
            (this.width = u),
            (this.height = c),
            (this._options = o),
            (this._aspectRatio = this.aspectRatio),
            (this._layers = []),
            (this._metasets = []),
            (this._stacks = void 0),
            (this.boxes = []),
            (this.currentDevicePixelRatio = void 0),
            (this.chartArea = void 0),
            (this._active = []),
            (this._lastEvent = void 0),
            (this._listeners = {}),
            (this._responsiveListeners = void 0),
            (this._sortedMetasets = []),
            (this.scales = {}),
            (this._plugins = new ri()),
            (this.$proxies = {}),
            (this._hiddenIndices = {}),
            (this.attached = !1),
            (this._animationsDisabled = void 0),
            (this.$context = void 0),
            (this._doResize = (function (t, e) {
              let n;
              return function () {
                for (
                  var r = arguments.length, i = new Array(r), a = 0;
                  a < r;
                  a++
                )
                  i[a] = arguments[a];
                return (
                  e
                    ? (clearTimeout(n), (n = setTimeout(t, e, i)))
                    : t.apply(this, i),
                  e
                );
              };
            })((t) => this.update(t), o.resizeDelay || 0)),
            (this._dataChanges = []),
            (Mi[this.id] = this),
            s && l
              ? (wn.listen(this, "complete", yi),
                wn.listen(this, "progress", xi),
                this._initialize(),
                this.attached && this.update())
              : console.error(
                  "Failed to create chart: can't acquire context from the given item"
                );
        }
        get aspectRatio() {
          const {
            options: { aspectRatio: t, maintainAspectRatio: e },
            width: n,
            height: r,
            _aspectRatio: i,
          } = this;
          return a(t) ? (e && i ? i : r ? n / r : null) : t;
        }
        get data() {
          return this.config.data;
        }
        set data(t) {
          this.config.data = t;
        }
        get options() {
          return this._options;
        }
        set options(t) {
          this.config.options = t;
        }
        _initialize() {
          return (
            this.notifyPlugins("beforeInit"),
            this.options.responsive
              ? this.resize()
              : rn(this, this.options.devicePixelRatio),
            this.bindEvents(),
            this.notifyPlugins("afterInit"),
            this
          );
        }
        clear() {
          return ie(this.canvas, this.ctx), this;
        }
        stop() {
          return wn.stop(this), this;
        }
        resize(t, e) {
          wn.running(this)
            ? (this._resizeBeforeDraw = { width: t, height: e })
            : this._resize(t, e);
        }
        _resize(t, e) {
          const n = this.options,
            r = this.canvas,
            i = n.maintainAspectRatio && this.aspectRatio,
            a = this.platform.getMaximumSize(r, t, e, i),
            o = n.devicePixelRatio || this.platform.getDevicePixelRatio(),
            s = this.width ? "resize" : "attach";
          (this.width = a.width),
            (this.height = a.height),
            (this._aspectRatio = this.aspectRatio),
            rn(this, o, !0) &&
              (this.notifyPlugins("resize", { size: a }),
              h(n.onResize, [this, a], this),
              this.attached && this._doResize(s) && this.render());
        }
        ensureScalesHaveIDs() {
          f(this.options.scales || {}, (t, e) => {
            t.id = e;
          });
        }
        buildOrUpdateScales() {
          const t = this.options,
            e = t.scales,
            n = this.scales,
            r = Object.keys(n).reduce((t, e) => ((t[e] = !1), t), {});
          let i = [];
          e &&
            (i = i.concat(
              Object.keys(e).map((t) => {
                const n = e[t],
                  r = si(t, n),
                  i = "r" === r,
                  a = "x" === r;
                return {
                  options: n,
                  dposition: i ? "chartArea" : a ? "bottom" : "left",
                  dtype: i ? "radialLinear" : a ? "category" : "linear",
                };
              })
            )),
            f(i, (e) => {
              const i = e.options,
                a = i.id,
                o = si(a, i),
                s = u(i.type, e.dtype);
              (void 0 !== i.position &&
                vi(i.position, o) === vi(e.dposition)) ||
                (i.position = e.dposition),
                (r[a] = !0);
              let l = null;
              if (a in n && n[a].type === s) l = n[a];
              else {
                (l = new (pr.getScale(s))({
                  id: a,
                  type: s,
                  ctx: this.ctx,
                  chart: this,
                })),
                  (n[l.id] = l);
              }
              l.init(i, t);
            }),
            f(r, (t, e) => {
              t || delete n[e];
            }),
            f(n, (t) => {
              Fr.configure(this, t, t.options), Fr.addBox(this, t);
            });
        }
        _updateMetasets() {
          const t = this._metasets,
            e = this.data.datasets.length,
            n = t.length;
          if ((t.sort((t, e) => t.index - e.index), n > e)) {
            for (let t = e; t < n; ++t) this._destroyDatasetMeta(t);
            t.splice(e, n - e);
          }
          this._sortedMetasets = t.slice(0).sort(bi("order", "index"));
        }
        _removeUnreferencedMetasets() {
          const {
            _metasets: t,
            data: { datasets: e },
          } = this;
          t.length > e.length && delete this._stacks,
            t.forEach((t, n) => {
              0 === e.filter((e) => e === t._dataset).length &&
                this._destroyDatasetMeta(n);
            });
        }
        buildOrUpdateControllers() {
          const t = [],
            e = this.data.datasets;
          let n, r;
          for (
            this._removeUnreferencedMetasets(), n = 0, r = e.length;
            n < r;
            n++
          ) {
            const r = e[n];
            let i = this.getDatasetMeta(n);
            const a = r.type || this.config.type;
            if (
              (i.type &&
                i.type !== a &&
                (this._destroyDatasetMeta(n), (i = this.getDatasetMeta(n))),
              (i.type = a),
              (i.indexAxis = r.indexAxis || oi(a, this.options)),
              (i.order = r.order || 0),
              (i.index = n),
              (i.label = "" + r.label),
              (i.visible = this.isDatasetVisible(n)),
              i.controller)
            )
              i.controller.updateIndex(n), i.controller.linkScales();
            else {
              const e = pr.getController(a),
                { datasetElementType: r, dataElementType: o } = te.datasets[a];
              Object.assign(e.prototype, {
                dataElementType: pr.getElement(o),
                datasetElementType: r && pr.getElement(r),
              }),
                (i.controller = new e(this, n)),
                t.push(i.controller);
            }
          }
          return this._updateMetasets(), t;
        }
        _resetElements() {
          f(
            this.data.datasets,
            (t, e) => {
              this.getDatasetMeta(e).controller.reset();
            },
            this
          );
        }
        reset() {
          this._resetElements(), this.notifyPlugins("reset");
        }
        update(t) {
          const e = this.config;
          e.update();
          const n = (this._options = e.createResolver(
              e.chartOptionScopes(),
              this.getContext()
            )),
            r = (this._animationsDisabled = !n.animation);
          if (
            (this._updateScales(),
            this._checkEventBindings(),
            this._updateHiddenIndices(),
            this._plugins.invalidate(),
            !1 ===
              this.notifyPlugins("beforeUpdate", { mode: t, cancelable: !0 }))
          )
            return;
          const i = this.buildOrUpdateControllers();
          this.notifyPlugins("beforeElementsUpdate");
          let a = 0;
          for (let l = 0, c = this.data.datasets.length; l < c; l++) {
            const { controller: t } = this.getDatasetMeta(l),
              e = !r && -1 === i.indexOf(t);
            t.buildOrUpdateElements(e), (a = Math.max(+t.getMaxOverflow(), a));
          }
          (a = this._minPadding = n.layout.autoPadding ? a : 0),
            this._updateLayout(a),
            r ||
              f(i, (t) => {
                t.reset();
              }),
            this._updateDatasets(t),
            this.notifyPlugins("afterUpdate", { mode: t }),
            this._layers.sort(bi("z", "_idx"));
          const { _active: o, _lastEvent: s } = this;
          s
            ? this._eventHandler(s, !0)
            : o.length && this._updateHoverStyles(o, o, !0),
            this.render();
        }
        _updateScales() {
          f(this.scales, (t) => {
            Fr.removeBox(this, t);
          }),
            this.ensureScalesHaveIDs(),
            this.buildOrUpdateScales();
        }
        _checkEventBindings() {
          const t = this.options,
            e = new Set(Object.keys(this._listeners)),
            n = new Set(t.events);
          (E(e, n) && !!this._responsiveListeners === t.responsive) ||
            (this.unbindEvents(), this.bindEvents());
        }
        _updateHiddenIndices() {
          const { _hiddenIndices: t } = this,
            e = this._getUniformDataChanges() || [];
          for (const { method: n, start: r, count: i } of e) {
            Ai(t, r, "_removeElements" === n ? -i : i);
          }
        }
        _getUniformDataChanges() {
          const t = this._dataChanges;
          if (!t || !t.length) return;
          this._dataChanges = [];
          const e = this.data.datasets.length,
            n = (e) =>
              new Set(
                t
                  .filter((t) => t[0] === e)
                  .map((t, e) => e + "," + t.splice(1).join(","))
              ),
            r = n(0);
          for (let i = 1; i < e; i++) if (!E(r, n(i))) return;
          return Array.from(r)
            .map((t) => t.split(","))
            .map((t) => ({ method: t[1], start: +t[2], count: +t[3] }));
        }
        _updateLayout(t) {
          if (!1 === this.notifyPlugins("beforeLayout", { cancelable: !0 }))
            return;
          Fr.update(this, this.width, this.height, t);
          const e = this.chartArea,
            n = e.width <= 0 || e.height <= 0;
          (this._layers = []),
            f(
              this.boxes,
              (t) => {
                (n && "chartArea" === t.position) ||
                  (t.configure && t.configure(),
                  this._layers.push(...t._layers()));
              },
              this
            ),
            this._layers.forEach((t, e) => {
              t._idx = e;
            }),
            this.notifyPlugins("afterLayout");
        }
        _updateDatasets(t) {
          if (
            !1 !==
            this.notifyPlugins("beforeDatasetsUpdate", {
              mode: t,
              cancelable: !0,
            })
          ) {
            for (let t = 0, e = this.data.datasets.length; t < e; ++t)
              this.getDatasetMeta(t).controller.configure();
            for (let e = 0, n = this.data.datasets.length; e < n; ++e)
              this._updateDataset(e, A(t) ? t({ datasetIndex: e }) : t);
            this.notifyPlugins("afterDatasetsUpdate", { mode: t });
          }
        }
        _updateDataset(t, e) {
          const n = this.getDatasetMeta(t),
            r = { meta: n, index: t, mode: e, cancelable: !0 };
          !1 !== this.notifyPlugins("beforeDatasetUpdate", r) &&
            (n.controller._update(e),
            (r.cancelable = !1),
            this.notifyPlugins("afterDatasetUpdate", r));
        }
        render() {
          !1 !== this.notifyPlugins("beforeRender", { cancelable: !0 }) &&
            (wn.has(this)
              ? this.attached && !wn.running(this) && wn.start(this)
              : (this.draw(), yi({ chart: this })));
        }
        draw() {
          let t;
          if (this._resizeBeforeDraw) {
            const { width: t, height: e } = this._resizeBeforeDraw;
            this._resize(t, e), (this._resizeBeforeDraw = null);
          }
          if ((this.clear(), this.width <= 0 || this.height <= 0)) return;
          if (!1 === this.notifyPlugins("beforeDraw", { cancelable: !0 }))
            return;
          const e = this._layers;
          for (t = 0; t < e.length && e[t].z <= 0; ++t)
            e[t].draw(this.chartArea);
          for (this._drawDatasets(); t < e.length; ++t)
            e[t].draw(this.chartArea);
          this.notifyPlugins("afterDraw");
        }
        _getSortedDatasetMetas(t) {
          const e = this._sortedMetasets,
            n = [];
          let r, i;
          for (r = 0, i = e.length; r < i; ++r) {
            const i = e[r];
            (t && !i.visible) || n.push(i);
          }
          return n;
        }
        getSortedVisibleDatasetMetas() {
          return this._getSortedDatasetMetas(!0);
        }
        _drawDatasets() {
          if (
            !1 === this.notifyPlugins("beforeDatasetsDraw", { cancelable: !0 })
          )
            return;
          const t = this.getSortedVisibleDatasetMetas();
          for (let e = t.length - 1; e >= 0; --e) this._drawDataset(t[e]);
          this.notifyPlugins("afterDatasetsDraw");
        }
        _drawDataset(t) {
          const e = this.ctx,
            n = t._clip,
            r = !n.disabled,
            i = this.chartArea,
            a = { meta: t, index: t.index, cancelable: !0 };
          !1 !== this.notifyPlugins("beforeDatasetDraw", a) &&
            (r &&
              le(e, {
                left: !1 === n.left ? 0 : i.left - n.left,
                right: !1 === n.right ? this.width : i.right + n.right,
                top: !1 === n.top ? 0 : i.top - n.top,
                bottom: !1 === n.bottom ? this.height : i.bottom + n.bottom,
              }),
            t.controller.draw(),
            r && ce(e),
            (a.cancelable = !1),
            this.notifyPlugins("afterDatasetDraw", a));
        }
        isPointInArea(t) {
          return se(t, this.chartArea, this._minPadding);
        }
        getElementsAtEventForMode(t, e, n, r) {
          const i = Er.modes[e];
          return "function" === typeof i ? i(this, t, n, r) : [];
        }
        getDatasetMeta(t) {
          const e = this.data.datasets[t],
            n = this._metasets;
          let r = n.filter((t) => t && t._dataset === e).pop();
          return (
            r ||
              ((r = {
                type: null,
                data: [],
                dataset: null,
                controller: null,
                hidden: null,
                xAxisID: null,
                yAxisID: null,
                order: (e && e.order) || 0,
                index: t,
                _dataset: e,
                _parsed: [],
                _sorted: !1,
              }),
              n.push(r)),
            r
          );
        }
        getContext() {
          return (
            this.$context ||
            (this.$context = Ae(null, { chart: this, type: "chart" }))
          );
        }
        getVisibleDatasetCount() {
          return this.getSortedVisibleDatasetMetas().length;
        }
        isDatasetVisible(t) {
          const e = this.data.datasets[t];
          if (!e) return !1;
          const n = this.getDatasetMeta(t);
          return "boolean" === typeof n.hidden ? !n.hidden : !e.hidden;
        }
        setDatasetVisibility(t, e) {
          this.getDatasetMeta(t).hidden = !e;
        }
        toggleDataVisibility(t) {
          this._hiddenIndices[t] = !this._hiddenIndices[t];
        }
        getDataVisibility(t) {
          return !this._hiddenIndices[t];
        }
        _updateVisibility(t, e, n) {
          const r = n ? "show" : "hide",
            i = this.getDatasetMeta(t),
            a = i.controller._resolveAnimations(void 0, r);
          S(e)
            ? ((i.data[e].hidden = !n), this.update())
            : (this.setDatasetVisibility(t, n),
              a.update(i, { visible: n }),
              this.update((e) => (e.datasetIndex === t ? r : void 0)));
        }
        hide(t, e) {
          this._updateVisibility(t, e, !1);
        }
        show(t, e) {
          this._updateVisibility(t, e, !0);
        }
        _destroyDatasetMeta(t) {
          const e = this._metasets[t];
          e && e.controller && e.controller._destroy(),
            delete this._metasets[t];
        }
        _stop() {
          let t, e;
          for (
            this.stop(), wn.remove(this), t = 0, e = this.data.datasets.length;
            t < e;
            ++t
          )
            this._destroyDatasetMeta(t);
        }
        destroy() {
          this.notifyPlugins("beforeDestroy");
          const { canvas: t, ctx: e } = this;
          this._stop(),
            this.config.clearCache(),
            t &&
              (this.unbindEvents(),
              ie(t, e),
              this.platform.releaseContext(e),
              (this.canvas = null),
              (this.ctx = null)),
            this.notifyPlugins("destroy"),
            delete Mi[this.id],
            this.notifyPlugins("afterDestroy");
        }
        toBase64Image() {
          return this.canvas.toDataURL(...arguments);
        }
        bindEvents() {
          this.bindUserEvents(),
            this.options.responsive
              ? this.bindResponsiveEvents()
              : (this.attached = !0);
        }
        bindUserEvents() {
          const t = this._listeners,
            e = this.platform,
            n = (n, r) => {
              e.addEventListener(this, n, r), (t[n] = r);
            },
            r = (t, e, n) => {
              (t.offsetX = e), (t.offsetY = n), this._eventHandler(t);
            };
          f(this.options.events, (t) => n(t, r));
        }
        bindResponsiveEvents() {
          this._responsiveListeners || (this._responsiveListeners = {});
          const t = this._responsiveListeners,
            e = this.platform,
            n = (n, r) => {
              e.addEventListener(this, n, r), (t[n] = r);
            },
            r = (n, r) => {
              t[n] && (e.removeEventListener(this, n, r), delete t[n]);
            },
            i = (t, e) => {
              this.canvas && this.resize(t, e);
            };
          let a;
          const o = () => {
            r("attach", o),
              (this.attached = !0),
              this.resize(),
              n("resize", i),
              n("detach", a);
          };
          (a = () => {
            (this.attached = !1),
              r("resize", i),
              this._stop(),
              this._resize(0, 0),
              n("attach", o);
          }),
            e.isAttached(this.canvas) ? o() : a();
        }
        unbindEvents() {
          f(this._listeners, (t, e) => {
            this.platform.removeEventListener(this, e, t);
          }),
            (this._listeners = {}),
            f(this._responsiveListeners, (t, e) => {
              this.platform.removeEventListener(this, e, t);
            }),
            (this._responsiveListeners = void 0);
        }
        updateHoverStyle(t, e, n) {
          const r = n ? "set" : "remove";
          let i, a, o, s;
          for (
            "dataset" === e &&
              ((i = this.getDatasetMeta(t[0].datasetIndex)),
              i.controller["_" + r + "DatasetHoverStyle"]()),
              o = 0,
              s = t.length;
            o < s;
            ++o
          ) {
            a = t[o];
            const e = a && this.getDatasetMeta(a.datasetIndex).controller;
            e && e[r + "HoverStyle"](a.element, a.datasetIndex, a.index);
          }
        }
        getActiveElements() {
          return this._active || [];
        }
        setActiveElements(t) {
          const e = this._active || [],
            n = t.map((t) => {
              let { datasetIndex: e, index: n } = t;
              const r = this.getDatasetMeta(e);
              if (!r) throw new Error("No dataset found at index " + e);
              return { datasetIndex: e, element: r.data[n], index: n };
            });
          !p(n, e) &&
            ((this._active = n),
            (this._lastEvent = null),
            this._updateHoverStyles(n, e));
        }
        notifyPlugins(t, e, n) {
          return this._plugins.notify(this, t, e, n);
        }
        _updateHoverStyles(t, e, n) {
          const r = this.options.hover,
            i = (t, e) =>
              t.filter(
                (t) =>
                  !e.some(
                    (e) =>
                      t.datasetIndex === e.datasetIndex && t.index === e.index
                  )
              ),
            a = i(e, t),
            o = n ? t : i(t, e);
          a.length && this.updateHoverStyle(a, r.mode, !1),
            o.length && r.mode && this.updateHoverStyle(o, r.mode, !0);
        }
        _eventHandler(t, e) {
          const n = {
              event: t,
              replay: e,
              cancelable: !0,
              inChartArea: this.isPointInArea(t),
            },
            r = (e) =>
              (e.options.events || this.options.events).includes(t.native.type);
          if (!1 === this.notifyPlugins("beforeEvent", n, r)) return;
          const i = this._handleEvent(t, e, n.inChartArea);
          return (
            (n.cancelable = !1),
            this.notifyPlugins("afterEvent", n, r),
            (i || n.changed) && this.render(),
            this
          );
        }
        _handleEvent(t, e, n) {
          const { _active: r = [], options: i } = this,
            a = e,
            o = this._getActiveElements(t, r, n, a),
            s = (function (t) {
              return (
                "mouseup" === t.type ||
                "click" === t.type ||
                "contextmenu" === t.type
              );
            })(t),
            l = (function (t, e, n, r) {
              return n && "mouseout" !== t.type ? (r ? e : t) : null;
            })(t, this._lastEvent, n, s);
          n &&
            ((this._lastEvent = null),
            h(i.onHover, [t, o, this], this),
            s && h(i.onClick, [t, o, this], this));
          const c = !p(o, r);
          return (
            (c || e) && ((this._active = o), this._updateHoverStyles(o, r, e)),
            (this._lastEvent = l),
            c
          );
        }
        _getActiveElements(t, e, n, r) {
          if ("mouseout" === t.type) return [];
          if (!n) return e;
          const i = this.options.hover;
          return this.getElementsAtEventForMode(t, i.mode, i, r);
        }
      }
      const ki = () => f(Ei.instances, (t) => t._plugins.invalidate()),
        Ri = !0;
      function Ti(t, e, n) {
        const {
          startAngle: r,
          pixelMargin: i,
          x: a,
          y: o,
          outerRadius: s,
          innerRadius: l,
        } = e;
        let c = i / s;
        t.beginPath(),
          t.arc(a, o, s, r - c, n + c),
          l > i
            ? ((c = i / l), t.arc(a, o, l, n + c, r - c, !0))
            : t.arc(a, o, i, n + C, r - C),
          t.closePath(),
          t.clip();
      }
      function Oi(t, e, n, r) {
        const i = be(t.options.borderRadius, [
          "outerStart",
          "outerEnd",
          "innerStart",
          "innerEnd",
        ]);
        const a = (n - e) / 2,
          o = Math.min(a, (r * e) / 2),
          s = (t) => {
            const e = ((n - Math.min(a, t)) * r) / 2;
            return Z(t, 0, Math.min(a, e));
          };
        return {
          outerStart: s(i.outerStart),
          outerEnd: s(i.outerEnd),
          innerStart: Z(i.innerStart, 0, o),
          innerEnd: Z(i.innerEnd, 0, o),
        };
      }
      function Pi(t, e, n, r) {
        return { x: n + t * Math.cos(e), y: r + t * Math.sin(e) };
      }
      function Ci(t, e, n, r, i, a) {
        const { x: o, y: s, startAngle: l, pixelMargin: c, innerRadius: u } = e,
          d = Math.max(e.outerRadius + r + n - c, 0),
          h = u > 0 ? u + r + n + c : 0;
        let f = 0;
        const p = i - l;
        if (r) {
          const t = ((u > 0 ? u - r : 0) + (d > 0 ? d - r : 0)) / 2;
          f = (p - (0 !== t ? (p * t) / (t + r) : p)) / 2;
        }
        const m = (p - Math.max(0.001, p * d - n / k) / d) / 2,
          g = l + m + f,
          _ = i - m - f,
          {
            outerStart: v,
            outerEnd: b,
            innerStart: y,
            innerEnd: x,
          } = Oi(e, h, d, _ - g),
          w = d - v,
          M = d - b,
          S = g + v / w,
          A = _ - b / M,
          E = h + y,
          R = h + x,
          T = g + y / E,
          O = _ - x / R;
        if ((t.beginPath(), a)) {
          if ((t.arc(o, s, d, S, A), b > 0)) {
            const e = Pi(M, A, o, s);
            t.arc(e.x, e.y, b, A, _ + C);
          }
          const e = Pi(R, _, o, s);
          if ((t.lineTo(e.x, e.y), x > 0)) {
            const e = Pi(R, O, o, s);
            t.arc(e.x, e.y, x, _ + C, O + Math.PI);
          }
          if ((t.arc(o, s, h, _ - x / h, g + y / h, !0), y > 0)) {
            const e = Pi(E, T, o, s);
            t.arc(e.x, e.y, y, T + Math.PI, g - C);
          }
          const n = Pi(w, g, o, s);
          if ((t.lineTo(n.x, n.y), v > 0)) {
            const e = Pi(w, S, o, s);
            t.arc(e.x, e.y, v, g - C, S);
          }
        } else {
          t.moveTo(o, s);
          const e = Math.cos(S) * d + o,
            n = Math.sin(S) * d + s;
          t.lineTo(e, n);
          const r = Math.cos(A) * d + o,
            i = Math.sin(A) * d + s;
          t.lineTo(r, i);
        }
        t.closePath();
      }
      function Di(t, e, n, r, i, a) {
        const { options: o } = e,
          { borderWidth: s, borderJoinStyle: l } = o,
          c = "inner" === o.borderAlign;
        s &&
          (c
            ? ((t.lineWidth = 2 * s), (t.lineJoin = l || "round"))
            : ((t.lineWidth = s), (t.lineJoin = l || "bevel")),
          e.fullCircles &&
            (function (t, e, n) {
              const {
                  x: r,
                  y: i,
                  startAngle: a,
                  pixelMargin: o,
                  fullCircles: s,
                } = e,
                l = Math.max(e.outerRadius - o, 0),
                c = e.innerRadius + o;
              let u;
              for (
                n && Ti(t, e, a + R),
                  t.beginPath(),
                  t.arc(r, i, c, a + R, a, !0),
                  u = 0;
                u < s;
                ++u
              )
                t.stroke();
              for (t.beginPath(), t.arc(r, i, l, a, a + R), u = 0; u < s; ++u)
                t.stroke();
            })(t, e, c),
          c && Ti(t, e, i),
          Ci(t, e, n, r, i, a),
          t.stroke());
      }
      Object.defineProperties(Ei, {
        defaults: { enumerable: Ri, value: te },
        instances: { enumerable: Ri, value: Mi },
        overrides: { enumerable: Ri, value: Kt },
        registry: { enumerable: Ri, value: pr },
        version: { enumerable: Ri, value: "3.9.1" },
        getChart: { enumerable: Ri, value: Si },
        register: {
          enumerable: Ri,
          value: function () {
            pr.add(...arguments), ki();
          },
        },
        unregister: {
          enumerable: Ri,
          value: function () {
            pr.remove(...arguments), ki();
          },
        },
      });
      class Ii extends er {
        constructor(t) {
          super(),
            (this.options = void 0),
            (this.circumference = void 0),
            (this.startAngle = void 0),
            (this.endAngle = void 0),
            (this.innerRadius = void 0),
            (this.outerRadius = void 0),
            (this.pixelMargin = 0),
            (this.fullCircles = 0),
            t && Object.assign(this, t);
        }
        inRange(t, e, n) {
          const r = this.getProps(["x", "y"], n),
            { angle: i, distance: a } = U(r, { x: t, y: e }),
            {
              startAngle: o,
              endAngle: s,
              innerRadius: l,
              outerRadius: c,
              circumference: d,
            } = this.getProps(
              [
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
                "circumference",
              ],
              n
            ),
            h = this.options.spacing / 2,
            f = u(d, s - o) >= R || X(i, o, s),
            p = K(a, l + h, c + h);
          return f && p;
        }
        getCenterPoint(t) {
          const {
              x: e,
              y: n,
              startAngle: r,
              endAngle: i,
              innerRadius: a,
              outerRadius: o,
            } = this.getProps(
              [
                "x",
                "y",
                "startAngle",
                "endAngle",
                "innerRadius",
                "outerRadius",
                "circumference",
              ],
              t
            ),
            { offset: s, spacing: l } = this.options,
            c = (r + i) / 2,
            u = (a + o + l + s) / 2;
          return { x: e + Math.cos(c) * u, y: n + Math.sin(c) * u };
        }
        tooltipPosition(t) {
          return this.getCenterPoint(t);
        }
        draw(t) {
          const { options: e, circumference: n } = this,
            r = (e.offset || 0) / 2,
            i = (e.spacing || 0) / 2,
            a = e.circular;
          if (
            ((this.pixelMargin = "inner" === e.borderAlign ? 0.33 : 0),
            (this.fullCircles = n > R ? Math.floor(n / R) : 0),
            0 === n || this.innerRadius < 0 || this.outerRadius < 0)
          )
            return;
          t.save();
          let o = 0;
          if (r) {
            o = r / 2;
            const e = (this.startAngle + this.endAngle) / 2;
            t.translate(Math.cos(e) * o, Math.sin(e) * o),
              this.circumference >= k && (o = r);
          }
          (t.fillStyle = e.backgroundColor), (t.strokeStyle = e.borderColor);
          const s = (function (t, e, n, r, i) {
            const { fullCircles: a, startAngle: o, circumference: s } = e;
            let l = e.endAngle;
            if (a) {
              Ci(t, e, n, r, o + R, i);
              for (let e = 0; e < a; ++e) t.fill();
              isNaN(s) || ((l = o + (s % R)), s % R === 0 && (l += R));
            }
            return Ci(t, e, n, r, l, i), t.fill(), l;
          })(t, this, o, i, a);
          Di(t, this, o, i, s, a), t.restore();
        }
      }
      function Bi(t, e) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e;
        (t.lineCap = u(n.borderCapStyle, e.borderCapStyle)),
          t.setLineDash(u(n.borderDash, e.borderDash)),
          (t.lineDashOffset = u(n.borderDashOffset, e.borderDashOffset)),
          (t.lineJoin = u(n.borderJoinStyle, e.borderJoinStyle)),
          (t.lineWidth = u(n.borderWidth, e.borderWidth)),
          (t.strokeStyle = u(n.borderColor, e.borderColor));
      }
      function Ni(t, e, n) {
        t.lineTo(n.x, n.y);
      }
      function Li(t, e) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        const r = t.length,
          { start: i = 0, end: a = r - 1 } = n,
          { start: o, end: s } = e,
          l = Math.max(i, o),
          c = Math.min(a, s),
          u = (i < o && a < o) || (i > s && a > s);
        return {
          count: r,
          start: l,
          loop: e.loop,
          ilen: c < l && !u ? r + c - l : c - l,
        };
      }
      function Vi(t, e, n, r) {
        const { points: i, options: a } = e,
          { count: o, start: s, loop: l, ilen: c } = Li(i, n, r),
          u = (function (t) {
            return t.stepped
              ? ue
              : t.tension || "monotone" === t.cubicInterpolationMode
              ? de
              : Ni;
          })(a);
        let d,
          h,
          f,
          { move: p = !0, reverse: m } = r || {};
        for (d = 0; d <= c; ++d)
          (h = i[(s + (m ? c - d : d)) % o]),
            h.skip ||
              (p ? (t.moveTo(h.x, h.y), (p = !1)) : u(t, f, h, m, a.stepped),
              (f = h));
        return (
          l && ((h = i[(s + (m ? c : 0)) % o]), u(t, f, h, m, a.stepped)), !!l
        );
      }
      function Fi(t, e, n, r) {
        const i = e.points,
          { count: a, start: o, ilen: s } = Li(i, n, r),
          { move: l = !0, reverse: c } = r || {};
        let u,
          d,
          h,
          f,
          p,
          m,
          g = 0,
          _ = 0;
        const v = (t) => (o + (c ? s - t : t)) % a,
          b = () => {
            f !== p && (t.lineTo(g, p), t.lineTo(g, f), t.lineTo(g, m));
          };
        for (l && ((d = i[v(0)]), t.moveTo(d.x, d.y)), u = 0; u <= s; ++u) {
          if (((d = i[v(u)]), d.skip)) continue;
          const e = d.x,
            n = d.y,
            r = 0 | e;
          r === h
            ? (n < f ? (f = n) : n > p && (p = n), (g = (_ * g + e) / ++_))
            : (b(), t.lineTo(e, n), (h = r), (_ = 0), (f = p = n)),
            (m = n);
        }
        b();
      }
      function Hi(t) {
        const e = t.options,
          n = e.borderDash && e.borderDash.length;
        return !t._decimated &&
          !t._loop &&
          !e.tension &&
          "monotone" !== e.cubicInterpolationMode &&
          !e.stepped &&
          !n
          ? Fi
          : Vi;
      }
      (Ii.id = "arc"),
        (Ii.defaults = {
          borderAlign: "center",
          borderColor: "#fff",
          borderJoinStyle: void 0,
          borderRadius: 0,
          borderWidth: 2,
          offset: 0,
          spacing: 0,
          angle: void 0,
          circular: !0,
        }),
        (Ii.defaultRoutes = { backgroundColor: "backgroundColor" });
      const ji = "function" === typeof Path2D;
      function Yi(t, e, n, r) {
        ji && !e.options.segment
          ? (function (t, e, n, r) {
              let i = e._path;
              i ||
                ((i = e._path = new Path2D()),
                e.path(i, n, r) && i.closePath()),
                Bi(t, e.options),
                t.stroke(i);
            })(t, e, n, r)
          : (function (t, e, n, r) {
              const { segments: i, options: a } = e,
                o = Hi(e);
              for (const s of i)
                Bi(t, a, s.style),
                  t.beginPath(),
                  o(t, e, s, { start: n, end: n + r - 1 }) && t.closePath(),
                  t.stroke();
            })(t, e, n, r);
      }
      class Wi extends er {
        constructor(t) {
          super(),
            (this.animated = !0),
            (this.options = void 0),
            (this._chart = void 0),
            (this._loop = void 0),
            (this._fullLoop = void 0),
            (this._path = void 0),
            (this._points = void 0),
            (this._segments = void 0),
            (this._decimated = !1),
            (this._pointsUpdated = !1),
            (this._datasetIndex = void 0),
            t && Object.assign(this, t);
        }
        updateControlPoints(t, e) {
          const n = this.options;
          if (
            (n.tension || "monotone" === n.cubicInterpolationMode) &&
            !n.stepped &&
            !this._pointsUpdated
          ) {
            const r = n.spanGaps ? this._loop : this._fullLoop;
            Ge(this._points, n, t, r, e), (this._pointsUpdated = !0);
          }
        }
        set points(t) {
          (this._points = t),
            delete this._segments,
            delete this._path,
            (this._pointsUpdated = !1);
        }
        get points() {
          return this._points;
        }
        get segments() {
          return (
            this._segments ||
            (this._segments = (function (t, e) {
              const n = t.points,
                r = t.options.spanGaps,
                i = n.length;
              if (!i) return [];
              const a = !!t._loop,
                { start: o, end: s } = (function (t, e, n, r) {
                  let i = 0,
                    a = e - 1;
                  if (n && !r) for (; i < e && !t[i].skip; ) i++;
                  for (; i < e && t[i].skip; ) i++;
                  for (i %= e, n && (a += i); a > i && t[a % e].skip; ) a--;
                  return (a %= e), { start: i, end: a };
                })(n, i, a, r);
              return bn(
                t,
                !0 === r
                  ? [{ start: o, end: s, loop: a }]
                  : (function (t, e, n, r) {
                      const i = t.length,
                        a = [];
                      let o,
                        s = e,
                        l = t[e];
                      for (o = e + 1; o <= n; ++o) {
                        const n = t[o % i];
                        n.skip || n.stop
                          ? l.skip ||
                            ((r = !1),
                            a.push({ start: e % i, end: (o - 1) % i, loop: r }),
                            (e = s = n.stop ? o : null))
                          : ((s = o), l.skip && (e = o)),
                          (l = n);
                      }
                      return (
                        null !== s &&
                          a.push({ start: e % i, end: s % i, loop: r }),
                        a
                      );
                    })(
                      n,
                      o,
                      s < o ? s + i : s,
                      !!t._fullLoop && 0 === o && s === i - 1
                    ),
                n,
                e
              );
            })(this, this.options.segment))
          );
        }
        first() {
          const t = this.segments,
            e = this.points;
          return t.length && e[t[0].start];
        }
        last() {
          const t = this.segments,
            e = this.points,
            n = t.length;
          return n && e[t[n - 1].end];
        }
        interpolate(t, e) {
          const n = this.options,
            r = t[e],
            i = this.points,
            a = vn(this, { property: e, start: r, end: r });
          if (!a.length) return;
          const o = [],
            s = (function (t) {
              return t.stepped
                ? ln
                : t.tension || "monotone" === t.cubicInterpolationMode
                ? cn
                : sn;
            })(n);
          let l, c;
          for (l = 0, c = a.length; l < c; ++l) {
            const { start: c, end: u } = a[l],
              d = i[c],
              h = i[u];
            if (d === h) {
              o.push(d);
              continue;
            }
            const f = s(d, h, Math.abs((r - d[e]) / (h[e] - d[e])), n.stepped);
            (f[e] = t[e]), o.push(f);
          }
          return 1 === o.length ? o[0] : o;
        }
        pathSegment(t, e, n) {
          return Hi(this)(t, this, e, n);
        }
        path(t, e, n) {
          const r = this.segments,
            i = Hi(this);
          let a = this._loop;
          (e = e || 0), (n = n || this.points.length - e);
          for (const o of r) a &= i(t, this, o, { start: e, end: e + n - 1 });
          return !!a;
        }
        draw(t, e, n, r) {
          const i = this.options || {};
          (this.points || []).length &&
            i.borderWidth &&
            (t.save(), Yi(t, this, n, r), t.restore()),
            this.animated &&
              ((this._pointsUpdated = !1), (this._path = void 0));
        }
      }
      function Ui(t, e, n, r) {
        const i = t.options,
          { [n]: a } = t.getProps([n], r);
        return Math.abs(e - a) < i.radius + i.hitRadius;
      }
      (Wi.id = "line"),
        (Wi.defaults = {
          borderCapStyle: "butt",
          borderDash: [],
          borderDashOffset: 0,
          borderJoinStyle: "miter",
          borderWidth: 3,
          capBezierPoints: !0,
          cubicInterpolationMode: "default",
          fill: !1,
          spanGaps: !1,
          stepped: !1,
          tension: 0,
        }),
        (Wi.defaultRoutes = {
          backgroundColor: "backgroundColor",
          borderColor: "borderColor",
        }),
        (Wi.descriptors = {
          _scriptable: !0,
          _indexable: (t) => "borderDash" !== t && "fill" !== t,
        });
      class zi extends er {
        constructor(t) {
          super(),
            (this.options = void 0),
            (this.parsed = void 0),
            (this.skip = void 0),
            (this.stop = void 0),
            t && Object.assign(this, t);
        }
        inRange(t, e, n) {
          const r = this.options,
            { x: i, y: a } = this.getProps(["x", "y"], n);
          return (
            Math.pow(t - i, 2) + Math.pow(e - a, 2) <
            Math.pow(r.hitRadius + r.radius, 2)
          );
        }
        inXRange(t, e) {
          return Ui(this, t, "x", e);
        }
        inYRange(t, e) {
          return Ui(this, t, "y", e);
        }
        getCenterPoint(t) {
          const { x: e, y: n } = this.getProps(["x", "y"], t);
          return { x: e, y: n };
        }
        size(t) {
          let e = (t = t || this.options || {}).radius || 0;
          e = Math.max(e, (e && t.hoverRadius) || 0);
          return 2 * (e + ((e && t.borderWidth) || 0));
        }
        draw(t, e) {
          const n = this.options;
          this.skip ||
            n.radius < 0.1 ||
            !se(this, e, this.size(n) / 2) ||
            ((t.strokeStyle = n.borderColor),
            (t.lineWidth = n.borderWidth),
            (t.fillStyle = n.backgroundColor),
            ae(t, n, this.x, this.y));
        }
        getRange() {
          const t = this.options || {};
          return t.radius + t.hitRadius;
        }
      }
      function Gi(t, e) {
        const {
          x: n,
          y: r,
          base: i,
          width: a,
          height: o,
        } = t.getProps(["x", "y", "base", "width", "height"], e);
        let s, l, c, u, d;
        return (
          t.horizontal
            ? ((d = o / 2),
              (s = Math.min(n, i)),
              (l = Math.max(n, i)),
              (c = r - d),
              (u = r + d))
            : ((d = a / 2),
              (s = n - d),
              (l = n + d),
              (c = Math.min(r, i)),
              (u = Math.max(r, i))),
          { left: s, top: c, right: l, bottom: u }
        );
      }
      function qi(t, e, n, r) {
        return t ? 0 : Z(e, n, r);
      }
      function Xi(t) {
        const e = Gi(t),
          n = e.right - e.left,
          r = e.bottom - e.top,
          i = (function (t, e, n) {
            const r = t.options.borderWidth,
              i = t.borderSkipped,
              a = ye(r);
            return {
              t: qi(i.top, a.top, 0, n),
              r: qi(i.right, a.right, 0, e),
              b: qi(i.bottom, a.bottom, 0, n),
              l: qi(i.left, a.left, 0, e),
            };
          })(t, n / 2, r / 2),
          a = (function (t, e, n) {
            const { enableBorderRadius: r } = t.getProps([
                "enableBorderRadius",
              ]),
              i = t.options.borderRadius,
              a = xe(i),
              o = Math.min(e, n),
              l = t.borderSkipped,
              c = r || s(i);
            return {
              topLeft: qi(!c || l.top || l.left, a.topLeft, 0, o),
              topRight: qi(!c || l.top || l.right, a.topRight, 0, o),
              bottomLeft: qi(!c || l.bottom || l.left, a.bottomLeft, 0, o),
              bottomRight: qi(!c || l.bottom || l.right, a.bottomRight, 0, o),
            };
          })(t, n / 2, r / 2);
        return {
          outer: { x: e.left, y: e.top, w: n, h: r, radius: a },
          inner: {
            x: e.left + i.l,
            y: e.top + i.t,
            w: n - i.l - i.r,
            h: r - i.t - i.b,
            radius: {
              topLeft: Math.max(0, a.topLeft - Math.max(i.t, i.l)),
              topRight: Math.max(0, a.topRight - Math.max(i.t, i.r)),
              bottomLeft: Math.max(0, a.bottomLeft - Math.max(i.b, i.l)),
              bottomRight: Math.max(0, a.bottomRight - Math.max(i.b, i.r)),
            },
          },
        };
      }
      function Zi(t, e, n, r) {
        const i = null === e,
          a = null === n,
          o = t && !(i && a) && Gi(t, r);
        return (
          o && (i || K(e, o.left, o.right)) && (a || K(n, o.top, o.bottom))
        );
      }
      function Ki(t, e) {
        t.rect(e.x, e.y, e.w, e.h);
      }
      function $i(t, e) {
        let n =
          arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        const r = t.x !== n.x ? -e : 0,
          i = t.y !== n.y ? -e : 0,
          a = (t.x + t.w !== n.x + n.w ? e : 0) - r,
          o = (t.y + t.h !== n.y + n.h ? e : 0) - i;
        return {
          x: t.x + r,
          y: t.y + i,
          w: t.w + a,
          h: t.h + o,
          radius: t.radius,
        };
      }
      (zi.id = "point"),
        (zi.defaults = {
          borderWidth: 1,
          hitRadius: 1,
          hoverBorderWidth: 1,
          hoverRadius: 4,
          pointStyle: "circle",
          radius: 3,
          rotation: 0,
        }),
        (zi.defaultRoutes = {
          backgroundColor: "backgroundColor",
          borderColor: "borderColor",
        });
      class Qi extends er {
        constructor(t) {
          super(),
            (this.options = void 0),
            (this.horizontal = void 0),
            (this.base = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.inflateAmount = void 0),
            t && Object.assign(this, t);
        }
        draw(t) {
          const {
              inflateAmount: e,
              options: { borderColor: n, backgroundColor: r },
            } = this,
            { inner: i, outer: a } = Xi(this),
            o =
              (s = a.radius).topLeft ||
              s.topRight ||
              s.bottomLeft ||
              s.bottomRight
                ? pe
                : Ki;
          var s;
          t.save(),
            (a.w === i.w && a.h === i.h) ||
              (t.beginPath(),
              o(t, $i(a, e, i)),
              t.clip(),
              o(t, $i(i, -e, a)),
              (t.fillStyle = n),
              t.fill("evenodd")),
            t.beginPath(),
            o(t, $i(i, e)),
            (t.fillStyle = r),
            t.fill(),
            t.restore();
        }
        inRange(t, e, n) {
          return Zi(this, t, e, n);
        }
        inXRange(t, e) {
          return Zi(this, t, null, e);
        }
        inYRange(t, e) {
          return Zi(this, null, t, e);
        }
        getCenterPoint(t) {
          const {
            x: e,
            y: n,
            base: r,
            horizontal: i,
          } = this.getProps(["x", "y", "base", "horizontal"], t);
          return { x: i ? (e + r) / 2 : e, y: i ? n : (n + r) / 2 };
        }
        getRange(t) {
          return "x" === t ? this.width / 2 : this.height / 2;
        }
      }
      (Qi.id = "bar"),
        (Qi.defaults = {
          borderSkipped: "start",
          borderWidth: 0,
          borderRadius: 0,
          inflateAmount: "auto",
          pointStyle: void 0,
        }),
        (Qi.defaultRoutes = {
          backgroundColor: "backgroundColor",
          borderColor: "borderColor",
        });
      var Ji = Object.freeze({
        __proto__: null,
        ArcElement: Ii,
        LineElement: Wi,
        PointElement: zi,
        BarElement: Qi,
      });
      function ta(t) {
        if (t._decimated) {
          const e = t._data;
          delete t._decimated,
            delete t._data,
            Object.defineProperty(t, "data", { value: e });
        }
      }
      function ea(t) {
        t.data.datasets.forEach((t) => {
          ta(t);
        });
      }
      var na = {
        id: "decimation",
        defaults: { algorithm: "min-max", enabled: !1 },
        beforeElementsUpdate: (t, e, n) => {
          if (!n.enabled) return void ea(t);
          const r = t.width;
          t.data.datasets.forEach((e, i) => {
            const { _data: o, indexAxis: s } = e,
              l = t.getDatasetMeta(i),
              c = o || e.data;
            if ("y" === Se([s, t.options.indexAxis])) return;
            if (!l.controller.supportsDecimation) return;
            const u = t.scales[l.xAxisID];
            if ("linear" !== u.type && "time" !== u.type) return;
            if (t.options.parsing) return;
            let { start: d, count: h } = (function (t, e) {
              const n = e.length;
              let r,
                i = 0;
              const { iScale: a } = t,
                {
                  min: o,
                  max: s,
                  minDefined: l,
                  maxDefined: c,
                } = a.getUserBounds();
              return (
                l && (i = Z(Q(e, a.axis, o).lo, 0, n - 1)),
                (r = c ? Z(Q(e, a.axis, s).hi + 1, i, n) - i : n - i),
                { start: i, count: r }
              );
            })(l, c);
            if (h <= (n.threshold || 4 * r)) return void ta(e);
            let f;
            switch (
              (a(o) &&
                ((e._data = c),
                delete e.data,
                Object.defineProperty(e, "data", {
                  configurable: !0,
                  enumerable: !0,
                  get: function () {
                    return this._decimated;
                  },
                  set: function (t) {
                    this._data = t;
                  },
                })),
              n.algorithm)
            ) {
              case "lttb":
                f = (function (t, e, n, r, i) {
                  const a = i.samples || r;
                  if (a >= n) return t.slice(e, e + n);
                  const o = [],
                    s = (n - 2) / (a - 2);
                  let l = 0;
                  const c = e + n - 1;
                  let u,
                    d,
                    h,
                    f,
                    p,
                    m = e;
                  for (o[l++] = t[m], u = 0; u < a - 2; u++) {
                    let r,
                      i = 0,
                      a = 0;
                    const c = Math.floor((u + 1) * s) + 1 + e,
                      g = Math.min(Math.floor((u + 2) * s) + 1, n) + e,
                      _ = g - c;
                    for (r = c; r < g; r++) (i += t[r].x), (a += t[r].y);
                    (i /= _), (a /= _);
                    const v = Math.floor(u * s) + 1 + e,
                      b = Math.min(Math.floor((u + 1) * s) + 1, n) + e,
                      { x: y, y: x } = t[m];
                    for (h = f = -1, r = v; r < b; r++)
                      (f =
                        0.5 *
                        Math.abs(
                          (y - i) * (t[r].y - x) - (y - t[r].x) * (a - x)
                        )),
                        f > h && ((h = f), (d = t[r]), (p = r));
                    (o[l++] = d), (m = p);
                  }
                  return (o[l++] = t[c]), o;
                })(c, d, h, r, n);
                break;
              case "min-max":
                f = (function (t, e, n, r) {
                  let i,
                    o,
                    s,
                    l,
                    c,
                    u,
                    d,
                    h,
                    f,
                    p,
                    m = 0,
                    g = 0;
                  const _ = [],
                    v = e + n - 1,
                    b = t[e].x,
                    y = t[v].x - b;
                  for (i = e; i < e + n; ++i) {
                    (o = t[i]), (s = ((o.x - b) / y) * r), (l = o.y);
                    const e = 0 | s;
                    if (e === c)
                      l < f ? ((f = l), (u = i)) : l > p && ((p = l), (d = i)),
                        (m = (g * m + o.x) / ++g);
                    else {
                      const n = i - 1;
                      if (!a(u) && !a(d)) {
                        const e = Math.min(u, d),
                          r = Math.max(u, d);
                        e !== h && e !== n && _.push({ ...t[e], x: m }),
                          r !== h && r !== n && _.push({ ...t[r], x: m });
                      }
                      i > 0 && n !== h && _.push(t[n]),
                        _.push(o),
                        (c = e),
                        (g = 0),
                        (f = p = l),
                        (u = d = h = i);
                    }
                  }
                  return _;
                })(c, d, h, r);
                break;
              default:
                throw new Error(
                  "Unsupported decimation algorithm '".concat(n.algorithm, "'")
                );
            }
            e._decimated = f;
          });
        },
        destroy(t) {
          ea(t);
        },
      };
      function ra(t, e, n, r) {
        if (r) return;
        let i = e[t],
          a = n[t];
        return (
          "angle" === t && ((i = q(i)), (a = q(a))),
          { property: t, start: i, end: a }
        );
      }
      function ia(t, e, n) {
        for (; e > t; e--) {
          const t = n[e];
          if (!isNaN(t.x) && !isNaN(t.y)) break;
        }
        return e;
      }
      function aa(t, e, n, r) {
        return t && e ? r(t[n], e[n]) : t ? t[n] : e ? e[n] : 0;
      }
      function oa(t, e) {
        let n = [],
          r = !1;
        return (
          o(t)
            ? ((r = !0), (n = t))
            : (n = (function (t, e) {
                const { x: n = null, y: r = null } = t || {},
                  i = e.points,
                  a = [];
                return (
                  e.segments.forEach((t) => {
                    let { start: e, end: o } = t;
                    o = ia(e, o, i);
                    const s = i[e],
                      l = i[o];
                    null !== r
                      ? (a.push({ x: s.x, y: r }), a.push({ x: l.x, y: r }))
                      : null !== n &&
                        (a.push({ x: n, y: s.y }), a.push({ x: n, y: l.y }));
                  }),
                  a
                );
              })(t, e)),
          n.length
            ? new Wi({
                points: n,
                options: { tension: 0 },
                _loop: r,
                _fullLoop: r,
              })
            : null
        );
      }
      function sa(t) {
        return t && !1 !== t.fill;
      }
      function la(t, e, n) {
        let r = t[e].fill;
        const i = [e];
        let a;
        if (!n) return r;
        for (; !1 !== r && -1 === i.indexOf(r); ) {
          if (!l(r)) return r;
          if (((a = t[r]), !a)) return !1;
          if (a.visible) return r;
          i.push(r), (r = a.fill);
        }
        return !1;
      }
      function ca(t, e, n) {
        const r = (function (t) {
          const e = t.options,
            n = e.fill;
          let r = u(n && n.target, n);
          void 0 === r && (r = !!e.backgroundColor);
          if (!1 === r || null === r) return !1;
          if (!0 === r) return "origin";
          return r;
        })(t);
        if (s(r)) return !isNaN(r.value) && r;
        let i = parseFloat(r);
        return l(i) && Math.floor(i) === i
          ? (function (t, e, n, r) {
              ("-" !== t && "+" !== t) || (n = e + n);
              if (n === e || n < 0 || n >= r) return !1;
              return n;
            })(r[0], e, i, n)
          : ["origin", "start", "end", "stack", "shape"].indexOf(r) >= 0 && r;
      }
      function ua(t, e, n) {
        const r = [];
        for (let i = 0; i < n.length; i++) {
          const a = n[i],
            { first: o, last: s, point: l } = da(a, e, "x");
          if (!(!l || (o && s)))
            if (o) r.unshift(l);
            else if ((t.push(l), !s)) break;
        }
        t.push(...r);
      }
      function da(t, e, n) {
        const r = t.interpolate(e, n);
        if (!r) return {};
        const i = r[n],
          a = t.segments,
          o = t.points;
        let s = !1,
          l = !1;
        for (let c = 0; c < a.length; c++) {
          const t = a[c],
            e = o[t.start][n],
            r = o[t.end][n];
          if (K(i, e, r)) {
            (s = i === e), (l = i === r);
            break;
          }
        }
        return { first: s, last: l, point: r };
      }
      class ha {
        constructor(t) {
          (this.x = t.x), (this.y = t.y), (this.radius = t.radius);
        }
        pathSegment(t, e, n) {
          const { x: r, y: i, radius: a } = this;
          return (
            (e = e || { start: 0, end: R }),
            t.arc(r, i, a, e.end, e.start, !0),
            !n.bounds
          );
        }
        interpolate(t) {
          const { x: e, y: n, radius: r } = this,
            i = t.angle;
          return { x: e + Math.cos(i) * r, y: n + Math.sin(i) * r, angle: i };
        }
      }
      function fa(t) {
        const { chart: e, fill: n, line: r } = t;
        if (l(n))
          return (function (t, e) {
            const n = t.getDatasetMeta(e),
              r = n && t.isDatasetVisible(e);
            return r ? n.dataset : null;
          })(e, n);
        if ("stack" === n)
          return (function (t) {
            const { scale: e, index: n, line: r } = t,
              i = [],
              a = r.segments,
              o = r.points,
              s = (function (t, e) {
                const n = [],
                  r = t.getMatchingVisibleMetas("line");
                for (let i = 0; i < r.length; i++) {
                  const t = r[i];
                  if (t.index === e) break;
                  t.hidden || n.unshift(t.dataset);
                }
                return n;
              })(e, n);
            s.push(oa({ x: null, y: e.bottom }, r));
            for (let l = 0; l < a.length; l++) {
              const t = a[l];
              for (let e = t.start; e <= t.end; e++) ua(i, o[e], s);
            }
            return new Wi({ points: i, options: {} });
          })(t);
        if ("shape" === n) return !0;
        const i = (function (t) {
          const e = t.scale || {};
          if (e.getPointPositionForValue)
            return (function (t) {
              const { scale: e, fill: n } = t,
                r = e.options,
                i = e.getLabels().length,
                a = r.reverse ? e.max : e.min,
                o = (function (t, e, n) {
                  let r;
                  return (
                    (r =
                      "start" === t
                        ? n
                        : "end" === t
                        ? e.options.reverse
                          ? e.min
                          : e.max
                        : s(t)
                        ? t.value
                        : e.getBaseValue()),
                    r
                  );
                })(n, e, a),
                l = [];
              if (r.grid.circular) {
                const t = e.getPointPositionForValue(0, a);
                return new ha({
                  x: t.x,
                  y: t.y,
                  radius: e.getDistanceFromCenterForValue(o),
                });
              }
              for (let s = 0; s < i; ++s)
                l.push(e.getPointPositionForValue(s, o));
              return l;
            })(t);
          return (function (t) {
            const { scale: e = {}, fill: n } = t,
              r = (function (t, e) {
                let n = null;
                return (
                  "start" === t
                    ? (n = e.bottom)
                    : "end" === t
                    ? (n = e.top)
                    : s(t)
                    ? (n = e.getPixelForValue(t.value))
                    : e.getBasePixel && (n = e.getBasePixel()),
                  n
                );
              })(n, e);
            if (l(r)) {
              const t = e.isHorizontal();
              return { x: t ? r : null, y: t ? null : r };
            }
            return null;
          })(t);
        })(t);
        return i instanceof ha ? i : oa(i, r);
      }
      function pa(t, e, n) {
        const r = fa(e),
          { line: i, scale: a, axis: o } = e,
          s = i.options,
          l = s.fill,
          c = s.backgroundColor,
          { above: u = c, below: d = c } = l || {};
        r &&
          i.points.length &&
          (le(t, n),
          (function (t, e) {
            const {
                line: n,
                target: r,
                above: i,
                below: a,
                area: o,
                scale: s,
              } = e,
              l = n._loop ? "angle" : e.axis;
            t.save(),
              "x" === l &&
                a !== i &&
                (ma(t, r, o.top),
                ga(t, { line: n, target: r, color: i, scale: s, property: l }),
                t.restore(),
                t.save(),
                ma(t, r, o.bottom));
            ga(t, { line: n, target: r, color: a, scale: s, property: l }),
              t.restore();
          })(t, {
            line: i,
            target: r,
            above: u,
            below: d,
            area: n,
            scale: a,
            axis: o,
          }),
          ce(t));
      }
      function ma(t, e, n) {
        const { segments: r, points: i } = e;
        let a = !0,
          o = !1;
        t.beginPath();
        for (const s of r) {
          const { start: r, end: l } = s,
            c = i[r],
            u = i[ia(r, l, i)];
          a
            ? (t.moveTo(c.x, c.y), (a = !1))
            : (t.lineTo(c.x, n), t.lineTo(c.x, c.y)),
            (o = !!e.pathSegment(t, s, { move: o })),
            o ? t.closePath() : t.lineTo(u.x, n);
        }
        t.lineTo(e.first().x, n), t.closePath(), t.clip();
      }
      function ga(t, e) {
        const { line: n, target: r, property: i, color: a, scale: o } = e,
          s = (function (t, e, n) {
            const r = t.segments,
              i = t.points,
              a = e.points,
              o = [];
            for (const s of r) {
              let { start: t, end: r } = s;
              r = ia(t, r, i);
              const l = ra(n, i[t], i[r], s.loop);
              if (!e.segments) {
                o.push({ source: s, target: l, start: i[t], end: i[r] });
                continue;
              }
              const c = vn(e, l);
              for (const e of c) {
                const t = ra(n, a[e.start], a[e.end], e.loop),
                  r = _n(s, i, t);
                for (const i of r)
                  o.push({
                    source: i,
                    target: e,
                    start: { [n]: aa(l, t, "start", Math.max) },
                    end: { [n]: aa(l, t, "end", Math.min) },
                  });
              }
            }
            return o;
          })(n, r, i);
        for (const { source: l, target: c, start: u, end: d } of s) {
          const { style: { backgroundColor: e = a } = {} } = l,
            s = !0 !== r;
          t.save(),
            (t.fillStyle = e),
            _a(t, o, s && ra(i, u, d)),
            t.beginPath();
          const h = !!n.pathSegment(t, l);
          let f;
          if (s) {
            h ? t.closePath() : va(t, r, d, i);
            const e = !!r.pathSegment(t, c, { move: h, reverse: !0 });
            (f = h && e), f || va(t, r, u, i);
          }
          t.closePath(), t.fill(f ? "evenodd" : "nonzero"), t.restore();
        }
      }
      function _a(t, e, n) {
        const { top: r, bottom: i } = e.chart.chartArea,
          { property: a, start: o, end: s } = n || {};
        "x" === a && (t.beginPath(), t.rect(o, r, s - o, i - r), t.clip());
      }
      function va(t, e, n, r) {
        const i = e.interpolate(n, r);
        i && t.lineTo(i.x, i.y);
      }
      var ba = {
        id: "filler",
        afterDatasetsUpdate(t, e, n) {
          const r = (t.data.datasets || []).length,
            i = [];
          let a, o, s, l;
          for (o = 0; o < r; ++o)
            (a = t.getDatasetMeta(o)),
              (s = a.dataset),
              (l = null),
              s &&
                s.options &&
                s instanceof Wi &&
                (l = {
                  visible: t.isDatasetVisible(o),
                  index: o,
                  fill: ca(s, o, r),
                  chart: t,
                  axis: a.controller.options.indexAxis,
                  scale: a.vScale,
                  line: s,
                }),
              (a.$filler = l),
              i.push(l);
          for (o = 0; o < r; ++o)
            (l = i[o]), l && !1 !== l.fill && (l.fill = la(i, o, n.propagate));
        },
        beforeDraw(t, e, n) {
          const r = "beforeDraw" === n.drawTime,
            i = t.getSortedVisibleDatasetMetas(),
            a = t.chartArea;
          for (let o = i.length - 1; o >= 0; --o) {
            const e = i[o].$filler;
            e &&
              (e.line.updateControlPoints(a, e.axis),
              r && e.fill && pa(t.ctx, e, a));
          }
        },
        beforeDatasetsDraw(t, e, n) {
          if ("beforeDatasetsDraw" !== n.drawTime) return;
          const r = t.getSortedVisibleDatasetMetas();
          for (let i = r.length - 1; i >= 0; --i) {
            const e = r[i].$filler;
            sa(e) && pa(t.ctx, e, t.chartArea);
          }
        },
        beforeDatasetDraw(t, e, n) {
          const r = e.meta.$filler;
          sa(r) &&
            "beforeDatasetDraw" === n.drawTime &&
            pa(t.ctx, r, t.chartArea);
        },
        defaults: { propagate: !0, drawTime: "beforeDatasetDraw" },
      };
      const ya = (t, e) => {
        let { boxHeight: n = e, boxWidth: r = e } = t;
        return (
          t.usePointStyle &&
            ((n = Math.min(n, e)), (r = t.pointStyleWidth || Math.min(r, e))),
          { boxWidth: r, boxHeight: n, itemHeight: Math.max(e, n) }
        );
      };
      class xa extends er {
        constructor(t) {
          super(),
            (this._added = !1),
            (this.legendHitBoxes = []),
            (this._hoveredItem = null),
            (this.doughnutMode = !1),
            (this.chart = t.chart),
            (this.options = t.options),
            (this.ctx = t.ctx),
            (this.legendItems = void 0),
            (this.columnSizes = void 0),
            (this.lineWidths = void 0),
            (this.maxHeight = void 0),
            (this.maxWidth = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.height = void 0),
            (this.width = void 0),
            (this._margins = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(t, e, n) {
          (this.maxWidth = t),
            (this.maxHeight = e),
            (this._margins = n),
            this.setDimensions(),
            this.buildLabels(),
            this.fit();
        }
        setDimensions() {
          this.isHorizontal()
            ? ((this.width = this.maxWidth),
              (this.left = this._margins.left),
              (this.right = this.width))
            : ((this.height = this.maxHeight),
              (this.top = this._margins.top),
              (this.bottom = this.height));
        }
        buildLabels() {
          const t = this.options.labels || {};
          let e = h(t.generateLabels, [this.chart], this) || [];
          t.filter && (e = e.filter((e) => t.filter(e, this.chart.data))),
            t.sort && (e = e.sort((e, n) => t.sort(e, n, this.chart.data))),
            this.options.reverse && e.reverse(),
            (this.legendItems = e);
        }
        fit() {
          const { options: t, ctx: e } = this;
          if (!t.display) return void (this.width = this.height = 0);
          const n = t.labels,
            r = Me(n.font),
            i = r.size,
            a = this._computeTitleHeight(),
            { boxWidth: o, itemHeight: s } = ya(n, i);
          let l, c;
          (e.font = r.string),
            this.isHorizontal()
              ? ((l = this.maxWidth), (c = this._fitRows(a, i, o, s) + 10))
              : ((c = this.maxHeight), (l = this._fitCols(a, i, o, s) + 10)),
            (this.width = Math.min(l, t.maxWidth || this.maxWidth)),
            (this.height = Math.min(c, t.maxHeight || this.maxHeight));
        }
        _fitRows(t, e, n, r) {
          const {
              ctx: i,
              maxWidth: a,
              options: {
                labels: { padding: o },
              },
            } = this,
            s = (this.legendHitBoxes = []),
            l = (this.lineWidths = [0]),
            c = r + o;
          let u = t;
          (i.textAlign = "left"), (i.textBaseline = "middle");
          let d = -1,
            h = -c;
          return (
            this.legendItems.forEach((t, f) => {
              const p = n + e / 2 + i.measureText(t.text).width;
              (0 === f || l[l.length - 1] + p + 2 * o > a) &&
                ((u += c), (l[l.length - (f > 0 ? 0 : 1)] = 0), (h += c), d++),
                (s[f] = { left: 0, top: h, row: d, width: p, height: r }),
                (l[l.length - 1] += p + o);
            }),
            u
          );
        }
        _fitCols(t, e, n, r) {
          const {
              ctx: i,
              maxHeight: a,
              options: {
                labels: { padding: o },
              },
            } = this,
            s = (this.legendHitBoxes = []),
            l = (this.columnSizes = []),
            c = a - t;
          let u = o,
            d = 0,
            h = 0,
            f = 0,
            p = 0;
          return (
            this.legendItems.forEach((t, a) => {
              const m = n + e / 2 + i.measureText(t.text).width;
              a > 0 &&
                h + r + 2 * o > c &&
                ((u += d + o),
                l.push({ width: d, height: h }),
                (f += d + o),
                p++,
                (d = h = 0)),
                (s[a] = { left: f, top: h, col: p, width: m, height: r }),
                (d = Math.max(d, m)),
                (h += r + o);
            }),
            (u += d),
            l.push({ width: d, height: h }),
            u
          );
        }
        adjustHitBoxes() {
          if (!this.options.display) return;
          const t = this._computeTitleHeight(),
            {
              legendHitBoxes: e,
              options: {
                align: n,
                labels: { padding: r },
                rtl: i,
              },
            } = this,
            a = hn(i, this.left, this.width);
          if (this.isHorizontal()) {
            let i = 0,
              o = ot(n, this.left + r, this.right - this.lineWidths[i]);
            for (const s of e)
              i !== s.row &&
                ((i = s.row),
                (o = ot(n, this.left + r, this.right - this.lineWidths[i]))),
                (s.top += this.top + t + r),
                (s.left = a.leftForLtr(a.x(o), s.width)),
                (o += s.width + r);
          } else {
            let i = 0,
              o = ot(
                n,
                this.top + t + r,
                this.bottom - this.columnSizes[i].height
              );
            for (const s of e)
              s.col !== i &&
                ((i = s.col),
                (o = ot(
                  n,
                  this.top + t + r,
                  this.bottom - this.columnSizes[i].height
                ))),
                (s.top = o),
                (s.left += this.left + r),
                (s.left = a.leftForLtr(a.x(s.left), s.width)),
                (o += s.height + r);
          }
        }
        isHorizontal() {
          return (
            "top" === this.options.position ||
            "bottom" === this.options.position
          );
        }
        draw() {
          if (this.options.display) {
            const t = this.ctx;
            le(t, this), this._draw(), ce(t);
          }
        }
        _draw() {
          const { options: t, columnSizes: e, lineWidths: n, ctx: r } = this,
            { align: i, labels: a } = t,
            o = te.color,
            s = hn(t.rtl, this.left, this.width),
            l = Me(a.font),
            { color: c, padding: d } = a,
            h = l.size,
            f = h / 2;
          let p;
          this.drawTitle(),
            (r.textAlign = s.textAlign("left")),
            (r.textBaseline = "middle"),
            (r.lineWidth = 0.5),
            (r.font = l.string);
          const { boxWidth: m, boxHeight: g, itemHeight: _ } = ya(a, h),
            v = this.isHorizontal(),
            b = this._computeTitleHeight();
          (p = v
            ? {
                x: ot(i, this.left + d, this.right - n[0]),
                y: this.top + d + b,
                line: 0,
              }
            : {
                x: this.left + d,
                y: ot(i, this.top + b + d, this.bottom - e[0].height),
                line: 0,
              }),
            fn(this.ctx, t.textDirection);
          const y = _ + d;
          this.legendItems.forEach((x, w) => {
            (r.strokeStyle = x.fontColor || c),
              (r.fillStyle = x.fontColor || c);
            const M = r.measureText(x.text).width,
              S = s.textAlign(x.textAlign || (x.textAlign = a.textAlign)),
              A = m + f + M;
            let E = p.x,
              k = p.y;
            s.setWidth(this.width),
              v
                ? w > 0 &&
                  E + A + d > this.right &&
                  ((k = p.y += y),
                  p.line++,
                  (E = p.x = ot(i, this.left + d, this.right - n[p.line])))
                : w > 0 &&
                  k + y > this.bottom &&
                  ((E = p.x = E + e[p.line].width + d),
                  p.line++,
                  (k = p.y =
                    ot(i, this.top + b + d, this.bottom - e[p.line].height)));
            !(function (t, e, n) {
              if (isNaN(m) || m <= 0 || isNaN(g) || g < 0) return;
              r.save();
              const i = u(n.lineWidth, 1);
              if (
                ((r.fillStyle = u(n.fillStyle, o)),
                (r.lineCap = u(n.lineCap, "butt")),
                (r.lineDashOffset = u(n.lineDashOffset, 0)),
                (r.lineJoin = u(n.lineJoin, "miter")),
                (r.lineWidth = i),
                (r.strokeStyle = u(n.strokeStyle, o)),
                r.setLineDash(u(n.lineDash, [])),
                a.usePointStyle)
              ) {
                const o = {
                    radius: (g * Math.SQRT2) / 2,
                    pointStyle: n.pointStyle,
                    rotation: n.rotation,
                    borderWidth: i,
                  },
                  l = s.xPlus(t, m / 2);
                oe(r, o, l, e + f, a.pointStyleWidth && m);
              } else {
                const a = e + Math.max((h - g) / 2, 0),
                  o = s.leftForLtr(t, m),
                  l = xe(n.borderRadius);
                r.beginPath(),
                  Object.values(l).some((t) => 0 !== t)
                    ? pe(r, { x: o, y: a, w: m, h: g, radius: l })
                    : r.rect(o, a, m, g),
                  r.fill(),
                  0 !== i && r.stroke();
              }
              r.restore();
            })(s.x(E), k, x),
              (E = ((t, e, n, r) =>
                t === (r ? "left" : "right")
                  ? n
                  : "center" === t
                  ? (e + n) / 2
                  : e)(S, E + m + f, v ? E + A : this.right, t.rtl)),
              (function (t, e, n) {
                he(r, n.text, t, e + _ / 2, l, {
                  strikethrough: n.hidden,
                  textAlign: s.textAlign(n.textAlign),
                });
              })(s.x(E), k, x),
              v ? (p.x += A + d) : (p.y += y);
          }),
            pn(this.ctx, t.textDirection);
        }
        drawTitle() {
          const t = this.options,
            e = t.title,
            n = Me(e.font),
            r = we(e.padding);
          if (!e.display) return;
          const i = hn(t.rtl, this.left, this.width),
            a = this.ctx,
            o = e.position,
            s = n.size / 2,
            l = r.top + s;
          let c,
            u = this.left,
            d = this.width;
          if (this.isHorizontal())
            (d = Math.max(...this.lineWidths)),
              (c = this.top + l),
              (u = ot(t.align, u, this.right - d));
          else {
            const e = this.columnSizes.reduce(
              (t, e) => Math.max(t, e.height),
              0
            );
            c =
              l +
              ot(
                t.align,
                this.top,
                this.bottom - e - t.labels.padding - this._computeTitleHeight()
              );
          }
          const h = ot(o, u, u + d);
          (a.textAlign = i.textAlign(at(o))),
            (a.textBaseline = "middle"),
            (a.strokeStyle = e.color),
            (a.fillStyle = e.color),
            (a.font = n.string),
            he(a, e.text, h, c, n);
        }
        _computeTitleHeight() {
          const t = this.options.title,
            e = Me(t.font),
            n = we(t.padding);
          return t.display ? e.lineHeight + n.height : 0;
        }
        _getLegendItemAt(t, e) {
          let n, r, i;
          if (K(t, this.left, this.right) && K(e, this.top, this.bottom))
            for (i = this.legendHitBoxes, n = 0; n < i.length; ++n)
              if (
                ((r = i[n]),
                K(t, r.left, r.left + r.width) && K(e, r.top, r.top + r.height))
              )
                return this.legendItems[n];
          return null;
        }
        handleEvent(t) {
          const e = this.options;
          if (
            !(function (t, e) {
              if (
                ("mousemove" === t || "mouseout" === t) &&
                (e.onHover || e.onLeave)
              )
                return !0;
              if (e.onClick && ("click" === t || "mouseup" === t)) return !0;
              return !1;
            })(t.type, e)
          )
            return;
          const n = this._getLegendItemAt(t.x, t.y);
          if ("mousemove" === t.type || "mouseout" === t.type) {
            const a = this._hoveredItem,
              o =
                ((i = n),
                null !== (r = a) &&
                  null !== i &&
                  r.datasetIndex === i.datasetIndex &&
                  r.index === i.index);
            a && !o && h(e.onLeave, [t, a, this], this),
              (this._hoveredItem = n),
              n && !o && h(e.onHover, [t, n, this], this);
          } else n && h(e.onClick, [t, n, this], this);
          var r, i;
        }
      }
      var wa = {
        id: "legend",
        _element: xa,
        start(t, e, n) {
          const r = (t.legend = new xa({ ctx: t.ctx, options: n, chart: t }));
          Fr.configure(t, r, n), Fr.addBox(t, r);
        },
        stop(t) {
          Fr.removeBox(t, t.legend), delete t.legend;
        },
        beforeUpdate(t, e, n) {
          const r = t.legend;
          Fr.configure(t, r, n), (r.options = n);
        },
        afterUpdate(t) {
          const e = t.legend;
          e.buildLabels(), e.adjustHitBoxes();
        },
        afterEvent(t, e) {
          e.replay || t.legend.handleEvent(e.event);
        },
        defaults: {
          display: !0,
          position: "top",
          align: "center",
          fullSize: !0,
          reverse: !1,
          weight: 1e3,
          onClick(t, e, n) {
            const r = e.datasetIndex,
              i = n.chart;
            i.isDatasetVisible(r)
              ? (i.hide(r), (e.hidden = !0))
              : (i.show(r), (e.hidden = !1));
          },
          onHover: null,
          onLeave: null,
          labels: {
            color: (t) => t.chart.options.color,
            boxWidth: 40,
            padding: 10,
            generateLabels(t) {
              const e = t.data.datasets,
                {
                  labels: {
                    usePointStyle: n,
                    pointStyle: r,
                    textAlign: i,
                    color: a,
                  },
                } = t.legend.options;
              return t._getSortedDatasetMetas().map((t) => {
                const o = t.controller.getStyle(n ? 0 : void 0),
                  s = we(o.borderWidth);
                return {
                  text: e[t.index].label,
                  fillStyle: o.backgroundColor,
                  fontColor: a,
                  hidden: !t.visible,
                  lineCap: o.borderCapStyle,
                  lineDash: o.borderDash,
                  lineDashOffset: o.borderDashOffset,
                  lineJoin: o.borderJoinStyle,
                  lineWidth: (s.width + s.height) / 4,
                  strokeStyle: o.borderColor,
                  pointStyle: r || o.pointStyle,
                  rotation: o.rotation,
                  textAlign: i || o.textAlign,
                  borderRadius: 0,
                  datasetIndex: t.index,
                };
              }, this);
            },
          },
          title: {
            color: (t) => t.chart.options.color,
            display: !1,
            position: "center",
            text: "",
          },
        },
        descriptors: {
          _scriptable: (t) => !t.startsWith("on"),
          labels: {
            _scriptable: (t) =>
              !["generateLabels", "filter", "sort"].includes(t),
          },
        },
      };
      class Ma extends er {
        constructor(t) {
          super(),
            (this.chart = t.chart),
            (this.options = t.options),
            (this.ctx = t.ctx),
            (this._padding = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(t, e) {
          const n = this.options;
          if (((this.left = 0), (this.top = 0), !n.display))
            return void (this.width =
              this.height =
              this.right =
              this.bottom =
                0);
          (this.width = this.right = t), (this.height = this.bottom = e);
          const r = o(n.text) ? n.text.length : 1;
          this._padding = we(n.padding);
          const i = r * Me(n.font).lineHeight + this._padding.height;
          this.isHorizontal() ? (this.height = i) : (this.width = i);
        }
        isHorizontal() {
          const t = this.options.position;
          return "top" === t || "bottom" === t;
        }
        _drawArgs(t) {
          const { top: e, left: n, bottom: r, right: i, options: a } = this,
            o = a.align;
          let s,
            l,
            c,
            u = 0;
          return (
            this.isHorizontal()
              ? ((l = ot(o, n, i)), (c = e + t), (s = i - n))
              : ("left" === a.position
                  ? ((l = n + t), (c = ot(o, r, e)), (u = -0.5 * k))
                  : ((l = i - t), (c = ot(o, e, r)), (u = 0.5 * k)),
                (s = r - e)),
            { titleX: l, titleY: c, maxWidth: s, rotation: u }
          );
        }
        draw() {
          const t = this.ctx,
            e = this.options;
          if (!e.display) return;
          const n = Me(e.font),
            r = n.lineHeight / 2 + this._padding.top,
            {
              titleX: i,
              titleY: a,
              maxWidth: o,
              rotation: s,
            } = this._drawArgs(r);
          he(t, e.text, 0, 0, n, {
            color: e.color,
            maxWidth: o,
            rotation: s,
            textAlign: at(e.align),
            textBaseline: "middle",
            translation: [i, a],
          });
        }
      }
      var Sa = {
        id: "title",
        _element: Ma,
        start(t, e, n) {
          !(function (t, e) {
            const n = new Ma({ ctx: t.ctx, options: e, chart: t });
            Fr.configure(t, n, e), Fr.addBox(t, n), (t.titleBlock = n);
          })(t, n);
        },
        stop(t) {
          const e = t.titleBlock;
          Fr.removeBox(t, e), delete t.titleBlock;
        },
        beforeUpdate(t, e, n) {
          const r = t.titleBlock;
          Fr.configure(t, r, n), (r.options = n);
        },
        defaults: {
          align: "center",
          display: !1,
          font: { weight: "bold" },
          fullSize: !0,
          padding: 10,
          position: "top",
          text: "",
          weight: 2e3,
        },
        defaultRoutes: { color: "color" },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      const Aa = new WeakMap();
      var Ea = {
        id: "subtitle",
        start(t, e, n) {
          const r = new Ma({ ctx: t.ctx, options: n, chart: t });
          Fr.configure(t, r, n), Fr.addBox(t, r), Aa.set(t, r);
        },
        stop(t) {
          Fr.removeBox(t, Aa.get(t)), Aa.delete(t);
        },
        beforeUpdate(t, e, n) {
          const r = Aa.get(t);
          Fr.configure(t, r, n), (r.options = n);
        },
        defaults: {
          align: "center",
          display: !1,
          font: { weight: "normal" },
          fullSize: !0,
          padding: 0,
          position: "top",
          text: "",
          weight: 1500,
        },
        defaultRoutes: { color: "color" },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      const ka = {
        average(t) {
          if (!t.length) return !1;
          let e,
            n,
            r = 0,
            i = 0,
            a = 0;
          for (e = 0, n = t.length; e < n; ++e) {
            const n = t[e].element;
            if (n && n.hasValue()) {
              const t = n.tooltipPosition();
              (r += t.x), (i += t.y), ++a;
            }
          }
          return { x: r / a, y: i / a };
        },
        nearest(t, e) {
          if (!t.length) return !1;
          let n,
            r,
            i,
            a = e.x,
            o = e.y,
            s = Number.POSITIVE_INFINITY;
          for (n = 0, r = t.length; n < r; ++n) {
            const r = t[n].element;
            if (r && r.hasValue()) {
              const t = z(e, r.getCenterPoint());
              t < s && ((s = t), (i = r));
            }
          }
          if (i) {
            const t = i.tooltipPosition();
            (a = t.x), (o = t.y);
          }
          return { x: a, y: o };
        },
      };
      function Ra(t, e) {
        return e && (o(e) ? Array.prototype.push.apply(t, e) : t.push(e)), t;
      }
      function Ta(t) {
        return ("string" === typeof t || t instanceof String) &&
          t.indexOf("\n") > -1
          ? t.split("\n")
          : t;
      }
      function Oa(t, e) {
        const { element: n, datasetIndex: r, index: i } = e,
          a = t.getDatasetMeta(r).controller,
          { label: o, value: s } = a.getLabelAndValue(i);
        return {
          chart: t,
          label: o,
          parsed: a.getParsed(i),
          raw: t.data.datasets[r].data[i],
          formattedValue: s,
          dataset: a.getDataset(),
          dataIndex: i,
          datasetIndex: r,
          element: n,
        };
      }
      function Pa(t, e) {
        const n = t.chart.ctx,
          { body: r, footer: i, title: a } = t,
          { boxWidth: o, boxHeight: s } = e,
          l = Me(e.bodyFont),
          c = Me(e.titleFont),
          u = Me(e.footerFont),
          d = a.length,
          h = i.length,
          p = r.length,
          m = we(e.padding);
        let g = m.height,
          _ = 0,
          v = r.reduce(
            (t, e) => t + e.before.length + e.lines.length + e.after.length,
            0
          );
        if (
          ((v += t.beforeBody.length + t.afterBody.length),
          d &&
            (g +=
              d * c.lineHeight +
              (d - 1) * e.titleSpacing +
              e.titleMarginBottom),
          v)
        ) {
          g +=
            p * (e.displayColors ? Math.max(s, l.lineHeight) : l.lineHeight) +
            (v - p) * l.lineHeight +
            (v - 1) * e.bodySpacing;
        }
        h &&
          (g +=
            e.footerMarginTop + h * u.lineHeight + (h - 1) * e.footerSpacing);
        let b = 0;
        const y = function (t) {
          _ = Math.max(_, n.measureText(t).width + b);
        };
        return (
          n.save(),
          (n.font = c.string),
          f(t.title, y),
          (n.font = l.string),
          f(t.beforeBody.concat(t.afterBody), y),
          (b = e.displayColors ? o + 2 + e.boxPadding : 0),
          f(r, (t) => {
            f(t.before, y), f(t.lines, y), f(t.after, y);
          }),
          (b = 0),
          (n.font = u.string),
          f(t.footer, y),
          n.restore(),
          (_ += m.width),
          { width: _, height: g }
        );
      }
      function Ca(t, e, n, r) {
        const { x: i, width: a } = n,
          {
            width: o,
            chartArea: { left: s, right: l },
          } = t;
        let c = "center";
        return (
          "center" === r
            ? (c = i <= (s + l) / 2 ? "left" : "right")
            : i <= a / 2
            ? (c = "left")
            : i >= o - a / 2 && (c = "right"),
          (function (t, e, n, r) {
            const { x: i, width: a } = r,
              o = n.caretSize + n.caretPadding;
            return (
              ("left" === t && i + a + o > e.width) ||
              ("right" === t && i - a - o < 0) ||
              void 0
            );
          })(c, t, e, n) && (c = "center"),
          c
        );
      }
      function Da(t, e, n) {
        const r =
          n.yAlign ||
          e.yAlign ||
          (function (t, e) {
            const { y: n, height: r } = e;
            return n < r / 2
              ? "top"
              : n > t.height - r / 2
              ? "bottom"
              : "center";
          })(t, n);
        return { xAlign: n.xAlign || e.xAlign || Ca(t, e, n, r), yAlign: r };
      }
      function Ia(t, e, n, r) {
        const { caretSize: i, caretPadding: a, cornerRadius: o } = t,
          { xAlign: s, yAlign: l } = n,
          c = i + a,
          { topLeft: u, topRight: d, bottomLeft: h, bottomRight: f } = xe(o);
        let p = (function (t, e) {
          let { x: n, width: r } = t;
          return "right" === e ? (n -= r) : "center" === e && (n -= r / 2), n;
        })(e, s);
        const m = (function (t, e, n) {
          let { y: r, height: i } = t;
          return (
            "top" === e ? (r += n) : (r -= "bottom" === e ? i + n : i / 2), r
          );
        })(e, l, c);
        return (
          "center" === l
            ? "left" === s
              ? (p += c)
              : "right" === s && (p -= c)
            : "left" === s
            ? (p -= Math.max(u, h) + i)
            : "right" === s && (p += Math.max(d, f) + i),
          { x: Z(p, 0, r.width - e.width), y: Z(m, 0, r.height - e.height) }
        );
      }
      function Ba(t, e, n) {
        const r = we(n.padding);
        return "center" === e
          ? t.x + t.width / 2
          : "right" === e
          ? t.x + t.width - r.right
          : t.x + r.left;
      }
      function Na(t) {
        return Ra([], Ta(t));
      }
      function La(t, e) {
        const n =
          e && e.dataset && e.dataset.tooltip && e.dataset.tooltip.callbacks;
        return n ? t.override(n) : t;
      }
      class Va extends er {
        constructor(t) {
          super(),
            (this.opacity = 0),
            (this._active = []),
            (this._eventPosition = void 0),
            (this._size = void 0),
            (this._cachedAnimations = void 0),
            (this._tooltipItems = []),
            (this.$animations = void 0),
            (this.$context = void 0),
            (this.chart = t.chart || t._chart),
            (this._chart = this.chart),
            (this.options = t.options),
            (this.dataPoints = void 0),
            (this.title = void 0),
            (this.beforeBody = void 0),
            (this.body = void 0),
            (this.afterBody = void 0),
            (this.footer = void 0),
            (this.xAlign = void 0),
            (this.yAlign = void 0),
            (this.x = void 0),
            (this.y = void 0),
            (this.height = void 0),
            (this.width = void 0),
            (this.caretX = void 0),
            (this.caretY = void 0),
            (this.labelColors = void 0),
            (this.labelPointStyles = void 0),
            (this.labelTextColors = void 0);
        }
        initialize(t) {
          (this.options = t),
            (this._cachedAnimations = void 0),
            (this.$context = void 0);
        }
        _resolveAnimations() {
          const t = this._cachedAnimations;
          if (t) return t;
          const e = this.chart,
            n = this.options.setContext(this.getContext()),
            r = n.enabled && e.options.animation && n.animations,
            i = new kn(this.chart, r);
          return r._cacheable && (this._cachedAnimations = Object.freeze(i)), i;
        }
        getContext() {
          return (
            this.$context ||
            (this.$context =
              ((t = this.chart.getContext()),
              (e = this),
              (n = this._tooltipItems),
              Ae(t, { tooltip: e, tooltipItems: n, type: "tooltip" })))
          );
          var t, e, n;
        }
        getTitle(t, e) {
          const { callbacks: n } = e,
            r = n.beforeTitle.apply(this, [t]),
            i = n.title.apply(this, [t]),
            a = n.afterTitle.apply(this, [t]);
          let o = [];
          return (o = Ra(o, Ta(r))), (o = Ra(o, Ta(i))), (o = Ra(o, Ta(a))), o;
        }
        getBeforeBody(t, e) {
          return Na(e.callbacks.beforeBody.apply(this, [t]));
        }
        getBody(t, e) {
          const { callbacks: n } = e,
            r = [];
          return (
            f(t, (t) => {
              const e = { before: [], lines: [], after: [] },
                i = La(n, t);
              Ra(e.before, Ta(i.beforeLabel.call(this, t))),
                Ra(e.lines, i.label.call(this, t)),
                Ra(e.after, Ta(i.afterLabel.call(this, t))),
                r.push(e);
            }),
            r
          );
        }
        getAfterBody(t, e) {
          return Na(e.callbacks.afterBody.apply(this, [t]));
        }
        getFooter(t, e) {
          const { callbacks: n } = e,
            r = n.beforeFooter.apply(this, [t]),
            i = n.footer.apply(this, [t]),
            a = n.afterFooter.apply(this, [t]);
          let o = [];
          return (o = Ra(o, Ta(r))), (o = Ra(o, Ta(i))), (o = Ra(o, Ta(a))), o;
        }
        _createItems(t) {
          const e = this._active,
            n = this.chart.data,
            r = [],
            i = [],
            a = [];
          let o,
            s,
            l = [];
          for (o = 0, s = e.length; o < s; ++o) l.push(Oa(this.chart, e[o]));
          return (
            t.filter && (l = l.filter((e, r, i) => t.filter(e, r, i, n))),
            t.itemSort && (l = l.sort((e, r) => t.itemSort(e, r, n))),
            f(l, (e) => {
              const n = La(t.callbacks, e);
              r.push(n.labelColor.call(this, e)),
                i.push(n.labelPointStyle.call(this, e)),
                a.push(n.labelTextColor.call(this, e));
            }),
            (this.labelColors = r),
            (this.labelPointStyles = i),
            (this.labelTextColors = a),
            (this.dataPoints = l),
            l
          );
        }
        update(t, e) {
          const n = this.options.setContext(this.getContext()),
            r = this._active;
          let i,
            a = [];
          if (r.length) {
            const t = ka[n.position].call(this, r, this._eventPosition);
            (a = this._createItems(n)),
              (this.title = this.getTitle(a, n)),
              (this.beforeBody = this.getBeforeBody(a, n)),
              (this.body = this.getBody(a, n)),
              (this.afterBody = this.getAfterBody(a, n)),
              (this.footer = this.getFooter(a, n));
            const e = (this._size = Pa(this, n)),
              o = Object.assign({}, t, e),
              s = Da(this.chart, n, o),
              l = Ia(n, o, s, this.chart);
            (this.xAlign = s.xAlign),
              (this.yAlign = s.yAlign),
              (i = {
                opacity: 1,
                x: l.x,
                y: l.y,
                width: e.width,
                height: e.height,
                caretX: t.x,
                caretY: t.y,
              });
          } else 0 !== this.opacity && (i = { opacity: 0 });
          (this._tooltipItems = a),
            (this.$context = void 0),
            i && this._resolveAnimations().update(this, i),
            t &&
              n.external &&
              n.external.call(this, {
                chart: this.chart,
                tooltip: this,
                replay: e,
              });
        }
        drawCaret(t, e, n, r) {
          const i = this.getCaretPosition(t, n, r);
          e.lineTo(i.x1, i.y1), e.lineTo(i.x2, i.y2), e.lineTo(i.x3, i.y3);
        }
        getCaretPosition(t, e, n) {
          const { xAlign: r, yAlign: i } = this,
            { caretSize: a, cornerRadius: o } = n,
            { topLeft: s, topRight: l, bottomLeft: c, bottomRight: u } = xe(o),
            { x: d, y: h } = t,
            { width: f, height: p } = e;
          let m, g, _, v, b, y;
          return (
            "center" === i
              ? ((b = h + p / 2),
                "left" === r
                  ? ((m = d), (g = m - a), (v = b + a), (y = b - a))
                  : ((m = d + f), (g = m + a), (v = b - a), (y = b + a)),
                (_ = m))
              : ((g =
                  "left" === r
                    ? d + Math.max(s, c) + a
                    : "right" === r
                    ? d + f - Math.max(l, u) - a
                    : this.caretX),
                "top" === i
                  ? ((v = h), (b = v - a), (m = g - a), (_ = g + a))
                  : ((v = h + p), (b = v + a), (m = g + a), (_ = g - a)),
                (y = v)),
            { x1: m, x2: g, x3: _, y1: v, y2: b, y3: y }
          );
        }
        drawTitle(t, e, n) {
          const r = this.title,
            i = r.length;
          let a, o, s;
          if (i) {
            const l = hn(n.rtl, this.x, this.width);
            for (
              t.x = Ba(this, n.titleAlign, n),
                e.textAlign = l.textAlign(n.titleAlign),
                e.textBaseline = "middle",
                a = Me(n.titleFont),
                o = n.titleSpacing,
                e.fillStyle = n.titleColor,
                e.font = a.string,
                s = 0;
              s < i;
              ++s
            )
              e.fillText(r[s], l.x(t.x), t.y + a.lineHeight / 2),
                (t.y += a.lineHeight + o),
                s + 1 === i && (t.y += n.titleMarginBottom - o);
          }
        }
        _drawColorBox(t, e, n, r, i) {
          const a = this.labelColors[n],
            o = this.labelPointStyles[n],
            { boxHeight: l, boxWidth: c, boxPadding: u } = i,
            d = Me(i.bodyFont),
            h = Ba(this, "left", i),
            f = r.x(h),
            p = l < d.lineHeight ? (d.lineHeight - l) / 2 : 0,
            m = e.y + p;
          if (i.usePointStyle) {
            const e = {
                radius: Math.min(c, l) / 2,
                pointStyle: o.pointStyle,
                rotation: o.rotation,
                borderWidth: 1,
              },
              n = r.leftForLtr(f, c) + c / 2,
              s = m + l / 2;
            (t.strokeStyle = i.multiKeyBackground),
              (t.fillStyle = i.multiKeyBackground),
              ae(t, e, n, s),
              (t.strokeStyle = a.borderColor),
              (t.fillStyle = a.backgroundColor),
              ae(t, e, n, s);
          } else {
            (t.lineWidth = s(a.borderWidth)
              ? Math.max(...Object.values(a.borderWidth))
              : a.borderWidth || 1),
              (t.strokeStyle = a.borderColor),
              t.setLineDash(a.borderDash || []),
              (t.lineDashOffset = a.borderDashOffset || 0);
            const e = r.leftForLtr(f, c - u),
              n = r.leftForLtr(r.xPlus(f, 1), c - u - 2),
              o = xe(a.borderRadius);
            Object.values(o).some((t) => 0 !== t)
              ? (t.beginPath(),
                (t.fillStyle = i.multiKeyBackground),
                pe(t, { x: e, y: m, w: c, h: l, radius: o }),
                t.fill(),
                t.stroke(),
                (t.fillStyle = a.backgroundColor),
                t.beginPath(),
                pe(t, { x: n, y: m + 1, w: c - 2, h: l - 2, radius: o }),
                t.fill())
              : ((t.fillStyle = i.multiKeyBackground),
                t.fillRect(e, m, c, l),
                t.strokeRect(e, m, c, l),
                (t.fillStyle = a.backgroundColor),
                t.fillRect(n, m + 1, c - 2, l - 2));
          }
          t.fillStyle = this.labelTextColors[n];
        }
        drawBody(t, e, n) {
          const { body: r } = this,
            {
              bodySpacing: i,
              bodyAlign: a,
              displayColors: o,
              boxHeight: s,
              boxWidth: l,
              boxPadding: c,
            } = n,
            u = Me(n.bodyFont);
          let d = u.lineHeight,
            h = 0;
          const p = hn(n.rtl, this.x, this.width),
            m = function (n) {
              e.fillText(n, p.x(t.x + h), t.y + d / 2), (t.y += d + i);
            },
            g = p.textAlign(a);
          let _, v, b, y, x, w, M;
          for (
            e.textAlign = a,
              e.textBaseline = "middle",
              e.font = u.string,
              t.x = Ba(this, g, n),
              e.fillStyle = n.bodyColor,
              f(this.beforeBody, m),
              h =
                o && "right" !== g
                  ? "center" === a
                    ? l / 2 + c
                    : l + 2 + c
                  : 0,
              y = 0,
              w = r.length;
            y < w;
            ++y
          ) {
            for (
              _ = r[y],
                v = this.labelTextColors[y],
                e.fillStyle = v,
                f(_.before, m),
                b = _.lines,
                o &&
                  b.length &&
                  (this._drawColorBox(e, t, y, p, n),
                  (d = Math.max(u.lineHeight, s))),
                x = 0,
                M = b.length;
              x < M;
              ++x
            )
              m(b[x]), (d = u.lineHeight);
            f(_.after, m);
          }
          (h = 0), (d = u.lineHeight), f(this.afterBody, m), (t.y -= i);
        }
        drawFooter(t, e, n) {
          const r = this.footer,
            i = r.length;
          let a, o;
          if (i) {
            const s = hn(n.rtl, this.x, this.width);
            for (
              t.x = Ba(this, n.footerAlign, n),
                t.y += n.footerMarginTop,
                e.textAlign = s.textAlign(n.footerAlign),
                e.textBaseline = "middle",
                a = Me(n.footerFont),
                e.fillStyle = n.footerColor,
                e.font = a.string,
                o = 0;
              o < i;
              ++o
            )
              e.fillText(r[o], s.x(t.x), t.y + a.lineHeight / 2),
                (t.y += a.lineHeight + n.footerSpacing);
          }
        }
        drawBackground(t, e, n, r) {
          const { xAlign: i, yAlign: a } = this,
            { x: o, y: s } = t,
            { width: l, height: c } = n,
            {
              topLeft: u,
              topRight: d,
              bottomLeft: h,
              bottomRight: f,
            } = xe(r.cornerRadius);
          (e.fillStyle = r.backgroundColor),
            (e.strokeStyle = r.borderColor),
            (e.lineWidth = r.borderWidth),
            e.beginPath(),
            e.moveTo(o + u, s),
            "top" === a && this.drawCaret(t, e, n, r),
            e.lineTo(o + l - d, s),
            e.quadraticCurveTo(o + l, s, o + l, s + d),
            "center" === a && "right" === i && this.drawCaret(t, e, n, r),
            e.lineTo(o + l, s + c - f),
            e.quadraticCurveTo(o + l, s + c, o + l - f, s + c),
            "bottom" === a && this.drawCaret(t, e, n, r),
            e.lineTo(o + h, s + c),
            e.quadraticCurveTo(o, s + c, o, s + c - h),
            "center" === a && "left" === i && this.drawCaret(t, e, n, r),
            e.lineTo(o, s + u),
            e.quadraticCurveTo(o, s, o + u, s),
            e.closePath(),
            e.fill(),
            r.borderWidth > 0 && e.stroke();
        }
        _updateAnimationTarget(t) {
          const e = this.chart,
            n = this.$animations,
            r = n && n.x,
            i = n && n.y;
          if (r || i) {
            const n = ka[t.position].call(
              this,
              this._active,
              this._eventPosition
            );
            if (!n) return;
            const a = (this._size = Pa(this, t)),
              o = Object.assign({}, n, this._size),
              s = Da(e, t, o),
              l = Ia(t, o, s, e);
            (r._to === l.x && i._to === l.y) ||
              ((this.xAlign = s.xAlign),
              (this.yAlign = s.yAlign),
              (this.width = a.width),
              (this.height = a.height),
              (this.caretX = n.x),
              (this.caretY = n.y),
              this._resolveAnimations().update(this, l));
          }
        }
        _willRender() {
          return !!this.opacity;
        }
        draw(t) {
          const e = this.options.setContext(this.getContext());
          let n = this.opacity;
          if (!n) return;
          this._updateAnimationTarget(e);
          const r = { width: this.width, height: this.height },
            i = { x: this.x, y: this.y };
          n = Math.abs(n) < 0.001 ? 0 : n;
          const a = we(e.padding),
            o =
              this.title.length ||
              this.beforeBody.length ||
              this.body.length ||
              this.afterBody.length ||
              this.footer.length;
          e.enabled &&
            o &&
            (t.save(),
            (t.globalAlpha = n),
            this.drawBackground(i, t, r, e),
            fn(t, e.textDirection),
            (i.y += a.top),
            this.drawTitle(i, t, e),
            this.drawBody(i, t, e),
            this.drawFooter(i, t, e),
            pn(t, e.textDirection),
            t.restore());
        }
        getActiveElements() {
          return this._active || [];
        }
        setActiveElements(t, e) {
          const n = this._active,
            r = t.map((t) => {
              let { datasetIndex: e, index: n } = t;
              const r = this.chart.getDatasetMeta(e);
              if (!r) throw new Error("Cannot find a dataset at index " + e);
              return { datasetIndex: e, element: r.data[n], index: n };
            }),
            i = !p(n, r),
            a = this._positionChanged(r, e);
          (i || a) &&
            ((this._active = r),
            (this._eventPosition = e),
            (this._ignoreReplayEvents = !0),
            this.update(!0));
        }
        handleEvent(t, e) {
          let n =
            !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
          if (e && this._ignoreReplayEvents) return !1;
          this._ignoreReplayEvents = !1;
          const r = this.options,
            i = this._active || [],
            a = this._getActiveElements(t, i, e, n),
            o = this._positionChanged(a, t),
            s = e || !p(a, i) || o;
          return (
            s &&
              ((this._active = a),
              (r.enabled || r.external) &&
                ((this._eventPosition = { x: t.x, y: t.y }),
                this.update(!0, e))),
            s
          );
        }
        _getActiveElements(t, e, n, r) {
          const i = this.options;
          if ("mouseout" === t.type) return [];
          if (!r) return e;
          const a = this.chart.getElementsAtEventForMode(t, i.mode, i, n);
          return i.reverse && a.reverse(), a;
        }
        _positionChanged(t, e) {
          const { caretX: n, caretY: r, options: i } = this,
            a = ka[i.position].call(this, t, e);
          return !1 !== a && (n !== a.x || r !== a.y);
        }
      }
      Va.positioners = ka;
      var Fa = {
          id: "tooltip",
          _element: Va,
          positioners: ka,
          afterInit(t, e, n) {
            n && (t.tooltip = new Va({ chart: t, options: n }));
          },
          beforeUpdate(t, e, n) {
            t.tooltip && t.tooltip.initialize(n);
          },
          reset(t, e, n) {
            t.tooltip && t.tooltip.initialize(n);
          },
          afterDraw(t) {
            const e = t.tooltip;
            if (e && e._willRender()) {
              const n = { tooltip: e };
              if (!1 === t.notifyPlugins("beforeTooltipDraw", n)) return;
              e.draw(t.ctx), t.notifyPlugins("afterTooltipDraw", n);
            }
          },
          afterEvent(t, e) {
            if (t.tooltip) {
              const n = e.replay;
              t.tooltip.handleEvent(e.event, n, e.inChartArea) &&
                (e.changed = !0);
            }
          },
          defaults: {
            enabled: !0,
            external: null,
            position: "average",
            backgroundColor: "rgba(0,0,0,0.8)",
            titleColor: "#fff",
            titleFont: { weight: "bold" },
            titleSpacing: 2,
            titleMarginBottom: 6,
            titleAlign: "left",
            bodyColor: "#fff",
            bodySpacing: 2,
            bodyFont: {},
            bodyAlign: "left",
            footerColor: "#fff",
            footerSpacing: 2,
            footerMarginTop: 6,
            footerFont: { weight: "bold" },
            footerAlign: "left",
            padding: 6,
            caretPadding: 2,
            caretSize: 5,
            cornerRadius: 6,
            boxHeight: (t, e) => e.bodyFont.size,
            boxWidth: (t, e) => e.bodyFont.size,
            multiKeyBackground: "#fff",
            displayColors: !0,
            boxPadding: 0,
            borderColor: "rgba(0,0,0,0)",
            borderWidth: 0,
            animation: { duration: 400, easing: "easeOutQuart" },
            animations: {
              numbers: {
                type: "number",
                properties: ["x", "y", "width", "height", "caretX", "caretY"],
              },
              opacity: { easing: "linear", duration: 200 },
            },
            callbacks: {
              beforeTitle: r,
              title(t) {
                if (t.length > 0) {
                  const e = t[0],
                    n = e.chart.data.labels,
                    r = n ? n.length : 0;
                  if (this && this.options && "dataset" === this.options.mode)
                    return e.dataset.label || "";
                  if (e.label) return e.label;
                  if (r > 0 && e.dataIndex < r) return n[e.dataIndex];
                }
                return "";
              },
              afterTitle: r,
              beforeBody: r,
              beforeLabel: r,
              label(t) {
                if (this && this.options && "dataset" === this.options.mode)
                  return t.label + ": " + t.formattedValue || t.formattedValue;
                let e = t.dataset.label || "";
                e && (e += ": ");
                const n = t.formattedValue;
                return a(n) || (e += n), e;
              },
              labelColor(t) {
                const e = t.chart
                  .getDatasetMeta(t.datasetIndex)
                  .controller.getStyle(t.dataIndex);
                return {
                  borderColor: e.borderColor,
                  backgroundColor: e.backgroundColor,
                  borderWidth: e.borderWidth,
                  borderDash: e.borderDash,
                  borderDashOffset: e.borderDashOffset,
                  borderRadius: 0,
                };
              },
              labelTextColor() {
                return this.options.bodyColor;
              },
              labelPointStyle(t) {
                const e = t.chart
                  .getDatasetMeta(t.datasetIndex)
                  .controller.getStyle(t.dataIndex);
                return { pointStyle: e.pointStyle, rotation: e.rotation };
              },
              afterLabel: r,
              afterBody: r,
              beforeFooter: r,
              footer: r,
              afterFooter: r,
            },
          },
          defaultRoutes: {
            bodyFont: "font",
            footerFont: "font",
            titleFont: "font",
          },
          descriptors: {
            _scriptable: (t) =>
              "filter" !== t && "itemSort" !== t && "external" !== t,
            _indexable: !1,
            callbacks: { _scriptable: !1, _indexable: !1 },
            animation: { _fallback: !1 },
            animations: { _fallback: "animation" },
          },
          additionalOptionScopes: ["interaction"],
        },
        Ha = Object.freeze({
          __proto__: null,
          Decimation: na,
          Filler: ba,
          Legend: wa,
          SubTitle: Ea,
          Title: Sa,
          Tooltip: Fa,
        });
      function ja(t, e, n, r) {
        const i = t.indexOf(e);
        if (-1 === i)
          return ((t, e, n, r) => (
            "string" === typeof e
              ? ((n = t.push(e) - 1), r.unshift({ index: n, label: e }))
              : isNaN(e) && (n = null),
            n
          ))(t, e, n, r);
        return i !== t.lastIndexOf(e) ? n : i;
      }
      class Ya extends hr {
        constructor(t) {
          super(t),
            (this._startValue = void 0),
            (this._valueRange = 0),
            (this._addedLabels = []);
        }
        init(t) {
          const e = this._addedLabels;
          if (e.length) {
            const t = this.getLabels();
            for (const { index: n, label: r } of e)
              t[n] === r && t.splice(n, 1);
            this._addedLabels = [];
          }
          super.init(t);
        }
        parse(t, e) {
          if (a(t)) return null;
          const n = this.getLabels();
          return ((t, e) => (null === t ? null : Z(Math.round(t), 0, e)))(
            (e =
              isFinite(e) && n[e] === t
                ? e
                : ja(n, t, u(e, t), this._addedLabels)),
            n.length - 1
          );
        }
        determineDataLimits() {
          const { minDefined: t, maxDefined: e } = this.getUserBounds();
          let { min: n, max: r } = this.getMinMax(!0);
          "ticks" === this.options.bounds &&
            (t || (n = 0), e || (r = this.getLabels().length - 1)),
            (this.min = n),
            (this.max = r);
        }
        buildTicks() {
          const t = this.min,
            e = this.max,
            n = this.options.offset,
            r = [];
          let i = this.getLabels();
          (i = 0 === t && e === i.length - 1 ? i : i.slice(t, e + 1)),
            (this._valueRange = Math.max(i.length - (n ? 0 : 1), 1)),
            (this._startValue = this.min - (n ? 0.5 : 0));
          for (let a = t; a <= e; a++) r.push({ value: a });
          return r;
        }
        getLabelForValue(t) {
          const e = this.getLabels();
          return t >= 0 && t < e.length ? e[t] : t;
        }
        configure() {
          super.configure(),
            this.isHorizontal() || (this._reversePixels = !this._reversePixels);
        }
        getPixelForValue(t) {
          return (
            "number" !== typeof t && (t = this.parse(t)),
            null === t
              ? NaN
              : this.getPixelForDecimal(
                  (t - this._startValue) / this._valueRange
                )
          );
        }
        getPixelForTick(t) {
          const e = this.ticks;
          return t < 0 || t > e.length - 1
            ? null
            : this.getPixelForValue(e[t].value);
        }
        getValueForPixel(t) {
          return Math.round(
            this._startValue + this.getDecimalForPixel(t) * this._valueRange
          );
        }
        getBasePixel() {
          return this.bottom;
        }
      }
      function Wa(t, e) {
        const n = [],
          {
            bounds: r,
            step: i,
            min: o,
            max: s,
            precision: l,
            count: c,
            maxTicks: u,
            maxDigits: d,
            includeBounds: h,
          } = t,
          f = i || 1,
          p = u - 1,
          { min: m, max: g } = e,
          _ = !a(o),
          v = !a(s),
          b = !a(c),
          y = (g - m) / (d + 1);
        let x,
          w,
          M,
          S,
          A = L((g - m) / p / f) * f;
        if (A < 1e-14 && !_ && !v) return [{ value: m }, { value: g }];
        (S = Math.ceil(g / A) - Math.floor(m / A)),
          S > p && (A = L((S * A) / p / f) * f),
          a(l) || ((x = Math.pow(10, l)), (A = Math.ceil(A * x) / x)),
          "ticks" === r
            ? ((w = Math.floor(m / A) * A), (M = Math.ceil(g / A) * A))
            : ((w = m), (M = g)),
          _ &&
          v &&
          i &&
          (function (t, e) {
            const n = Math.round(t);
            return n - e <= t && n + e >= t;
          })((s - o) / i, A / 1e3)
            ? ((S = Math.round(Math.min((s - o) / A, u))),
              (A = (s - o) / S),
              (w = o),
              (M = s))
            : b
            ? ((w = _ ? o : w), (M = v ? s : M), (S = c - 1), (A = (M - w) / S))
            : ((S = (M - w) / A),
              (S = F(S, Math.round(S), A / 1e3)
                ? Math.round(S)
                : Math.ceil(S)));
        const E = Math.max(W(A), W(w));
        (x = Math.pow(10, a(l) ? E : l)),
          (w = Math.round(w * x) / x),
          (M = Math.round(M * x) / x);
        let k = 0;
        for (
          _ &&
          (h && w !== o
            ? (n.push({ value: o }),
              w < o && k++,
              F(Math.round((w + k * A) * x) / x, o, Ua(o, y, t)) && k++)
            : w < o && k++);
          k < S;
          ++k
        )
          n.push({ value: Math.round((w + k * A) * x) / x });
        return (
          v && h && M !== s
            ? n.length && F(n[n.length - 1].value, s, Ua(s, y, t))
              ? (n[n.length - 1].value = s)
              : n.push({ value: s })
            : (v && M !== s) || n.push({ value: M }),
          n
        );
      }
      function Ua(t, e, n) {
        let { horizontal: r, minRotation: i } = n;
        const a = j(i),
          o = (r ? Math.sin(a) : Math.cos(a)) || 0.001,
          s = 0.75 * e * ("" + t).length;
        return Math.min(e / o, s);
      }
      (Ya.id = "category"),
        (Ya.defaults = { ticks: { callback: Ya.prototype.getLabelForValue } });
      class za extends hr {
        constructor(t) {
          super(t),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._endValue = void 0),
            (this._valueRange = 0);
        }
        parse(t, e) {
          return a(t) ||
            (("number" === typeof t || t instanceof Number) && !isFinite(+t))
            ? null
            : +t;
        }
        handleTickRangeOptions() {
          const { beginAtZero: t } = this.options,
            { minDefined: e, maxDefined: n } = this.getUserBounds();
          let { min: r, max: i } = this;
          const a = (t) => (r = e ? r : t),
            o = (t) => (i = n ? i : t);
          if (t) {
            const t = N(r),
              e = N(i);
            t < 0 && e < 0 ? o(0) : t > 0 && e > 0 && a(0);
          }
          if (r === i) {
            let e = 1;
            (i >= Number.MAX_SAFE_INTEGER || r <= Number.MIN_SAFE_INTEGER) &&
              (e = Math.abs(0.05 * i)),
              o(i + e),
              t || a(r - e);
          }
          (this.min = r), (this.max = i);
        }
        getTickLimit() {
          const t = this.options.ticks;
          let e,
            { maxTicksLimit: n, stepSize: r } = t;
          return (
            r
              ? ((e = Math.ceil(this.max / r) - Math.floor(this.min / r) + 1),
                e > 1e3 &&
                  (console.warn(
                    "scales."
                      .concat(this.id, ".ticks.stepSize: ")
                      .concat(r, " would result generating up to ")
                      .concat(e, " ticks. Limiting to 1000.")
                  ),
                  (e = 1e3)))
              : ((e = this.computeTickLimit()), (n = n || 11)),
            n && (e = Math.min(n, e)),
            e
          );
        }
        computeTickLimit() {
          return Number.POSITIVE_INFINITY;
        }
        buildTicks() {
          const t = this.options,
            e = t.ticks;
          let n = this.getTickLimit();
          n = Math.max(2, n);
          const r = Wa(
            {
              maxTicks: n,
              bounds: t.bounds,
              min: t.min,
              max: t.max,
              precision: e.precision,
              step: e.stepSize,
              count: e.count,
              maxDigits: this._maxDigits(),
              horizontal: this.isHorizontal(),
              minRotation: e.minRotation || 0,
              includeBounds: !1 !== e.includeBounds,
            },
            this._range || this
          );
          return (
            "ticks" === t.bounds && H(r, this, "value"),
            t.reverse
              ? (r.reverse(), (this.start = this.max), (this.end = this.min))
              : ((this.start = this.min), (this.end = this.max)),
            r
          );
        }
        configure() {
          const t = this.ticks;
          let e = this.min,
            n = this.max;
          if ((super.configure(), this.options.offset && t.length)) {
            const r = (n - e) / Math.max(t.length - 1, 1) / 2;
            (e -= r), (n += r);
          }
          (this._startValue = e),
            (this._endValue = n),
            (this._valueRange = n - e);
        }
        getLabelForValue(t) {
          return dn(t, this.chart.options.locale, this.options.ticks.format);
        }
      }
      class Ga extends za {
        determineDataLimits() {
          const { min: t, max: e } = this.getMinMax(!0);
          (this.min = l(t) ? t : 0),
            (this.max = l(e) ? e : 1),
            this.handleTickRangeOptions();
        }
        computeTickLimit() {
          const t = this.isHorizontal(),
            e = t ? this.width : this.height,
            n = j(this.options.ticks.minRotation),
            r = (t ? Math.sin(n) : Math.cos(n)) || 0.001,
            i = this._resolveTickFontOptions(0);
          return Math.ceil(e / Math.min(40, i.lineHeight / r));
        }
        getPixelForValue(t) {
          return null === t
            ? NaN
            : this.getPixelForDecimal(
                (t - this._startValue) / this._valueRange
              );
        }
        getValueForPixel(t) {
          return (
            this._startValue + this.getDecimalForPixel(t) * this._valueRange
          );
        }
      }
      function qa(t) {
        return 1 === t / Math.pow(10, Math.floor(B(t)));
      }
      (Ga.id = "linear"),
        (Ga.defaults = { ticks: { callback: rr.formatters.numeric } });
      class Xa extends hr {
        constructor(t) {
          super(t),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._valueRange = 0);
        }
        parse(t, e) {
          const n = za.prototype.parse.apply(this, [t, e]);
          if (0 !== n) return l(n) && n > 0 ? n : null;
          this._zero = !0;
        }
        determineDataLimits() {
          const { min: t, max: e } = this.getMinMax(!0);
          (this.min = l(t) ? Math.max(0, t) : null),
            (this.max = l(e) ? Math.max(0, e) : null),
            this.options.beginAtZero && (this._zero = !0),
            this.handleTickRangeOptions();
        }
        handleTickRangeOptions() {
          const { minDefined: t, maxDefined: e } = this.getUserBounds();
          let n = this.min,
            r = this.max;
          const i = (e) => (n = t ? n : e),
            a = (t) => (r = e ? r : t),
            o = (t, e) => Math.pow(10, Math.floor(B(t)) + e);
          n === r && (n <= 0 ? (i(1), a(10)) : (i(o(n, -1)), a(o(r, 1)))),
            n <= 0 && i(o(r, -1)),
            r <= 0 && a(o(n, 1)),
            this._zero &&
              this.min !== this._suggestedMin &&
              n === o(this.min, 0) &&
              i(o(n, -1)),
            (this.min = n),
            (this.max = r);
        }
        buildTicks() {
          const t = this.options,
            e = (function (t, e) {
              const n = Math.floor(B(e.max)),
                r = Math.ceil(e.max / Math.pow(10, n)),
                i = [];
              let a = c(t.min, Math.pow(10, Math.floor(B(e.min)))),
                o = Math.floor(B(a)),
                s = Math.floor(a / Math.pow(10, o)),
                l = o < 0 ? Math.pow(10, Math.abs(o)) : 1;
              do {
                i.push({ value: a, major: qa(a) }),
                  ++s,
                  10 === s && ((s = 1), ++o, (l = o >= 0 ? 1 : l)),
                  (a = Math.round(s * Math.pow(10, o) * l) / l);
              } while (o < n || (o === n && s < r));
              const u = c(t.max, a);
              return i.push({ value: u, major: qa(a) }), i;
            })({ min: this._userMin, max: this._userMax }, this);
          return (
            "ticks" === t.bounds && H(e, this, "value"),
            t.reverse
              ? (e.reverse(), (this.start = this.max), (this.end = this.min))
              : ((this.start = this.min), (this.end = this.max)),
            e
          );
        }
        getLabelForValue(t) {
          return void 0 === t
            ? "0"
            : dn(t, this.chart.options.locale, this.options.ticks.format);
        }
        configure() {
          const t = this.min;
          super.configure(),
            (this._startValue = B(t)),
            (this._valueRange = B(this.max) - B(t));
        }
        getPixelForValue(t) {
          return (
            (void 0 !== t && 0 !== t) || (t = this.min),
            null === t || isNaN(t)
              ? NaN
              : this.getPixelForDecimal(
                  t === this.min
                    ? 0
                    : (B(t) - this._startValue) / this._valueRange
                )
          );
        }
        getValueForPixel(t) {
          const e = this.getDecimalForPixel(t);
          return Math.pow(10, this._startValue + e * this._valueRange);
        }
      }
      function Za(t) {
        const e = t.ticks;
        if (e.display && t.display) {
          const t = we(e.backdropPadding);
          return u(e.font && e.font.size, te.font.size) + t.height;
        }
        return 0;
      }
      function Ka(t, e, n, r, i) {
        return t === r || t === i
          ? { start: e - n / 2, end: e + n / 2 }
          : t < r || t > i
          ? { start: e - n, end: e }
          : { start: e, end: e + n };
      }
      function $a(t) {
        const e = {
            l: t.left + t._padding.left,
            r: t.right - t._padding.right,
            t: t.top + t._padding.top,
            b: t.bottom - t._padding.bottom,
          },
          n = Object.assign({}, e),
          r = [],
          i = [],
          a = t._pointLabels.length,
          s = t.options.pointLabels,
          l = s.centerPointLabels ? k / a : 0;
        for (let h = 0; h < a; h++) {
          const a = s.setContext(t.getPointLabelContext(h));
          i[h] = a.padding;
          const f = t.getPointPosition(h, t.drawingArea + i[h], l),
            p = Me(a.font),
            m =
              ((c = t.ctx),
              (u = p),
              (d = o((d = t._pointLabels[h])) ? d : [d]),
              { w: ne(c, u.string, d), h: d.length * u.lineHeight });
          r[h] = m;
          const g = q(t.getIndexAngle(h) + l),
            _ = Math.round(Y(g));
          Qa(n, e, g, Ka(_, f.x, m.w, 0, 180), Ka(_, f.y, m.h, 90, 270));
        }
        var c, u, d;
        t.setCenterPoint(e.l - n.l, n.r - e.r, e.t - n.t, n.b - e.b),
          (t._pointLabelItems = (function (t, e, n) {
            const r = [],
              i = t._pointLabels.length,
              a = t.options,
              o = Za(a) / 2,
              s = t.drawingArea,
              l = a.pointLabels.centerPointLabels ? k / i : 0;
            for (let c = 0; c < i; c++) {
              const i = t.getPointPosition(c, s + o + n[c], l),
                a = Math.round(Y(q(i.angle + C))),
                u = e[c],
                d = eo(i.y, u.h, a),
                h = Ja(a),
                f = to(i.x, u.w, h);
              r.push({
                x: i.x,
                y: d,
                textAlign: h,
                left: f,
                top: d,
                right: f + u.w,
                bottom: d + u.h,
              });
            }
            return r;
          })(t, r, i));
      }
      function Qa(t, e, n, r, i) {
        const a = Math.abs(Math.sin(n)),
          o = Math.abs(Math.cos(n));
        let s = 0,
          l = 0;
        r.start < e.l
          ? ((s = (e.l - r.start) / a), (t.l = Math.min(t.l, e.l - s)))
          : r.end > e.r &&
            ((s = (r.end - e.r) / a), (t.r = Math.max(t.r, e.r + s))),
          i.start < e.t
            ? ((l = (e.t - i.start) / o), (t.t = Math.min(t.t, e.t - l)))
            : i.end > e.b &&
              ((l = (i.end - e.b) / o), (t.b = Math.max(t.b, e.b + l)));
      }
      function Ja(t) {
        return 0 === t || 180 === t ? "center" : t < 180 ? "left" : "right";
      }
      function to(t, e, n) {
        return "right" === n ? (t -= e) : "center" === n && (t -= e / 2), t;
      }
      function eo(t, e, n) {
        return (
          90 === n || 270 === n
            ? (t -= e / 2)
            : (n > 270 || n < 90) && (t -= e),
          t
        );
      }
      function no(t, e, n, r) {
        const { ctx: i } = t;
        if (n) i.arc(t.xCenter, t.yCenter, e, 0, R);
        else {
          let n = t.getPointPosition(0, e);
          i.moveTo(n.x, n.y);
          for (let a = 1; a < r; a++)
            (n = t.getPointPosition(a, e)), i.lineTo(n.x, n.y);
        }
      }
      (Xa.id = "logarithmic"),
        (Xa.defaults = {
          ticks: {
            callback: rr.formatters.logarithmic,
            major: { enabled: !0 },
          },
        });
      class ro extends za {
        constructor(t) {
          super(t),
            (this.xCenter = void 0),
            (this.yCenter = void 0),
            (this.drawingArea = void 0),
            (this._pointLabels = []),
            (this._pointLabelItems = []);
        }
        setDimensions() {
          const t = (this._padding = we(Za(this.options) / 2)),
            e = (this.width = this.maxWidth - t.width),
            n = (this.height = this.maxHeight - t.height);
          (this.xCenter = Math.floor(this.left + e / 2 + t.left)),
            (this.yCenter = Math.floor(this.top + n / 2 + t.top)),
            (this.drawingArea = Math.floor(Math.min(e, n) / 2));
        }
        determineDataLimits() {
          const { min: t, max: e } = this.getMinMax(!1);
          (this.min = l(t) && !isNaN(t) ? t : 0),
            (this.max = l(e) && !isNaN(e) ? e : 0),
            this.handleTickRangeOptions();
        }
        computeTickLimit() {
          return Math.ceil(this.drawingArea / Za(this.options));
        }
        generateTickLabels(t) {
          za.prototype.generateTickLabels.call(this, t),
            (this._pointLabels = this.getLabels()
              .map((t, e) => {
                const n = h(this.options.pointLabels.callback, [t, e], this);
                return n || 0 === n ? n : "";
              })
              .filter((t, e) => this.chart.getDataVisibility(e)));
        }
        fit() {
          const t = this.options;
          t.display && t.pointLabels.display
            ? $a(this)
            : this.setCenterPoint(0, 0, 0, 0);
        }
        setCenterPoint(t, e, n, r) {
          (this.xCenter += Math.floor((t - e) / 2)),
            (this.yCenter += Math.floor((n - r) / 2)),
            (this.drawingArea -= Math.min(
              this.drawingArea / 2,
              Math.max(t, e, n, r)
            ));
        }
        getIndexAngle(t) {
          return q(
            t * (R / (this._pointLabels.length || 1)) +
              j(this.options.startAngle || 0)
          );
        }
        getDistanceFromCenterForValue(t) {
          if (a(t)) return NaN;
          const e = this.drawingArea / (this.max - this.min);
          return this.options.reverse ? (this.max - t) * e : (t - this.min) * e;
        }
        getValueForDistanceFromCenter(t) {
          if (a(t)) return NaN;
          const e = t / (this.drawingArea / (this.max - this.min));
          return this.options.reverse ? this.max - e : this.min + e;
        }
        getPointLabelContext(t) {
          const e = this._pointLabels || [];
          if (t >= 0 && t < e.length) {
            const n = e[t];
            return (function (t, e, n) {
              return Ae(t, { label: n, index: e, type: "pointLabel" });
            })(this.getContext(), t, n);
          }
        }
        getPointPosition(t, e) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
          const r = this.getIndexAngle(t) - C + n;
          return {
            x: Math.cos(r) * e + this.xCenter,
            y: Math.sin(r) * e + this.yCenter,
            angle: r,
          };
        }
        getPointPositionForValue(t, e) {
          return this.getPointPosition(
            t,
            this.getDistanceFromCenterForValue(e)
          );
        }
        getBasePosition(t) {
          return this.getPointPositionForValue(t || 0, this.getBaseValue());
        }
        getPointLabelPosition(t) {
          const {
            left: e,
            top: n,
            right: r,
            bottom: i,
          } = this._pointLabelItems[t];
          return { left: e, top: n, right: r, bottom: i };
        }
        drawBackground() {
          const {
            backgroundColor: t,
            grid: { circular: e },
          } = this.options;
          if (t) {
            const n = this.ctx;
            n.save(),
              n.beginPath(),
              no(
                this,
                this.getDistanceFromCenterForValue(this._endValue),
                e,
                this._pointLabels.length
              ),
              n.closePath(),
              (n.fillStyle = t),
              n.fill(),
              n.restore();
          }
        }
        drawGrid() {
          const t = this.ctx,
            e = this.options,
            { angleLines: n, grid: r } = e,
            i = this._pointLabels.length;
          let o, s, l;
          if (
            (e.pointLabels.display &&
              (function (t, e) {
                const {
                  ctx: n,
                  options: { pointLabels: r },
                } = t;
                for (let i = e - 1; i >= 0; i--) {
                  const e = r.setContext(t.getPointLabelContext(i)),
                    o = Me(e.font),
                    {
                      x: s,
                      y: l,
                      textAlign: c,
                      left: u,
                      top: d,
                      right: h,
                      bottom: f,
                    } = t._pointLabelItems[i],
                    { backdropColor: p } = e;
                  if (!a(p)) {
                    const t = xe(e.borderRadius),
                      r = we(e.backdropPadding);
                    n.fillStyle = p;
                    const i = u - r.left,
                      a = d - r.top,
                      o = h - u + r.width,
                      s = f - d + r.height;
                    Object.values(t).some((t) => 0 !== t)
                      ? (n.beginPath(),
                        pe(n, { x: i, y: a, w: o, h: s, radius: t }),
                        n.fill())
                      : n.fillRect(i, a, o, s);
                  }
                  he(n, t._pointLabels[i], s, l + o.lineHeight / 2, o, {
                    color: e.color,
                    textAlign: c,
                    textBaseline: "middle",
                  });
                }
              })(this, i),
            r.display &&
              this.ticks.forEach((t, e) => {
                if (0 !== e) {
                  s = this.getDistanceFromCenterForValue(t.value);
                  !(function (t, e, n, r) {
                    const i = t.ctx,
                      a = e.circular,
                      { color: o, lineWidth: s } = e;
                    (!a && !r) ||
                      !o ||
                      !s ||
                      n < 0 ||
                      (i.save(),
                      (i.strokeStyle = o),
                      (i.lineWidth = s),
                      i.setLineDash(e.borderDash),
                      (i.lineDashOffset = e.borderDashOffset),
                      i.beginPath(),
                      no(t, n, a, r),
                      i.closePath(),
                      i.stroke(),
                      i.restore());
                  })(this, r.setContext(this.getContext(e - 1)), s, i);
                }
              }),
            n.display)
          ) {
            for (t.save(), o = i - 1; o >= 0; o--) {
              const r = n.setContext(this.getPointLabelContext(o)),
                { color: i, lineWidth: a } = r;
              a &&
                i &&
                ((t.lineWidth = a),
                (t.strokeStyle = i),
                t.setLineDash(r.borderDash),
                (t.lineDashOffset = r.borderDashOffset),
                (s = this.getDistanceFromCenterForValue(
                  e.ticks.reverse ? this.min : this.max
                )),
                (l = this.getPointPosition(o, s)),
                t.beginPath(),
                t.moveTo(this.xCenter, this.yCenter),
                t.lineTo(l.x, l.y),
                t.stroke());
            }
            t.restore();
          }
        }
        drawBorder() {}
        drawLabels() {
          const t = this.ctx,
            e = this.options,
            n = e.ticks;
          if (!n.display) return;
          const r = this.getIndexAngle(0);
          let i, a;
          t.save(),
            t.translate(this.xCenter, this.yCenter),
            t.rotate(r),
            (t.textAlign = "center"),
            (t.textBaseline = "middle"),
            this.ticks.forEach((r, o) => {
              if (0 === o && !e.reverse) return;
              const s = n.setContext(this.getContext(o)),
                l = Me(s.font);
              if (
                ((i = this.getDistanceFromCenterForValue(this.ticks[o].value)),
                s.showLabelBackdrop)
              ) {
                (t.font = l.string),
                  (a = t.measureText(r.label).width),
                  (t.fillStyle = s.backdropColor);
                const e = we(s.backdropPadding);
                t.fillRect(
                  -a / 2 - e.left,
                  -i - l.size / 2 - e.top,
                  a + e.width,
                  l.size + e.height
                );
              }
              he(t, r.label, 0, -i, l, { color: s.color });
            }),
            t.restore();
        }
        drawTitle() {}
      }
      (ro.id = "radialLinear"),
        (ro.defaults = {
          display: !0,
          animate: !0,
          position: "chartArea",
          angleLines: {
            display: !0,
            lineWidth: 1,
            borderDash: [],
            borderDashOffset: 0,
          },
          grid: { circular: !1 },
          startAngle: 0,
          ticks: { showLabelBackdrop: !0, callback: rr.formatters.numeric },
          pointLabels: {
            backdropColor: void 0,
            backdropPadding: 2,
            display: !0,
            font: { size: 10 },
            callback: (t) => t,
            padding: 5,
            centerPointLabels: !1,
          },
        }),
        (ro.defaultRoutes = {
          "angleLines.color": "borderColor",
          "pointLabels.color": "color",
          "ticks.color": "color",
        }),
        (ro.descriptors = { angleLines: { _fallback: "grid" } });
      const io = {
          millisecond: { common: !0, size: 1, steps: 1e3 },
          second: { common: !0, size: 1e3, steps: 60 },
          minute: { common: !0, size: 6e4, steps: 60 },
          hour: { common: !0, size: 36e5, steps: 24 },
          day: { common: !0, size: 864e5, steps: 30 },
          week: { common: !1, size: 6048e5, steps: 4 },
          month: { common: !0, size: 2628e6, steps: 12 },
          quarter: { common: !1, size: 7884e6, steps: 4 },
          year: { common: !0, size: 3154e7 },
        },
        ao = Object.keys(io);
      function oo(t, e) {
        return t - e;
      }
      function so(t, e) {
        if (a(e)) return null;
        const n = t._adapter,
          { parser: r, round: i, isoWeekday: o } = t._parseOpts;
        let s = e;
        return (
          "function" === typeof r && (s = r(s)),
          l(s) || (s = "string" === typeof r ? n.parse(s, r) : n.parse(s)),
          null === s
            ? null
            : (i &&
                (s =
                  "week" !== i || (!V(o) && !0 !== o)
                    ? n.startOf(s, i)
                    : n.startOf(s, "isoWeek", o)),
              +s)
        );
      }
      function lo(t, e, n, r) {
        const i = ao.length;
        for (let a = ao.indexOf(t); a < i - 1; ++a) {
          const t = io[ao[a]],
            i = t.steps ? t.steps : Number.MAX_SAFE_INTEGER;
          if (t.common && Math.ceil((n - e) / (i * t.size)) <= r) return ao[a];
        }
        return ao[i - 1];
      }
      function co(t, e, n) {
        if (n) {
          if (n.length) {
            const { lo: r, hi: i } = $(n, e);
            t[n[r] >= e ? n[r] : n[i]] = !0;
          }
        } else t[e] = !0;
      }
      function uo(t, e, n) {
        const r = [],
          i = {},
          a = e.length;
        let o, s;
        for (o = 0; o < a; ++o)
          (s = e[o]), (i[s] = o), r.push({ value: s, major: !1 });
        return 0 !== a && n
          ? (function (t, e, n, r) {
              const i = t._adapter,
                a = +i.startOf(e[0].value, r),
                o = e[e.length - 1].value;
              let s, l;
              for (s = a; s <= o; s = +i.add(s, 1, r))
                (l = n[s]), l >= 0 && (e[l].major = !0);
              return e;
            })(t, r, i, n)
          : r;
      }
      class ho extends hr {
        constructor(t) {
          super(t),
            (this._cache = { data: [], labels: [], all: [] }),
            (this._unit = "day"),
            (this._majorUnit = void 0),
            (this._offsets = {}),
            (this._normalized = !1),
            (this._parseOpts = void 0);
        }
        init(t, e) {
          const n = t.time || (t.time = {}),
            r = (this._adapter = new br._date(t.adapters.date));
          r.init(e),
            b(n.displayFormats, r.formats()),
            (this._parseOpts = {
              parser: n.parser,
              round: n.round,
              isoWeekday: n.isoWeekday,
            }),
            super.init(t),
            (this._normalized = e.normalized);
        }
        parse(t, e) {
          return void 0 === t ? null : so(this, t);
        }
        beforeLayout() {
          super.beforeLayout(),
            (this._cache = { data: [], labels: [], all: [] });
        }
        determineDataLimits() {
          const t = this.options,
            e = this._adapter,
            n = t.time.unit || "day";
          let {
            min: r,
            max: i,
            minDefined: a,
            maxDefined: o,
          } = this.getUserBounds();
          function s(t) {
            a || isNaN(t.min) || (r = Math.min(r, t.min)),
              o || isNaN(t.max) || (i = Math.max(i, t.max));
          }
          (a && o) ||
            (s(this._getLabelBounds()),
            ("ticks" === t.bounds && "labels" === t.ticks.source) ||
              s(this.getMinMax(!1))),
            (r = l(r) && !isNaN(r) ? r : +e.startOf(Date.now(), n)),
            (i = l(i) && !isNaN(i) ? i : +e.endOf(Date.now(), n) + 1),
            (this.min = Math.min(r, i - 1)),
            (this.max = Math.max(r + 1, i));
        }
        _getLabelBounds() {
          const t = this.getLabelTimestamps();
          let e = Number.POSITIVE_INFINITY,
            n = Number.NEGATIVE_INFINITY;
          return (
            t.length && ((e = t[0]), (n = t[t.length - 1])), { min: e, max: n }
          );
        }
        buildTicks() {
          const t = this.options,
            e = t.time,
            n = t.ticks,
            r =
              "labels" === n.source
                ? this.getLabelTimestamps()
                : this._generate();
          "ticks" === t.bounds &&
            r.length &&
            ((this.min = this._userMin || r[0]),
            (this.max = this._userMax || r[r.length - 1]));
          const i = this.min,
            a = (function (t, e, n) {
              let r = 0,
                i = t.length;
              for (; r < i && t[r] < e; ) r++;
              for (; i > r && t[i - 1] > n; ) i--;
              return r > 0 || i < t.length ? t.slice(r, i) : t;
            })(r, i, this.max);
          return (
            (this._unit =
              e.unit ||
              (n.autoSkip
                ? lo(e.minUnit, this.min, this.max, this._getLabelCapacity(i))
                : (function (t, e, n, r, i) {
                    for (let a = ao.length - 1; a >= ao.indexOf(n); a--) {
                      const n = ao[a];
                      if (io[n].common && t._adapter.diff(i, r, n) >= e - 1)
                        return n;
                    }
                    return ao[n ? ao.indexOf(n) : 0];
                  })(this, a.length, e.minUnit, this.min, this.max))),
            (this._majorUnit =
              n.major.enabled && "year" !== this._unit
                ? (function (t) {
                    for (let e = ao.indexOf(t) + 1, n = ao.length; e < n; ++e)
                      if (io[ao[e]].common) return ao[e];
                  })(this._unit)
                : void 0),
            this.initOffsets(r),
            t.reverse && a.reverse(),
            uo(this, a, this._majorUnit)
          );
        }
        afterAutoSkip() {
          this.options.offsetAfterAutoskip &&
            this.initOffsets(this.ticks.map((t) => +t.value));
        }
        initOffsets(t) {
          let e,
            n,
            r = 0,
            i = 0;
          this.options.offset &&
            t.length &&
            ((e = this.getDecimalForValue(t[0])),
            (r =
              1 === t.length ? 1 - e : (this.getDecimalForValue(t[1]) - e) / 2),
            (n = this.getDecimalForValue(t[t.length - 1])),
            (i =
              1 === t.length
                ? n
                : (n - this.getDecimalForValue(t[t.length - 2])) / 2));
          const a = t.length < 3 ? 0.5 : 0.25;
          (r = Z(r, 0, a)),
            (i = Z(i, 0, a)),
            (this._offsets = { start: r, end: i, factor: 1 / (r + 1 + i) });
        }
        _generate() {
          const t = this._adapter,
            e = this.min,
            n = this.max,
            r = this.options,
            i = r.time,
            a = i.unit || lo(i.minUnit, e, n, this._getLabelCapacity(e)),
            o = u(i.stepSize, 1),
            s = "week" === a && i.isoWeekday,
            l = V(s) || !0 === s,
            c = {};
          let d,
            h,
            f = e;
          if (
            (l && (f = +t.startOf(f, "isoWeek", s)),
            (f = +t.startOf(f, l ? "day" : a)),
            t.diff(n, e, a) > 1e5 * o)
          )
            throw new Error(
              e +
                " and " +
                n +
                " are too far apart with stepSize of " +
                o +
                " " +
                a
            );
          const p = "data" === r.ticks.source && this.getDataTimestamps();
          for (d = f, h = 0; d < n; d = +t.add(d, o, a), h++) co(c, d, p);
          return (
            (d !== n && "ticks" !== r.bounds && 1 !== h) || co(c, d, p),
            Object.keys(c)
              .sort((t, e) => t - e)
              .map((t) => +t)
          );
        }
        getLabelForValue(t) {
          const e = this._adapter,
            n = this.options.time;
          return n.tooltipFormat
            ? e.format(t, n.tooltipFormat)
            : e.format(t, n.displayFormats.datetime);
        }
        _tickFormatFunction(t, e, n, r) {
          const i = this.options,
            a = i.time.displayFormats,
            o = this._unit,
            s = this._majorUnit,
            l = o && a[o],
            c = s && a[s],
            u = n[e],
            d = s && c && u && u.major,
            f = this._adapter.format(t, r || (d ? c : l)),
            p = i.ticks.callback;
          return p ? h(p, [f, e, n], this) : f;
        }
        generateTickLabels(t) {
          let e, n, r;
          for (e = 0, n = t.length; e < n; ++e)
            (r = t[e]), (r.label = this._tickFormatFunction(r.value, e, t));
        }
        getDecimalForValue(t) {
          return null === t ? NaN : (t - this.min) / (this.max - this.min);
        }
        getPixelForValue(t) {
          const e = this._offsets,
            n = this.getDecimalForValue(t);
          return this.getPixelForDecimal((e.start + n) * e.factor);
        }
        getValueForPixel(t) {
          const e = this._offsets,
            n = this.getDecimalForPixel(t) / e.factor - e.end;
          return this.min + n * (this.max - this.min);
        }
        _getLabelSize(t) {
          const e = this.options.ticks,
            n = this.ctx.measureText(t).width,
            r = j(this.isHorizontal() ? e.maxRotation : e.minRotation),
            i = Math.cos(r),
            a = Math.sin(r),
            o = this._resolveTickFontOptions(0).size;
          return { w: n * i + o * a, h: n * a + o * i };
        }
        _getLabelCapacity(t) {
          const e = this.options.time,
            n = e.displayFormats,
            r = n[e.unit] || n.millisecond,
            i = this._tickFormatFunction(
              t,
              0,
              uo(this, [t], this._majorUnit),
              r
            ),
            a = this._getLabelSize(i),
            o =
              Math.floor(
                this.isHorizontal() ? this.width / a.w : this.height / a.h
              ) - 1;
          return o > 0 ? o : 1;
        }
        getDataTimestamps() {
          let t,
            e,
            n = this._cache.data || [];
          if (n.length) return n;
          const r = this.getMatchingVisibleMetas();
          if (this._normalized && r.length)
            return (this._cache.data =
              r[0].controller.getAllParsedValues(this));
          for (t = 0, e = r.length; t < e; ++t)
            n = n.concat(r[t].controller.getAllParsedValues(this));
          return (this._cache.data = this.normalize(n));
        }
        getLabelTimestamps() {
          const t = this._cache.labels || [];
          let e, n;
          if (t.length) return t;
          const r = this.getLabels();
          for (e = 0, n = r.length; e < n; ++e) t.push(so(this, r[e]));
          return (this._cache.labels = this._normalized
            ? t
            : this.normalize(t));
        }
        normalize(t) {
          return nt(t.sort(oo));
        }
      }
      function fo(t, e, n) {
        let r,
          i,
          a,
          o,
          s = 0,
          l = t.length - 1;
        n
          ? (e >= t[s].pos &&
              e <= t[l].pos &&
              ({ lo: s, hi: l } = Q(t, "pos", e)),
            ({ pos: r, time: a } = t[s]),
            ({ pos: i, time: o } = t[l]))
          : (e >= t[s].time &&
              e <= t[l].time &&
              ({ lo: s, hi: l } = Q(t, "time", e)),
            ({ time: r, pos: a } = t[s]),
            ({ time: i, pos: o } = t[l]));
        const c = i - r;
        return c ? a + ((o - a) * (e - r)) / c : a;
      }
      (ho.id = "time"),
        (ho.defaults = {
          bounds: "data",
          adapters: {},
          time: {
            parser: !1,
            unit: !1,
            round: !1,
            isoWeekday: !1,
            minUnit: "millisecond",
            displayFormats: {},
          },
          ticks: { source: "auto", major: { enabled: !1 } },
        });
      class po extends ho {
        constructor(t) {
          super(t),
            (this._table = []),
            (this._minPos = void 0),
            (this._tableRange = void 0);
        }
        initOffsets() {
          const t = this._getTimestampsForTable(),
            e = (this._table = this.buildLookupTable(t));
          (this._minPos = fo(e, this.min)),
            (this._tableRange = fo(e, this.max) - this._minPos),
            super.initOffsets(t);
        }
        buildLookupTable(t) {
          const { min: e, max: n } = this,
            r = [],
            i = [];
          let a, o, s, l, c;
          for (a = 0, o = t.length; a < o; ++a)
            (l = t[a]), l >= e && l <= n && r.push(l);
          if (r.length < 2)
            return [
              { time: e, pos: 0 },
              { time: n, pos: 1 },
            ];
          for (a = 0, o = r.length; a < o; ++a)
            (c = r[a + 1]),
              (s = r[a - 1]),
              (l = r[a]),
              Math.round((c + s) / 2) !== l &&
                i.push({ time: l, pos: a / (o - 1) });
          return i;
        }
        _getTimestampsForTable() {
          let t = this._cache.all || [];
          if (t.length) return t;
          const e = this.getDataTimestamps(),
            n = this.getLabelTimestamps();
          return (
            (t =
              e.length && n.length
                ? this.normalize(e.concat(n))
                : e.length
                ? e
                : n),
            (t = this._cache.all = t),
            t
          );
        }
        getDecimalForValue(t) {
          return (fo(this._table, t) - this._minPos) / this._tableRange;
        }
        getValueForPixel(t) {
          const e = this._offsets,
            n = this.getDecimalForPixel(t) / e.factor - e.end;
          return fo(this._table, n * this._tableRange + this._minPos, !0);
        }
      }
      (po.id = "timeseries"), (po.defaults = ho.defaults);
      const mo = [
        gr,
        Ji,
        Ha,
        Object.freeze({
          __proto__: null,
          CategoryScale: Ya,
          LinearScale: Ga,
          LogarithmicScale: Xa,
          RadialLinearScale: ro,
          TimeScale: ho,
          TimeSeriesScale: po,
        }),
      ];
    },
  },
]);
//# sourceMappingURL=504.e1fb8f17.chunk.js.map
