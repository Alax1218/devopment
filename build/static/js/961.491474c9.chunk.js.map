{"version":3,"file":"static/js/961.491474c9.chunk.js","mappings":"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","sources":["components/Admin/Exercise.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from '../../store/axios-secure'\nimport Loader from '../Common/Loader'\nimport AddTableTemplate from './AddTableTemplate'\n\nconst Exercise = () => {\n    const [isLoading, setIsLoading] = useState(true)\n    const [form, setForm] = useState([\n        {\n            type: 'text',\n            placeholder: 'Exercise Name',\n            fieldName: 'name',\n            helper: 'Enter the Exercise Name',\n            required: true,\n            classNames: 'col-md-6 mr-1',\n        },\n        {\n            type: 'list',\n            placeholder: 'Muscle Group',\n            fieldName: 'muscleGroup',\n            // helper: 'Muscle  Details',\n            required: true,\n            classNames: 'col-md-12',\n            subFields: [\n                {\n                    type: 'dynamic-dropdown',\n                    helper: 'Please select a muscle',\n                    fieldName: 'muscle',\n                    canCreate: false,\n                    required: true,\n                    classNames: 'col-md-6',\n                    placeholder: 'Muscle',\n                    multi: false,\n                    options: [],\n                },\n                {\n                    type: 'number',\n                    placeholder: 'Load Factor',\n                    fieldName: 'loadFactor',\n                    helper: 'Load Factor',\n                    required: true,\n                    classNames: 'col-lg-3 col-md-6',\n                },\n            ],\n        },\n        {\n            type: 'text',\n            placeholder: 'Progression Type',\n            fieldName: 'progressionType',\n            helper: 'Progression Type',\n            required: true,\n            classNames: 'col-md-6 mr-1',\n        },\n        {\n            type: 'number',\n            placeholder: 'Difficulty Rating',\n            fieldName: 'difficultyRating',\n            helper: 'Difficulty Rating',\n            required: true,\n            classNames: 'col-lg-3 col-md-6',\n        },\n        {\n            type: 'dynamic-dropdown',\n            helper: 'Load Type',\n            fieldName: 'loadType',\n            canCreate: false,\n            required: true,\n            classNames: 'col-md-6',\n            placeholder: 'Load Type',\n            multi: false,\n            options: [],\n        },\n        {\n            type: 'dynamic-dropdown',\n            helper: 'Movement',\n            fieldName: 'movement',\n            canCreate: false,\n            required: true,\n            classNames: 'col-md-6',\n            placeholder: 'Movement',\n            multi: false,\n            options: [],\n        },\n        {\n            type: 'number',\n            placeholder: 'Set Rest Time',\n            fieldName: 'setRestTime',\n            helper: 'Set Rest Time',\n            required: true,\n            classNames: 'col-md-6',\n        },\n        {\n            type: 'number',\n            placeholder: 'Switch Rest Time',\n            fieldName: 'switchRestTime',\n            helper: 'Switch Rest Time',\n            required: true,\n            classNames: 'col-md-6',\n        },\n        {\n            type: 'dynamic-dropdown',\n            helper: 'Equipments',\n            idFieldName: 'equipments',\n            fieldName: 'equipmentIds',\n            canCreate: false,\n            required: false,\n            classNames: 'col-md-6',\n            placeholder: 'Equipments',\n            multi: true,\n            options: [],\n        },\n        {\n            type: 'dynamic-dropdown',\n            helper: 'Type',\n            fieldName: 'type',\n            canCreate: false,\n            required: true,\n            classNames: 'col-md-6',\n            placeholder: 'type',\n            multi: false,\n            options: [],\n        },\n        {\n            type: 'dynamic-dropdown',\n            helper: 'Workout Splits',\n            fieldName: 'workoutSplits',\n            canCreate: false,\n            required: true,\n            classNames: 'col-md-6',\n            placeholder: 'Workout Splits',\n            multi: true,\n            options: [],\n        },\n        {\n            type: 'text',\n            placeholder: 'Video URL',\n            fieldName: 'videoUrl',\n            helper: 'Video URL',\n            required: true,\n            classNames: 'col-md-6 mr-1',\n        },\n    ])\n\n    const updateOptionsForKey = (formCopy, options, optionKey) => {\n        formCopy.forEach((f, idx) => {\n            if (f.type === 'list') {\n                f.subFields.forEach((sf, subIdx) => {\n                    if (\n                        sf.fieldName === optionKey ||\n                        sf.idFieldName === optionKey\n                    ) {\n                        formCopy[idx].subFields[subIdx].options =\n                            options[optionKey]\n                    }\n                })\n            } else {\n                if (f.fieldName === optionKey || f.idFieldName === optionKey) {\n                    formCopy[idx].options = options[optionKey]\n                }\n            }\n        })\n    }\n    const fetchOptions = async () => {\n        setIsLoading(true)\n        try {\n            const response = await axios.get('workout/admin/exercise/dropdown')\n            const options = response?.data\n            const formCopy = [...form]\n            Object.keys(options).forEach((optionKey) => {\n                updateOptionsForKey(formCopy, options, optionKey)\n            })\n            setForm(formCopy)\n            setIsLoading(false)\n        } catch (error) {\n            setIsLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetchOptions()\n    }, [])\n\n    const updateForm = [\n        {\n            type: 'hidden-text',\n            placeholder: 'id',\n            fieldName: 'id',\n            helper: '',\n            required: true,\n        },\n        ...form,\n    ]\n\n    const tableDetails = [\n        {\n            type: 'text',\n            placeholder: 'Exercise Name',\n            fieldName: 'name',\n            helper: 'Enter the Exercise Name',\n            required: true,\n            classNames: 'col-md-6 mr-1',\n        },\n        {\n            placeholder: 'Edit',\n            fieldName: 'editButton',\n        },\n        {\n            placeholder: 'Delete',\n            fieldName: 'deleteButton',\n        },\n    ]\n\n    return isLoading ? (\n        <Loader />\n    ) : (\n        <AddTableTemplate\n            productForm={form}\n            updateForm={updateForm}\n            tableDetails={tableDetails}\n            fetchURL={'workout/admin/exercise/page'}\n            postURL={'workout/admin/exercise'}\n            deleteURL={'workout/admin/exercise'}\n            updateURL={'workout/admin/exercise'}\n            formName={'Exercise'}\n        />\n    )\n}\n\nexport default Exercise\n"],"names":["Exercise","isLoading","setIsLoading","useState","form","setForm","type","placeholder","fieldName","helper","required","classNames","subFields","canCreate","multi","options","idFieldName","useEffect","async","response","axios","get","data","formCopy","Object","keys","forEach","optionKey","updateOptionsForKey","f","idx","sf","subIdx","error","fetchOptions","updateForm","_jsx","Loader","AddTableTemplate","productForm","tableDetails","fetchURL","postURL","deleteURL","updateURL","formName"],"sourceRoot":""}